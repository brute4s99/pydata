(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("stream"), require("path"), require("fs"), require("util"), require("events"), require("tty"), require("net"), require("crypto"), require("zlib"), require("url"), require("http"), require("https"), require("tls"), require("assert"), require("buffer"));
	else if(typeof define === 'function' && define.amd)
		define(["stream", "path", "fs", "util", "events", "tty", "net", "crypto", "zlib", "url", "http", "https", "tls", "assert", "buffer"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("stream"), require("path"), require("fs"), require("util"), require("events"), require("tty"), require("net"), require("crypto"), require("zlib"), require("url"), require("http"), require("https"), require("tls"), require("assert"), require("buffer")) : factory(root["stream"], root["path"], root["fs"], root["util"], root["events"], root["tty"], root["net"], root["crypto"], root["zlib"], root["url"], root["http"], root["https"], root["tls"], root["assert"], root["buffer"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_163__, __WEBPACK_EXTERNAL_MODULE_169__, __WEBPACK_EXTERNAL_MODULE_877__, __WEBPACK_EXTERNAL_MODULE_878__, __WEBPACK_EXTERNAL_MODULE_943__, __WEBPACK_EXTERNAL_MODULE_944__, __WEBPACK_EXTERNAL_MODULE_945__, __WEBPACK_EXTERNAL_MODULE_946__, __WEBPACK_EXTERNAL_MODULE_975__, __WEBPACK_EXTERNAL_MODULE_976__, __WEBPACK_EXTERNAL_MODULE_977__, __WEBPACK_EXTERNAL_MODULE_984__, __WEBPACK_EXTERNAL_MODULE_985__, __WEBPACK_EXTERNAL_MODULE_987__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "1" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		0:1
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "1" is the signal for "already loaded"
/******/ 		if(!installedChunks[chunkId]) {
/******/ 			var chunk = require("./" + chunkId + ".render-page.js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		}
/******/ 		callback.call(null, __webpack_require__);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(7);
	
	var _reactRouterDom = __webpack_require__(14);
	
	var _lodash = __webpack_require__(55);
	
	var _apiRunnerSsr = __webpack_require__(57);
	
	var _apiRunnerSsr2 = _interopRequireDefault(_apiRunnerSsr);
	
	var _pages = __webpack_require__(330);
	
	var _pages2 = _interopRequireDefault(_pages);
	
	var _syncRequires = __webpack_require__(331);
	
	var _syncRequires2 = _interopRequireDefault(_syncRequires);
	
	var _testRequireError = __webpack_require__(1072);
	
	var _testRequireError2 = _interopRequireDefault(_testRequireError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Html = void 0;
	try {
	  Html = __webpack_require__(1073);
	} catch (err) {
	  if ((0, _testRequireError2.default)("../src/html", err)) {
	    Html = __webpack_require__(1075);
	  } else {
	    console.log("\n\nThere was an error requiring \"src/html.js\"\n\n", err, "\n\n");
	    process.exit();
	  }
	}
	
	var pathChunkName = function pathChunkName(path) {
	  var name = path === "/" ? "index" : (0, _lodash.kebabCase)(path);
	  return "path---" + name;
	};
	
	var getPage = function getPage(path) {
	  return _pages2.default.find(function (page) {
	    return page.path === path;
	  });
	};
	var defaultLayout = function defaultLayout(props) {
	  return _react2.default.createElement(
	    "div",
	    null,
	    props.children()
	  );
	};
	
	var getLayout = function getLayout(page) {
	  var layout = _syncRequires2.default.layouts[page.layout];
	  return layout ? layout : defaultLayout;
	};
	
	var createElement = _react2.default.createElement;
	
	module.exports = function (locals, callback) {
	  var pathPrefix = "/";
	  if (false) {
	    pathPrefix = __PATH_PREFIX__ + "/";
	  }
	
	  var bodyHtml = "";
	  var headComponents = [];
	  var htmlAttributes = {};
	  var bodyAttributes = {};
	  var preBodyComponents = [];
	  var postBodyComponents = [];
	  var bodyProps = {};
	
	  var replaceBodyHTMLString = function replaceBodyHTMLString(body) {
	    bodyHtml = body;
	  };
	
	  var setHeadComponents = function setHeadComponents(components) {
	    headComponents = headComponents.concat(components);
	  };
	
	  var setHtmlAttributes = function setHtmlAttributes(attributes) {
	    htmlAttributes = (0, _lodash.merge)(htmlAttributes, attributes);
	  };
	
	  var setBodyAttributes = function setBodyAttributes(attributes) {
	    bodyAttributes = (0, _lodash.merge)(bodyAttributes, attributes);
	  };
	
	  var setPreBodyComponents = function setPreBodyComponents(components) {
	    preBodyComponents = preBodyComponents.concat(components);
	  };
	
	  var setPostBodyComponents = function setPostBodyComponents(components) {
	    postBodyComponents = postBodyComponents.concat(components);
	  };
	
	  var setBodyProps = function setBodyProps(props) {
	    bodyProps = (0, _lodash.merge)({}, bodyProps, props);
	  };
	
	  var bodyComponent = createElement(_reactRouterDom.StaticRouter, {
	    location: {
	      pathname: locals.path
	    },
	    context: {}
	  }, createElement(_reactRouterDom.Route, {
	    render: function render(routeProps) {
	      var page = getPage(routeProps.location.pathname);
	      var layout = getLayout(page);
	      return createElement((0, _reactRouterDom.withRouter)(layout), {
	        children: function children(layoutProps) {
	          var props = layoutProps ? layoutProps : routeProps;
	          return createElement(_syncRequires2.default.components[page.componentChunkName], _extends({}, props, _syncRequires2.default.json[page.jsonName]));
	        }
	      });
	    }
	  }));
	
	  // Let the site or plugin render the page component.
	  (0, _apiRunnerSsr2.default)("replaceRenderer", {
	    bodyComponent: bodyComponent,
	    replaceBodyHTMLString: replaceBodyHTMLString,
	    setHeadComponents: setHeadComponents,
	    setHtmlAttributes: setHtmlAttributes,
	    setBodyAttributes: setBodyAttributes,
	    setPreBodyComponents: setPreBodyComponents,
	    setPostBodyComponents: setPostBodyComponents,
	    setBodyProps: setBodyProps
	  });
	
	  // If no one stepped up, we'll handle it.
	  if (!bodyHtml) {
	    bodyHtml = (0, _server.renderToString)(bodyComponent);
	  }
	
	  (0, _apiRunnerSsr2.default)("onRenderBody", {
	    setHeadComponents: setHeadComponents,
	    setHtmlAttributes: setHtmlAttributes,
	    setBodyAttributes: setBodyAttributes,
	    setPreBodyComponents: setPreBodyComponents,
	    setPostBodyComponents: setPostBodyComponents,
	    setBodyProps: setBodyProps,
	    pathname: locals.path,
	    bodyHtml: bodyHtml
	  });
	
	  var stats = void 0;
	  try {
	    stats = __webpack_require__(1076);
	  } catch (e) {}
	  // ignore
	
	
	  // Create paths to scripts
	  var page = _pages2.default.find(function (page) {
	    return page.path === locals.path;
	  });
	  var scripts = ["commons", "app", pathChunkName(locals.path), page.componentChunkName, page.layoutComponentChunkName].map(function (s) {
	    var fetchKey = "assetsByChunkName[" + s + "]";
	
	    var fetchedScript = (0, _lodash.get)(stats, fetchKey);
	
	    if (!fetchedScript) {
	      return null;
	    }
	
	    // If sourcemaps are enabled, then the entry will be an array with
	    // the script name as the first entry.
	    fetchedScript = (0, _lodash.isArray)(fetchedScript) ? fetchedScript[0] : fetchedScript;
	    var prefixedScript = "" + pathPrefix + fetchedScript;
	
	    // Make sure we found a component.
	    if (prefixedScript === "/") {
	      return null;
	    }
	
	    return prefixedScript;
	  }).filter(function (s) {
	    return (0, _lodash.isString)(s);
	  });
	
	  scripts.forEach(function (script) {
	    // Add preload <link>s for scripts.
	    headComponents.unshift(_react2.default.createElement("link", { rel: "preload", key: script, href: script, as: "script" }));
	  });
	
	  // Add the chunk-manifest at the end of body element.
	  var chunkManifest = __webpack_require__(1077);
	  postBodyComponents.unshift(_react2.default.createElement("script", {
	    id: "webpack-manifest",
	    key: "webpack-manifest",
	    dangerouslySetInnerHTML: {
	      __html: "/*<![CDATA[*/window.webpackManifest=" + chunkManifest + "/*]]>*/"
	    }
	  }));
	
	  // Add script loader for page scripts to the end of body element (after webpack manifest).
	  var scriptsString = scripts.map(function (s) {
	    return "\"" + s + "\"";
	  }).join(",");
	  postBodyComponents.push(_react2.default.createElement("script", {
	    key: "script-loader",
	    dangerouslySetInnerHTML: {
	      __html: "/*<![CDATA[*/[" + scriptsString + "].forEach(function(s){document.write('<script src=\"'+s+'\" defer></'+'script>')})/*]]>*/"
	    }
	  }));
	
	  var html = "<!DOCTYPE html>" + (0, _server.renderToStaticMarkup)(_react2.default.createElement(Html, _extends({}, bodyProps, {
	    headComponents: headComponents,
	    htmlAttributes: htmlAttributes,
	    bodyAttributes: bodyAttributes,
	    preBodyComponents: preBodyComponents,
	    postBodyComponents: postBodyComponents,
	    body: bodyHtml,
	    path: locals.path
	  })));
	
	  callback(null, html);
	};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(2);
	} else {
	  module.exports = require('./cjs/react.development.js');
	}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.4.1
	 * react.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var k=__webpack_require__(3),n=__webpack_require__(4),p=__webpack_require__(5),q=__webpack_require__(6),r="function"===typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,u=r?Symbol.for("react.portal"):60106,v=r?Symbol.for("react.fragment"):60107,w=r?Symbol.for("react.strict_mode"):60108,x=r?Symbol.for("react.profiler"):60114,y=r?Symbol.for("react.provider"):60109,z=r?Symbol.for("react.context"):60110,A=r?Symbol.for("react.async_mode"):60111,B=
	r?Symbol.for("react.forward_ref"):60112;r&&Symbol.for("react.timeout");var C="function"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)e+="&args[]="+encodeURIComponent(arguments[c+1]);n(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}
	var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?D("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function G(){}
	G.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}
	function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
	function S(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=C&&a[C]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),
	h=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else"object"===d&&(e=""+a,D("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}
	function V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(O,"$&/")+"/");b=Q(b,g,c,d);null==a||S(a,"",V,b);R(b)}
	var X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,"",U,b);R(b)},count:function(a){return null==a?0:S(a,"",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D("143");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,
	_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D("267",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==
	b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.4.1",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,
	assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (false) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(8);


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(9);
	} else {
	  module.exports = require('./cjs/react-dom-server.node.development.js');
	}


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.4.1
	 * react-dom-server.node.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';var p=__webpack_require__(3),r=__webpack_require__(4),u=__webpack_require__(1),w=__webpack_require__(6),x=__webpack_require__(5),y=__webpack_require__(10),aa=__webpack_require__(12),ba=__webpack_require__(13);
	function z(a){for(var b=arguments.length-1,d="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)d+="&args[]="+encodeURIComponent(arguments[c+1]);r(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",d)}
	var A="function"===typeof Symbol&&Symbol.for,ca=A?Symbol.for("react.portal"):60106,C=A?Symbol.for("react.fragment"):60107,da=A?Symbol.for("react.strict_mode"):60108,ea=A?Symbol.for("react.profiler"):60114,E=A?Symbol.for("react.provider"):60109,fa=A?Symbol.for("react.context"):60110,ha=A?Symbol.for("react.async_mode"):60111,ia=A?Symbol.for("react.forward_ref"):60112,ja=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
	F={},G={};function ka(a){if(G.hasOwnProperty(a))return!0;if(F.hasOwnProperty(a))return!1;if(ja.test(a))return G[a]=!0;F[a]=!0;return!1}function la(a,b,d,c){if(null!==d&&0===d.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(c)return!1;if(null!==d)return!d.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function ma(a,b,d,c){if(null===b||"undefined"===typeof b||la(a,b,d,c))return!0;if(c)return!1;if(null!==d)switch(d.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function H(a,b,d,c,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=c;this.attributeNamespace=g;this.mustUseProperty=d;this.propertyName=a;this.type=b}var I={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){I[a]=new H(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];I[b]=new H(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){I[a]=new H(a,2,!1,a.toLowerCase(),null)});
	["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){I[a]=new H(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){I[a]=new H(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){I[a]=new H(a,3,!0,a.toLowerCase(),null)});
	["capture","download"].forEach(function(a){I[a]=new H(a,4,!1,a.toLowerCase(),null)});["cols","rows","size","span"].forEach(function(a){I[a]=new H(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){I[a]=new H(a,5,!1,a.toLowerCase(),null)});var J=/[\-:]([a-z])/g;function K(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(J,
	K);I[b]=new H(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(J,K);I[b]=new H(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(J,K);I[b]=new H(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});I.tabIndex=new H("tabIndex",1,!1,"tabindex",null);var na=/["'&<>]/;
	function L(a){if("boolean"===typeof a||"number"===typeof a)return""+a;a=""+a;var b=na.exec(a);if(b){var d="",c,g=0;for(c=b.index;c<a.length;c++){switch(a.charCodeAt(c)){case 34:b="&quot;";break;case 38:b="&amp;";break;case 39:b="&#x27;";break;case 60:b="&lt;";break;case 62:b="&gt;";break;default:continue}g!==c&&(d+=a.substring(g,c));g=c+1;d+=b}a=g!==c?d+a.substring(g,c):d}return a}var M={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function N(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
	var O={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},oa=p({menuitem:!0},O),P={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,
	fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pa=["Webkit","ms","Moz","O"];Object.keys(P).forEach(function(a){pa.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);P[b]=P[a]})});var Q=u.Children.toArray,R=w.thatReturns("");w.thatReturns("");var qa={listing:!0,pre:!0,textarea:!0};
	function S(a){return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}var ra=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,T={},sa=aa(function(a){return y(a)});function ta(a){var b="";u.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function ua(a,b){if(a=a.contextTypes){var d={},c;for(c in a)d[c]=b[c];b=d}else b=x;return b}var va={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};
	function U(a,b){void 0===a&&z("152",S(b)||"Component")}
	function wa(a,b){function d(c,g){var d=ua(g,b),f=[],k=!1,h={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===f)return null},enqueueReplaceState:function(a,b){k=!0;f=[b]},enqueueSetState:function(a,b){if(null===f)return null;f.push(b)}},e=void 0;if(g.prototype&&g.prototype.isReactComponent){if(e=new g(c.props,d,h),"function"===typeof g.getDerivedStateFromProps){var v=g.getDerivedStateFromProps.call(null,c.props,e.state);null!=v&&(e.state=p({},e.state,v))}}else if(e=g(c.props,
	d,h),null==e||null==e.render){a=e;U(a,g);return}e.props=c.props;e.context=d;e.updater=h;h=e.state;void 0===h&&(e.state=h=null);if("function"===typeof e.UNSAFE_componentWillMount||"function"===typeof e.componentWillMount)if("function"===typeof e.componentWillMount&&"function"!==typeof g.getDerivedStateFromProps&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&"function"!==typeof g.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),f.length){h=f;var t=k;f=null;k=!1;if(t&&
	1===h.length)e.state=h[0];else{v=t?h[0]:e.state;var m=!0;for(t=t?1:0;t<h.length;t++){var n=h[t];n="function"===typeof n?n.call(e,v,c.props,d):n;null!=n&&(m?(m=!1,v=p({},v,n)):p(v,n))}e.state=v}}else f=null;a=e.render();U(a,g);c=void 0;if("function"===typeof e.getChildContext&&(d=g.childContextTypes,"object"===typeof d)){c=e.getChildContext();for(var q in c)q in d?void 0:z("108",S(g)||"Unknown",q)}c&&(b=p({},b,c))}for(;u.isValidElement(a);){var c=a,g=c.type;if("function"!==typeof g)break;d(c,g)}return{child:a,
	context:b}}
	var V=function(){function a(b,d){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");u.isValidElement(b)?b.type!==C?b=[b]:(b=b.props.children,b=u.isValidElement(b)?[b]:Q(b)):b=Q(b);this.stack=[{type:null,domNamespace:M.html,children:b,childIndex:0,context:x,footer:""}];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;this.makeStaticMarkup=d;this.contextIndex=-1;this.contextStack=[];this.contextValueStack=[]}a.prototype.pushProvider=function(b){var a=
	++this.contextIndex,c=b.type._context,g=c._currentValue;this.contextStack[a]=c;this.contextValueStack[a]=g;c._currentValue=b.props.value};a.prototype.popProvider=function(){var a=this.contextIndex,d=this.contextStack[a],c=this.contextValueStack[a];this.contextStack[a]=null;this.contextValueStack[a]=null;this.contextIndex--;d._currentValue=c};a.prototype.read=function(a){if(this.exhausted)return null;for(var b="";b.length<a;){if(0===this.stack.length){this.exhausted=!0;break}var c=this.stack[this.stack.length-
	1];if(c.childIndex>=c.children.length){var g=c.footer;b+=g;""!==g&&(this.previousWasTextNode=!1);this.stack.pop();"select"===c.type?this.currentSelectValue=null:null!=c.type&&null!=c.type.type&&c.type.type.$$typeof===E&&this.popProvider(c.type)}else g=c.children[c.childIndex++],b+=this.render(g,c.context,c.domNamespace)}return b};a.prototype.render=function(a,d,c){if("string"===typeof a||"number"===typeof a){c=""+a;if(""===c)return"";if(this.makeStaticMarkup)return L(c);if(this.previousWasTextNode)return"\x3c!-- --\x3e"+
	L(c);this.previousWasTextNode=!0;return L(c)}d=wa(a,d);a=d.child;d=d.context;if(null===a||!1===a)return"";if(!u.isValidElement(a)){if(null!=a&&null!=a.$$typeof){var b=a.$$typeof;b===ca?z("257"):void 0;z("258",b.toString())}a=Q(a);this.stack.push({type:null,domNamespace:c,children:a,childIndex:0,context:d,footer:""});return""}b=a.type;if("string"===typeof b)return this.renderDOM(a,d,c);switch(b){case da:case ha:case ea:case C:return a=Q(a.props.children),this.stack.push({type:null,domNamespace:c,children:a,
	childIndex:0,context:d,footer:""}),""}if("object"===typeof b&&null!==b)switch(b.$$typeof){case ia:return a=Q(b.render(a.props,a.ref)),this.stack.push({type:null,domNamespace:c,children:a,childIndex:0,context:d,footer:""}),"";case E:return b=Q(a.props.children),c={type:a,domNamespace:c,children:b,childIndex:0,context:d,footer:""},this.pushProvider(a),this.stack.push(c),"";case fa:return b=Q(a.props.children(a.type._currentValue)),this.stack.push({type:a,domNamespace:c,children:b,childIndex:0,context:d,
	footer:""}),""}z("130",null==b?b:typeof b,"")};a.prototype.renderDOM=function(a,d,c){var b=a.type.toLowerCase();c===M.html&&N(b);T.hasOwnProperty(b)||(ra.test(b)?void 0:z("65",b),T[b]=!0);var f=a.props;if("input"===b)f=p({type:void 0},f,{defaultChecked:void 0,defaultValue:void 0,value:null!=f.value?f.value:f.defaultValue,checked:null!=f.checked?f.checked:f.defaultChecked});else if("textarea"===b){var k=f.value;if(null==k){k=f.defaultValue;var l=f.children;null!=l&&(null!=k?z("92"):void 0,Array.isArray(l)&&
	(1>=l.length?void 0:z("93"),l=l[0]),k=""+l);null==k&&(k="")}f=p({},f,{value:void 0,children:""+k})}else if("select"===b)this.currentSelectValue=null!=f.value?f.value:f.defaultValue,f=p({},f,{value:void 0});else if("option"===b){l=this.currentSelectValue;var D=ta(f.children);if(null!=l){var B=null!=f.value?f.value+"":D;k=!1;if(Array.isArray(l))for(var h=0;h<l.length;h++){if(""+l[h]===B){k=!0;break}}else k=""+l===B;f=p({selected:void 0,children:void 0},f,{selected:k,children:D})}}if(k=f)oa[b]&&(null!=
	k.children||null!=k.dangerouslySetInnerHTML?z("137",b,R()):void 0),null!=k.dangerouslySetInnerHTML&&(null!=k.children?z("60"):void 0,"object"===typeof k.dangerouslySetInnerHTML&&"__html"in k.dangerouslySetInnerHTML?void 0:z("61")),null!=k.style&&"object"!==typeof k.style?z("62",R()):void 0;k=f;l=this.makeStaticMarkup;D=1===this.stack.length;B="<"+a.type;for(q in k)if(k.hasOwnProperty(q)){var e=k[q];if(null!=e){if("style"===q){h=void 0;var v="",t="";for(h in e)if(e.hasOwnProperty(h)){var m=0===h.indexOf("--"),
	n=e[h];null!=n&&(v+=t+sa(h)+":",t=h,m=null==n||"boolean"===typeof n||""===n?"":m||"number"!==typeof n||0===n||P.hasOwnProperty(t)&&P[t]?(""+n).trim():n+"px",v+=m,t=";")}e=v||null}h=null;b:if(m=b,n=k,-1===m.indexOf("-"))m="string"===typeof n.is;else switch(m){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":m=!1;break b;default:m=!0}if(m)va.hasOwnProperty(q)||(h=q,h=ka(h)&&null!=
	e?h+"="+('"'+L(e)+'"'):"");else{m=q;h=e;e=I.hasOwnProperty(m)?I[m]:null;if(n="style"!==m)n=null!==e?0===e.type:!(2<m.length)||"o"!==m[0]&&"O"!==m[0]||"n"!==m[1]&&"N"!==m[1]?!1:!0;n||ma(m,h,e,!1)?h="":null!==e?(m=e.attributeName,e=e.type,h=3===e||4===e&&!0===h?m+'=""':m+"="+('"'+L(h)+'"')):h=m+"="+('"'+L(h)+'"')}h&&(B+=" "+h)}}l||D&&(B+=' data-reactroot=""');var q=B;k="";O.hasOwnProperty(b)?q+="/>":(q+=">",k="</"+a.type+">");a:{l=f.dangerouslySetInnerHTML;if(null!=l){if(null!=l.__html){l=l.__html;
	break a}}else if(l=f.children,"string"===typeof l||"number"===typeof l){l=L(l);break a}l=null}null!=l?(f=[],qa[b]&&"\n"===l.charAt(0)&&(q+="\n"),q+=l):f=Q(f.children);a=a.type;c=null==c||"http://www.w3.org/1999/xhtml"===c?N(a):"http://www.w3.org/2000/svg"===c&&"foreignObject"===a?"http://www.w3.org/1999/xhtml":c;this.stack.push({domNamespace:c,type:b,children:f,childIndex:0,context:d,footer:k});this.previousWasTextNode=!1;return q};return a}();
	function xa(a,b){if("function"!==typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}});b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}
	var W=function(a){function b(d,c){if(!(this instanceof b))throw new TypeError("Cannot call a class as a function");var g=a.call(this,{});if(!this)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");g=!g||"object"!==typeof g&&"function"!==typeof g?this:g;g.partialRenderer=new V(d,c);return g}xa(b,a);b.prototype._read=function(a){try{this.push(this.partialRenderer.read(a))}catch(c){this.emit("error",c)}};return b}(ba.Readable),X={renderToString:function(a){return(new V(a,
	!1)).read(Infinity)},renderToStaticMarkup:function(a){return(new V(a,!0)).read(Infinity)},renderToNodeStream:function(a){return new W(a,!1)},renderToStaticNodeStream:function(a){return new W(a,!0)},version:"16.4.1"},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(11);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	module.exports = require("stream");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;
	
	var _BrowserRouter2 = __webpack_require__(15);
	
	var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);
	
	var _HashRouter2 = __webpack_require__(30);
	
	var _HashRouter3 = _interopRequireDefault(_HashRouter2);
	
	var _Link2 = __webpack_require__(32);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _MemoryRouter2 = __webpack_require__(33);
	
	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);
	
	var _NavLink2 = __webpack_require__(36);
	
	var _NavLink3 = _interopRequireDefault(_NavLink2);
	
	var _Prompt2 = __webpack_require__(42);
	
	var _Prompt3 = _interopRequireDefault(_Prompt2);
	
	var _Redirect2 = __webpack_require__(44);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(37);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _Router2 = __webpack_require__(28);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _StaticRouter2 = __webpack_require__(47);
	
	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);
	
	var _Switch2 = __webpack_require__(49);
	
	var _Switch3 = _interopRequireDefault(_Switch2);
	
	var _matchPath2 = __webpack_require__(51);
	
	var _matchPath3 = _interopRequireDefault(_matchPath2);
	
	var _withRouter2 = __webpack_require__(52);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.BrowserRouter = _BrowserRouter3.default;
	exports.HashRouter = _HashRouter3.default;
	exports.Link = _Link3.default;
	exports.MemoryRouter = _MemoryRouter3.default;
	exports.NavLink = _NavLink3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createBrowserHistory = __webpack_require__(20);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _Router = __webpack_require__(28);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	var BrowserRouter = function (_React$Component) {
	  _inherits(BrowserRouter, _React$Component);
	
	  function BrowserRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, BrowserRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createBrowserHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<BrowserRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { BrowserRouter as Router }`.');
	  };
	
	  BrowserRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return BrowserRouter;
	}(_react2.default.Component);
	
	BrowserRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  forceRefresh: _propTypes2.default.bool,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = BrowserRouter;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var __DEV__ = ("production") !== 'production';
	
	var warning = function() {};
	
	if (__DEV__) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	if (false) {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;
	
	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(18)();
	}


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(6);
	var invariant = __webpack_require__(4);
	var ReactPropTypesSecret = __webpack_require__(19);
	
	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,
	
	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };
	
	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _LocationUtils = __webpack_require__(22);
	
	var _PathUtils = __webpack_require__(25);
	
	var _createTransitionManager = __webpack_require__(26);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _DOMUtils = __webpack_require__(27);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';
	
	var getHistoryState = function getHistoryState() {
	  try {
	    return window.history.state || {};
	  } catch (e) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    return {};
	  }
	};
	
	/**
	 * Creates a history object that uses the HTML5 history API including
	 * pushState, replaceState, and the popstate event.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');
	
	  var globalHistory = window.history;
	  var canUseHistory = (0, _DOMUtils.supportsHistory)();
	  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();
	
	  var _props$forceRefresh = props.forceRefresh,
	      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
	      _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
	
	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';
	
	  var getDOMLocation = function getDOMLocation(historyState) {
	    var _ref = historyState || {},
	        key = _ref.key,
	        state = _ref.state;
	
	    var _window$location = window.location,
	        pathname = _window$location.pathname,
	        search = _window$location.search,
	        hash = _window$location.hash;
	
	
	    var path = pathname + search + hash;
	
	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
	
	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
	
	    return (0, _LocationUtils.createLocation)(path, state, key);
	  };
	
	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };
	
	  var transitionManager = (0, _createTransitionManager2.default)();
	
	  var setState = function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = globalHistory.length;
	
	    transitionManager.notifyListeners(history.location, history.action);
	  };
	
	  var handlePopState = function handlePopState(event) {
	    // Ignore extraneous popstate events in WebKit.
	    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;
	
	    handlePop(getDOMLocation(event.state));
	  };
	
	  var handleHashChange = function handleHashChange() {
	    handlePop(getDOMLocation(getHistoryState()));
	  };
	
	  var forceNextPop = false;
	
	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';
	
	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };
	
	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;
	
	    // TODO: We could probably make this more reliable by
	    // keeping a list of keys we've seen in sessionStorage.
	    // Instead, we just default to 0 for keys we don't know.
	
	    var toIndex = allKeys.indexOf(toLocation.key);
	
	    if (toIndex === -1) toIndex = 0;
	
	    var fromIndex = allKeys.indexOf(fromLocation.key);
	
	    if (fromIndex === -1) fromIndex = 0;
	
	    var delta = toIndex - fromIndex;
	
	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };
	
	  var initialLocation = getDOMLocation(getHistoryState());
	  var allKeys = [initialLocation.key];
	
	  // Public interface
	
	  var createHref = function createHref(location) {
	    return basename + (0, _PathUtils.createPath)(location);
	  };
	
	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	
	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;
	
	
	      if (canUseHistory) {
	        globalHistory.pushState({ key: key, state: state }, null, href);
	
	        if (forceRefresh) {
	          window.location.href = href;
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
	
	          nextKeys.push(location.key);
	          allKeys = nextKeys;
	
	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
	
	        window.location.href = href;
	      }
	    });
	  };
	
	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	
	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;
	
	
	      if (canUseHistory) {
	        globalHistory.replaceState({ key: key, state: state }, null, href);
	
	        if (forceRefresh) {
	          window.location.replace(href);
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	
	          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
	
	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
	
	        window.location.replace(href);
	      }
	    });
	  };
	
	  var go = function go(n) {
	    globalHistory.go(n);
	  };
	
	  var goBack = function goBack() {
	    return go(-1);
	  };
	
	  var goForward = function goForward() {
	    return go(1);
	  };
	
	  var listenerCount = 0;
	
	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;
	
	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);
	
	      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);
	
	      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };
	
	  var isBlocked = false;
	
	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	    var unblock = transitionManager.setPrompt(prompt);
	
	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }
	
	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }
	
	      return unblock();
	    };
	  };
	
	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);
	
	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };
	
	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };
	
	  return history;
	};
	
	exports.default = createBrowserHistory;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var NODE_ENV = ("production");
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.locationsAreEqual = exports.createLocation = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _resolvePathname = __webpack_require__(23);
	
	var _resolvePathname2 = _interopRequireDefault(_resolvePathname);
	
	var _valueEqual = __webpack_require__(24);
	
	var _valueEqual2 = _interopRequireDefault(_valueEqual);
	
	var _PathUtils = __webpack_require__(25);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
	  var location = void 0;
	  if (typeof path === 'string') {
	    // Two-arg form: push(path, state)
	    location = (0, _PathUtils.parsePath)(path);
	    location.state = state;
	  } else {
	    // One-arg form: push(location)
	    location = _extends({}, path);
	
	    if (location.pathname === undefined) location.pathname = '';
	
	    if (location.search) {
	      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
	    } else {
	      location.search = '';
	    }
	
	    if (location.hash) {
	      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
	    } else {
	      location.hash = '';
	    }
	
	    if (state !== undefined && location.state === undefined) location.state = state;
	  }
	
	  try {
	    location.pathname = decodeURI(location.pathname);
	  } catch (e) {
	    if (e instanceof URIError) {
	      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
	    } else {
	      throw e;
	    }
	  }
	
	  if (key) location.key = key;
	
	  if (currentLocation) {
	    // Resolve incomplete/relative pathname relative to current location.
	    if (!location.pathname) {
	      location.pathname = currentLocation.pathname;
	    } else if (location.pathname.charAt(0) !== '/') {
	      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
	    }
	  } else {
	    // When there is no prior location and pathname is empty, set it to /
	    if (!location.pathname) {
	      location.pathname = '/';
	    }
	  }
	
	  return location;
	};
	
	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
	};

/***/ }),
/* 23 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function isAbsolute(pathname) {
	  return pathname.charAt(0) === '/';
	}
	
	// About 1.5x faster than the two-arg version of Array#splice()
	function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }
	
	  list.pop();
	}
	
	// This implementation is based heavily on node's url.parse
	function resolvePathname(to) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	
	  var toParts = to && to.split('/') || [];
	  var fromParts = from && from.split('/') || [];
	
	  var isToAbs = to && isAbsolute(to);
	  var isFromAbs = from && isAbsolute(from);
	  var mustEndAbs = isToAbs || isFromAbs;
	
	  if (to && isAbsolute(to)) {
	    // to is absolute
	    fromParts = toParts;
	  } else if (toParts.length) {
	    // to is relative, drop the filename
	    fromParts.pop();
	    fromParts = fromParts.concat(toParts);
	  }
	
	  if (!fromParts.length) return '/';
	
	  var hasTrailingSlash = void 0;
	  if (fromParts.length) {
	    var last = fromParts[fromParts.length - 1];
	    hasTrailingSlash = last === '.' || last === '..' || last === '';
	  } else {
	    hasTrailingSlash = false;
	  }
	
	  var up = 0;
	  for (var i = fromParts.length; i >= 0; i--) {
	    var part = fromParts[i];
	
	    if (part === '.') {
	      spliceOne(fromParts, i);
	    } else if (part === '..') {
	      spliceOne(fromParts, i);
	      up++;
	    } else if (up) {
	      spliceOne(fromParts, i);
	      up--;
	    }
	  }
	
	  if (!mustEndAbs) for (; up--; up) {
	    fromParts.unshift('..');
	  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');
	
	  var result = fromParts.join('/');
	
	  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';
	
	  return result;
	}
	
	exports.default = resolvePathname;
	module.exports = exports['default'];

/***/ }),
/* 24 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function valueEqual(a, b) {
	  if (a === b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return valueEqual(item, b[index]);
	    });
	  }
	
	  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);
	
	  if (aType !== bType) return false;
	
	  if (aType === 'object') {
	    var aValue = a.valueOf();
	    var bValue = b.valueOf();
	
	    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);
	
	    var aKeys = Object.keys(a);
	    var bKeys = Object.keys(b);
	
	    if (aKeys.length !== bKeys.length) return false;
	
	    return aKeys.every(function (key) {
	      return valueEqual(a[key], b[key]);
	    });
	  }
	
	  return false;
	}
	
	exports.default = valueEqual;
	module.exports = exports['default'];

/***/ }),
/* 25 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};
	
	var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path.substr(1) : path;
	};
	
	var hasBasename = exports.hasBasename = function hasBasename(path, prefix) {
	  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
	};
	
	var stripBasename = exports.stripBasename = function stripBasename(path, prefix) {
	  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
	};
	
	var stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {
	  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
	};
	
	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = path || '/';
	  var search = '';
	  var hash = '';
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substr(hashIndex);
	    pathname = pathname.substr(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substr(searchIndex);
	    pathname = pathname.substr(0, searchIndex);
	  }
	
	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};
	
	var createPath = exports.createPath = function createPath(location) {
	  var pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;
	
	
	  var path = pathname || '/';
	
	  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;
	
	  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;
	
	  return path;
	};

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createTransitionManager = function createTransitionManager() {
	  var prompt = null;
	
	  var setPrompt = function setPrompt(nextPrompt) {
	    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');
	
	    prompt = nextPrompt;
	
	    return function () {
	      if (prompt === nextPrompt) prompt = null;
	    };
	  };
	
	  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
	    // TODO: If another transition starts while we're still confirming
	    // the previous one, we may end up in a weird state. Figure out the
	    // best way to handle this.
	    if (prompt != null) {
	      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;
	
	      if (typeof result === 'string') {
	        if (typeof getUserConfirmation === 'function') {
	          getUserConfirmation(result, callback);
	        } else {
	          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');
	
	          callback(true);
	        }
	      } else {
	        // Return false from a transition hook to cancel the transition.
	        callback(result !== false);
	      }
	    } else {
	      callback(true);
	    }
	  };
	
	  var listeners = [];
	
	  var appendListener = function appendListener(fn) {
	    var isActive = true;
	
	    var listener = function listener() {
	      if (isActive) fn.apply(undefined, arguments);
	    };
	
	    listeners.push(listener);
	
	    return function () {
	      isActive = false;
	      listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };
	
	  var notifyListeners = function notifyListeners() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    listeners.forEach(function (listener) {
	      return listener.apply(undefined, args);
	    });
	  };
	
	  return {
	    setPrompt: setPrompt,
	    confirmTransitionTo: confirmTransitionTo,
	    appendListener: appendListener,
	    notifyListeners: notifyListeners
	  };
	};
	
	exports.default = createTransitionManager;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};
	
	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};
	
	var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;
	
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
	
	  return window.history && 'pushState' in window.history;
	};
	
	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};
	
	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	};

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Router = __webpack_require__(29);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Router2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for putting history on context.
	 */
	var Router = function (_React$Component) {
	  _inherits(Router, _React$Component);
	
	  function Router() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Router);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props.history.location.pathname)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Router.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        history: this.props.history,
	        route: {
	          location: this.props.history.location,
	          match: this.state.match
	        }
	      })
	    };
	  };
	
	  Router.prototype.computeMatch = function computeMatch(pathname) {
	    return {
	      path: '/',
	      url: '/',
	      params: {},
	      isExact: pathname === '/'
	    };
	  };
	
	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;
	
	    var _props = this.props,
	        children = _props.children,
	        history = _props.history;
	
	
	    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, 'A <Router> may have only one child element');
	
	    // Do this here so we can setState when a <Redirect> changes the
	    // location in componentWillMount. This happens e.g. when doing
	    // server rendering using a <StaticRouter>.
	    this.unlisten = history.listen(function () {
	      _this2.setState({
	        match: _this2.computeMatch(history.location.pathname)
	      });
	    });
	  };
	
	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(this.props.history === nextProps.history, 'You cannot change <Router history>');
	  };
	
	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };
	
	  Router.prototype.render = function render() {
	    var children = this.props.children;
	
	    return children ? _react2.default.Children.only(children) : null;
	  };
	
	  return Router;
	}(_react2.default.Component);
	
	Router.propTypes = {
	  history: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	Router.contextTypes = {
	  router: _propTypes2.default.object
	};
	Router.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Router;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createHashHistory = __webpack_require__(31);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _Router = __webpack_require__(28);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	var HashRouter = function (_React$Component) {
	  _inherits(HashRouter, _React$Component);
	
	  function HashRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, HashRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createHashHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  HashRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<HashRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { HashRouter as Router }`.');
	  };
	
	  HashRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return HashRouter;
	}(_react2.default.Component);
	
	HashRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  getUserConfirmation: _propTypes2.default.func,
	  hashType: _propTypes2.default.oneOf(['hashbang', 'noslash', 'slash']),
	  children: _propTypes2.default.node
	};
	exports.default = HashRouter;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _LocationUtils = __webpack_require__(22);
	
	var _PathUtils = __webpack_require__(25);
	
	var _createTransitionManager = __webpack_require__(26);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _DOMUtils = __webpack_require__(27);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HashChangeEvent = 'hashchange';
	
	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substr(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: _PathUtils.stripLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  },
	  slash: {
	    encodePath: _PathUtils.addLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  }
	};
	
	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};
	
	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};
	
	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');
	
	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};
	
	var createHashHistory = function createHashHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');
	
	  var globalHistory = window.history;
	  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();
	
	  var _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$hashType = props.hashType,
	      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;
	
	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';
	
	  var _HashPathCoders$hashT = HashPathCoders[hashType],
	      encodePath = _HashPathCoders$hashT.encodePath,
	      decodePath = _HashPathCoders$hashT.decodePath;
	
	
	  var getDOMLocation = function getDOMLocation() {
	    var path = decodePath(getHashPath());
	
	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
	
	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
	
	    return (0, _LocationUtils.createLocation)(path);
	  };
	
	  var transitionManager = (0, _createTransitionManager2.default)();
	
	  var setState = function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = globalHistory.length;
	
	    transitionManager.notifyListeners(history.location, history.action);
	  };
	
	  var forceNextPop = false;
	  var ignorePath = null;
	
	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = encodePath(path);
	
	    if (path !== encodedPath) {
	      // Ensure we always have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var location = getDOMLocation();
	      var prevLocation = history.location;
	
	      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.
	
	      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.
	
	      ignorePath = null;
	
	      handlePop(location);
	    }
	  };
	
	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';
	
	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };
	
	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;
	
	    // TODO: We could probably make this more reliable by
	    // keeping a list of paths we've seen in sessionStorage.
	    // Instead, we just default to 0 for paths we don't know.
	
	    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));
	
	    if (toIndex === -1) toIndex = 0;
	
	    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));
	
	    if (fromIndex === -1) fromIndex = 0;
	
	    var delta = toIndex - fromIndex;
	
	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };
	
	  // Ensure the hash is encoded properly before doing anything else.
	  var path = getHashPath();
	  var encodedPath = encodePath(path);
	
	  if (path !== encodedPath) replaceHashPath(encodedPath);
	
	  var initialLocation = getDOMLocation();
	  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];
	
	  // Public interface
	
	  var createHref = function createHref(location) {
	    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
	  };
	
	  var push = function push(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');
	
	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;
	
	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a PUSH, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        pushHashPath(encodedPath);
	
	        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
	        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
	
	        nextPaths.push(path);
	        allPaths = nextPaths;
	
	        setState({ action: action, location: location });
	      } else {
	        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
	
	        setState();
	      }
	    });
	  };
	
	  var replace = function replace(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');
	
	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;
	
	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        replaceHashPath(encodedPath);
	      }
	
	      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));
	
	      if (prevIndex !== -1) allPaths[prevIndex] = path;
	
	      setState({ action: action, location: location });
	    });
	  };
	
	  var go = function go(n) {
	    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
	
	    globalHistory.go(n);
	  };
	
	  var goBack = function goBack() {
	    return go(-1);
	  };
	
	  var goForward = function goForward() {
	    return go(1);
	  };
	
	  var listenerCount = 0;
	
	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;
	
	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };
	
	  var isBlocked = false;
	
	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	    var unblock = transitionManager.setPrompt(prompt);
	
	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }
	
	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }
	
	      return unblock();
	    };
	  };
	
	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);
	
	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };
	
	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };
	
	  return history;
	};
	
	exports.default = createHashHistory;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var isModifiedEvent = function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	};
	
	/**
	 * The public API for rendering a history-aware <a>.
	 */
	
	var Link = function (_React$Component) {
	  _inherits(Link, _React$Component);
	
	  function Link() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Link);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (_this.props.onClick) _this.props.onClick(event);
	
	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && // ignore right clicks
	      !_this.props.target && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();
	
	          var history = _this.context.router.history;
	          var _this$props = _this.props,
	              replace = _this$props.replace,
	              to = _this$props.to;
	
	
	          if (replace) {
	            history.replace(to);
	          } else {
	            history.push(to);
	          }
	        }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Link.prototype.render = function render() {
	    var _props = this.props,
	        replace = _props.replace,
	        to = _props.to,
	        innerRef = _props.innerRef,
	        props = _objectWithoutProperties(_props, ['replace', 'to', 'innerRef']); // eslint-disable-line no-unused-vars
	
	    (0, _invariant2.default)(this.context.router, 'You should not use <Link> outside a <Router>');
	
	    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
	  };
	
	  return Link;
	}(_react2.default.Component);
	
	Link.propTypes = {
	  onClick: _propTypes2.default.func,
	  target: _propTypes2.default.string,
	  replace: _propTypes2.default.bool,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
	  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
	};
	Link.defaultProps = {
	  replace: false
	};
	Link.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired,
	      createHref: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Link;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _MemoryRouter = __webpack_require__(34);
	
	var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createMemoryHistory = __webpack_require__(35);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _Router = __webpack_require__(29);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	var MemoryRouter = function (_React$Component) {
	  _inherits(MemoryRouter, _React$Component);
	
	  function MemoryRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, MemoryRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createMemoryHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<MemoryRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { MemoryRouter as Router }`.');
	  };
	
	  MemoryRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };
	
	  return MemoryRouter;
	}(_react2.default.Component);
	
	MemoryRouter.propTypes = {
	  initialEntries: _propTypes2.default.array,
	  initialIndex: _propTypes2.default.number,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = MemoryRouter;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _PathUtils = __webpack_require__(25);
	
	var _LocationUtils = __webpack_require__(22);
	
	var _createTransitionManager = __webpack_require__(26);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var clamp = function clamp(n, lowerBound, upperBound) {
	  return Math.min(Math.max(n, lowerBound), upperBound);
	};
	
	/**
	 * Creates a history object that stores locations in memory.
	 */
	var createMemoryHistory = function createMemoryHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var getUserConfirmation = props.getUserConfirmation,
	      _props$initialEntries = props.initialEntries,
	      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
	      _props$initialIndex = props.initialIndex,
	      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
	
	
	  var transitionManager = (0, _createTransitionManager2.default)();
	
	  var setState = function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = history.entries.length;
	
	    transitionManager.notifyListeners(history.location, history.action);
	  };
	
	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };
	
	  var index = clamp(initialIndex, 0, initialEntries.length - 1);
	  var entries = initialEntries.map(function (entry) {
	    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
	  });
	
	  // Public interface
	
	  var createHref = _PathUtils.createPath;
	
	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	
	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      var prevIndex = history.index;
	      var nextIndex = prevIndex + 1;
	
	      var nextEntries = history.entries.slice(0);
	      if (nextEntries.length > nextIndex) {
	        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
	      } else {
	        nextEntries.push(location);
	      }
	
	      setState({
	        action: action,
	        location: location,
	        index: nextIndex,
	        entries: nextEntries
	      });
	    });
	  };
	
	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	
	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	
	      history.entries[history.index] = location;
	
	      setState({ action: action, location: location });
	    });
	  };
	
	  var go = function go(n) {
	    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
	
	    var action = 'POP';
	    var location = history.entries[nextIndex];
	
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (ok) {
	        setState({
	          action: action,
	          location: location,
	          index: nextIndex
	        });
	      } else {
	        // Mimic the behavior of DOM histories by
	        // causing a render after a cancelled POP.
	        setState();
	      }
	    });
	  };
	
	  var goBack = function goBack() {
	    return go(-1);
	  };
	
	  var goForward = function goForward() {
	    return go(1);
	  };
	
	  var canGo = function canGo(n) {
	    var nextIndex = history.index + n;
	    return nextIndex >= 0 && nextIndex < history.entries.length;
	  };
	
	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    return transitionManager.setPrompt(prompt);
	  };
	
	  var listen = function listen(listener) {
	    return transitionManager.appendListener(listener);
	  };
	
	  var history = {
	    length: entries.length,
	    action: 'POP',
	    location: entries[index],
	    index: index,
	    entries: entries,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    canGo: canGo,
	    block: block,
	    listen: listen
	  };
	
	  return history;
	};
	
	exports.default = createMemoryHistory;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Route = __webpack_require__(37);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	var _Link = __webpack_require__(32);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	var NavLink = function NavLink(_ref) {
	  var to = _ref.to,
	      exact = _ref.exact,
	      strict = _ref.strict,
	      location = _ref.location,
	      activeClassName = _ref.activeClassName,
	      className = _ref.className,
	      activeStyle = _ref.activeStyle,
	      style = _ref.style,
	      getIsActive = _ref.isActive,
	      ariaCurrent = _ref.ariaCurrent,
	      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive', 'ariaCurrent']);
	
	  return _react2.default.createElement(_Route2.default, {
	    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,
	    exact: exact,
	    strict: strict,
	    location: location,
	    children: function children(_ref2) {
	      var location = _ref2.location,
	          match = _ref2.match;
	
	      var isActive = !!(getIsActive ? getIsActive(match, location) : match);
	
	      return _react2.default.createElement(_Link2.default, _extends({
	        to: to,
	        className: isActive ? [className, activeClassName].filter(function (i) {
	          return i;
	        }).join(' ') : className,
	        style: isActive ? _extends({}, style, activeStyle) : style,
	        'aria-current': isActive && ariaCurrent
	      }, rest));
	    }
	  });
	};
	
	NavLink.propTypes = {
	  to: _Link2.default.propTypes.to,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  location: _propTypes2.default.object,
	  activeClassName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  isActive: _propTypes2.default.func,
	  ariaCurrent: _propTypes2.default.oneOf(['page', 'step', 'location', 'true'])
	};
	
	NavLink.defaultProps = {
	  activeClassName: 'active',
	  ariaCurrent: 'true'
	};
	
	exports.default = NavLink;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Route = __webpack_require__(38);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Route2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _matchPath = __webpack_require__(39);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var isEmptyChildren = function isEmptyChildren(children) {
	  return _react2.default.Children.count(children) === 0;
	};
	
	/**
	 * The public API for matching a single path and rendering.
	 */
	
	var Route = function (_React$Component) {
	  _inherits(Route, _React$Component);
	
	  function Route() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Route);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props, _this.context.router)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Route.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        route: {
	          location: this.props.location || this.context.router.route.location,
	          match: this.state.match
	        }
	      })
	    };
	  };
	
	  Route.prototype.computeMatch = function computeMatch(_ref, router) {
	    var computedMatch = _ref.computedMatch,
	        location = _ref.location,
	        path = _ref.path,
	        strict = _ref.strict,
	        exact = _ref.exact,
	        sensitive = _ref.sensitive;
	
	    if (computedMatch) return computedMatch; // <Switch> already computed the match for us
	
	    (0, _invariant2.default)(router, 'You should not use <Route> or withRouter() outside a <Router>');
	
	    var route = router.route;
	
	    var pathname = (location || route.location).pathname;
	
	    return path ? (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }) : route.match;
	  };
	
	  Route.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!(this.props.component && this.props.render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');
	
	    (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');
	
	    (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');
	  };
	
	  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
	
	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	
	    this.setState({
	      match: this.computeMatch(nextProps, nextContext.router)
	    });
	  };
	
	  Route.prototype.render = function render() {
	    var match = this.state.match;
	    var _props = this.props,
	        children = _props.children,
	        component = _props.component,
	        render = _props.render;
	    var _context$router = this.context.router,
	        history = _context$router.history,
	        route = _context$router.route,
	        staticContext = _context$router.staticContext;
	
	    var location = this.props.location || route.location;
	    var props = { match: match, location: location, history: history, staticContext: staticContext };
	
	    return component ? // component prop gets first priority, only called if there's a match
	    match ? _react2.default.createElement(component, props) : null : render ? // render prop is next, only called if there's a match
	    match ? render(props) : null : children ? // children come last, always called
	    typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? _react2.default.Children.only(children) : null : null;
	  };
	
	  return Route;
	}(_react2.default.Component);
	
	Route.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  path: _propTypes2.default.string,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  sensitive: _propTypes2.default.bool,
	  component: _propTypes2.default.func,
	  render: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
	  location: _propTypes2.default.object
	};
	Route.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.object.isRequired,
	    route: _propTypes2.default.object.isRequired,
	    staticContext: _propTypes2.default.object
	  })
	};
	Route.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Route;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _pathToRegexp = __webpack_require__(40);
	
	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;
	
	var compilePath = function compilePath(pattern, options) {
	  var cacheKey = '' + options.end + options.strict + options.sensitive;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
	
	  if (cache[pattern]) return cache[pattern];
	
	  var keys = [];
	  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
	  var compiledPattern = { re: re, keys: keys };
	
	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledPattern;
	    cacheCount++;
	  }
	
	  return compiledPattern;
	};
	
	/**
	 * Public API for matching a URL pathname to a path pattern.
	 */
	var matchPath = function matchPath(pathname) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (typeof options === 'string') options = { path: options };
	
	  var _options = options,
	      _options$path = _options.path,
	      path = _options$path === undefined ? '/' : _options$path,
	      _options$exact = _options.exact,
	      exact = _options$exact === undefined ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === undefined ? false : _options$strict,
	      _options$sensitive = _options.sensitive,
	      sensitive = _options$sensitive === undefined ? false : _options$sensitive;
	
	  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
	      re = _compilePath.re,
	      keys = _compilePath.keys;
	
	  var match = re.exec(pathname);
	
	  if (!match) return null;
	
	  var url = match[0],
	      values = match.slice(1);
	
	  var isExact = pathname === url;
	
	  if (exact && !isExact) return null;
	
	  return {
	    path: path, // the path pattern used to match
	    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL
	    isExact: isExact, // whether or not we matched exactly
	    params: keys.reduce(function (memo, key, index) {
	      memo[key.name] = values[index];
	      return memo;
	    }, {})
	  };
	};
	
	exports.default = matchPath;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(41)
	
	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp
	
	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')
	
	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res
	
	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length
	
	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }
	
	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]
	
	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }
	
	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group
	
	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }
	
	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }
	
	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }
	
	  return tokens
	}
	
	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options))
	}
	
	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)
	
	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
	    }
	  }
	
	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent
	
	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]
	
	      if (typeof token === 'string') {
	        path += token
	
	        continue
	      }
	
	      var value = data[token.name]
	      var segment
	
	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }
	
	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }
	
	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }
	
	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }
	
	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])
	
	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }
	
	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }
	
	        continue
	      }
	
	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)
	
	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }
	
	      path += token.prefix + segment
	    }
	
	    return path
	  }
	}
	
	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}
	
	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}
	
	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}
	
	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}
	
	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)
	
	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }
	
	  return attachKeys(path, keys)
	}
	
	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []
	
	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }
	
	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))
	
	  return attachKeys(regexp, keys)
	}
	
	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}
	
	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''
	
	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]
	
	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'
	
	      keys.push(token)
	
	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }
	
	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }
	
	      route += capture
	    }
	  }
	
	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter
	
	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }
	
	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }
	
	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}
	
	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }
	
	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }
	
	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 41 */
/***/ (function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Prompt = __webpack_require__(43);
	
	var _Prompt2 = _interopRequireDefault(_Prompt);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for prompting the user before navigating away
	 * from a screen with a component.
	 */
	var Prompt = function (_React$Component) {
	  _inherits(Prompt, _React$Component);
	
	  function Prompt() {
	    _classCallCheck(this, Prompt);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Prompt.prototype.enable = function enable(message) {
	    if (this.unblock) this.unblock();
	
	    this.unblock = this.context.router.history.block(message);
	  };
	
	  Prompt.prototype.disable = function disable() {
	    if (this.unblock) {
	      this.unblock();
	      this.unblock = null;
	    }
	  };
	
	  Prompt.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Prompt> outside a <Router>');
	
	    if (this.props.when) this.enable(this.props.message);
	  };
	
	  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.when) {
	      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
	    } else {
	      this.disable();
	    }
	  };
	
	  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.disable();
	  };
	
	  Prompt.prototype.render = function render() {
	    return null;
	  };
	
	  return Prompt;
	}(_react2.default.Component);
	
	Prompt.propTypes = {
	  when: _propTypes2.default.bool,
	  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
	};
	Prompt.defaultProps = {
	  when: true
	};
	Prompt.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      block: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Prompt;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Redirect = __webpack_require__(45);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _history = __webpack_require__(46);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for updating the location programmatically
	 * with a component.
	 */
	var Redirect = function (_React$Component) {
	  _inherits(Redirect, _React$Component);
	
	  function Redirect() {
	    _classCallCheck(this, Redirect);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Redirect.prototype.isStatic = function isStatic() {
	    return this.context.router && this.context.router.staticContext;
	  };
	
	  Redirect.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Redirect> outside a <Router>');
	
	    if (this.isStatic()) this.perform();
	  };
	
	  Redirect.prototype.componentDidMount = function componentDidMount() {
	    if (!this.isStatic()) this.perform();
	  };
	
	  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var prevTo = (0, _history.createLocation)(prevProps.to);
	    var nextTo = (0, _history.createLocation)(this.props.to);
	
	    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
	      (0, _warning2.default)(false, 'You tried to redirect to the same route you\'re currently on: ' + ('"' + nextTo.pathname + nextTo.search + '"'));
	      return;
	    }
	
	    this.perform();
	  };
	
	  Redirect.prototype.perform = function perform() {
	    var history = this.context.router.history;
	    var _props = this.props,
	        push = _props.push,
	        to = _props.to;
	
	
	    if (push) {
	      history.push(to);
	    } else {
	      history.replace(to);
	    }
	  };
	
	  Redirect.prototype.render = function render() {
	    return null;
	  };
	
	  return Redirect;
	}(_react2.default.Component);
	
	Redirect.propTypes = {
	  push: _propTypes2.default.bool,
	  from: _propTypes2.default.string,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	};
	Redirect.defaultProps = {
	  push: false
	};
	Redirect.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired
	    }).isRequired,
	    staticContext: _propTypes2.default.object
	  }).isRequired
	};
	exports.default = Redirect;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.locationsAreEqual = exports.createLocation = exports.createMemoryHistory = exports.createHashHistory = exports.createBrowserHistory = undefined;
	
	var _LocationUtils = __webpack_require__(22);
	
	Object.defineProperty(exports, 'createLocation', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.createLocation;
	  }
	});
	Object.defineProperty(exports, 'locationsAreEqual', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.locationsAreEqual;
	  }
	});
	
	var _PathUtils = __webpack_require__(25);
	
	Object.defineProperty(exports, 'parsePath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.parsePath;
	  }
	});
	Object.defineProperty(exports, 'createPath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.createPath;
	  }
	});
	
	var _createBrowserHistory2 = __webpack_require__(20);
	
	var _createBrowserHistory3 = _interopRequireDefault(_createBrowserHistory2);
	
	var _createHashHistory2 = __webpack_require__(31);
	
	var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(35);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.createBrowserHistory = _createBrowserHistory3.default;
	exports.createHashHistory = _createHashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _StaticRouter = __webpack_require__(48);
	
	var _StaticRouter2 = _interopRequireDefault(_StaticRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _PathUtils = __webpack_require__(25);
	
	var _Router = __webpack_require__(29);
	
	var _Router2 = _interopRequireDefault(_Router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var normalizeLocation = function normalizeLocation(object) {
	  var _object$pathname = object.pathname,
	      pathname = _object$pathname === undefined ? '/' : _object$pathname,
	      _object$search = object.search,
	      search = _object$search === undefined ? '' : _object$search,
	      _object$hash = object.hash,
	      hash = _object$hash === undefined ? '' : _object$hash;
	
	
	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};
	
	var addBasename = function addBasename(basename, location) {
	  if (!basename) return location;
	
	  return _extends({}, location, {
	    pathname: (0, _PathUtils.addLeadingSlash)(basename) + location.pathname
	  });
	};
	
	var stripBasename = function stripBasename(basename, location) {
	  if (!basename) return location;
	
	  var base = (0, _PathUtils.addLeadingSlash)(basename);
	
	  if (location.pathname.indexOf(base) !== 0) return location;
	
	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	};
	
	var createLocation = function createLocation(location) {
	  return typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : normalizeLocation(location);
	};
	
	var createURL = function createURL(location) {
	  return typeof location === 'string' ? location : (0, _PathUtils.createPath)(location);
	};
	
	var staticHandler = function staticHandler(methodName) {
	  return function () {
	    (0, _invariant2.default)(false, 'You cannot %s with <StaticRouter>', methodName);
	  };
	};
	
	var noop = function noop() {};
	
	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */
	
	var StaticRouter = function (_React$Component) {
	  _inherits(StaticRouter, _React$Component);
	
	  function StaticRouter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, StaticRouter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
	      return (0, _PathUtils.addLeadingSlash)(_this.props.basename + createURL(path));
	    }, _this.handlePush = function (location) {
	      var _this$props = _this.props,
	          basename = _this$props.basename,
	          context = _this$props.context;
	
	      context.action = 'PUSH';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleReplace = function (location) {
	      var _this$props2 = _this.props,
	          basename = _this$props2.basename,
	          context = _this$props2.context;
	
	      context.action = 'REPLACE';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleListen = function () {
	      return noop;
	    }, _this.handleBlock = function () {
	      return noop;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  StaticRouter.prototype.getChildContext = function getChildContext() {
	    return {
	      router: {
	        staticContext: this.props.context
	      }
	    };
	  };
	
	  StaticRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<StaticRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { StaticRouter as Router }`.');
	  };
	
	  StaticRouter.prototype.render = function render() {
	    var _props = this.props,
	        basename = _props.basename,
	        context = _props.context,
	        location = _props.location,
	        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);
	
	    var history = {
	      createHref: this.createHref,
	      action: 'POP',
	      location: stripBasename(basename, createLocation(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler('go'),
	      goBack: staticHandler('goBack'),
	      goForward: staticHandler('goForward'),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };
	
	    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
	  };
	
	  return StaticRouter;
	}(_react2.default.Component);
	
	StaticRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  context: _propTypes2.default.object.isRequired,
	  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	StaticRouter.defaultProps = {
	  basename: '',
	  location: '/'
	};
	StaticRouter.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = StaticRouter;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Switch = __webpack_require__(50);
	
	var _Switch2 = _interopRequireDefault(_Switch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _matchPath = __webpack_require__(39);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	var Switch = function (_React$Component) {
	  _inherits(Switch, _React$Component);
	
	  function Switch() {
	    _classCallCheck(this, Switch);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  Switch.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Switch> outside a <Router>');
	  };
	
	  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
	
	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	  };
	
	  Switch.prototype.render = function render() {
	    var route = this.context.router.route;
	    var children = this.props.children;
	
	    var location = this.props.location || route.location;
	
	    var match = void 0,
	        child = void 0;
	    _react2.default.Children.forEach(children, function (element) {
	      if (!_react2.default.isValidElement(element)) return;
	
	      var _element$props = element.props,
	          pathProp = _element$props.path,
	          exact = _element$props.exact,
	          strict = _element$props.strict,
	          sensitive = _element$props.sensitive,
	          from = _element$props.from;
	
	      var path = pathProp || from;
	
	      if (match == null) {
	        child = element;
	        match = path ? (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }) : route.match;
	      }
	    });
	
	    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
	  };
	
	  return Switch;
	}(_react2.default.Component);
	
	Switch.contextTypes = {
	  router: _propTypes2.default.shape({
	    route: _propTypes2.default.object.isRequired
	  }).isRequired
	};
	Switch.propTypes = {
	  children: _propTypes2.default.node,
	  location: _propTypes2.default.object
	};
	exports.default = Switch;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _matchPath = __webpack_require__(39);
	
	var _matchPath2 = _interopRequireDefault(_matchPath);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _withRouter = __webpack_require__(53);
	
	var _withRouter2 = _interopRequireDefault(_withRouter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _hoistNonReactStatics = __webpack_require__(54);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _Route = __webpack_require__(38);
	
	var _Route2 = _interopRequireDefault(_Route);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A public higher-order component to access the imperative API
	 */
	var withRouter = function withRouter(Component) {
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);
	
	    return _react2.default.createElement(_Route2.default, { render: function render(routeComponentProps) {
	        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));
	      } });
	  };
	
	  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';
	  C.WrappedComponent = Component;
	  C.propTypes = {
	    wrappedComponentRef: _propTypes2.default.func
	  };
	
	  return (0, _hoistNonReactStatics2.default)(C, Component);
	};
	
	exports.default = withRouter;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    (global.hoistNonReactStatics = factory());
	}(this, (function () {
	    'use strict';
	    
	    var REACT_STATICS = {
	        childContextTypes: true,
	        contextTypes: true,
	        defaultProps: true,
	        displayName: true,
	        getDefaultProps: true,
	        getDerivedStateFromProps: true,
	        mixins: true,
	        propTypes: true,
	        type: true
	    };
	    
	    var KNOWN_STATICS = {
	        name: true,
	        length: true,
	        prototype: true,
	        caller: true,
	        callee: true,
	        arguments: true,
	        arity: true
	    };
	    
	    var defineProperty = Object.defineProperty;
	    var getOwnPropertyNames = Object.getOwnPropertyNames;
	    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	    var getPrototypeOf = Object.getPrototypeOf;
	    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
	    
	    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	            
	            if (objectPrototype) {
	                var inheritedComponent = getPrototypeOf(sourceComponent);
	                if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	                }
	            }
	            
	            var keys = getOwnPropertyNames(sourceComponent);
	            
	            if (getOwnPropertySymbols) {
	                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	            }
	            
	            for (var i = 0; i < keys.length; ++i) {
	                var key = keys[i];
	                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                    try { // Avoid failures from read-only properties
	                        defineProperty(targetComponent, key, descriptor);
	                    } catch (e) {}
	                }
	            }
	            
	            return targetComponent;
	        }
	        
	        return targetComponent;
	    };
	})));


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright JS Foundation and other contributors <https://js.foundation/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {
	
	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;
	
	  /** Used as the semantic version number. */
	  var VERSION = '4.17.5';
	
	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;
	
	  /** Error message constants. */
	  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
	      FUNC_ERROR_TEXT = 'Expected a function';
	
	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	  /** Used as the maximum memoize cache size. */
	  var MAX_MEMOIZE_SIZE = 500;
	
	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';
	
	  /** Used to compose bitmasks for cloning. */
	  var CLONE_DEEP_FLAG = 1,
	      CLONE_FLAT_FLAG = 2,
	      CLONE_SYMBOLS_FLAG = 4;
	
	  /** Used to compose bitmasks for value comparisons. */
	  var COMPARE_PARTIAL_FLAG = 1,
	      COMPARE_UNORDERED_FLAG = 2;
	
	  /** Used to compose bitmasks for function metadata. */
	  var WRAP_BIND_FLAG = 1,
	      WRAP_BIND_KEY_FLAG = 2,
	      WRAP_CURRY_BOUND_FLAG = 4,
	      WRAP_CURRY_FLAG = 8,
	      WRAP_CURRY_RIGHT_FLAG = 16,
	      WRAP_PARTIAL_FLAG = 32,
	      WRAP_PARTIAL_RIGHT_FLAG = 64,
	      WRAP_ARY_FLAG = 128,
	      WRAP_REARG_FLAG = 256,
	      WRAP_FLIP_FLAG = 512;
	
	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';
	
	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 800,
	      HOT_SPAN = 16;
	
	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;
	
	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;
	
	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
	
	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', WRAP_ARY_FLAG],
	    ['bind', WRAP_BIND_FLAG],
	    ['bindKey', WRAP_BIND_KEY_FLAG],
	    ['curry', WRAP_CURRY_FLAG],
	    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	    ['flip', WRAP_FLIP_FLAG],
	    ['partial', WRAP_PARTIAL_FLAG],
	    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	    ['rearg', WRAP_REARG_FLAG]
	  ];
	
	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      asyncTag = '[object AsyncFunction]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      domExcTag = '[object DOMException]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      nullTag = '[object Null]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      proxyTag = '[object Proxy]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      undefinedTag = '[object Undefined]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';
	
	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';
	
	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
	
	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
	      reUnescapedHtml = /[&<>"']/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;
	
	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);
	
	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;
	
	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;
	
	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
	
	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;
	
	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
	
	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;
	
	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;
	
	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;
	
	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
	
	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;
	
	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
	
	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f',
	      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	      rsComboSymbolsRange = '\\u20d0-\\u20ff',
	      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
	
	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';
	
	  /** Used to compose unicode regexes. */
	  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
	      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');
	
	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');
	
	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	    rsUpper + '+' + rsOptContrUpper,
	    rsOrdUpper,
	    rsOrdLower,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');
	
	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];
	
	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;
	
	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;
	
	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;
	
	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 's'
	  };
	
	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;'
	  };
	
	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'"
	  };
	
	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };
	
	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;
	
	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();
	
	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;
	
	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;
	
	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding && freeProcess.binding('util');
	    } catch (e) {}
	  }());
	
	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }
	
	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	
	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }
	
	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array == null ? 0 : array.length;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }
	
	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        result = Array(length);
	
	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }
	
	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;
	
	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array == null ? 0 : array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');
	
	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }
	
	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }
	
	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    return value === value
	      ? strictIndexOf(array, value, fromIndex)
	      : baseFindIndex(array, baseIsNaN, fromIndex);
	  }
	
	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }
	
	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }
	
	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }
	
	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }
	
	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }
	
	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;
	
	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }
	
	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);
	
	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }
	
	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }
	
	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }
	
	  /**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;
	
	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;
	
	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;
	
	    while (length--) {
	      if (array[length] === placeholder) {
	        ++result;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);
	
	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);
	
	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }
	
	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }
	
	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }
	
	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }
	
	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];
	
	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }
	
	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);
	
	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }
	
	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }
	
	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Gets the value at `key`, unless `key` is "__proto__".
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function safeGet(object, key) {
	    return key == '__proto__'
	      ? undefined
	      : object[key];
	  }
	
	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);
	
	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }
	
	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);
	
	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictIndexOf(array, value, fromIndex) {
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictLastIndexOf(array, value, fromIndex) {
	    var index = fromIndex + 1;
	    while (index--) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return index;
	  }
	
	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }
	
	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }
	
	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
	
	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      ++result;
	    }
	    return result;
	  }
	
	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }
	
	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  var runInContext = (function runInContext(context) {
	    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
	
	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;
	
	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;
	
	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];
	
	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;
	
	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;
	
	    /** Used to generate unique IDs. */
	    var idCounter = 0;
	
	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());
	
	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var nativeObjectToString = objectProto.toString;
	
	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);
	
	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;
	
	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );
	
	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
	        symIterator = Symbol ? Symbol.iterator : undefined,
	        symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	    var defineProperty = (function() {
	      try {
	        var func = getNative(Object, 'defineProperty');
	        func({}, '', {});
	        return func;
	      } catch (e) {}
	    }());
	
	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
	
	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = Date.now,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;
	
	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');
	
	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;
	
	    /** Used to lookup unminified function names. */
	    var realNames = {};
	
	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);
	
	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array and iteratees accept only
	     * one argument. The heuristic for whether a section qualifies for shortcut
	     * fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }
	
	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(proto) {
	        if (!isObject(proto)) {
	          return {};
	        }
	        if (objectCreate) {
	          return objectCreate(proto);
	        }
	        object.prototype = proto;
	        var result = new object;
	        object.prototype = undefined;
	        return result;
	      };
	    }());
	
	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }
	
	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }
	
	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
	     * following template settings to use alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {
	
	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,
	
	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,
	
	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,
	
	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',
	
	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {
	
	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };
	
	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;
	
	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }
	
	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }
	
	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }
	
	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);
	
	      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];
	
	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;
	
	        var iterIndex = -1,
	            value = array[index];
	
	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);
	
	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }
	
	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      var result = this.has(key) && delete this.__data__[key];
	      this.size -= result ? 1 : 0;
	      return result;
	    }
	
	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }
	
	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	    }
	
	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      this.size += this.has(key) ? 0 : 1;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }
	
	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      --this.size;
	      return true;
	    }
	
	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      return index < 0 ? undefined : data[index][1];
	    }
	
	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }
	
	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      if (index < 0) {
	        ++this.size;
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }
	
	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.size = 0;
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }
	
	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      var result = getMapData(this, key)['delete'](key);
	      this.size -= result ? 1 : 0;
	      return result;
	    }
	
	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }
	
	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }
	
	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      var data = getMapData(this, key),
	          size = data.size;
	
	      data.set(key, value);
	      this.size += data.size == size ? 0 : 1;
	      return this;
	    }
	
	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values == null ? 0 : values.length;
	
	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }
	
	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }
	
	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }
	
	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      var data = this.__data__ = new ListCache(entries);
	      this.size = data.size;
	    }
	
	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          result = data['delete'](key);
	
	      this.size = data.size;
	      return result;
	    }
	
	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }
	
	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }
	
	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__;
	      if (data instanceof ListCache) {
	        var pairs = data.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          this.size = ++data.size;
	          return this;
	        }
	        data = this.__data__ = new MapCache(pairs);
	      }
	      data.set(key, value);
	      this.size = data.size;
	      return this;
	    }
	
	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      var isArr = isArray(value),
	          isArg = !isArr && isArguments(value),
	          isBuff = !isArr && !isArg && isBuffer(value),
	          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	          skipIndexes = isArr || isArg || isBuff || isType,
	          result = skipIndexes ? baseTimes(value.length, String) : [],
	          length = result.length;
	
	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (
	               // Safari 9 has enumerable `arguments.length` in strict mode.
	               key == 'length' ||
	               // Node.js 0.10 has enumerable non-index properties on buffers.
	               (isBuff && (key == 'offset' || key == 'parent')) ||
	               // PhantomJS 2 has enumerable non-index properties on typed arrays.
	               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	               // Skip index properties.
	               isIndex(key, length)
	            ))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */
	    function arraySample(array) {
	      var length = array.length;
	      return length ? array[baseRandom(0, length - 1)] : undefined;
	    }
	
	    /**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function arraySampleSize(array, n) {
	      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
	    }
	
	    /**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function arrayShuffle(array) {
	      return shuffleSelf(copyArray(array));
	    }
	
	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }
	
	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }
	
	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }
	
	    /**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssignIn(object, source) {
	      return object && copyObject(source, keysIn(source), object);
	    }
	
	    /**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function baseAssignValue(object, key, value) {
	      if (key == '__proto__' && defineProperty) {
	        defineProperty(object, key, {
	          'configurable': true,
	          'enumerable': true,
	          'value': value,
	          'writable': true
	        });
	      } else {
	        object[key] = value;
	      }
	    }
	
	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          length = paths.length,
	          result = Array(length),
	          skip = object == null;
	
	      while (++index < length) {
	        result[index] = skip ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }
	
	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, bitmask, customizer, key, object, stack) {
	      var result,
	          isDeep = bitmask & CLONE_DEEP_FLAG,
	          isFlat = bitmask & CLONE_FLAT_FLAG,
	          isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;
	
	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = (isFlat || isFunc) ? {} : initCloneObject(value);
	          if (!isDeep) {
	            return isFlat
	              ? copySymbolsIn(value, baseAssignIn(result, value))
	              : copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);
	
	      if (isSet(value)) {
	        value.forEach(function(subValue) {
	          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
	        });
	
	        return result;
	      }
	
	      if (isMap(value)) {
	        value.forEach(function(subValue, key) {
	          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
	        });
	
	        return result;
	      }
	
	      var keysFunc = isFull
	        ? (isFlat ? getAllKeysIn : getAllKeys)
	        : (isFlat ? keysIn : keys);
	
	      var props = isArr ? undefined : keysFunc(value);
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }
	
	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];
	
	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }
	
	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }
	
	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;
	
	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee == null ? value : iteratee(value);
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);
	
	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);
	
	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;
	
	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);
	
	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;
	
	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;
	
	      predicate || (predicate = isFlattenable);
	      result || (result = []);
	
	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();
	
	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);
	
	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }
	
	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = castPath(path, object);
	
	      var index = 0,
	          length = path.length;
	
	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }
	
	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }
	
	    /**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      if (value == null) {
	        return value === undefined ? undefinedTag : nullTag;
	      }
	      return (symToStringTag && symToStringTag in Object(value))
	        ? getRawTag(value)
	        : objectToString(value);
	    }
	
	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }
	
	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }
	
	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }
	
	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }
	
	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];
	
	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];
	
	      var index = -1,
	          seen = caches[0];
	
	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      var func = object == null ? object : object[toKey(last(path))];
	      return func == null ? undefined : apply(func, object, args);
	    }
	
	    /**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */
	    function baseIsArguments(value) {
	      return isObjectLike(value) && baseGetTag(value) == argsTag;
	    }
	
	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
	    }
	
	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && baseGetTag(value) == dateTag;
	    }
	
	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, bitmask, customizer, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	    }
	
	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = objIsArr ? arrayTag : getTag(object),
	          othTag = othIsArr ? arrayTag : getTag(other);
	
	      objTag = objTag == argsTag ? objectTag : objTag;
	      othTag = othTag == argsTag ? objectTag : othTag;
	
	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;
	
	      if (isSameTag && isBuffer(object)) {
	        if (!isBuffer(other)) {
	          return false;
	        }
	        objIsArr = true;
	        objIsObj = false;
	      }
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	      }
	      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;
	
	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	    }
	
	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }
	
	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;
	
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];
	
	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }
	
	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }
	
	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObjectLike(value) && baseGetTag(value) == regexpTag;
	    }
	
	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }
	
	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	    }
	
	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }
	
	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];
	
	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }
	
	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }
	
	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	      };
	    }
	
	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      baseFor(source, function(srcValue, key) {
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
	            : undefined;
	
	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      }, keysIn);
	    }
	
	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = safeGet(object, key),
	          srcValue = safeGet(source, key),
	          stacked = stack.get(srcValue);
	
	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      var isCommon = newValue === undefined;
	
	      if (isCommon) {
	        var isArr = isArray(srcValue),
	            isBuff = !isArr && isBuffer(srcValue),
	            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	        newValue = srcValue;
	        if (isArr || isBuff || isTyped) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else if (isBuff) {
	            isCommon = false;
	            newValue = cloneBuffer(srcValue, true);
	          }
	          else if (isTyped) {
	            isCommon = false;
	            newValue = cloneTypedArray(srcValue, true);
	          }
	          else {
	            newValue = [];
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          newValue = objValue;
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            newValue = initCloneObject(srcValue);
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }
	
	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }
	
	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
	
	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });
	
	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }
	
	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, paths) {
	      return basePickBy(object, paths, function(value, path) {
	        return hasIn(object, path);
	      });
	    }
	
	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, paths, predicate) {
	      var index = -1,
	          length = paths.length,
	          result = {};
	
	      while (++index < length) {
	        var path = paths[index],
	            value = baseGet(object, path);
	
	        if (predicate(value, path)) {
	          baseSet(result, castPath(path, object), value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }
	
	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;
	
	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;
	
	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          } else {
	            baseUnset(array, index);
	          }
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }
	
	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);
	
	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);
	
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      return setToString(overRest(func, start, identity), func + '');
	    }
	
	    /**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */
	    function baseSample(collection) {
	      return arraySample(values(collection));
	    }
	
	    /**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function baseSampleSize(collection, n) {
	      var array = values(collection);
	      return shuffleSelf(array, baseClamp(n, 0, array.length));
	    }
	
	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;
	
	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;
	
	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }
	
	    /**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };
	
	    /**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetToString = !defineProperty ? identity : function(func, string) {
	      return defineProperty(func, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(string),
	        'writable': true
	      });
	    };
	
	    /**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function baseShuffle(collection) {
	      return shuffleSelf(values(collection));
	    }
	
	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;
	
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;
	
	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;
	
	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }
	
	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array == null ? low : array.length;
	
	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];
	
	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }
	
	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);
	
	      var low = 0,
	          high = array == null ? 0 : array.length,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;
	
	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);
	
	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }
	
	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];
	
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }
	
	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isArray(value)) {
	        // Recursively convert values (susceptible to call stack limits).
	        return arrayMap(value, baseToString) + '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }
	
	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;
	
	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      return object == null || delete object[toKey(last(path))];
	    }
	
	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }
	
	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;
	
	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}
	
	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }
	
	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }
	
	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var length = arrays.length;
	      if (length < 2) {
	        return length ? baseUniq(arrays[0]) : [];
	      }
	      var index = -1,
	          result = Array(length);
	
	      while (++index < length) {
	        var array = arrays[index],
	            othIndex = -1;
	
	        while (++othIndex < length) {
	          if (othIndex != index) {
	            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
	          }
	        }
	      }
	      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
	    }
	
	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};
	
	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }
	
	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }
	
	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }
	
	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value, object) {
	      if (isArray(value)) {
	        return value;
	      }
	      return isKey(value, object) ? [value] : stringToPath(toString(value));
	    }
	
	    /**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    var castRest = baseRest;
	
	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }
	
	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };
	
	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var length = buffer.length,
	          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	      buffer.copy(result);
	      return result;
	    }
	
	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }
	
	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }
	
	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }
	
	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }
	
	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }
	
	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);
	
	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);
	
	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }
	
	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;
	
	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }
	
	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;
	
	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }
	
	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;
	
	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;
	
	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }
	
	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      var isNew = !object;
	      object || (object = {});
	
	      var index = -1,
	          length = props.length;
	
	      while (++index < length) {
	        var key = props[index];
	
	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;
	
	        if (newValue === undefined) {
	          newValue = source[key];
	        }
	        if (isNew) {
	          baseAssignValue(object, key, newValue);
	        } else {
	          assignValue(object, key, newValue);
	        }
	      }
	      return object;
	    }
	
	    /**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }
	
	    /**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbolsIn(source, object) {
	      return copyObject(source, getSymbolsIn(source), object);
	    }
	
	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};
	
	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }
	
	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;
	
	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;
	
	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }
	
	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);
	
	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }
	
	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;
	
	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);
	
	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);
	
	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;
	
	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);
	
	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);
	
	        return chr[methodName]() + trailing;
	      };
	    }
	
	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }
	
	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);
	
	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);
	
	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }
	
	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return flatRest(function(funcs) {
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;
	
	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];
	
	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;
	
	          if (data && isLaziable(data[0]) &&
	                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];
	
	          if (wrapper && args.length == 1 && isArray(value)) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;
	
	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & WRAP_ARY_FLAG,
	          isBind = bitmask & WRAP_BIND_FLAG,
	          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	          isFlip = bitmask & WRAP_FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;
	
	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }
	
	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return flatRest(function(iteratees) {
	        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }
	
	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);
	
	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);
	
	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }
	
	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & WRAP_CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;
	
	      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];
	
	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }
	
	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));
	
	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }
	
	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };
	
	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }
	
	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;
	
	      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;
	
	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);
	
	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];
	
	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] === undefined
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);
	
	      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }
	
	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	     * of source objects to the destination object for all destination properties
	     * that resolve to `undefined`.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsAssignIn(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }
	
	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	     * objects into destination objects that are passed thru.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }
	
	    /**
	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	     * objects.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {string} key The key of the property to inspect.
	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	     */
	    function customOmitClone(value) {
	      return isPlainObject(value) ? undefined : value;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          arrLength = array.length,
	          othLength = other.length;
	
	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	      stack.set(array, other);
	      stack.set(other, array);
	
	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!cacheHas(seen, othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	                  return seen.push(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, bitmask, customizer, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;
	
	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;
	
	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);
	
	        case errorTag:
	          return object.name == other.name && object.message == other.message;
	
	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');
	
	        case mapTag:
	          var convert = mapToArray;
	
	        case setTag:
	          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	          convert || (convert = setToArray);
	
	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= COMPARE_UNORDERED_FLAG;
	
	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	          stack['delete'](object);
	          return result;
	
	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          objProps = getAllKeys(object),
	          objLength = objProps.length,
	          othProps = getAllKeys(other),
	          othLength = othProps.length;
	
	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);
	
	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;
	
	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    function flatRest(func) {
	      return setToString(overRest(func, undefined, flatten), func + '');
	    }
	
	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }
	
	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }
	
	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };
	
	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }
	
	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }
	
	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }
	
	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;
	
	      while (length--) {
	        var key = result[length],
	            value = object[key];
	
	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }
	
	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }
	
	    /**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */
	    function getRawTag(value) {
	      var isOwn = hasOwnProperty.call(value, symToStringTag),
	          tag = value[symToStringTag];
	
	      try {
	        value[symToStringTag] = undefined;
	        var unmasked = true;
	      } catch (e) {}
	
	      var result = nativeObjectToString.call(value);
	      if (unmasked) {
	        if (isOwn) {
	          value[symToStringTag] = tag;
	        } else {
	          delete value[symToStringTag];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	      if (object == null) {
	        return [];
	      }
	      object = Object(object);
	      return arrayFilter(nativeGetSymbols(object), function(symbol) {
	        return propertyIsEnumerable.call(object, symbol);
	      });
	    };
	
	    /**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };
	
	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;
	
	    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = baseGetTag(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : '';
	
	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;
	
	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;
	
	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }
	
	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }
	
	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length,
	          result = false;
	
	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result || ++index != length) {
	        return result;
	      }
	      length = object == null ? 0 : object.length;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }
	
	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = new array.constructor(length);
	
	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }
	
	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }
	
	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);
	
	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);
	
	        case dataViewTag:
	          return cloneDataView(object, isDeep);
	
	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);
	
	        case mapTag:
	          return new Ctor;
	
	        case numberTag:
	        case stringTag:
	          return new Ctor(object);
	
	        case regexpTag:
	          return cloneRegExp(object);
	
	        case setTag:
	          return new Ctor;
	
	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }
	
	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length;
	      if (!length) {
	        return source;
	      }
	      var lastIndex = length - 1;
	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }
	
	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }
	
	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      var type = typeof value;
	      length = length == null ? MAX_SAFE_INTEGER : length;
	
	      return !!length &&
	        (type == 'number' ||
	          (type != 'symbol' && reIsUint.test(value))) &&
	            (value > -1 && value % 1 == 0 && value < length);
	    }
	
	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }
	
	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }
	
	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }
	
	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];
	
	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }
	
	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }
	
	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;
	
	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	      return value === proto;
	    }
	
	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }
	
	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }
	
	    /**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */
	    function memoizeCapped(func) {
	      var result = memoize(func, function(key) {
	        if (cache.size === MAX_MEMOIZE_SIZE) {
	          cache.clear();
	        }
	        return key;
	      });
	
	      var cache = result.cache;
	      return result;
	    }
	
	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	      var isCombo =
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & WRAP_BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & WRAP_ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;
	
	      return data;
	    }
	
	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */
	    function objectToString(value) {
	      return nativeObjectToString.call(value);
	    }
	
	    /**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */
	    function overRest(func, start, transform) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);
	
	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = transform(array);
	        return apply(func, this, otherArgs);
	      };
	    }
	
	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }
	
	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);
	
	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }
	
	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = shortOut(baseSetData);
	
	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };
	
	    /**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var setToString = shortOut(baseSetToString);
	
	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    function setWrapToString(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	    }
	
	    /**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */
	    function shortOut(func) {
	      var count = 0,
	          lastCalled = 0;
	
	      return function() {
	        var stamp = nativeNow(),
	            remaining = HOT_SPAN - (stamp - lastCalled);
	
	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return arguments[0];
	          }
	        } else {
	          count = 0;
	        }
	        return func.apply(undefined, arguments);
	      };
	    }
	
	    /**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */
	    function shuffleSelf(array, size) {
	      var index = -1,
	          length = array.length,
	          lastIndex = length - 1;
	
	      size = size === undefined ? length : size;
	      while (++index < size) {
	        var rand = baseRandom(index, lastIndex),
	            value = array[rand];
	
	        array[rand] = array[index];
	        array[index] = value;
	      }
	      array.length = size;
	      return array;
	    }
	
	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoizeCapped(function(string) {
	      var result = [];
	      if (string.charCodeAt(0) === 46 /* . */) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, subString) {
	        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });
	
	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }
	
	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }
	
	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }
	
	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array == null ? 0 : array.length;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));
	
	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array == null ? 0 : array.length,
	          resIndex = 0,
	          result = [];
	
	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length;
	      if (!length) {
	        return [];
	      }
	      var args = Array(length - 1),
	          array = arguments[0],
	          index = length;
	
	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
	    }
	
	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }
	
	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }
	
	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }
	
	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }
	
	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, 1) : [];
	    }
	
	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }
	
	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }
	
	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs == null ? 0 : pairs.length,
	          result = {};
	
	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }
	
	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }
	
	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }
	
	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 0, -1) : [];
	    }
	
	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);
	
	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);
	
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      if (comparator) {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array == null ? '' : nativeJoin.call(array, separator);
	    }
	
	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? array[length - 1] : undefined;
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
	      }
	      return value === value
	        ? strictLastIndexOf(array, value, index)
	        : baseFindIndex(array, baseIsNaN, index, true);
	    }
	
	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }
	
	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);
	
	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }
	
	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = flatRest(function(array, indexes) {
	      var length = array == null ? 0 : array.length,
	          result = baseAt(array, indexes);
	
	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));
	
	      return result;
	    });
	
	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;
	
	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }
	
	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array == null ? array : nativeReverse.call(array);
	    }
	
	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }
	
	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }
	
	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }
	
	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }
	
	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }
	
	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 1, length) : [];
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }
	
	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });
	
	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length) ? baseUniq(array) : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }
	
	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }
	
	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });
	
	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });
	
	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);
	
	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }
	
	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;
	
	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }
	
	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }
	
	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }
	
	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = flatRest(function(paths) {
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };
	
	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });
	
	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }
	
	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }
	
	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];
	
	      return { 'done': done, 'value': value };
	    }
	
	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }
	
	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;
	
	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }
	
	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }
	
	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        ++result[key];
	      } else {
	        baseAssignValue(result, key, 1);
	      }
	    });
	
	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);
	
	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);
	
	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }
	
	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        baseAssignValue(result, key, [value]);
	      }
	    });
	
	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }
	
	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value) {
	        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      baseAssignValue(result, key, value);
	    });
	
	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }
	
	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });
	
	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }
	
	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }
	
	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }
	
	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var func = isArray(collection) ? arraySample : baseSample;
	      return func(collection);
	    }
	
	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
	      return func(collection, n);
	    }
	
	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      var func = isArray(collection) ? arrayShuffle : baseShuffle;
	      return func(collection);
	    }
	
	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }
	
	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }
	
	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = WRAP_BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });
	
	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }
	
	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }
	
	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	
	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;
	
	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }
	
	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }
	
	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            timeWaiting = wait - timeSinceLastCall;
	
	        return maxing
	          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
	          : timeWaiting;
	      }
	
	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;
	
	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }
	
	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }
	
	      function trailingEdge(time) {
	        timerId = undefined;
	
	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }
	
	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }
	
	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }
	
	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);
	
	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;
	
	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }
	
	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });
	
	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, WRAP_FLIP_FLAG);
	    }
	
	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;
	
	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result) || cache;
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }
	
	    // Expose `MapCache`.
	    memoize.Cache = MapCache;
	
	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }
	
	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }
	
	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = castRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
	
	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);
	
	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });
	
	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = flatRest(function(func, indexes) {
	      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	    });
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start == null ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);
	
	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }
	
	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }
	
	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }
	
	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return partial(castFunction(wrapper), value);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }
	
	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, CLONE_SYMBOLS_FLAG);
	    }
	
	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
	    }
	
	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	    }
	
	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
	    }
	
	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }
	
	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }
	
	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);
	
	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });
	
	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	        !propertyIsEnumerable.call(value, 'callee');
	    };
	
	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;
	
	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
	
	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }
	
	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && baseGetTag(value) == boolTag);
	    }
	
	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;
	
	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
	
	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	    }
	
	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (isPrototype(value)) {
	        return !baseKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }
	
	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are compared by strict equality, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }
	
	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	    }
	
	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      var tag = baseGetTag(value);
	      return tag == errorTag || tag == domExcTag ||
	        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	    }
	
	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 9 which returns 'object' for typed arrays and other constructors.
	      var tag = baseGetTag(value);
	      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	    }
	
	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }
	
	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return value != null && (type == 'object' || type == 'function');
	    }
	
	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return value != null && typeof value == 'object';
	    }
	
	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }
	
	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }
	
	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }
	
	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error(CORE_ERROR_TEXT);
	      }
	      return baseIsNative(value);
	    }
	
	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }
	
	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && baseGetTag(value) == numberTag);
	    }
	
	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	        funcToString.call(Ctor) == objectCtorString;
	    }
	
	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
	
	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && baseGetTag(value) == symbolTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
	    }
	
	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);
	
	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });
	
	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (symIterator && value[symIterator]) {
	        return iteratorToArray(value[symIterator]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
	
	      return func(value);
	    }
	
	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }
	
	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;
	
	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }
	
	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }
	
	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }
	
	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }
	
	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return value
	        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
	        : (value === 0 ? value : 0);
	    }
	
	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });
	
	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });
	
	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });
	
	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });
	
	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = flatRest(baseAt);
	
	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties == null ? result : baseAssign(result, properties);
	    }
	
	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(object, sources) {
	      object = Object(object);
	
	      var index = -1;
	      var length = sources.length;
	      var guard = length > 2 ? sources[2] : undefined;
	
	      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	        length = 1;
	      }
	
	      while (++index < length) {
	        var source = sources[index];
	        var props = keysIn(source);
	        var propsIndex = -1;
	        var propsLength = props.length;
	
	        while (++propsIndex < propsLength) {
	          var key = props[propsIndex];
	          var value = object[key];
	
	          if (value === undefined ||
	              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	            object[key] = source[key];
	          }
	        }
	      }
	
	      return object;
	    });
	
	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, customDefaultsMerge);
	      return apply(mergeWith, undefined, args);
	    });
	
	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }
	
	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }
	
	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }
	
	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }
	
	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }
	
	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }
	
	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }
	
	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }
	
	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }
	
	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      if (value != null &&
	          typeof value.toString != 'function') {
	        value = nativeObjectToString.call(value);
	      }
	
	      result[value] = key;
	    }, constant(identity));
	
	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (value != null &&
	          typeof value.toString != 'function') {
	        value = nativeObjectToString.call(value);
	      }
	
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);
	
	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);
	
	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }
	
	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, iteratee(value, key, object), value);
	      });
	      return result;
	    }
	
	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, key, iteratee(value, key, object));
	      });
	      return result;
	    }
	
	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });
	
	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });
	
	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = flatRest(function(object, paths) {
	      var result = {};
	      if (object == null) {
	        return result;
	      }
	      var isDeep = false;
	      paths = arrayMap(paths, function(path) {
	        path = castPath(path, object);
	        isDeep || (isDeep = path.length > 1);
	        return path;
	      });
	      copyObject(object, getAllKeysIn(object), result);
	      if (isDeep) {
	        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	      }
	      var length = paths.length;
	      while (length--) {
	        baseUnset(result, paths[length]);
	      }
	      return result;
	    });
	
	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }
	
	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = flatRest(function(object, paths) {
	      return object == null ? {} : basePick(object, paths);
	    });
	
	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      if (object == null) {
	        return {};
	      }
	      var props = arrayMap(getAllKeysIn(object), function(prop) {
	        return [prop];
	      });
	      predicate = getIteratee(predicate);
	      return basePickBy(object, props, function(value, path) {
	        return predicate(value, path[0]);
	      });
	    }
	
	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length;
	
	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        length = 1;
	        object = undefined;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }
	
	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }
	
	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }
	
	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);
	
	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);
	
	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object),
	          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
	
	      iteratee = getIteratee(iteratee, 4);
	      if (accumulator == null) {
	        var Ctor = object && object.constructor;
	        if (isArrLike) {
	          accumulator = isArr ? new Ctor : [];
	        }
	        else if (isObject(object)) {
	          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	        }
	        else {
	          accumulator = {};
	        }
	      }
	      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }
	
	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }
	
	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }
	
	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object == null ? [] : baseValues(object, keys(object));
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }
	
	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }
	
	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });
	
	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }
	
	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }
	
	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);
	
	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);
	
	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }
	
	    /**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }
	
	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');
	
	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }
	
	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }
	
	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }
	
	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
	    }
	
	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }
	
	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);
	
	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }
	
	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }
	
	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });
	
	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = position == null
	        ? 0
	        : baseClamp(toInteger(position), 0, string.length);
	
	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }
	
	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;
	
	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, customDefaultsAssignIn);
	
	      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);
	
	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";
	
	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');
	
	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';
	
	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);
	
	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
	
	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;
	
	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });
	
	      source += "';\n";
	
	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');
	
	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';
	
	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });
	
	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }
	
	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }
	
	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }
	
	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	      return castSlice(strSymbols, start, end).join('');
	    }
	
	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
	
	      return castSlice(strSymbols, 0, end).join('');
	    }
	
	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));
	
	      return castSlice(strSymbols, start).join('');
	    }
	
	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;
	
	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);
	
	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);
	
	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;
	
	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }
	
	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });
	
	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');
	
	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;
	
	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });
	
	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = flatRest(function(object, methodNames) {
	      arrayEach(methodNames, function(key) {
	        key = toKey(key);
	        baseAssignValue(object, key, bind(object[key], object));
	      });
	      return object;
	    });
	
	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs == null ? 0 : pairs.length,
	          toIteratee = getIteratee();
	
	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });
	
	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }
	
	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }
	
	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }
	
	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();
	
	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);
	
	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }
	
	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);
	
	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);
	
	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);
	
	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });
	
	      return object;
	    }
	
	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }
	
	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }
	
	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }
	
	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);
	
	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);
	
	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);
	
	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }
	
	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }
	
	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();
	
	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);
	
	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }
	
	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }
	
	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }
	
	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }
	
	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }
	
	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);
	
	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;
	
	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }
	
	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	    }
	
	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);
	
	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');
	
	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);
	
	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');
	
	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }
	
	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }
	
	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }
	
	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }
	
	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);
	
	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');
	
	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);
	
	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }
	
	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;
	
	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;
	
	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;
	
	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;
	
	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;
	
	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });
	
	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
	
	        var result = (this.__filtered__ && !index)
	          ? new LazyWrapper(this)
	          : this.clone();
	
	        if (result.__filtered__) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };
	
	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });
	
	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
	
	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });
	
	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };
	
	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };
	
	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };
	
	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });
	
	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };
	
	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);
	
	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };
	
	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };
	
	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };
	
	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);
	
	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);
	
	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };
	
	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;
	
	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });
	
	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
	
	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });
	
	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);
	
	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });
	
	    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];
	
	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;
	
	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
	
	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;
	
	    if (symIterator) {
	      lodash.prototype[symIterator] = wrapperToIterator;
	    }
	    return lodash;
	  });
	
	  /*--------------------------------------------------------------------------*/
	
	  // Export lodash.
	  var _ = runInContext();
	
	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;
	
	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(56)(module)))

/***/ }),
/* 56 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var plugins = [{
	  plugin: __webpack_require__(58),
	  options: { "plugins": [] }
	}, {
	  plugin: __webpack_require__(72),
	  options: { "plugins": [], "name": "piyush ka blog", "short_name": "piyush.blog", "start_url": "/", "background_color": "#ffffff", "theme_color": "#ffffff", "display": "standalone", "icons": [{ "src": "/icons/icon-48x48.png", "sizes": "48x48", "type": "image/png" }, { "src": "/icons/icon-96x96.png", "sizes": "96x96", "type": "image/png" }, { "src": "/icons/icon-144x144.png", "sizes": "144x144", "type": "image/png" }, { "src": "/icons/icon-192x192.png", "sizes": "192x192", "type": "image/png" }, { "src": "/icons/icon-256x256.png", "sizes": "256x256", "type": "image/png" }, { "src": "/icons/icon-384x384.png", "sizes": "384x384", "type": "image/png" }, { "src": "/icons/icon-512x512.png", "sizes": "512x512", "type": "image/png" }] }
	}, {
	  plugin: __webpack_require__(161),
	  options: { "plugins": [] }
	}, {
	  plugin: __webpack_require__(167),
	  options: { "plugins": [], "query": "\n          {\n            site {\n              siteMetadata {\n                title\n                description\n                siteUrl\n                site_url: siteUrl\n              }\n            }\n          }\n        ", "feeds": [{ "query": "\n              {\n                allMarkdownRemark(\n                  limit: 1000,\n                  sort: { order: DESC, fields: [fields___prefix] },\n                  filter: { id: { regex: \"//posts//\" } }\n                ) {\n                  edges {\n                    node {\n                      excerpt\n                      html\n                      fields {\n                        slug\n                        prefix\n                      }\n                      frontmatter {\n                        title\n                      }\n                    }\n                  }\n                }\n              }\n            ", "output": "/rss.xml" }] }
	}, {
	  plugin: __webpack_require__(171),
	  options: { "plugins": [] }
	}, {
	  plugin: __webpack_require__(174),
	  options: { "plugins": [] }
	}];
	// During bootstrap, we write requires at top of this file which looks like:
	// var plugins = [
	//   {
	//     plugin: require("/path/to/plugin1/gatsby-ssr.js"),
	//     options: { ... },
	//   },
	//   {
	//     plugin: require("/path/to/plugin2/gatsby-ssr.js"),
	//     options: { ... },
	//   },
	// ]
	
	var apis = __webpack_require__(329);
	
	// Run the specified API in any plugins that have implemented it
	module.exports = function (api, args, defaultReturn) {
	  if (!apis[api]) {
	    console.log('This API doesn\'t exist', api);
	  }
	
	  // Run each plugin in series.
	  var results = plugins.map(function (plugin) {
	    if (plugin.plugin[api]) {
	      var result = plugin.plugin[api](args, plugin.options);
	      return result;
	    }
	  });
	
	  // Filter out undefined results.
	  results = results.filter(function (result) {
	    return typeof result !== 'undefined';
	  });
	
	  if (results.length > 0) {
	    return results;
	  } else {
	    return [defaultReturn];
	  }
	};

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _reactHelmet = __webpack_require__(59);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.onRenderBody = function (_ref, pluginOptions) {
	  var setHeadComponents = _ref.setHeadComponents,
	      setHtmlAttributes = _ref.setHtmlAttributes,
	      setBodyAttributes = _ref.setBodyAttributes;
	
	  var helmet = _reactHelmet2.default.renderStatic();
	  // These action functions were added partway through the Gatsby 1.x cycle.
	  if (setHtmlAttributes) {
	    setHtmlAttributes(helmet.htmlAttributes.toComponent());
	  }
	  if (setBodyAttributes) {
	    setBodyAttributes(helmet.bodyAttributes.toComponent());
	  }
	  setHeadComponents([helmet.title.toComponent(), helmet.link.toComponent(), helmet.meta.toComponent(), helmet.noscript.toComponent(), helmet.script.toComponent(), helmet.style.toComponent()]);
	};

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	exports.Helmet = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactSideEffect = __webpack_require__(60);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _deepEqual = __webpack_require__(67);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _HelmetUtils = __webpack_require__(70);
	
	var _HelmetConstants = __webpack_require__(71);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Helmet = function Helmet(Component) {
	    var _class, _temp;
	
	    return _temp = _class = function (_React$Component) {
	        _inherits(HelmetWrapper, _React$Component);
	
	        function HelmetWrapper() {
	            _classCallCheck(this, HelmetWrapper);
	
	            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	        }
	
	        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	            return !(0, _deepEqual2.default)(this.props, nextProps);
	        };
	
	        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
	            if (!nestedChildren) {
	                return null;
	            }
	
	            switch (child.type) {
	                case _HelmetConstants.TAG_NAMES.SCRIPT:
	                case _HelmetConstants.TAG_NAMES.NOSCRIPT:
	                    return {
	                        innerHTML: nestedChildren
	                    };
	
	                case _HelmetConstants.TAG_NAMES.STYLE:
	                    return {
	                        cssText: nestedChildren
	                    };
	            }
	
	            throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
	        };
	
	        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
	            var _extends2;
	
	            var child = _ref.child,
	                arrayTypeChildren = _ref.arrayTypeChildren,
	                newChildProps = _ref.newChildProps,
	                nestedChildren = _ref.nestedChildren;
	
	            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));
	        };
	
	        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
	            var _extends3, _extends4;
	
	            var child = _ref2.child,
	                newProps = _ref2.newProps,
	                newChildProps = _ref2.newChildProps,
	                nestedChildren = _ref2.nestedChildren;
	
	            switch (child.type) {
	                case _HelmetConstants.TAG_NAMES.TITLE:
	                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));
	
	                case _HelmetConstants.TAG_NAMES.BODY:
	                    return _extends({}, newProps, {
	                        bodyAttributes: _extends({}, newChildProps)
	                    });
	
	                case _HelmetConstants.TAG_NAMES.HTML:
	                    return _extends({}, newProps, {
	                        htmlAttributes: _extends({}, newChildProps)
	                    });
	            }
	
	            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));
	        };
	
	        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
	            var newFlattenedProps = _extends({}, newProps);
	
	            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
	                var _extends5;
	
	                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));
	            });
	
	            return newFlattenedProps;
	        };
	
	        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
	            if (false) {
	                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {
	                    return child.type === name;
	                })) {
	                    if (typeof child.type === "function") {
	                        return (0, _HelmetUtils.warn)("You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.");
	                    }
	
	                    return (0, _HelmetUtils.warn)("Only elements types " + _HelmetConstants.VALID_TAG_NAMES.join(", ") + " are allowed. Helmet does not support rendering <" + child.type + "> elements. Refer to our API for more information.");
	                }
	
	                if (nestedChildren && typeof nestedChildren !== "string" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {
	                    return typeof nestedChild !== "string";
	                }))) {
	                    throw new Error("Helmet expects a string as a child of <" + child.type + ">. Did you forget to wrap your children in braces? ( <" + child.type + ">{``}</" + child.type + "> ) Refer to our API for more information.");
	                }
	            }
	
	            return true;
	        };
	
	        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
	            var _this2 = this;
	
	            var arrayTypeChildren = {};
	
	            _react2.default.Children.forEach(children, function (child) {
	                if (!child || !child.props) {
	                    return;
	                }
	
	                var _child$props = child.props,
	                    nestedChildren = _child$props.children,
	                    childProps = _objectWithoutProperties(_child$props, ["children"]);
	
	                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);
	
	                _this2.warnOnInvalidChildren(child, nestedChildren);
	
	                switch (child.type) {
	                    case _HelmetConstants.TAG_NAMES.LINK:
	                    case _HelmetConstants.TAG_NAMES.META:
	                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:
	                    case _HelmetConstants.TAG_NAMES.SCRIPT:
	                    case _HelmetConstants.TAG_NAMES.STYLE:
	                        arrayTypeChildren = _this2.flattenArrayTypeChildren({
	                            child: child,
	                            arrayTypeChildren: arrayTypeChildren,
	                            newChildProps: newChildProps,
	                            nestedChildren: nestedChildren
	                        });
	                        break;
	
	                    default:
	                        newProps = _this2.mapObjectTypeChildren({
	                            child: child,
	                            newProps: newProps,
	                            newChildProps: newChildProps,
	                            nestedChildren: nestedChildren
	                        });
	                        break;
	                }
	            });
	
	            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
	            return newProps;
	        };
	
	        HelmetWrapper.prototype.render = function render() {
	            var _props = this.props,
	                children = _props.children,
	                props = _objectWithoutProperties(_props, ["children"]);
	
	            var newProps = _extends({}, props);
	
	            if (children) {
	                newProps = this.mapChildrenToProps(children, newProps);
	            }
	
	            return _react2.default.createElement(Component, newProps);
	        };
	
	        _createClass(HelmetWrapper, null, [{
	            key: "canUseDOM",
	
	
	            // Component.peek comes from react-side-effect:
	            // For testing, you may use a static peek() method available on the returned component.
	            // It lets you get the current state without resetting the mounted instance stack.
	            // Don’t use it for anything other than testing.
	
	            /**
	            * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
	            * @param {Object} bodyAttributes: {"className": "root"}
	            * @param {String} defaultTitle: "Default Title"
	            * @param {Boolean} defer: true
	            * @param {Boolean} encodeSpecialCharacters: true
	            * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
	            * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
	            * @param {Array} meta: [{"name": "description", "content": "Test description"}]
	            * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
	            * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
	            * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
	            * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
	            * @param {String} title: "Title"
	            * @param {Object} titleAttributes: {"itemprop": "name"}
	            * @param {String} titleTemplate: "MySite.com - %s"
	            */
	            set: function set(canUseDOM) {
	                Component.canUseDOM = canUseDOM;
	            }
	        }]);
	
	        return HelmetWrapper;
	    }(_react2.default.Component), _class.propTypes = {
	        base: _propTypes2.default.object,
	        bodyAttributes: _propTypes2.default.object,
	        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
	        defaultTitle: _propTypes2.default.string,
	        defer: _propTypes2.default.bool,
	        encodeSpecialCharacters: _propTypes2.default.bool,
	        htmlAttributes: _propTypes2.default.object,
	        link: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        onChangeClientState: _propTypes2.default.func,
	        script: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        style: _propTypes2.default.arrayOf(_propTypes2.default.object),
	        title: _propTypes2.default.string,
	        titleAttributes: _propTypes2.default.object,
	        titleTemplate: _propTypes2.default.string
	    }, _class.defaultProps = {
	        defer: true,
	        encodeSpecialCharacters: true
	    }, _class.peek = Component.peek, _class.rewind = function () {
	        var mappedState = Component.rewind();
	        if (!mappedState) {
	            // provide fallback if mappedState is undefined
	            mappedState = (0, _HelmetUtils.mapStateOnServer)({
	                baseTag: [],
	                bodyAttributes: {},
	                encodeSpecialCharacters: true,
	                htmlAttributes: {},
	                linkTags: [],
	                metaTags: [],
	                noscriptTags: [],
	                scriptTags: [],
	                styleTags: [],
	                title: "",
	                titleAttributes: {}
	            });
	        }
	
	        return mappedState;
	    }, _temp;
	};
	
	var NullComponent = function NullComponent() {
	    return null;
	};
	
	var HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);
	
	var HelmetExport = Helmet(HelmetSideEffects);
	HelmetExport.renderStatic = HelmetExport.rewind;
	
	exports.Helmet = HelmetExport;
	exports.default = HelmetExport;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _exenv = __webpack_require__(61);
	
	var _exenv2 = _interopRequireDefault(_exenv);
	
	var _shallowequal = __webpack_require__(62);
	
	var _shallowequal2 = _interopRequireDefault(_shallowequal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	module.exports = function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
	  if (typeof reducePropsToState !== 'function') {
	    throw new Error('Expected reducePropsToState to be a function.');
	  }
	  if (typeof handleStateChangeOnClient !== 'function') {
	    throw new Error('Expected handleStateChangeOnClient to be a function.');
	  }
	  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
	    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
	  }
	
	  function getDisplayName(WrappedComponent) {
	    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	  }
	
	  return function wrap(WrappedComponent) {
	    if (typeof WrappedComponent !== 'function') {
	      throw new Error('Expected WrappedComponent to be a React component.');
	    }
	
	    var mountedInstances = [];
	    var state = void 0;
	
	    function emitChange() {
	      state = reducePropsToState(mountedInstances.map(function (instance) {
	        return instance.props;
	      }));
	
	      if (SideEffect.canUseDOM) {
	        handleStateChangeOnClient(state);
	      } else if (mapStateOnServer) {
	        state = mapStateOnServer(state);
	      }
	    }
	
	    var SideEffect = function (_Component) {
	      _inherits(SideEffect, _Component);
	
	      function SideEffect() {
	        _classCallCheck(this, SideEffect);
	
	        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	      }
	
	      // Try to use displayName of wrapped component
	      SideEffect.peek = function peek() {
	        return state;
	      };
	
	      // Expose canUseDOM so tests can monkeypatch it
	
	
	      SideEffect.rewind = function rewind() {
	        if (SideEffect.canUseDOM) {
	          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
	        }
	
	        var recordedState = state;
	        state = undefined;
	        mountedInstances = [];
	        return recordedState;
	      };
	
	      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return !(0, _shallowequal2.default)(nextProps, this.props);
	      };
	
	      SideEffect.prototype.componentWillMount = function componentWillMount() {
	        mountedInstances.push(this);
	        emitChange();
	      };
	
	      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {
	        emitChange();
	      };
	
	      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {
	        var index = mountedInstances.indexOf(this);
	        mountedInstances.splice(index, 1);
	        emitChange();
	      };
	
	      SideEffect.prototype.render = function render() {
	        return _react2.default.createElement(WrappedComponent, this.props);
	      };
	
	      return SideEffect;
	    }(_react.Component);
	
	    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';
	    SideEffect.canUseDOM = _exenv2.default.canUseDOM;
	
	
	    return SideEffect;
	  };
	};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);
	
		var ExecutionEnvironment = {
	
			canUseDOM: canUseDOM,
	
			canUseWorkers: typeof Worker !== 'undefined',
	
			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),
	
			canUseViewport: canUseDOM && !!window.screen
	
		};
	
		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}
	
	}());


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var fetchKeys = __webpack_require__(63);
	
	module.exports = function shallowEqual(objA, objB, compare, compareContext) {
	
	    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
	
	    if (ret !== void 0) {
	        return !!ret;
	    }
	
	    if (objA === objB) {
	        return true;
	    }
	
	    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	        return false;
	    }
	
	    var keysA = fetchKeys(objA);
	    var keysB = fetchKeys(objB);
	
	    var len = keysA.length;
	    if (len !== keysB.length) {
	        return false;
	    }
	
	    compareContext = compareContext || null;
	
	    // Test for A's keys different from B.
	    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	    for (var i = 0; i < len; i++) {
	        var key = keysA[i];
	        if (!bHasOwnProperty(key)) {
	            return false;
	        }
	        var valueA = objA[key];
	        var valueB = objB[key];
	
	        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
	        if (_ret === false || _ret === void 0 && valueA !== valueB) {
	            return false;
	        }
	    }
	
	    return true;
	};

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * lodash 3.1.2 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	var getNative = __webpack_require__(64),
	    isArguments = __webpack_require__(65),
	    isArray = __webpack_require__(66);
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^\d+$/;
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeKeys = getNative(Object, 'keys');
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	/**
	 * Checks if `value` is array-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value));
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * A fallback implementation of `Object.keys` which creates an array of the
	 * own enumerable property names of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function shimKeys(object) {
	  var props = keysIn(object),
	      propsLength = props.length,
	      length = propsLength && object.length;
	
	  var allowIndexes = !!length && isLength(length) &&
	    (isArray(object) || isArguments(object));
	
	  var index = -1,
	      result = [];
	
	  while (++index < propsLength) {
	    var key = props[index];
	    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	var keys = !nativeKeys ? shimKeys : function(object) {
	  var Ctor = object == null ? undefined : object.constructor;
	  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
	      (typeof object != 'function' && isArrayLike(object))) {
	    return shimKeys(object);
	  }
	  return isObject(object) ? nativeKeys(object) : [];
	};
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  if (object == null) {
	    return [];
	  }
	  if (!isObject(object)) {
	    object = Object(object);
	  }
	  var length = object.length;
	  length = (length && isLength(length) &&
	    (isArray(object) || isArguments(object)) && length) || 0;
	
	  var Ctor = object.constructor,
	      index = -1,
	      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	      result = Array(length),
	      skipIndexes = length > 0;
	
	  while (++index < length) {
	    result[index] = (index + '');
	  }
	  for (var key in object) {
	    if (!(skipIndexes && isIndex(key, length)) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ }),
/* 64 */
/***/ (function(module, exports) {

	/**
	 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]';
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 equivalents which return 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = getNative;


/***/ }),
/* 65 */
/***/ (function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isArguments;


/***/ }),
/* 66 */
/***/ (function(module, exports) {

	/**
	 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	
	/** `Object#toString` result references. */
	var arrayTag = '[object Array]',
	    funcTag = '[object Function]';
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeIsArray = getNative(Array, 'isArray');
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(function() { return arguments; }());
	 * // => false
	 */
	var isArray = nativeIsArray || function(value) {
	  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	};
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 equivalents which return 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = isArray;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(68);
	var isArguments = __webpack_require__(69);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ }),
/* 68 */
/***/ (function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ }),
/* 69 */
/***/ (function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	exports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _objectAssign = __webpack_require__(3);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _HelmetConstants = __webpack_require__(71);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
	    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	    if (encode === false) {
	        return String(str);
	    }
	
	    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
	};
	
	var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
	    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);
	    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);
	
	    if (innermostTemplate && innermostTitle) {
	        // use function arg to avoid need to escape $ characters
	        return innermostTemplate.replace(/%s/g, function () {
	            return innermostTitle;
	        });
	    }
	
	    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);
	
	    return innermostTitle || innermostDefaultTitle || undefined;
	};
	
	var getOnChangeClientState = function getOnChangeClientState(propsList) {
	    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
	};
	
	var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[tagType] !== "undefined";
	    }).map(function (props) {
	        return props[tagType];
	    }).reduce(function (tagAttrs, current) {
	        return _extends({}, tagAttrs, current);
	    }, {});
	};
	
	var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== "undefined";
	    }).map(function (props) {
	        return props[_HelmetConstants.TAG_NAMES.BASE];
	    }).reverse().reduce(function (innermostBaseTag, tag) {
	        if (!innermostBaseTag.length) {
	            var keys = Object.keys(tag);
	
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
	                    return innermostBaseTag.concat(tag);
	                }
	            }
	        }
	
	        return innermostBaseTag;
	    }, []);
	};
	
	var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
	    // Calculate list of tags, giving priority innermost component (end of the propslist)
	    var approvedSeenTags = {};
	
	    return propsList.filter(function (props) {
	        if (Array.isArray(props[tagName])) {
	            return true;
	        }
	        if (typeof props[tagName] !== "undefined") {
	            warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
	        }
	        return false;
	    }).map(function (props) {
	        return props[tagName];
	    }).reverse().reduce(function (approvedTags, instanceTags) {
	        var instanceSeenTags = {};
	
	        instanceTags.filter(function (tag) {
	            var primaryAttributeKey = void 0;
	            var keys = Object.keys(tag);
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
	                    primaryAttributeKey = lowerCaseAttributeKey;
	                }
	                // Special case for innerHTML which doesn't work lowercased
	                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {
	                    primaryAttributeKey = attributeKey;
	                }
	            }
	
	            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
	                return false;
	            }
	
	            var value = tag[primaryAttributeKey].toLowerCase();
	
	            if (!approvedSeenTags[primaryAttributeKey]) {
	                approvedSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!instanceSeenTags[primaryAttributeKey]) {
	                instanceSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!approvedSeenTags[primaryAttributeKey][value]) {
	                instanceSeenTags[primaryAttributeKey][value] = true;
	                return true;
	            }
	
	            return false;
	        }).reverse().forEach(function (tag) {
	            return approvedTags.push(tag);
	        });
	
	        // Update seen tags with tags from this instance
	        var keys = Object.keys(instanceSeenTags);
	        for (var i = 0; i < keys.length; i++) {
	            var attributeKey = keys[i];
	            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
	
	            approvedSeenTags[attributeKey] = tagUnion;
	        }
	
	        return approvedTags;
	    }, []).reverse();
	};
	
	var getInnermostProperty = function getInnermostProperty(propsList, property) {
	    for (var i = propsList.length - 1; i >= 0; i--) {
	        var props = propsList[i];
	
	        if (props.hasOwnProperty(property)) {
	            return props[property];
	        }
	    }
	
	    return null;
	};
	
	var reducePropsToState = function reducePropsToState(propsList) {
	    return {
	        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),
	        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),
	        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
	        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),
	        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),
	        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        onChangeClientState: getOnChangeClientState(propsList),
	        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),
	        title: getTitleFromPropsList(propsList),
	        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)
	    };
	};
	
	var rafPolyfill = function () {
	    var clock = Date.now();
	
	    return function (callback) {
	        var currentTime = Date.now();
	
	        if (currentTime - clock > 16) {
	            clock = currentTime;
	            callback(currentTime);
	        } else {
	            setTimeout(function () {
	                rafPolyfill(callback);
	            }, 0);
	        }
	    };
	}();
	
	var cafPolyfill = function cafPolyfill(id) {
	    return clearTimeout(id);
	};
	
	var requestAnimationFrame = typeof window !== "undefined" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;
	
	var cancelAnimationFrame = typeof window !== "undefined" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;
	
	var warn = function warn(msg) {
	    return console && typeof console.warn === "function" && console.warn(msg);
	};
	
	var _helmetCallback = null;
	
	var handleClientStateChange = function handleClientStateChange(newState) {
	    if (_helmetCallback) {
	        cancelAnimationFrame(_helmetCallback);
	    }
	
	    if (newState.defer) {
	        _helmetCallback = requestAnimationFrame(function () {
	            commitTagChanges(newState, function () {
	                _helmetCallback = null;
	            });
	        });
	    } else {
	        commitTagChanges(newState);
	        _helmetCallback = null;
	    }
	};
	
	var commitTagChanges = function commitTagChanges(newState, cb) {
	    var baseTag = newState.baseTag,
	        bodyAttributes = newState.bodyAttributes,
	        htmlAttributes = newState.htmlAttributes,
	        linkTags = newState.linkTags,
	        metaTags = newState.metaTags,
	        noscriptTags = newState.noscriptTags,
	        onChangeClientState = newState.onChangeClientState,
	        scriptTags = newState.scriptTags,
	        styleTags = newState.styleTags,
	        title = newState.title,
	        titleAttributes = newState.titleAttributes;
	
	    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);
	    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);
	
	    updateTitle(title, titleAttributes);
	
	    var tagUpdates = {
	        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
	        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
	        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
	        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
	        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
	        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
	    };
	
	    var addedTags = {};
	    var removedTags = {};
	
	    Object.keys(tagUpdates).forEach(function (tagType) {
	        var _tagUpdates$tagType = tagUpdates[tagType],
	            newTags = _tagUpdates$tagType.newTags,
	            oldTags = _tagUpdates$tagType.oldTags;
	
	
	        if (newTags.length) {
	            addedTags[tagType] = newTags;
	        }
	        if (oldTags.length) {
	            removedTags[tagType] = tagUpdates[tagType].oldTags;
	        }
	    });
	
	    cb && cb();
	
	    onChangeClientState(newState, addedTags, removedTags);
	};
	
	var flattenArray = function flattenArray(possibleArray) {
	    return Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;
	};
	
	var updateTitle = function updateTitle(title, attributes) {
	    if (typeof title !== "undefined" && document.title !== title) {
	        document.title = flattenArray(title);
	    }
	
	    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
	};
	
	var updateAttributes = function updateAttributes(tagName, attributes) {
	    var elementTag = document.getElementsByTagName(tagName)[0];
	
	    if (!elementTag) {
	        return;
	    }
	
	    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
	    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
	    var attributesToRemove = [].concat(helmetAttributes);
	    var attributeKeys = Object.keys(attributes);
	
	    for (var i = 0; i < attributeKeys.length; i++) {
	        var attribute = attributeKeys[i];
	        var value = attributes[attribute] || "";
	
	        if (elementTag.getAttribute(attribute) !== value) {
	            elementTag.setAttribute(attribute, value);
	        }
	
	        if (helmetAttributes.indexOf(attribute) === -1) {
	            helmetAttributes.push(attribute);
	        }
	
	        var indexToSave = attributesToRemove.indexOf(attribute);
	        if (indexToSave !== -1) {
	            attributesToRemove.splice(indexToSave, 1);
	        }
	    }
	
	    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
	        elementTag.removeAttribute(attributesToRemove[_i]);
	    }
	
	    if (helmetAttributes.length === attributesToRemove.length) {
	        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
	    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
	        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(","));
	    }
	};
	
	var updateTags = function updateTags(type, tags) {
	    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);
	    var tagNodes = headElement.querySelectorAll(type + "[" + _HelmetConstants.HELMET_ATTRIBUTE + "]");
	    var oldTags = Array.prototype.slice.call(tagNodes);
	    var newTags = [];
	    var indexToDelete = void 0;
	
	    if (tags && tags.length) {
	        tags.forEach(function (tag) {
	            var newElement = document.createElement(type);
	
	            for (var attribute in tag) {
	                if (tag.hasOwnProperty(attribute)) {
	                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {
	                        newElement.innerHTML = tag.innerHTML;
	                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
	                        if (newElement.styleSheet) {
	                            newElement.styleSheet.cssText = tag.cssText;
	                        } else {
	                            newElement.appendChild(document.createTextNode(tag.cssText));
	                        }
	                    } else {
	                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
	                        newElement.setAttribute(attribute, value);
	                    }
	                }
	            }
	
	            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, "true");
	
	            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
	            if (oldTags.some(function (existingTag, index) {
	                indexToDelete = index;
	                return newElement.isEqualNode(existingTag);
	            })) {
	                oldTags.splice(indexToDelete, 1);
	            } else {
	                newTags.push(newElement);
	            }
	        });
	    }
	
	    oldTags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	    });
	    newTags.forEach(function (tag) {
	        return headElement.appendChild(tag);
	    });
	
	    return {
	        oldTags: oldTags,
	        newTags: newTags
	    };
	};
	
	var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
	    return Object.keys(attributes).reduce(function (str, key) {
	        var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
	        return str ? str + " " + attr : attr;
	    }, "");
	};
	
	var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
	    var attributeString = generateElementAttributesAsString(attributes);
	    var flattenedTitle = flattenArray(title);
	    return attributeString ? "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">" : "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">";
	};
	
	var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
	    return tags.reduce(function (str, tag) {
	        var attributeHtml = Object.keys(tag).filter(function (attribute) {
	            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);
	        }).reduce(function (string, attribute) {
	            var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
	            return string ? string + " " + attr : attr;
	        }, "");
	
	        var tagContent = tag.innerHTML || tag.cssText || "";
	
	        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;
	
	        return str + "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
	    }, "");
	};
	
	var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
	    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.keys(attributes).reduce(function (obj, key) {
	        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
	        return obj;
	    }, initProps);
	};
	
	var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
	    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.keys(props).reduce(function (obj, key) {
	        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];
	        return obj;
	    }, initAttributes);
	};
	
	var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
	    var _initProps;
	
	    // assigning into an array to define toString function on it
	    var initProps = (_initProps = {
	        key: title
	    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);
	    var props = convertElementAttributestoReactProps(attributes, initProps);
	
	    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];
	};
	
	var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
	    return tags.map(function (tag, i) {
	        var _mappedTag;
	
	        var mappedTag = (_mappedTag = {
	            key: i
	        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);
	
	        Object.keys(tag).forEach(function (attribute) {
	            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;
	
	            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
	                var content = tag.innerHTML || tag.cssText;
	                mappedTag.dangerouslySetInnerHTML = { __html: content };
	            } else {
	                mappedTag[mappedAttribute] = tag[attribute];
	            }
	        });
	
	        return _react2.default.createElement(type, mappedTag);
	    });
	};
	
	var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
	    switch (type) {
	        case _HelmetConstants.TAG_NAMES.TITLE:
	            return {
	                toComponent: function toComponent() {
	                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
	                },
	                toString: function toString() {
	                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
	                }
	            };
	        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:
	        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:
	            return {
	                toComponent: function toComponent() {
	                    return convertElementAttributestoReactProps(tags);
	                },
	                toString: function toString() {
	                    return generateElementAttributesAsString(tags);
	                }
	            };
	        default:
	            return {
	                toComponent: function toComponent() {
	                    return generateTagsAsReactComponent(type, tags);
	                },
	                toString: function toString() {
	                    return generateTagsAsString(type, tags, encode);
	                }
	            };
	    }
	};
	
	var mapStateOnServer = function mapStateOnServer(_ref) {
	    var baseTag = _ref.baseTag,
	        bodyAttributes = _ref.bodyAttributes,
	        encode = _ref.encode,
	        htmlAttributes = _ref.htmlAttributes,
	        linkTags = _ref.linkTags,
	        metaTags = _ref.metaTags,
	        noscriptTags = _ref.noscriptTags,
	        scriptTags = _ref.scriptTags,
	        styleTags = _ref.styleTags,
	        _ref$title = _ref.title,
	        title = _ref$title === undefined ? "" : _ref$title,
	        titleAttributes = _ref.titleAttributes;
	    return {
	        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),
	        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
	        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
	        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),
	        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),
	        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),
	        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),
	        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),
	        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)
	    };
	};
	
	exports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;
	exports.handleClientStateChange = handleClientStateChange;
	exports.mapStateOnServer = mapStateOnServer;
	exports.reducePropsToState = reducePropsToState;
	exports.requestAnimationFrame = requestAnimationFrame;
	exports.warn = warn;

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	exports.__esModule = true;
	var ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {
	    BODY: "bodyAttributes",
	    HTML: "htmlAttributes",
	    TITLE: "titleAttributes"
	};
	
	var TAG_NAMES = exports.TAG_NAMES = {
	    BASE: "base",
	    BODY: "body",
	    HEAD: "head",
	    HTML: "html",
	    LINK: "link",
	    META: "meta",
	    NOSCRIPT: "noscript",
	    SCRIPT: "script",
	    STYLE: "style",
	    TITLE: "title"
	};
	
	var VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
	    return TAG_NAMES[name];
	});
	
	var TAG_PROPERTIES = exports.TAG_PROPERTIES = {
	    CHARSET: "charset",
	    CSS_TEXT: "cssText",
	    HREF: "href",
	    HTTPEQUIV: "http-equiv",
	    INNER_HTML: "innerHTML",
	    ITEM_PROP: "itemprop",
	    NAME: "name",
	    PROPERTY: "property",
	    REL: "rel",
	    SRC: "src"
	};
	
	var REACT_TAG_MAP = exports.REACT_TAG_MAP = {
	    accesskey: "accessKey",
	    charset: "charSet",
	    class: "className",
	    contenteditable: "contentEditable",
	    contextmenu: "contextMenu",
	    "http-equiv": "httpEquiv",
	    itemprop: "itemProp",
	    tabindex: "tabIndex"
	};
	
	var HELMET_PROPS = exports.HELMET_PROPS = {
	    DEFAULT_TITLE: "defaultTitle",
	    DEFER: "defer",
	    ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
	    ON_CHANGE_CLIENT_STATE: "onChangeClientState",
	    TITLE_TEMPLATE: "titleTemplate"
	};
	
	var HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
	    obj[REACT_TAG_MAP[key]] = key;
	    return obj;
	}, {});
	
	var SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];
	
	var HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = "data-react-helmet";

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(73);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.onRenderBody = function (_ref, pluginOptions) {
	  var setHeadComponents = _ref.setHeadComponents;
	
	  setHeadComponents([_react2.default.createElement("link", {
	    key: "gatsby-plugin-manifest-link",
	    rel: "manifest",
	    href: (0, _gatsbyLink.withPrefix)("/manifest.webmanifest")
	  }), _react2.default.createElement("meta", {
	    key: "gatsby-plugin-manifest-meta",
	    name: "theme-color",
	    content: pluginOptions.theme_color
	  })]);
	};

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.navigateTo = exports.replace = exports.push = undefined;
	
	var _extends2 = __webpack_require__(74);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _keys = __webpack_require__(112);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _objectWithoutProperties2 = __webpack_require__(116);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(117);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(118);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(153);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports.withPrefix = withPrefix;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(14);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _history = __webpack_require__(46);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*global __PREFIX_PATHS__, __PATH_PREFIX__ */
	var pathPrefix = "/";
	if (false) {
	  pathPrefix = __PATH_PREFIX__;
	}
	
	function withPrefix(path) {
	  return normalizePath(pathPrefix + path);
	}
	
	function normalizePath(path) {
	  return path.replace(/^\/\//g, "/");
	}
	
	function createLocation(path, history) {
	  var location = (0, _history.createLocation)(path, null, null, history.location);
	  location.pathname = withPrefix(location.pathname);
	  return location;
	}
	
	var NavLinkPropTypes = {
	  activeClassName: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  isActive: _propTypes2.default.func,
	  location: _propTypes2.default.object
	
	  // Set up IntersectionObserver
	};var handleIntersection = function handleIntersection(el, cb) {
	  var io = new window.IntersectionObserver(function (entries) {
	    entries.forEach(function (entry) {
	      if (el === entry.target) {
	        // Check if element is within viewport, remove listener, destroy observer, and run link callback.
	        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0
	        if (entry.isIntersecting || entry.intersectionRatio > 0) {
	          io.unobserve(el);
	          io.disconnect();
	          cb();
	        }
	      }
	    });
	  });
	  // Add element to the observer
	  io.observe(el);
	};
	
	/* eslint-disable react/no-deprecated */
	
	var GatsbyLink = function (_React$Component) {
	  (0, _inherits3.default)(GatsbyLink, _React$Component);
	
	  function GatsbyLink(props, context) {
	    (0, _classCallCheck3.default)(this, GatsbyLink);
	
	    // Default to no support for IntersectionObserver
	    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));
	
	    var IOSupported = false;
	    if (typeof window !== "undefined" && window.IntersectionObserver) {
	      IOSupported = true;
	    }
	
	    var history = context.router.history;
	
	    var to = createLocation(props.to, history);
	
	    _this.state = {
	      path: (0, _history.createPath)(to),
	      to: to,
	      IOSupported: IOSupported
	    };
	    _this.handleRef = _this.handleRef.bind(_this);
	    return _this;
	  }
	
	  GatsbyLink.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.to !== nextProps.to) {
	      var to = createLocation(nextProps.to, history);
	      this.setState({
	        path: (0, _history.createPath)(to),
	        to: to
	      });
	      // Preserve non IO functionality if no support
	      if (!this.state.IOSupported) {
	        ___loader.enqueue(this.state.to.pathname);
	      }
	    }
	  };
	
	  GatsbyLink.prototype.componentDidMount = function componentDidMount() {
	    // Preserve non IO functionality if no support
	    if (!this.state.IOSupported) {
	      ___loader.enqueue(this.state.to.pathname);
	    }
	  };
	
	  GatsbyLink.prototype.handleRef = function handleRef(ref) {
	    var _this2 = this;
	
	    this.props.innerRef && this.props.innerRef(ref);
	
	    if (this.state.IOSupported && ref) {
	      // If IO supported and element reference found, setup Observer functionality
	      handleIntersection(ref, function () {
	        ___loader.enqueue(_this2.state.to.pathname);
	      });
	    }
	  };
	
	  GatsbyLink.prototype.render = function render() {
	    var _this3 = this;
	
	    var _props = this.props,
	        _onClick = _props.onClick,
	        rest = (0, _objectWithoutProperties3.default)(_props, ["onClick"]);
	
	    var El = void 0;
	    if ((0, _keys2.default)(NavLinkPropTypes).some(function (propName) {
	      return _this3.props[propName];
	    })) {
	      El = _reactRouterDom.NavLink;
	    } else {
	      El = _reactRouterDom.Link;
	    }
	
	    return _react2.default.createElement(El, (0, _extends3.default)({
	      onClick: function onClick(e) {
	        // eslint-disable-line
	        _onClick && _onClick(e);
	
	        if (e.button === 0 && // ignore right clicks
	        !_this3.props.target && // let browser handle "target=_blank"
	        !e.defaultPrevented && // onClick prevented default
	        !e.metaKey && // ignore clicks with modifier keys...
	        !e.altKey && !e.ctrlKey && !e.shiftKey) {
	          // Is this link pointing to a hash on the same page? If so,
	          // just scroll there.
	          var pathname = _this3.state.path;
	          if (pathname.split("#").length > 1) {
	            pathname = pathname.split("#").slice(0, -1).join("");
	          }
	          if (pathname === window.location.pathname) {
	            var hashFragment = _this3.state.path.split("#").slice(1).join("#");
	            var element = document.getElementById(hashFragment);
	            if (element !== null) {
	              element.scrollIntoView();
	              return true;
	            } else {
	              // This is just a normal link to the current page so let's emulate default
	              // browser behavior by scrolling now to the top of the page.
	              window.scrollTo(0, 0);
	              return true;
	            }
	          }
	
	          // In production, make sure the necessary scripts are
	          // loaded before continuing.
	          if (true) {
	            e.preventDefault();
	            window.___push(_this3.state.to);
	          }
	        }
	
	        return true;
	      }
	    }, rest, {
	      to: this.state.to,
	      innerRef: this.handleRef
	    }));
	  };
	
	  return GatsbyLink;
	}(_react2.default.Component);
	/* eslint-enable */
	
	GatsbyLink.propTypes = (0, _extends3.default)({}, NavLinkPropTypes, {
	  innerRef: _propTypes2.default.func,
	  onClick: _propTypes2.default.func,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	});
	
	GatsbyLink.contextTypes = {
	  router: _propTypes2.default.object
	};
	
	exports.default = GatsbyLink;
	var push = exports.push = function push(to) {
	  window.___push(to);
	};
	
	var replace = exports.replace = function replace(to) {
	  window.___replace(to);
	};
	
	var navigateTo = exports.navigateTo = push;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(75);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(76), __esModule: true };

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(77);
	module.exports = __webpack_require__(80).Object.assign;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(78);
	
	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(93) });


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(79);
	var core = __webpack_require__(80);
	var ctx = __webpack_require__(81);
	var hide = __webpack_require__(83);
	var PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && key in exports) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 79 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 80 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.3' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(82);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 82 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(84);
	var createDesc = __webpack_require__(92);
	module.exports = __webpack_require__(88) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(85);
	var IE8_DOM_DEFINE = __webpack_require__(87);
	var toPrimitive = __webpack_require__(91);
	var dP = Object.defineProperty;
	
	exports.f = __webpack_require__(88) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(86);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 86 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(88) && !__webpack_require__(89)(function () {
	  return Object.defineProperty(__webpack_require__(90)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(89)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 89 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(86);
	var document = __webpack_require__(79).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(86);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 92 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(94);
	var gOPS = __webpack_require__(109);
	var pIE = __webpack_require__(110);
	var toObject = __webpack_require__(111);
	var IObject = __webpack_require__(98);
	var $assign = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(89)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(95);
	var enumBugKeys = __webpack_require__(108);
	
	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(96);
	var toIObject = __webpack_require__(97);
	var arrayIndexOf = __webpack_require__(101)(false);
	var IE_PROTO = __webpack_require__(105)('IE_PROTO');
	
	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 96 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(98);
	var defined = __webpack_require__(100);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(99);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 99 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 100 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(97);
	var toLength = __webpack_require__(102);
	var toAbsoluteIndex = __webpack_require__(104);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(103);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 103 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(103);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(106)('keys');
	var uid = __webpack_require__(107);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(79);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ }),
/* 107 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 108 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 109 */
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 110 */
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(100);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(113), __esModule: true };

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(114);
	module.exports = __webpack_require__(80).Object.keys;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(111);
	var $keys = __webpack_require__(94);
	
	__webpack_require__(115)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(78);
	var core = __webpack_require__(80);
	var fails = __webpack_require__(89);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 116 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (obj, keys) {
	  var target = {};
	
	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }
	
	  return target;
	};

/***/ }),
/* 117 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(119);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(120);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(140);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(121), __esModule: true };

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(122);
	__webpack_require__(135);
	module.exports = __webpack_require__(139).f('iterator');


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(123)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(124)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(103);
	var defined = __webpack_require__(100);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(125);
	var $export = __webpack_require__(78);
	var redefine = __webpack_require__(126);
	var hide = __webpack_require__(83);
	var has = __webpack_require__(96);
	var Iterators = __webpack_require__(127);
	var $iterCreate = __webpack_require__(128);
	var setToStringTag = __webpack_require__(132);
	var getPrototypeOf = __webpack_require__(134);
	var ITERATOR = __webpack_require__(133)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';
	
	var returnThis = function () { return this; };
	
	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = (!BUGGY && $native) || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 125 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(83);


/***/ }),
/* 127 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(129);
	var descriptor = __webpack_require__(92);
	var setToStringTag = __webpack_require__(132);
	var IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(83)(IteratorPrototype, __webpack_require__(133)('iterator'), function () { return this; });
	
	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(85);
	var dPs = __webpack_require__(130);
	var enumBugKeys = __webpack_require__(108);
	var IE_PROTO = __webpack_require__(105)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(90)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(131).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(84);
	var anObject = __webpack_require__(85);
	var getKeys = __webpack_require__(94);
	
	module.exports = __webpack_require__(88) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(79).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(84).f;
	var has = __webpack_require__(96);
	var TAG = __webpack_require__(133)('toStringTag');
	
	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(106)('wks');
	var uid = __webpack_require__(107);
	var Symbol = __webpack_require__(79).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(96);
	var toObject = __webpack_require__(111);
	var IE_PROTO = __webpack_require__(105)('IE_PROTO');
	var ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(136);
	var global = __webpack_require__(79);
	var hide = __webpack_require__(83);
	var Iterators = __webpack_require__(127);
	var TO_STRING_TAG = __webpack_require__(133)('toStringTag');
	
	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');
	
	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(137);
	var step = __webpack_require__(138);
	var Iterators = __webpack_require__(127);
	var toIObject = __webpack_require__(97);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(124)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 137 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 138 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(133);


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(141), __esModule: true };

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(142);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	module.exports = __webpack_require__(80).Symbol;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(79);
	var has = __webpack_require__(96);
	var DESCRIPTORS = __webpack_require__(88);
	var $export = __webpack_require__(78);
	var redefine = __webpack_require__(126);
	var META = __webpack_require__(143).KEY;
	var $fails = __webpack_require__(89);
	var shared = __webpack_require__(106);
	var setToStringTag = __webpack_require__(132);
	var uid = __webpack_require__(107);
	var wks = __webpack_require__(133);
	var wksExt = __webpack_require__(139);
	var wksDefine = __webpack_require__(144);
	var enumKeys = __webpack_require__(145);
	var isArray = __webpack_require__(146);
	var anObject = __webpack_require__(85);
	var isObject = __webpack_require__(86);
	var toIObject = __webpack_require__(97);
	var toPrimitive = __webpack_require__(91);
	var createDesc = __webpack_require__(92);
	var _create = __webpack_require__(129);
	var gOPNExt = __webpack_require__(147);
	var $GOPD = __webpack_require__(149);
	var $DP = __webpack_require__(84);
	var $keys = __webpack_require__(94);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(148).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(110).f = $propertyIsEnumerable;
	  __webpack_require__(109).f = $getOwnPropertySymbols;
	
	  if (DESCRIPTORS && !__webpack_require__(125)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
	
	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
	
	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    $replacer = replacer = args[1];
	    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    if (!isArray(replacer)) replacer = function (key, value) {
	      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(83)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(107)('meta');
	var isObject = __webpack_require__(86);
	var has = __webpack_require__(96);
	var setDesc = __webpack_require__(84).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(89)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(79);
	var core = __webpack_require__(80);
	var LIBRARY = __webpack_require__(125);
	var wksExt = __webpack_require__(139);
	var defineProperty = __webpack_require__(84).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(94);
	var gOPS = __webpack_require__(109);
	var pIE = __webpack_require__(110);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(99);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(97);
	var gOPN = __webpack_require__(148).f;
	var toString = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(95);
	var hiddenKeys = __webpack_require__(108).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(110);
	var createDesc = __webpack_require__(92);
	var toIObject = __webpack_require__(97);
	var toPrimitive = __webpack_require__(91);
	var has = __webpack_require__(96);
	var IE8_DOM_DEFINE = __webpack_require__(87);
	var gOPD = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(88) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 150 */
/***/ (function(module, exports) {



/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(144)('asyncIterator');


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(144)('observable');


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(154);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(158);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(119);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(155), __esModule: true };

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(156);
	module.exports = __webpack_require__(80).Object.setPrototypeOf;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(78);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(157).set });


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(86);
	var anObject = __webpack_require__(85);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(81)(Function.call, __webpack_require__(149).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(159), __esModule: true };

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(160);
	var $Object = __webpack_require__(80).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(78);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(129) });


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.onRenderBody = function (_ref, pluginOptions) {
	  var setHeadComponents = _ref.setHeadComponents,
	      setPostBodyComponents = _ref.setPostBodyComponents;
	
	  if (true) {
	    var excludeGAPaths = [];
	    if (typeof pluginOptions.exclude !== "undefined") {
	      var Minimatch = __webpack_require__(162).Minimatch;
	      pluginOptions.exclude.map(function (exclude) {
	        var mm = new Minimatch(exclude);
	        excludeGAPaths.push(mm.makeRe());
	      });
	    }
	    var setComponents = pluginOptions.head ? setHeadComponents : setPostBodyComponents;
	    return setComponents([_react2.default.createElement("script", {
	      key: "gatsby-plugin-google-analytics",
	      dangerouslySetInnerHTML: {
	        __html: "\n  " + (excludeGAPaths.length ? "window.excludeGAPaths=[" + excludeGAPaths.join(",") + "];" : "") + "          \n  " + (typeof pluginOptions.anonymize !== "undefined" ? "function gaOptout(){document.cookie=disableStr+'=true; expires=Thu, 31 Dec 2099 23:59:59 UTC;path=/',window[disableStr]=!0}var gaProperty='" + pluginOptions.trackingId + "',disableStr='ga-disable-'+gaProperty;document.cookie.indexOf(disableStr+'=true')>-1&&(window[disableStr]=!0);" : "") + "\n  if(" + (typeof pluginOptions.respectDNT !== "undefined" && pluginOptions.respectDNT == true ? "!(navigator.doNotTrack == \"1\" || window.doNotTrack == \"1\")" : "true") + ") {\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  }\n  if (typeof ga === \"function\") {\n    ga('create', '" + pluginOptions.trackingId + "', 'auto');\n      " + (typeof pluginOptions.anonymize !== "undefined" ? "ga('set', 'anonymizeIp', 1);" : "") + "}\n      "
	      }
	    })]);
	  }
	
	  return null;
	};

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = minimatch
	minimatch.Minimatch = Minimatch
	
	var path = { sep: '/' }
	try {
	  path = __webpack_require__(163)
	} catch (er) {}
	
	var GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}
	var expand = __webpack_require__(164)
	
	var plTypes = {
	  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},
	  '?': { open: '(?:', close: ')?' },
	  '+': { open: '(?:', close: ')+' },
	  '*': { open: '(?:', close: ')*' },
	  '@': { open: '(?:', close: ')' }
	}
	
	// any single thing other than /
	// don't need to escape / when using new RegExp()
	var qmark = '[^/]'
	
	// * => any number of characters
	var star = qmark + '*?'
	
	// ** when dots are allowed.  Anything goes, except .. and .
	// not (^ or / followed by one or two dots followed by $ or /),
	// followed by anything, any number of times.
	var twoStarDot = '(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'
	
	// not a ^ or / followed by a dot,
	// followed by anything, any number of times.
	var twoStarNoDot = '(?:(?!(?:\\\/|^)\\.).)*?'
	
	// characters that need to be escaped in RegExp.
	var reSpecials = charSet('().*{}+?[]^$\\!')
	
	// "abc" -> { a:true, b:true, c:true }
	function charSet (s) {
	  return s.split('').reduce(function (set, c) {
	    set[c] = true
	    return set
	  }, {})
	}
	
	// normalizes slashes.
	var slashSplit = /\/+/
	
	minimatch.filter = filter
	function filter (pattern, options) {
	  options = options || {}
	  return function (p, i, list) {
	    return minimatch(p, pattern, options)
	  }
	}
	
	function ext (a, b) {
	  a = a || {}
	  b = b || {}
	  var t = {}
	  Object.keys(b).forEach(function (k) {
	    t[k] = b[k]
	  })
	  Object.keys(a).forEach(function (k) {
	    t[k] = a[k]
	  })
	  return t
	}
	
	minimatch.defaults = function (def) {
	  if (!def || !Object.keys(def).length) return minimatch
	
	  var orig = minimatch
	
	  var m = function minimatch (p, pattern, options) {
	    return orig.minimatch(p, pattern, ext(def, options))
	  }
	
	  m.Minimatch = function Minimatch (pattern, options) {
	    return new orig.Minimatch(pattern, ext(def, options))
	  }
	
	  return m
	}
	
	Minimatch.defaults = function (def) {
	  if (!def || !Object.keys(def).length) return Minimatch
	  return minimatch.defaults(def).Minimatch
	}
	
	function minimatch (p, pattern, options) {
	  if (typeof pattern !== 'string') {
	    throw new TypeError('glob pattern string required')
	  }
	
	  if (!options) options = {}
	
	  // shortcut: comments match nothing.
	  if (!options.nocomment && pattern.charAt(0) === '#') {
	    return false
	  }
	
	  // "" only matches ""
	  if (pattern.trim() === '') return p === ''
	
	  return new Minimatch(pattern, options).match(p)
	}
	
	function Minimatch (pattern, options) {
	  if (!(this instanceof Minimatch)) {
	    return new Minimatch(pattern, options)
	  }
	
	  if (typeof pattern !== 'string') {
	    throw new TypeError('glob pattern string required')
	  }
	
	  if (!options) options = {}
	  pattern = pattern.trim()
	
	  // windows support: need to use /, not \
	  if (path.sep !== '/') {
	    pattern = pattern.split(path.sep).join('/')
	  }
	
	  this.options = options
	  this.set = []
	  this.pattern = pattern
	  this.regexp = null
	  this.negate = false
	  this.comment = false
	  this.empty = false
	
	  // make the set of regexps etc.
	  this.make()
	}
	
	Minimatch.prototype.debug = function () {}
	
	Minimatch.prototype.make = make
	function make () {
	  // don't do it more than once.
	  if (this._made) return
	
	  var pattern = this.pattern
	  var options = this.options
	
	  // empty patterns and comments match nothing.
	  if (!options.nocomment && pattern.charAt(0) === '#') {
	    this.comment = true
	    return
	  }
	  if (!pattern) {
	    this.empty = true
	    return
	  }
	
	  // step 1: figure out negation, etc.
	  this.parseNegate()
	
	  // step 2: expand braces
	  var set = this.globSet = this.braceExpand()
	
	  if (options.debug) this.debug = console.error
	
	  this.debug(this.pattern, set)
	
	  // step 3: now we have a set, so turn each one into a series of path-portion
	  // matching patterns.
	  // These will be regexps, except in the case of "**", which is
	  // set to the GLOBSTAR object for globstar behavior,
	  // and will not contain any / characters
	  set = this.globParts = set.map(function (s) {
	    return s.split(slashSplit)
	  })
	
	  this.debug(this.pattern, set)
	
	  // glob --> regexps
	  set = set.map(function (s, si, set) {
	    return s.map(this.parse, this)
	  }, this)
	
	  this.debug(this.pattern, set)
	
	  // filter out everything that didn't compile properly.
	  set = set.filter(function (s) {
	    return s.indexOf(false) === -1
	  })
	
	  this.debug(this.pattern, set)
	
	  this.set = set
	}
	
	Minimatch.prototype.parseNegate = parseNegate
	function parseNegate () {
	  var pattern = this.pattern
	  var negate = false
	  var options = this.options
	  var negateOffset = 0
	
	  if (options.nonegate) return
	
	  for (var i = 0, l = pattern.length
	    ; i < l && pattern.charAt(i) === '!'
	    ; i++) {
	    negate = !negate
	    negateOffset++
	  }
	
	  if (negateOffset) this.pattern = pattern.substr(negateOffset)
	  this.negate = negate
	}
	
	// Brace expansion:
	// a{b,c}d -> abd acd
	// a{b,}c -> abc ac
	// a{0..3}d -> a0d a1d a2d a3d
	// a{b,c{d,e}f}g -> abg acdfg acefg
	// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
	//
	// Invalid sets are not expanded.
	// a{2..}b -> a{2..}b
	// a{b}c -> a{b}c
	minimatch.braceExpand = function (pattern, options) {
	  return braceExpand(pattern, options)
	}
	
	Minimatch.prototype.braceExpand = braceExpand
	
	function braceExpand (pattern, options) {
	  if (!options) {
	    if (this instanceof Minimatch) {
	      options = this.options
	    } else {
	      options = {}
	    }
	  }
	
	  pattern = typeof pattern === 'undefined'
	    ? this.pattern : pattern
	
	  if (typeof pattern === 'undefined') {
	    throw new TypeError('undefined pattern')
	  }
	
	  if (options.nobrace ||
	    !pattern.match(/\{.*\}/)) {
	    // shortcut. no need to expand.
	    return [pattern]
	  }
	
	  return expand(pattern)
	}
	
	// parse a component of the expanded set.
	// At this point, no pattern may contain "/" in it
	// so we're going to return a 2d array, where each entry is the full
	// pattern, split on '/', and then turned into a regular expression.
	// A regexp is made at the end which joins each array with an
	// escaped /, and another full one which joins each regexp with |.
	//
	// Following the lead of Bash 4.1, note that "**" only has special meaning
	// when it is the *only* thing in a path portion.  Otherwise, any series
	// of * is equivalent to a single *.  Globstar behavior is enabled by
	// default, and can be disabled by setting options.noglobstar.
	Minimatch.prototype.parse = parse
	var SUBPARSE = {}
	function parse (pattern, isSub) {
	  if (pattern.length > 1024 * 64) {
	    throw new TypeError('pattern is too long')
	  }
	
	  var options = this.options
	
	  // shortcuts
	  if (!options.noglobstar && pattern === '**') return GLOBSTAR
	  if (pattern === '') return ''
	
	  var re = ''
	  var hasMagic = !!options.nocase
	  var escaping = false
	  // ? => one single character
	  var patternListStack = []
	  var negativeLists = []
	  var stateChar
	  var inClass = false
	  var reClassStart = -1
	  var classStart = -1
	  // . and .. never match anything that doesn't start with .,
	  // even when options.dot is set.
	  var patternStart = pattern.charAt(0) === '.' ? '' // anything
	  // not (start or / followed by . or .. followed by / or end)
	  : options.dot ? '(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'
	  : '(?!\\.)'
	  var self = this
	
	  function clearStateChar () {
	    if (stateChar) {
	      // we had some state-tracking character
	      // that wasn't consumed by this pass.
	      switch (stateChar) {
	        case '*':
	          re += star
	          hasMagic = true
	        break
	        case '?':
	          re += qmark
	          hasMagic = true
	        break
	        default:
	          re += '\\' + stateChar
	        break
	      }
	      self.debug('clearStateChar %j %j', stateChar, re)
	      stateChar = false
	    }
	  }
	
	  for (var i = 0, len = pattern.length, c
	    ; (i < len) && (c = pattern.charAt(i))
	    ; i++) {
	    this.debug('%s\t%s %s %j', pattern, i, re, c)
	
	    // skip over any that are escaped.
	    if (escaping && reSpecials[c]) {
	      re += '\\' + c
	      escaping = false
	      continue
	    }
	
	    switch (c) {
	      case '/':
	        // completely not allowed, even escaped.
	        // Should already be path-split by now.
	        return false
	
	      case '\\':
	        clearStateChar()
	        escaping = true
	      continue
	
	      // the various stateChar values
	      // for the "extglob" stuff.
	      case '?':
	      case '*':
	      case '+':
	      case '@':
	      case '!':
	        this.debug('%s\t%s %s %j <-- stateChar', pattern, i, re, c)
	
	        // all of those are literals inside a class, except that
	        // the glob [!a] means [^a] in regexp
	        if (inClass) {
	          this.debug('  in class')
	          if (c === '!' && i === classStart + 1) c = '^'
	          re += c
	          continue
	        }
	
	        // if we already have a stateChar, then it means
	        // that there was something like ** or +? in there.
	        // Handle the stateChar, then proceed with this one.
	        self.debug('call clearStateChar %j', stateChar)
	        clearStateChar()
	        stateChar = c
	        // if extglob is disabled, then +(asdf|foo) isn't a thing.
	        // just clear the statechar *now*, rather than even diving into
	        // the patternList stuff.
	        if (options.noext) clearStateChar()
	      continue
	
	      case '(':
	        if (inClass) {
	          re += '('
	          continue
	        }
	
	        if (!stateChar) {
	          re += '\\('
	          continue
	        }
	
	        patternListStack.push({
	          type: stateChar,
	          start: i - 1,
	          reStart: re.length,
	          open: plTypes[stateChar].open,
	          close: plTypes[stateChar].close
	        })
	        // negation is (?:(?!js)[^/]*)
	        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'
	        this.debug('plType %j %j', stateChar, re)
	        stateChar = false
	      continue
	
	      case ')':
	        if (inClass || !patternListStack.length) {
	          re += '\\)'
	          continue
	        }
	
	        clearStateChar()
	        hasMagic = true
	        var pl = patternListStack.pop()
	        // negation is (?:(?!js)[^/]*)
	        // The others are (?:<pattern>)<type>
	        re += pl.close
	        if (pl.type === '!') {
	          negativeLists.push(pl)
	        }
	        pl.reEnd = re.length
	      continue
	
	      case '|':
	        if (inClass || !patternListStack.length || escaping) {
	          re += '\\|'
	          escaping = false
	          continue
	        }
	
	        clearStateChar()
	        re += '|'
	      continue
	
	      // these are mostly the same in regexp and glob
	      case '[':
	        // swallow any state-tracking char before the [
	        clearStateChar()
	
	        if (inClass) {
	          re += '\\' + c
	          continue
	        }
	
	        inClass = true
	        classStart = i
	        reClassStart = re.length
	        re += c
	      continue
	
	      case ']':
	        //  a right bracket shall lose its special
	        //  meaning and represent itself in
	        //  a bracket expression if it occurs
	        //  first in the list.  -- POSIX.2 2.8.3.2
	        if (i === classStart + 1 || !inClass) {
	          re += '\\' + c
	          escaping = false
	          continue
	        }
	
	        // handle the case where we left a class open.
	        // "[z-a]" is valid, equivalent to "\[z-a\]"
	        if (inClass) {
	          // split where the last [ was, make sure we don't have
	          // an invalid re. if so, re-walk the contents of the
	          // would-be class to re-translate any characters that
	          // were passed through as-is
	          // TODO: It would probably be faster to determine this
	          // without a try/catch and a new RegExp, but it's tricky
	          // to do safely.  For now, this is safe and works.
	          var cs = pattern.substring(classStart + 1, i)
	          try {
	            RegExp('[' + cs + ']')
	          } catch (er) {
	            // not a valid class!
	            var sp = this.parse(cs, SUBPARSE)
	            re = re.substr(0, reClassStart) + '\\[' + sp[0] + '\\]'
	            hasMagic = hasMagic || sp[1]
	            inClass = false
	            continue
	          }
	        }
	
	        // finish up the class.
	        hasMagic = true
	        inClass = false
	        re += c
	      continue
	
	      default:
	        // swallow any state char that wasn't consumed
	        clearStateChar()
	
	        if (escaping) {
	          // no need
	          escaping = false
	        } else if (reSpecials[c]
	          && !(c === '^' && inClass)) {
	          re += '\\'
	        }
	
	        re += c
	
	    } // switch
	  } // for
	
	  // handle the case where we left a class open.
	  // "[abc" is valid, equivalent to "\[abc"
	  if (inClass) {
	    // split where the last [ was, and escape it
	    // this is a huge pita.  We now have to re-walk
	    // the contents of the would-be class to re-translate
	    // any characters that were passed through as-is
	    cs = pattern.substr(classStart + 1)
	    sp = this.parse(cs, SUBPARSE)
	    re = re.substr(0, reClassStart) + '\\[' + sp[0]
	    hasMagic = hasMagic || sp[1]
	  }
	
	  // handle the case where we had a +( thing at the *end*
	  // of the pattern.
	  // each pattern list stack adds 3 chars, and we need to go through
	  // and escape any | chars that were passed through as-is for the regexp.
	  // Go through and escape them, taking care not to double-escape any
	  // | chars that were already escaped.
	  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {
	    var tail = re.slice(pl.reStart + pl.open.length)
	    this.debug('setting tail', re, pl)
	    // maybe some even number of \, then maybe 1 \, followed by a |
	    tail = tail.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (_, $1, $2) {
	      if (!$2) {
	        // the | isn't already escaped, so escape it.
	        $2 = '\\'
	      }
	
	      // need to escape all those slashes *again*, without escaping the
	      // one that we need for escaping the | character.  As it works out,
	      // escaping an even number of slashes can be done by simply repeating
	      // it exactly after itself.  That's why this trick works.
	      //
	      // I am sorry that you have to see this.
	      return $1 + $1 + $2 + '|'
	    })
	
	    this.debug('tail=%j\n   %s', tail, tail, pl, re)
	    var t = pl.type === '*' ? star
	      : pl.type === '?' ? qmark
	      : '\\' + pl.type
	
	    hasMagic = true
	    re = re.slice(0, pl.reStart) + t + '\\(' + tail
	  }
	
	  // handle trailing things that only matter at the very end.
	  clearStateChar()
	  if (escaping) {
	    // trailing \\
	    re += '\\\\'
	  }
	
	  // only need to apply the nodot start if the re starts with
	  // something that could conceivably capture a dot
	  var addPatternStart = false
	  switch (re.charAt(0)) {
	    case '.':
	    case '[':
	    case '(': addPatternStart = true
	  }
	
	  // Hack to work around lack of negative lookbehind in JS
	  // A pattern like: *.!(x).!(y|z) needs to ensure that a name
	  // like 'a.xyz.yz' doesn't match.  So, the first negative
	  // lookahead, has to look ALL the way ahead, to the end of
	  // the pattern.
	  for (var n = negativeLists.length - 1; n > -1; n--) {
	    var nl = negativeLists[n]
	
	    var nlBefore = re.slice(0, nl.reStart)
	    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)
	    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)
	    var nlAfter = re.slice(nl.reEnd)
	
	    nlLast += nlAfter
	
	    // Handle nested stuff like *(*.js|!(*.json)), where open parens
	    // mean that we should *not* include the ) in the bit that is considered
	    // "after" the negated section.
	    var openParensBefore = nlBefore.split('(').length - 1
	    var cleanAfter = nlAfter
	    for (i = 0; i < openParensBefore; i++) {
	      cleanAfter = cleanAfter.replace(/\)[+*?]?/, '')
	    }
	    nlAfter = cleanAfter
	
	    var dollar = ''
	    if (nlAfter === '' && isSub !== SUBPARSE) {
	      dollar = '$'
	    }
	    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast
	    re = newRe
	  }
	
	  // if the re is not "" at this point, then we need to make sure
	  // it doesn't match against an empty path part.
	  // Otherwise a/* will match a/, which it should not.
	  if (re !== '' && hasMagic) {
	    re = '(?=.)' + re
	  }
	
	  if (addPatternStart) {
	    re = patternStart + re
	  }
	
	  // parsing just a piece of a larger pattern.
	  if (isSub === SUBPARSE) {
	    return [re, hasMagic]
	  }
	
	  // skip the regexp for non-magical patterns
	  // unescape anything in it, though, so that it'll be
	  // an exact match against a file etc.
	  if (!hasMagic) {
	    return globUnescape(pattern)
	  }
	
	  var flags = options.nocase ? 'i' : ''
	  try {
	    var regExp = new RegExp('^' + re + '$', flags)
	  } catch (er) {
	    // If it was an invalid regular expression, then it can't match
	    // anything.  This trick looks for a character after the end of
	    // the string, which is of course impossible, except in multi-line
	    // mode, but it's not a /m regex.
	    return new RegExp('$.')
	  }
	
	  regExp._glob = pattern
	  regExp._src = re
	
	  return regExp
	}
	
	minimatch.makeRe = function (pattern, options) {
	  return new Minimatch(pattern, options || {}).makeRe()
	}
	
	Minimatch.prototype.makeRe = makeRe
	function makeRe () {
	  if (this.regexp || this.regexp === false) return this.regexp
	
	  // at this point, this.set is a 2d array of partial
	  // pattern strings, or "**".
	  //
	  // It's better to use .match().  This function shouldn't
	  // be used, really, but it's pretty convenient sometimes,
	  // when you just want to work with a regex.
	  var set = this.set
	
	  if (!set.length) {
	    this.regexp = false
	    return this.regexp
	  }
	  var options = this.options
	
	  var twoStar = options.noglobstar ? star
	    : options.dot ? twoStarDot
	    : twoStarNoDot
	  var flags = options.nocase ? 'i' : ''
	
	  var re = set.map(function (pattern) {
	    return pattern.map(function (p) {
	      return (p === GLOBSTAR) ? twoStar
	      : (typeof p === 'string') ? regExpEscape(p)
	      : p._src
	    }).join('\\\/')
	  }).join('|')
	
	  // must match entire pattern
	  // ending in a * or ** will make it less strict.
	  re = '^(?:' + re + ')$'
	
	  // can match anything, as long as it's not this.
	  if (this.negate) re = '^(?!' + re + ').*$'
	
	  try {
	    this.regexp = new RegExp(re, flags)
	  } catch (ex) {
	    this.regexp = false
	  }
	  return this.regexp
	}
	
	minimatch.match = function (list, pattern, options) {
	  options = options || {}
	  var mm = new Minimatch(pattern, options)
	  list = list.filter(function (f) {
	    return mm.match(f)
	  })
	  if (mm.options.nonull && !list.length) {
	    list.push(pattern)
	  }
	  return list
	}
	
	Minimatch.prototype.match = match
	function match (f, partial) {
	  this.debug('match', f, this.pattern)
	  // short-circuit in the case of busted things.
	  // comments, etc.
	  if (this.comment) return false
	  if (this.empty) return f === ''
	
	  if (f === '/' && partial) return true
	
	  var options = this.options
	
	  // windows: need to use /, not \
	  if (path.sep !== '/') {
	    f = f.split(path.sep).join('/')
	  }
	
	  // treat the test path as a set of pathparts.
	  f = f.split(slashSplit)
	  this.debug(this.pattern, 'split', f)
	
	  // just ONE of the pattern sets in this.set needs to match
	  // in order for it to be valid.  If negating, then just one
	  // match means that we have failed.
	  // Either way, return on the first hit.
	
	  var set = this.set
	  this.debug(this.pattern, 'set', set)
	
	  // Find the basename of the path by looking for the last non-empty segment
	  var filename
	  var i
	  for (i = f.length - 1; i >= 0; i--) {
	    filename = f[i]
	    if (filename) break
	  }
	
	  for (i = 0; i < set.length; i++) {
	    var pattern = set[i]
	    var file = f
	    if (options.matchBase && pattern.length === 1) {
	      file = [filename]
	    }
	    var hit = this.matchOne(file, pattern, partial)
	    if (hit) {
	      if (options.flipNegate) return true
	      return !this.negate
	    }
	  }
	
	  // didn't get any hits.  this is success if it's a negative
	  // pattern, failure otherwise.
	  if (options.flipNegate) return false
	  return this.negate
	}
	
	// set partial to true to test if, for example,
	// "/a/b" matches the start of "/*/b/*/d"
	// Partial means, if you run out of file before you run
	// out of pattern, then that's fine, as long as all
	// the parts match.
	Minimatch.prototype.matchOne = function (file, pattern, partial) {
	  var options = this.options
	
	  this.debug('matchOne',
	    { 'this': this, file: file, pattern: pattern })
	
	  this.debug('matchOne', file.length, pattern.length)
	
	  for (var fi = 0,
	      pi = 0,
	      fl = file.length,
	      pl = pattern.length
	      ; (fi < fl) && (pi < pl)
	      ; fi++, pi++) {
	    this.debug('matchOne loop')
	    var p = pattern[pi]
	    var f = file[fi]
	
	    this.debug(pattern, p, f)
	
	    // should be impossible.
	    // some invalid regexp stuff in the set.
	    if (p === false) return false
	
	    if (p === GLOBSTAR) {
	      this.debug('GLOBSTAR', [pattern, p, f])
	
	      // "**"
	      // a/**/b/**/c would match the following:
	      // a/b/x/y/z/c
	      // a/x/y/z/b/c
	      // a/b/x/b/x/c
	      // a/b/c
	      // To do this, take the rest of the pattern after
	      // the **, and see if it would match the file remainder.
	      // If so, return success.
	      // If not, the ** "swallows" a segment, and try again.
	      // This is recursively awful.
	      //
	      // a/**/b/**/c matching a/b/x/y/z/c
	      // - a matches a
	      // - doublestar
	      //   - matchOne(b/x/y/z/c, b/**/c)
	      //     - b matches b
	      //     - doublestar
	      //       - matchOne(x/y/z/c, c) -> no
	      //       - matchOne(y/z/c, c) -> no
	      //       - matchOne(z/c, c) -> no
	      //       - matchOne(c, c) yes, hit
	      var fr = fi
	      var pr = pi + 1
	      if (pr === pl) {
	        this.debug('** at the end')
	        // a ** at the end will just swallow the rest.
	        // We have found a match.
	        // however, it will not swallow /.x, unless
	        // options.dot is set.
	        // . and .. are *never* matched by **, for explosively
	        // exponential reasons.
	        for (; fi < fl; fi++) {
	          if (file[fi] === '.' || file[fi] === '..' ||
	            (!options.dot && file[fi].charAt(0) === '.')) return false
	        }
	        return true
	      }
	
	      // ok, let's see if we can swallow whatever we can.
	      while (fr < fl) {
	        var swallowee = file[fr]
	
	        this.debug('\nglobstar while', file, fr, pattern, pr, swallowee)
	
	        // XXX remove this slice.  Just pass the start index.
	        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
	          this.debug('globstar found match!', fr, fl, swallowee)
	          // found a match.
	          return true
	        } else {
	          // can't swallow "." or ".." ever.
	          // can only swallow ".foo" when explicitly asked.
	          if (swallowee === '.' || swallowee === '..' ||
	            (!options.dot && swallowee.charAt(0) === '.')) {
	            this.debug('dot detected!', file, fr, pattern, pr)
	            break
	          }
	
	          // ** swallows a segment, and continue.
	          this.debug('globstar swallow a segment, and continue')
	          fr++
	        }
	      }
	
	      // no match was found.
	      // However, in partial mode, we can't say this is necessarily over.
	      // If there's more *pattern* left, then
	      if (partial) {
	        // ran out of file
	        this.debug('\n>>> no match, partial?', file, fr, pattern, pr)
	        if (fr === fl) return true
	      }
	      return false
	    }
	
	    // something other than **
	    // non-magic patterns just have to match exactly
	    // patterns with magic have been turned into regexps.
	    var hit
	    if (typeof p === 'string') {
	      if (options.nocase) {
	        hit = f.toLowerCase() === p.toLowerCase()
	      } else {
	        hit = f === p
	      }
	      this.debug('string match', p, f, hit)
	    } else {
	      hit = f.match(p)
	      this.debug('pattern match', p, f, hit)
	    }
	
	    if (!hit) return false
	  }
	
	  // Note: ending in / means that we'll get a final ""
	  // at the end of the pattern.  This can only match a
	  // corresponding "" at the end of the file.
	  // If the file ends in /, then it can only match a
	  // a pattern that ends in /, unless the pattern just
	  // doesn't have any more for it. But, a/b/ should *not*
	  // match "a/b/*", even though "" matches against the
	  // [^/]*? pattern, except in partial mode, where it might
	  // simply not be reached yet.
	  // However, a/b/ should still satisfy a/*
	
	  // now either we fell off the end of the pattern, or we're done.
	  if (fi === fl && pi === pl) {
	    // ran out of pattern and filename at the same time.
	    // an exact hit!
	    return true
	  } else if (fi === fl) {
	    // ran out of file, but still had pattern left.
	    // this is ok if we're doing the match as part of
	    // a glob fs traversal.
	    return partial
	  } else if (pi === pl) {
	    // ran out of pattern, still have file left.
	    // this is only acceptable if we're on the very last
	    // empty segment of a file with a trailing slash.
	    // a/* should match a/b/
	    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')
	    return emptyFileEnd
	  }
	
	  // should be unreachable.
	  throw new Error('wtf?')
	}
	
	// replace stuff like \* with *
	function globUnescape (s) {
	  return s.replace(/\\(.)/g, '$1')
	}
	
	function regExpEscape (s) {
	  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
	}


/***/ }),
/* 163 */
/***/ (function(module, exports) {

	module.exports = require("path");

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	var concatMap = __webpack_require__(165);
	var balanced = __webpack_require__(166);
	
	module.exports = expandTop;
	
	var escSlash = '\0SLASH'+Math.random()+'\0';
	var escOpen = '\0OPEN'+Math.random()+'\0';
	var escClose = '\0CLOSE'+Math.random()+'\0';
	var escComma = '\0COMMA'+Math.random()+'\0';
	var escPeriod = '\0PERIOD'+Math.random()+'\0';
	
	function numeric(str) {
	  return parseInt(str, 10) == str
	    ? parseInt(str, 10)
	    : str.charCodeAt(0);
	}
	
	function escapeBraces(str) {
	  return str.split('\\\\').join(escSlash)
	            .split('\\{').join(escOpen)
	            .split('\\}').join(escClose)
	            .split('\\,').join(escComma)
	            .split('\\.').join(escPeriod);
	}
	
	function unescapeBraces(str) {
	  return str.split(escSlash).join('\\')
	            .split(escOpen).join('{')
	            .split(escClose).join('}')
	            .split(escComma).join(',')
	            .split(escPeriod).join('.');
	}
	
	
	// Basically just str.split(","), but handling cases
	// where we have nested braced sections, which should be
	// treated as individual members, like {a,{b,c},d}
	function parseCommaParts(str) {
	  if (!str)
	    return [''];
	
	  var parts = [];
	  var m = balanced('{', '}', str);
	
	  if (!m)
	    return str.split(',');
	
	  var pre = m.pre;
	  var body = m.body;
	  var post = m.post;
	  var p = pre.split(',');
	
	  p[p.length-1] += '{' + body + '}';
	  var postParts = parseCommaParts(post);
	  if (post.length) {
	    p[p.length-1] += postParts.shift();
	    p.push.apply(p, postParts);
	  }
	
	  parts.push.apply(parts, p);
	
	  return parts;
	}
	
	function expandTop(str) {
	  if (!str)
	    return [];
	
	  // I don't know why Bash 4.3 does this, but it does.
	  // Anything starting with {} will have the first two bytes preserved
	  // but *only* at the top level, so {},a}b will not expand to anything,
	  // but a{},b}c will be expanded to [a}c,abc].
	  // One could argue that this is a bug in Bash, but since the goal of
	  // this module is to match Bash's rules, we escape a leading {}
	  if (str.substr(0, 2) === '{}') {
	    str = '\\{\\}' + str.substr(2);
	  }
	
	  return expand(escapeBraces(str), true).map(unescapeBraces);
	}
	
	function identity(e) {
	  return e;
	}
	
	function embrace(str) {
	  return '{' + str + '}';
	}
	function isPadded(el) {
	  return /^-?0\d/.test(el);
	}
	
	function lte(i, y) {
	  return i <= y;
	}
	function gte(i, y) {
	  return i >= y;
	}
	
	function expand(str, isTop) {
	  var expansions = [];
	
	  var m = balanced('{', '}', str);
	  if (!m || /\$$/.test(m.pre)) return [str];
	
	  var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
	  var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
	  var isSequence = isNumericSequence || isAlphaSequence;
	  var isOptions = m.body.indexOf(',') >= 0;
	  if (!isSequence && !isOptions) {
	    // {a},b}
	    if (m.post.match(/,.*\}/)) {
	      str = m.pre + '{' + m.body + escClose + m.post;
	      return expand(str);
	    }
	    return [str];
	  }
	
	  var n;
	  if (isSequence) {
	    n = m.body.split(/\.\./);
	  } else {
	    n = parseCommaParts(m.body);
	    if (n.length === 1) {
	      // x{{a,b}}y ==> x{a}y x{b}y
	      n = expand(n[0], false).map(embrace);
	      if (n.length === 1) {
	        var post = m.post.length
	          ? expand(m.post, false)
	          : [''];
	        return post.map(function(p) {
	          return m.pre + n[0] + p;
	        });
	      }
	    }
	  }
	
	  // at this point, n is the parts, and we know it's not a comma set
	  // with a single entry.
	
	  // no need to expand pre, since it is guaranteed to be free of brace-sets
	  var pre = m.pre;
	  var post = m.post.length
	    ? expand(m.post, false)
	    : [''];
	
	  var N;
	
	  if (isSequence) {
	    var x = numeric(n[0]);
	    var y = numeric(n[1]);
	    var width = Math.max(n[0].length, n[1].length)
	    var incr = n.length == 3
	      ? Math.abs(numeric(n[2]))
	      : 1;
	    var test = lte;
	    var reverse = y < x;
	    if (reverse) {
	      incr *= -1;
	      test = gte;
	    }
	    var pad = n.some(isPadded);
	
	    N = [];
	
	    for (var i = x; test(i, y); i += incr) {
	      var c;
	      if (isAlphaSequence) {
	        c = String.fromCharCode(i);
	        if (c === '\\')
	          c = '';
	      } else {
	        c = String(i);
	        if (pad) {
	          var need = width - c.length;
	          if (need > 0) {
	            var z = new Array(need + 1).join('0');
	            if (i < 0)
	              c = '-' + z + c.slice(1);
	            else
	              c = z + c;
	          }
	        }
	      }
	      N.push(c);
	    }
	  } else {
	    N = concatMap(n, function(el) { return expand(el, false) });
	  }
	
	  for (var j = 0; j < N.length; j++) {
	    for (var k = 0; k < post.length; k++) {
	      var expansion = pre + N[j] + post[k];
	      if (!isTop || isSequence || expansion)
	        expansions.push(expansion);
	    }
	  }
	
	  return expansions;
	}
	


/***/ }),
/* 165 */
/***/ (function(module, exports) {

	module.exports = function (xs, fn) {
	    var res = [];
	    for (var i = 0; i < xs.length; i++) {
	        var x = fn(xs[i], i);
	        if (isArray(x)) res.push.apply(res, x);
	        else res.push(x);
	    }
	    return res;
	};
	
	var isArray = Array.isArray || function (xs) {
	    return Object.prototype.toString.call(xs) === '[object Array]';
	};


/***/ }),
/* 166 */
/***/ (function(module, exports) {

	'use strict';
	module.exports = balanced;
	function balanced(a, b, str) {
	  if (a instanceof RegExp) a = maybeMatch(a, str);
	  if (b instanceof RegExp) b = maybeMatch(b, str);
	
	  var r = range(a, b, str);
	
	  return r && {
	    start: r[0],
	    end: r[1],
	    pre: str.slice(0, r[0]),
	    body: str.slice(r[0] + a.length, r[1]),
	    post: str.slice(r[1] + b.length)
	  };
	}
	
	function maybeMatch(reg, str) {
	  var m = str.match(reg);
	  return m ? m[0] : null;
	}
	
	balanced.range = range;
	function range(a, b, str) {
	  var begs, beg, left, right, result;
	  var ai = str.indexOf(a);
	  var bi = str.indexOf(b, ai + 1);
	  var i = ai;
	
	  if (ai >= 0 && bi > 0) {
	    begs = [];
	    left = str.length;
	
	    while (i >= 0 && !result) {
	      if (i == ai) {
	        begs.push(i);
	        ai = str.indexOf(a, i + 1);
	      } else if (begs.length == 1) {
	        result = [ begs.pop(), bi ];
	      } else {
	        beg = begs.pop();
	        if (beg < left) {
	          left = beg;
	          right = bi;
	        }
	
	        bi = str.indexOf(b, i + 1);
	      }
	
	      i = ai < bi && ai >= 0 ? ai : bi;
	    }
	
	    if (begs.length) {
	      result = [ left, right ];
	    }
	  }
	
	  return result;
	}


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _extends2 = __webpack_require__(74);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _internals = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.onRenderBody = function (_ref, pluginOptions) {
	  var setHeadComponents = _ref.setHeadComponents;
	
	  var _defaultOptions$plugi = (0, _extends3.default)({}, _internals.defaultOptions, pluginOptions),
	      feeds = _defaultOptions$plugi.feeds;
	
	  var links = feeds.map(function (_ref2, i) {
	    var output = _ref2.output;
	
	    if (output.charAt(0) !== "/") {
	      output = "/" + output;
	    }
	
	    return _react2.default.createElement("link", {
	      key: "gatsby-plugin-feed-" + i,
	      rel: "alternate",
	      type: "application/rss+xml",
	      href: (0, _gatsbyLink.withPrefix)(output)
	    });
	  });
	
	  setHeadComponents(links);
	};

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.defaultOptions = exports.runQuery = exports.writeFile = undefined;
	
	var _extends2 = __webpack_require__(74);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _objectWithoutProperties2 = __webpack_require__(116);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _fs = __webpack_require__(169);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	var _pify = __webpack_require__(170);
	
	var _pify2 = _interopRequireDefault(_pify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var writeFile = exports.writeFile = (0, _pify2.default)(_fs2.default.writeFile);
	
	var runQuery = exports.runQuery = function runQuery(handler, query) {
	  return handler(query).then(function (r) {
	    if (r.errors) {
	      throw new Error(r.errors.join(", "));
	    }
	
	    return r.data;
	  });
	};
	
	var defaultOptions = {
	  // Override if you want to manually specify the RSS "generator" tag.
	  generator: "GatsbyJS",
	
	  // Run a default query to gather some information about the site.
	  query: "\n    {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n          site_url: siteUrl\n        }\n      }\n    }\n  ",
	
	  // Setup an RSS object, merging on various feed-specific options.
	  setup: function setup(_ref) {
	    var _ref$query = _ref.query,
	        siteMetadata = _ref$query.site.siteMetadata,
	        rest = (0, _objectWithoutProperties3.default)(_ref$query, ["site"]);
	
	    return (0, _extends3.default)({}, siteMetadata, rest);
	  },
	
	  // Create a default RSS feed. Others may be added by using the format below.
	  feeds: [{
	    query: "\n      {\n        allMarkdownRemark(\n          limit: 1000,\n          sort: {\n            order: DESC,\n            fields: [frontmatter___date]\n          }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                title\n                date\n              }\n              fields {\n                slug\n              }\n              excerpt\n              html\n            }\n          }\n        }\n      }\n    ",
	
	    // Where we will save the feed generated by this query.
	    output: "rss.xml"
	  }]
	};
	exports.defaultOptions = defaultOptions;

/***/ }),
/* 169 */
/***/ (function(module, exports) {

	module.exports = require("fs");

/***/ }),
/* 170 */
/***/ (function(module, exports) {

	'use strict';
	
	const processFn = (fn, opts) => function () {
		const P = opts.promiseModule;
		const args = new Array(arguments.length);
	
		for (let i = 0; i < arguments.length; i++) {
			args[i] = arguments[i];
		}
	
		return new P((resolve, reject) => {
			if (opts.errorFirst) {
				args.push(function (err, result) {
					if (opts.multiArgs) {
						const results = new Array(arguments.length - 1);
	
						for (let i = 1; i < arguments.length; i++) {
							results[i - 1] = arguments[i];
						}
	
						if (err) {
							results.unshift(err);
							reject(results);
						} else {
							resolve(results);
						}
					} else if (err) {
						reject(err);
					} else {
						resolve(result);
					}
				});
			} else {
				args.push(function (result) {
					if (opts.multiArgs) {
						const results = new Array(arguments.length - 1);
	
						for (let i = 0; i < arguments.length; i++) {
							results[i] = arguments[i];
						}
	
						resolve(results);
					} else {
						resolve(result);
					}
				});
			}
	
			fn.apply(this, args);
		});
	};
	
	module.exports = (obj, opts) => {
		opts = Object.assign({
			exclude: [/.+(Sync|Stream)$/],
			errorFirst: true,
			promiseModule: Promise
		}, opts);
	
		const filter = key => {
			const match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);
			return opts.include ? opts.include.some(match) : !opts.exclude.some(match);
		};
	
		let ret;
		if (typeof obj === 'function') {
			ret = function () {
				if (opts.excludeMain) {
					return obj.apply(this, arguments);
				}
	
				return processFn(obj, opts).apply(this, arguments);
			};
		} else {
			ret = Object.create(Object.getPrototypeOf(obj));
		}
	
		for (const key in obj) { // eslint-disable-line guard-for-in
			const x = obj[key];
			ret[key] = typeof x === 'function' && filter(key) ? processFn(x, opts) : x;
		}
	
		return ret;
	};


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _extends2 = __webpack_require__(74);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _internals = __webpack_require__(172);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.onRenderBody = function (_ref, pluginOptions) {
	  var setHeadComponents = _ref.setHeadComponents;
	
	  var _defaultOptions$plugi = (0, _extends3.default)({}, _internals.defaultOptions, pluginOptions),
	      output = _defaultOptions$plugi.output,
	      createLinkInHead = _defaultOptions$plugi.createLinkInHead;
	
	  if (!createLinkInHead) {
	    return;
	  }
	
	  if (output.charAt(0) !== "/") {
	    output = "/" + output;
	  }
	
	  setHeadComponents([_react2.default.createElement("link", {
	    key: "gatsby-plugin-sitemap",
	    rel: "sitemap",
	    type: "application/xml",
	    href: (0, _gatsbyLink.withPrefix)(output)
	  })]);
	};

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.defaultOptions = exports.runQuery = exports.writeFile = undefined;
	
	var _fs = __webpack_require__(169);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	var _pify = __webpack_require__(173);
	
	var _pify2 = _interopRequireDefault(_pify);
	
	var _minimatch = __webpack_require__(162);
	
	var _minimatch2 = _interopRequireDefault(_minimatch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var withoutTrailingSlash = function withoutTrailingSlash(path) {
	  return path === "/" ? path : path.replace(/\/$/, "");
	};
	
	var writeFile = exports.writeFile = (0, _pify2.default)(_fs2.default.writeFile);
	
	var runQuery = exports.runQuery = function runQuery(handler, query, excludes, pathPrefix) {
	  return handler(query).then(function (r) {
	    if (r.errors) {
	      throw new Error(r.errors.join(", "));
	    }
	
	    // Removing excluded paths
	    r.data.allSitePage.edges = r.data.allSitePage.edges.filter(function (page) {
	      return !excludes.some(function (excludedRoute) {
	        return (0, _minimatch2.default)(withoutTrailingSlash(page.node.path), excludedRoute);
	      });
	    });
	
	    // Add path prefix
	    r.data.allSitePage.edges = r.data.allSitePage.edges.map(function (page) {
	      // uses `normalizePath` logic from `gatsby-link`
	      page.node.path = (pathPrefix + page.node.path).replace(/^\/\//g, "/");
	      return page;
	    });
	
	    return r.data;
	  });
	};
	
	var defaultOptions = exports.defaultOptions = {
	  query: "\n    {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n\n      allSitePage {\n        edges {\n          node {\n            path\n          }\n        }\n      }\n  }",
	  output: "/sitemap.xml",
	  exclude: ["/dev-404-page", "/404", "/404.html", "/offline-plugin-app-shell-fallback"],
	  createLinkInHead: true,
	  serialize: function serialize(_ref) {
	    var site = _ref.site,
	        allSitePage = _ref.allSitePage;
	    return allSitePage.edges.map(function (edge) {
	      return {
	        url: site.siteMetadata.siteUrl + edge.node.path,
	        changefreq: "daily",
	        priority: 0.7
	      };
	    });
	  }
	};

/***/ }),
/* 173 */
/***/ (function(module, exports) {

	'use strict';
	
	var processFn = function (fn, P, opts) {
		return function () {
			var that = this;
			var args = new Array(arguments.length);
	
			for (var i = 0; i < arguments.length; i++) {
				args[i] = arguments[i];
			}
	
			return new P(function (resolve, reject) {
				args.push(function (err, result) {
					if (err) {
						reject(err);
					} else if (opts.multiArgs) {
						var results = new Array(arguments.length - 1);
	
						for (var i = 1; i < arguments.length; i++) {
							results[i - 1] = arguments[i];
						}
	
						resolve(results);
					} else {
						resolve(result);
					}
				});
	
				fn.apply(that, args);
			});
		};
	};
	
	var pify = module.exports = function (obj, P, opts) {
		if (typeof P !== 'function') {
			opts = P;
			P = Promise;
		}
	
		opts = opts || {};
		opts.exclude = opts.exclude || [/.+Sync$/];
	
		var filter = function (key) {
			var match = function (pattern) {
				return typeof pattern === 'string' ? key === pattern : pattern.test(key);
			};
	
			return opts.include ? opts.include.some(match) : !opts.exclude.some(match);
		};
	
		var ret = typeof obj === 'function' ? function () {
			if (opts.excludeMain) {
				return obj.apply(this, arguments);
			}
	
			return processFn(obj, P, opts).apply(this, arguments);
		} : {};
	
		return Object.keys(obj).reduce(function (ret, key) {
			var x = obj[key];
	
			ret[key] = typeof x === 'function' && filter(key) ? processFn(x, P, opts) : x;
	
			return ret;
		}, ret);
	};
	
	pify.all = pify;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _reactJss = __webpack_require__(175);
	
	var _reactRedux = __webpack_require__(245);
	
	var _server = __webpack_require__(7);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getPageContext = __webpack_require__(271);
	
	var _getPageContext2 = _interopRequireDefault(_getPageContext);
	
	var _store = __webpack_require__(326);
	
	var _store2 = _interopRequireDefault(_store);
	
	var _theme = __webpack_require__(316);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	__webpack_require__(328).config();
	
	exports.replaceRenderer = function (_ref) {
	  var bodyComponent = _ref.bodyComponent,
	      replaceBodyHTMLString = _ref.replaceBodyHTMLString,
	      setHeadComponents = _ref.setHeadComponents;
	
	  var pageContext = (0, _getPageContext2.default)();
	  var store = (0, _store2.default)();
	
	  replaceBodyHTMLString((0, _server.renderToString)(_react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(
	      _reactJss.JssProvider,
	      {
	        registry: pageContext.sheetsRegistry,
	        generateClassName: pageContext.generateClassName
	      },
	      _react2.default.cloneElement(bodyComponent, {
	        pageContext: pageContext
	      })
	    )
	  )));
	
	  setHeadComponents([_react2.default.createElement("style", {
	    type: "text/css",
	    id: "server-side-jss",
	    key: "server-side-jss",
	    dangerouslySetInnerHTML: { __html: pageContext.sheetsRegistry.toString() }
	  })]);
	};
	
	exports.onRenderBody = function (_ref2) {
	  var setHeadComponents = _ref2.setHeadComponents;
	
	  return setHeadComponents([]);
	};
	
	exports.onRenderBody = function (_ref3) {
	  var setPostBodyComponents = _ref3.setPostBodyComponents;
	
	  return setPostBodyComponents([_react2.default.createElement("script", {
	    key: "webfontsloader-setup",
	    dangerouslySetInnerHTML: {
	      __html: "\n        WebFontConfig = {\n          google: {\n            families: [\"" + _theme2.default.base.fonts.styledFamily + ":" + _theme2.default.base.fonts.styledFonts + "\"]\n          }\n        };\n\n        (function(d) {\n            var wf = d.createElement('script'), s = d.scripts[0];\n            wf.src = './src/webfont.js';\n            wf.async = true;\n            s.parentNode.insertBefore(wf, s);\n        })(document);"
	    }
	  })]);
	};

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _theming = __webpack_require__(176);
	
	Object.defineProperty(exports, 'ThemeProvider', {
	  enumerable: true,
	  get: function get() {
	    return _theming.ThemeProvider;
	  }
	});
	Object.defineProperty(exports, 'withTheme', {
	  enumerable: true,
	  get: function get() {
	    return _theming.withTheme;
	  }
	});
	Object.defineProperty(exports, 'createTheming', {
	  enumerable: true,
	  get: function get() {
	    return _theming.createTheming;
	  }
	});
	
	var _JssProvider = __webpack_require__(185);
	
	Object.defineProperty(exports, 'JssProvider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_JssProvider)['default'];
	  }
	});
	
	var _jss = __webpack_require__(186);
	
	Object.defineProperty(exports, 'jss', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_jss)['default'];
	  }
	});
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsRegistry;
	  }
	});
	Object.defineProperty(exports, 'createGenerateClassName', {
	  enumerable: true,
	  get: function get() {
	    return _jss.createGenerateClassNameDefault;
	  }
	});
	
	var _injectSheet = __webpack_require__(241);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_injectSheet)['default'];
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.themeListener = exports.ThemeProvider = exports.withTheme = exports.channel = undefined;
	exports.createTheming = createTheming;
	
	var _createThemeProvider = __webpack_require__(177);
	
	var _createThemeProvider2 = _interopRequireDefault(_createThemeProvider);
	
	var _createWithTheme = __webpack_require__(183);
	
	var _createWithTheme2 = _interopRequireDefault(_createWithTheme);
	
	var _createThemeListener = __webpack_require__(184);
	
	var _createThemeListener2 = _interopRequireDefault(_createThemeListener);
	
	var _channel = __webpack_require__(181);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var channel = exports.channel = _channel2.default;
	var withTheme = exports.withTheme = (0, _createWithTheme2.default)();
	var ThemeProvider = exports.ThemeProvider = (0, _createThemeProvider2.default)();
	var themeListener = exports.themeListener = (0, _createThemeListener2.default)();
	function createTheming() {
	  var customChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  return {
	    channel: customChannel,
	    withTheme: (0, _createWithTheme2.default)(customChannel),
	    ThemeProvider: (0, _createThemeProvider2.default)(customChannel),
	    themeListener: (0, _createThemeListener2.default)(customChannel)
	  };
	}
	
	exports.default = {
	  channel: _channel2.default,
	  withTheme: withTheme,
	  ThemeProvider: ThemeProvider,
	  themeListener: themeListener,
	  createTheming: createTheming
	};

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createThemeProvider;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isFunction = __webpack_require__(178);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isPlainObject = __webpack_require__(179);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _channel = __webpack_require__(181);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	var _brcast = __webpack_require__(182);
	
	var _brcast2 = _interopRequireDefault(_brcast);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Provide a theme to an entire react component tree via context
	 * and event listeners (have to do both context
	 * and event emitter as pure components block context updates)
	 */
	
	function createThemeProvider() {
	  var _class, _temp2;
	
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  return _temp2 = _class = function (_React$Component) {
	    _inherits(ThemeProvider, _React$Component);
	
	    function ThemeProvider() {
	      var _ref;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, ThemeProvider);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ThemeProvider.__proto__ || Object.getPrototypeOf(ThemeProvider)).call.apply(_ref, [this].concat(args))), _this), _this.broadcast = (0, _brcast2.default)(_this.getTheme()), _this.setOuterTheme = function (theme) {
	        _this.outerTheme = theme;
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(ThemeProvider, [{
	      key: 'getTheme',
	
	
	      // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation
	      value: function getTheme(passedTheme) {
	        var theme = passedTheme || this.props.theme;
	        if ((0, _isFunction2.default)(theme)) {
	          var mergedTheme = theme(this.outerTheme);
	          if (!(0, _isPlainObject2.default)(mergedTheme)) {
	            throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
	          }
	          return mergedTheme;
	        }
	        if (!(0, _isPlainObject2.default)(theme)) {
	          throw new Error('[ThemeProvider] Please make your theme prop a plain object');
	        }
	
	        if (!this.outerTheme) {
	          return theme;
	        }
	
	        return _extends({}, this.outerTheme, theme);
	      }
	    }, {
	      key: 'getChildContext',
	      value: function getChildContext() {
	        return _defineProperty({}, CHANNEL, this.broadcast);
	      }
	    }, {
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        // create a new subscription for keeping track of outer theme, if present
	        if (this.context[CHANNEL]) {
	          this.subscriptionId = this.context[CHANNEL].subscribe(this.setOuterTheme);
	        }
	      }
	
	      // set broadcast state by merging outer theme with own
	
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        if (this.context[CHANNEL]) {
	          this.setOuterTheme(this.context[CHANNEL].getState());
	          this.broadcast.setState(this.getTheme());
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.props.theme !== nextProps.theme) {
	          this.broadcast.setState(this.getTheme(nextProps.theme));
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.subscriptionId !== undefined) {
	          this.context[CHANNEL].unsubscribe(this.subscriptionId);
	          delete this.subscriptionId;
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        if (!this.props.children) {
	          return null;
	        }
	        return _react2.default.Children.only(this.props.children);
	      }
	    }]);
	
	    return ThemeProvider;
	  }(_react2.default.Component), _class.propTypes = {
	    children: _propTypes2.default.element,
	    theme: _propTypes2.default.oneOfType([_propTypes2.default.shape({}), _propTypes2.default.func]).isRequired
	  }, _class.childContextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object.isRequired), _class.contextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object), _temp2;
	}

/***/ }),
/* 178 */
/***/ (function(module, exports) {

	module.exports = isFunction
	
	var toString = Object.prototype.toString
	
	function isFunction (fn) {
	  var string = toString.call(fn)
	  return string === '[object Function]' ||
	    (typeof fn === 'function' && string !== '[object RegExp]') ||
	    (typeof window !== 'undefined' &&
	     // IE8 and below
	     (fn === window.setTimeout ||
	      fn === window.alert ||
	      fn === window.confirm ||
	      fn === window.prompt))
	};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	var isObject = __webpack_require__(180);
	
	function isObjectObject(o) {
	  return isObject(o) === true
	    && Object.prototype.toString.call(o) === '[object Object]';
	}
	
	module.exports = function isPlainObject(o) {
	  var ctor,prot;
	
	  if (isObjectObject(o) === false) return false;
	
	  // If has modified constructor
	  ctor = o.constructor;
	  if (typeof ctor !== 'function') return false;
	
	  // If has modified prototype
	  prot = ctor.prototype;
	  if (isObjectObject(prot) === false) return false;
	
	  // If constructor does not have an Object-specific method
	  if (prot.hasOwnProperty('isPrototypeOf') === false) {
	    return false;
	  }
	
	  // Most likely a plain Object
	  return true;
	};


/***/ }),
/* 180 */
/***/ (function(module, exports) {

	/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	module.exports = function isObject(val) {
	  return val != null && typeof val === 'object' && Array.isArray(val) === false;
	};


/***/ }),
/* 181 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = '__THEMING__';

/***/ }),
/* 182 */
/***/ (function(module, exports) {

	function createBroadcast (initialState) {
	  var listeners = {};
	  var id = 1;
	  var _state = initialState;
	
	  function getState () {
	    return _state
	  }
	
	  function setState (state) {
	    _state = state;
	    var keys = Object.keys(listeners);
	    var i = 0;
	    var len = keys.length;
	    for (; i < len; i++) {
	      // if a listener gets unsubscribed during setState we just skip it
	      if (listeners[keys[i]]) { listeners[keys[i]](state); }
	    }
	  }
	
	  // subscribe to changes and return the subscriptionId
	  function subscribe (listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('listener must be a function.')
	    }
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    return currentId
	  }
	
	  // remove subscription by removing the listener function
	  function unsubscribe (id) {
	    listeners[id] = undefined;
	  }
	
	  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }
	}
	
	module.exports = createBroadcast;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createWithTheme;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _channel = __webpack_require__(181);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	var _createThemeListener = __webpack_require__(184);
	
	var _createThemeListener2 = _interopRequireDefault(_createThemeListener);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDisplayName = function getDisplayName(Component) {
	  return Component.displayName || Component.name || 'Component';
	};
	
	function createWithTheme() {
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  var themeListener = (0, _createThemeListener2.default)(CHANNEL);
	  return function (Component) {
	    var _class, _temp;
	
	    return _temp = _class = function (_React$Component) {
	      _inherits(WithTheme, _React$Component);
	
	      function WithTheme(props, context) {
	        _classCallCheck(this, WithTheme);
	
	        var _this = _possibleConstructorReturn(this, (WithTheme.__proto__ || Object.getPrototypeOf(WithTheme)).call(this, props, context));
	
	        _this.state = { theme: themeListener.initial(context) };
	        _this.setTheme = function (theme) {
	          return _this.setState({ theme: theme });
	        };
	        return _this;
	      }
	
	      _createClass(WithTheme, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          this.unsubscribe = themeListener.subscribe(this.context, this.setTheme);
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          if (typeof this.unsubscribe === 'function') {
	            this.unsubscribe();
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var theme = this.state.theme;
	
	
	          return _react2.default.createElement(Component, _extends({ theme: theme }, this.props));
	        }
	      }]);
	
	      return WithTheme;
	    }(_react2.default.Component), _class.displayName = 'WithTheme(' + getDisplayName(Component) + ')', _class.contextTypes = themeListener.contextTypes, _temp;
	  };
	}

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createThemeListener;
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _channel = __webpack_require__(181);
	
	var _channel2 = _interopRequireDefault(_channel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function createThemeListener() {
	  var CHANNEL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _channel2.default;
	
	  var contextTypes = _defineProperty({}, CHANNEL, _propTypes2.default.object.isRequired);
	
	  function initial(context) {
	    if (!context[CHANNEL]) {
	      throw new Error('[' + this.displayName + '] Please use ThemeProvider to be able to use WithTheme');
	    }
	
	    return context[CHANNEL].getState();
	  }
	
	  function subscribe(context, cb) {
	    if (context[CHANNEL]) {
	      return context[CHANNEL].subscribe(cb);
	    }
	  }
	
	  function unsubscribe(context, subscriptionId) {
	    if (context[CHANNEL]) {
	      context[CHANNEL].unsubscribe(subscriptionId);
	    }
	  }
	
	  return {
	    contextTypes: contextTypes,
	    initial: initial,
	    subscribe: subscribe,
	    unsubscribe: unsubscribe
	  };
	}

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(17);
	
	var _jss = __webpack_require__(186);
	
	var _jss2 = _interopRequireDefault(_jss);
	
	var _ns = __webpack_require__(239);
	
	var ns = _interopRequireWildcard(_ns);
	
	var _contextTypes = __webpack_require__(240);
	
	var _contextTypes2 = _interopRequireDefault(_contextTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var JssProvider = function (_Component) {
	  _inherits(JssProvider, _Component);
	
	  function JssProvider() {
	    _classCallCheck(this, JssProvider);
	
	    return _possibleConstructorReturn(this, (JssProvider.__proto__ || Object.getPrototypeOf(JssProvider)).apply(this, arguments));
	  }
	
	  _createClass(JssProvider, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var _ref;
	
	      var generateClassName = this.props.generateClassName;
	
	
	      if (!generateClassName) {
	        var createGenerateClassName = _jss.createGenerateClassNameDefault;
	        var localJss = this.props.jss;
	
	        if (localJss && localJss.options.createGenerateClassName) {
	          createGenerateClassName = localJss.options.createGenerateClassName;
	        }
	        generateClassName = createGenerateClassName();
	      }
	
	      return _ref = {}, _defineProperty(_ref, ns.sheetOptions, {
	        generateClassName: generateClassName
	      }), _defineProperty(_ref, ns.providerId, Math.random()), _defineProperty(_ref, ns.jss, this.props.jss), _defineProperty(_ref, ns.sheetsRegistry, this.props.registry), _ref;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react.Children.only(this.props.children);
	    }
	  }]);
	
	  return JssProvider;
	}(_react.Component);
	
	JssProvider.propTypes = {
	  jss: (0, _propTypes.instanceOf)(_jss2['default'].constructor),
	  registry: (0, _propTypes.instanceOf)(_jss.SheetsRegistry),
	  generateClassName: _propTypes.func,
	  children: _propTypes.node.isRequired
	};
	JssProvider.childContextTypes = _contextTypes2['default'];
	exports['default'] = JssProvider;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getDynamicStyles = exports.SheetsRegistry = exports.SheetsManager = exports.createGenerateClassNameDefault = undefined;
	
	var _createGenerateClassName = __webpack_require__(187);
	
	Object.defineProperty(exports, 'createGenerateClassNameDefault', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createGenerateClassName)['default'];
	  }
	});
	
	var _SheetsManager = __webpack_require__(201);
	
	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsManager)['default'];
	  }
	});
	
	var _jss = __webpack_require__(202);
	
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsRegistry;
	  }
	});
	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _jss.getDynamicStyles;
	  }
	});
	
	var _jssPresetDefault = __webpack_require__(219);
	
	var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = (0, _jss.create)((0, _jssPresetDefault2['default'])());

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _StyleSheet = __webpack_require__(188);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _moduleId = __webpack_require__(200);
	
	var _moduleId2 = _interopRequireDefault(_moduleId);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var maxRules = 1e10;
	
	
	var env = ("production");
	
	/**
	 * Returns a function which generates unique class names based on counters.
	 * When new generator function is created, rule counter is reseted.
	 * We need to reset the rule counter for SSR for each request.
	 */
	
	exports['default'] = function () {
	  var ruleCounter = 0;
	  var defaultPrefix = env === 'production' ? 'c' : '';
	
	  return function (rule, sheet) {
	    ruleCounter += 1;
	
	    if (ruleCounter > maxRules) {
	      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);
	    }
	
	    var prefix = defaultPrefix;
	    var jssId = '';
	
	    if (sheet) {
	      prefix = sheet.options.classNamePrefix || defaultPrefix;
	      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;
	    }
	
	    if (env === 'production') {
	      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;
	    }
	
	    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;
	  };
	};

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _linkRule = __webpack_require__(189);
	
	var _linkRule2 = _interopRequireDefault(_linkRule);
	
	var _RuleList = __webpack_require__(190);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var StyleSheet = function () {
	  function StyleSheet(styles, options) {
	    _classCallCheck(this, StyleSheet);
	
	    this.attached = false;
	    this.deployed = false;
	    this.linked = false;
	    this.classes = {};
	    this.options = _extends({}, options, {
	      sheet: this,
	      parent: this,
	      classes: this.classes
	    });
	    this.renderer = new options.Renderer(this);
	    this.rules = new _RuleList2['default'](this.options);
	
	    for (var name in styles) {
	      this.rules.add(name, styles[name]);
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Attach renderable to the render tree.
	   */
	
	
	  _createClass(StyleSheet, [{
	    key: 'attach',
	    value: function attach() {
	      if (this.attached) return this;
	      if (!this.deployed) this.deploy();
	      this.renderer.attach();
	      if (!this.linked && this.options.link) this.link();
	      this.attached = true;
	      return this;
	    }
	
	    /**
	     * Remove renderable from render tree.
	     */
	
	  }, {
	    key: 'detach',
	    value: function detach() {
	      if (!this.attached) return this;
	      this.renderer.detach();
	      this.attached = false;
	      return this;
	    }
	
	    /**
	     * Add a rule to the current stylesheet.
	     * Will insert a rule also after the stylesheet has been rendered first time.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, decl, options) {
	      var queue = this.queue;
	
	      // Plugins can create rules.
	      // In order to preserve the right order, we need to queue all `.addRule` calls,
	      // which happen after the first `rules.add()` call.
	
	      if (this.attached && !queue) this.queue = [];
	
	      var rule = this.rules.add(name, decl, options);
	      this.options.jss.plugins.onProcessRule(rule);
	
	      if (this.attached) {
	        if (!this.deployed) return rule;
	        // Don't insert rule directly if there is no stringified version yet.
	        // It will be inserted all together when .attach is called.
	        if (queue) queue.push(rule);else {
	          this.insertRule(rule);
	          if (this.queue) {
	            this.queue.forEach(this.insertRule, this);
	            this.queue = undefined;
	          }
	        }
	        return rule;
	      }
	
	      // We can't add rules to a detached style node.
	      // We will redeploy the sheet once user will attach it.
	      this.deployed = false;
	
	      return rule;
	    }
	
	    /**
	     * Insert rule into the StyleSheet
	     */
	
	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule) {
	      var renderable = this.renderer.insertRule(rule);
	      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
	    }
	
	    /**
	     * Create and add rules.
	     * Will render also after Style Sheet was rendered the first time.
	     */
	
	  }, {
	    key: 'addRules',
	    value: function addRules(styles, options) {
	      var added = [];
	      for (var name in styles) {
	        added.push(this.addRule(name, styles[name], options));
	      }
	      return added;
	    }
	
	    /**
	     * Get a rule by name.
	     */
	
	  }, {
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Delete a rule by name.
	     * Returns `true`: if rule has been deleted from the DOM.
	     */
	
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(name) {
	      var rule = this.rules.get(name);
	
	      if (!rule) return false;
	
	      this.rules.remove(rule);
	
	      if (this.attached && rule.renderable) {
	        return this.renderer.deleteRule(rule.renderable);
	      }
	
	      return true;
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Deploy pure CSS string to a renderable.
	     */
	
	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      this.renderer.deploy();
	      this.deployed = true;
	      return this;
	    }
	
	    /**
	     * Link renderable CSS rules from sheet with their corresponding models.
	     */
	
	  }, {
	    key: 'link',
	    value: function link() {
	      var cssRules = this.renderer.getRules();
	
	      // Is undefined when VirtualRenderer is used.
	      if (cssRules) this.rules.link(cssRules);
	      this.linked = true;
	      return this;
	    }
	
	    /**
	     * Update the function values with a new data.
	     */
	
	  }, {
	    key: 'update',
	    value: function update(name, data) {
	      this.rules.update(name, data);
	      return this;
	    }
	
	    /**
	     * Convert rules to a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return this.rules.toString(options);
	    }
	  }]);
	
	  return StyleSheet;
	}();
	
	exports['default'] = StyleSheet;

/***/ }),
/* 189 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = linkRule;
	/**
	 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
	 */
	function linkRule(rule, cssRule) {
	  rule.renderable = cssRule;
	  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
	}

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _createRule = __webpack_require__(191);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	var _linkRule = __webpack_require__(189);
	
	var _linkRule2 = _interopRequireDefault(_linkRule);
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _escape = __webpack_require__(199);
	
	var _escape2 = _interopRequireDefault(_escape);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Contains rules objects and allows adding/removing etc.
	 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
	 */
	var RuleList = function () {
	
	  // Original styles object.
	  function RuleList(options) {
	    _classCallCheck(this, RuleList);
	
	    this.map = {};
	    this.raw = {};
	    this.index = [];
	
	    this.options = options;
	    this.classes = options.classes;
	  }
	
	  /**
	   * Create and register rule.
	   *
	   * Will not render after Style Sheet was rendered the first time.
	   */
	
	
	  // Used to ensure correct rules order.
	
	  // Rules registry for access by .get() method.
	  // It contains the same rule registered by name and by selector.
	
	
	  _createClass(RuleList, [{
	    key: 'add',
	    value: function add(name, decl, options) {
	      var _options = this.options,
	          parent = _options.parent,
	          sheet = _options.sheet,
	          jss = _options.jss,
	          Renderer = _options.Renderer,
	          generateClassName = _options.generateClassName;
	
	
	      options = _extends({
	        classes: this.classes,
	        parent: parent,
	        sheet: sheet,
	        jss: jss,
	        Renderer: Renderer,
	        generateClassName: generateClassName
	      }, options);
	
	      if (!options.selector && this.classes[name]) {
	        options.selector = '.' + (0, _escape2['default'])(this.classes[name]);
	      }
	
	      this.raw[name] = decl;
	
	      var rule = (0, _createRule2['default'])(name, decl, options);
	
	      var className = void 0;
	
	      if (!options.selector && rule instanceof _StyleRule2['default']) {
	        className = generateClassName(rule, sheet);
	        rule.selector = '.' + (0, _escape2['default'])(className);
	      }
	
	      this.register(rule, className);
	
	      var index = options.index === undefined ? this.index.length : options.index;
	      this.index.splice(index, 0, rule);
	
	      return rule;
	    }
	
	    /**
	     * Get a rule.
	     */
	
	  }, {
	    key: 'get',
	    value: function get(name) {
	      return this.map[name];
	    }
	
	    /**
	     * Delete a rule.
	     */
	
	  }, {
	    key: 'remove',
	    value: function remove(rule) {
	      this.unregister(rule);
	      this.index.splice(this.indexOf(rule), 1);
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.index.indexOf(rule);
	    }
	
	    /**
	     * Run `onProcessRule()` plugins on every rule.
	     */
	
	  }, {
	    key: 'process',
	    value: function process() {
	      var plugins = this.options.jss.plugins;
	      // We need to clone array because if we modify the index somewhere else during a loop
	      // we end up with very hard-to-track-down side effects.
	
	      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
	    }
	
	    /**
	     * Register a rule in `.map` and `.classes` maps.
	     */
	
	  }, {
	    key: 'register',
	    value: function register(rule, className) {
	      this.map[rule.key] = rule;
	      if (rule instanceof _StyleRule2['default']) {
	        this.map[rule.selector] = rule;
	        if (className) this.classes[rule.key] = className;
	      }
	    }
	
	    /**
	     * Unregister a rule.
	     */
	
	  }, {
	    key: 'unregister',
	    value: function unregister(rule) {
	      delete this.map[rule.key];
	      if (rule instanceof _StyleRule2['default']) {
	        delete this.map[rule.selector];
	        delete this.classes[rule.key];
	      }
	    }
	
	    /**
	     * Update the function values with a new data.
	     */
	
	  }, {
	    key: 'update',
	    value: function update(name, data) {
	      var _options2 = this.options,
	          plugins = _options2.jss.plugins,
	          sheet = _options2.sheet;
	
	      if (typeof name === 'string') {
	        plugins.onUpdate(data, this.get(name), sheet);
	        return;
	      }
	
	      for (var index = 0; index < this.index.length; index++) {
	        plugins.onUpdate(name, this.index[index], sheet);
	      }
	    }
	
	    /**
	     * Link renderable rules with CSSRuleList.
	     */
	
	  }, {
	    key: 'link',
	    value: function link(cssRules) {
	      var map = this.options.sheet.renderer.getUnescapedKeysMap(this.index);
	
	      for (var i = 0; i < cssRules.length; i++) {
	        var cssRule = cssRules[i];
	        var _key = this.options.sheet.renderer.getKey(cssRule);
	        if (map[_key]) _key = map[_key];
	        var rule = this.map[_key];
	        if (rule) (0, _linkRule2['default'])(rule, cssRule);
	      }
	    }
	
	    /**
	     * Convert rules to a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      var str = '';
	      var sheet = this.options.sheet;
	
	      var link = sheet ? sheet.options.link : false;
	
	      for (var index = 0; index < this.index.length; index++) {
	        var rule = this.index[index];
	        var css = rule.toString(options);
	
	        // No need to render an empty rule.
	        if (!css && !link) continue;
	
	        if (str) str += '\n';
	        str += css;
	      }
	
	      return str;
	    }
	  }]);
	
	  return RuleList;
	}();
	
	exports['default'] = RuleList;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = createRule;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _cloneStyle = __webpack_require__(195);
	
	var _cloneStyle2 = _interopRequireDefault(_cloneStyle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Create a rule instance.
	 */
	function createRule() {
	  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
	  var decl = arguments[1];
	  var options = arguments[2];
	  var jss = options.jss;
	
	  var declCopy = (0, _cloneStyle2['default'])(decl);
	
	  var rule = jss.plugins.onCreateRule(name, declCopy, options);
	  if (rule) return rule;
	
	  // It is an at-rule and it has no instance.
	  if (name[0] === '@') {
	    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
	  }
	
	  return new _StyleRule2['default'](name, declCopy, options);
	}

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _toCss = __webpack_require__(193);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	var _toCssValue = __webpack_require__(194);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var StyleRule = function () {
	  function StyleRule(key, style, options) {
	    _classCallCheck(this, StyleRule);
	
	    this.type = 'style';
	    this.isProcessed = false;
	    var sheet = options.sheet,
	        Renderer = options.Renderer,
	        selector = options.selector;
	
	    this.key = key;
	    this.options = options;
	    this.style = style;
	    if (selector) this.selectorText = selector;
	    this.renderer = sheet ? sheet.renderer : new Renderer();
	  }
	
	  /**
	   * Set selector string.
	   * Attention: use this with caution. Most browsers didn't implement
	   * selectorText setter, so this may result in rerendering of entire Style Sheet.
	   */
	
	
	  _createClass(StyleRule, [{
	    key: 'prop',
	
	
	    /**
	     * Get or set a style property.
	     */
	    value: function prop(name, value) {
	      // It's a getter.
	      if (value === undefined) return this.style[name];
	
	      // Don't do anything if the value has not changed.
	      if (this.style[name] === value) return this;
	
	      value = this.options.jss.plugins.onChangeValue(value, name, this);
	
	      var isEmpty = value == null || value === false;
	      var isDefined = name in this.style;
	
	      // Value is empty and wasn't defined before.
	      if (isEmpty && !isDefined) return this;
	
	      // We are going to remove this value.
	      var remove = isEmpty && isDefined;
	
	      if (remove) delete this.style[name];else this.style[name] = value;
	
	      // Renderable is defined if StyleSheet option `link` is true.
	      if (this.renderable) {
	        if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, value);
	        return this;
	      }
	
	      var sheet = this.options.sheet;
	
	      if (sheet && sheet.attached) {
	        (0, _warning2['default'])(false, 'Rule is not linked. Missing sheet option "link: true".');
	      }
	      return this;
	    }
	
	    /**
	     * Apply rule to an element inline.
	     */
	
	  }, {
	    key: 'applyTo',
	    value: function applyTo(renderable) {
	      var json = this.toJSON();
	      for (var prop in json) {
	        this.renderer.setProperty(renderable, prop, json[prop]);
	      }return this;
	    }
	
	    /**
	     * Returns JSON representation of the rule.
	     * Fallbacks are not supported.
	     * Useful for inline styles.
	     */
	
	  }, {
	    key: 'toJSON',
	    value: function toJSON() {
	      var json = {};
	      for (var prop in this.style) {
	        var value = this.style[prop];
	        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
	      }
	      return json;
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      var sheet = this.options.sheet;
	
	      var link = sheet ? sheet.options.link : false;
	      var opts = link ? _extends({}, options, { allowEmpty: true }) : options;
	      return (0, _toCss2['default'])(this.selector, this.style, opts);
	    }
	  }, {
	    key: 'selector',
	    set: function set(selector) {
	      if (selector === this.selectorText) return;
	
	      this.selectorText = selector;
	
	      if (!this.renderable) return;
	
	      var hasChanged = this.renderer.setSelector(this.renderable, selector);
	
	      // If selector setter is not implemented, rerender the rule.
	      if (!hasChanged && this.renderable) {
	        var renderable = this.renderer.replaceRule(this.renderable, this);
	        if (renderable) this.renderable = renderable;
	      }
	    }
	
	    /**
	     * Get selector string.
	     */
	    ,
	    get: function get() {
	      return this.selectorText;
	    }
	  }]);
	
	  return StyleRule;
	}();
	
	exports['default'] = StyleRule;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCss;
	
	var _toCssValue = __webpack_require__(194);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Indent a string.
	 * http://jsperf.com/array-join-vs-for
	 */
	function indentStr(str, indent) {
	  var result = '';
	  for (var index = 0; index < indent; index++) {
	    result += '  ';
	  }return result + str;
	}
	
	/**
	 * Converts a Rule to CSS string.
	 */
	
	function toCss(selector, style) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  var result = '';
	
	  if (!style) return result;
	
	  var _options$indent = options.indent,
	      indent = _options$indent === undefined ? 0 : _options$indent;
	  var fallbacks = style.fallbacks;
	
	
	  indent++;
	
	  // Apply fallbacks first.
	  if (fallbacks) {
	    // Array syntax {fallbacks: [{prop: value}]}
	    if (Array.isArray(fallbacks)) {
	      for (var index = 0; index < fallbacks.length; index++) {
	        var fallback = fallbacks[index];
	        for (var prop in fallback) {
	          var value = fallback[prop];
	          if (value != null) {
	            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
	          }
	        }
	      }
	    } else {
	      // Object syntax {fallbacks: {prop: value}}
	      for (var _prop in fallbacks) {
	        var _value = fallbacks[_prop];
	        if (_value != null) {
	          result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
	        }
	      }
	    }
	  }
	
	  for (var _prop2 in style) {
	    var _value2 = style[_prop2];
	    if (_value2 != null && _prop2 !== 'fallbacks') {
	      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
	    }
	  }
	
	  // Allow empty style in this case, because properties will be added dynamically.
	  if (!result && !options.allowEmpty) return result;
	
	  indent--;
	  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);
	
	  return result;
	}

/***/ }),
/* 194 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCssValue;
	var join = function join(value, by) {
	  var result = '';
	  for (var i = 0; i < value.length; i++) {
	    // Remove !important from the value, it will be readded later.
	    if (value[i] === '!important') break;
	    if (result) result += by;
	    result += value[i];
	  }
	  return result;
	};
	
	/**
	 * Converts array values to string.
	 *
	 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
	 * `border: ['1px', '2px']` > `border: 1px, 2px;`
	 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
	 * `color: ['red', !important]` > `color: red !important;`
	 */
	function toCssValue(value) {
	  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (!Array.isArray(value)) return value;
	
	  var cssValue = '';
	
	  // Support space separated values via `[['5px', '10px']]`.
	  if (Array.isArray(value[0])) {
	    for (var i = 0; i < value.length; i++) {
	      if (value[i] === '!important') break;
	      if (cssValue) cssValue += ', ';
	      cssValue += join(value[i], ' ');
	    }
	  } else cssValue = join(value, ', ');
	
	  // Add !important, because it was ignored.
	  if (!ignoreImportant && value[value.length - 1] === '!important') {
	    cssValue += ' !important';
	  }
	
	  return cssValue;
	}

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = cloneStyle;
	
	var _isObservable = __webpack_require__(196);
	
	var _isObservable2 = _interopRequireDefault(_isObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var isArray = Array.isArray;
	function cloneStyle(style) {
	  // Support empty values in case user ends up with them by accident.
	  if (style == null) return style;
	
	  // Support string value for SimpleRule.
	  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);
	
	  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {
	    return style;
	  }
	
	  // Support array for FontFaceRule.
	  if (isArray(style)) return style.map(cloneStyle);
	
	  // Support Observable styles.  Observables are immutable, so we don't need to
	  // copy them.
	  if ((0, _isObservable2['default'])(style)) return style;
	
	  var newStyle = {};
	  for (var name in style) {
	    var value = style[name];
	    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      newStyle[name] = cloneStyle(value);
	      continue;
	    }
	    newStyle[name] = value;
	  }
	
	  return newStyle;
	}

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _symbolObservable = __webpack_require__(197);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = function (value) {
	  return value && value[_symbolObservable2['default']] && value === value[_symbolObservable2['default']]();
	};

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(198);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(56)(module)))

/***/ }),
/* 198 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var CSS = global.CSS;
	
	var env = ("production");
	
	var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;
	
	exports['default'] = function (str) {
	  // We don't need to escape it in production, because we are not using user's
	  // input for selectors, we are generating a valid selector.
	  if (env === 'production') return str;
	
	  if (!CSS || !CSS.escape) {
	    return str.replace(escapeRegex, '\\$1');
	  }
	
	  return CSS.escape(str);
	};

/***/ }),
/* 200 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
	if (global[ns] == null) global[ns] = 0;
	
	// Bundle may contain multiple JSS versions at the same time. In order to identify
	// the current version with just one short number and use it for classes generation
	// we use a counter. Also it is more accurate, because user can manually reevaluate
	// the module.
	exports['default'] = global[ns]++;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * SheetsManager is like a WeakMap which is designed to count StyleSheet
	 * instances and attach/detach automatically.
	 */
	var SheetsManager = function () {
	  function SheetsManager() {
	    _classCallCheck(this, SheetsManager);
	
	    this.sheets = [];
	    this.refs = [];
	    this.keys = [];
	  }
	
	  _createClass(SheetsManager, [{
	    key: 'get',
	    value: function get(key) {
	      var index = this.keys.indexOf(key);
	      return this.sheets[index];
	    }
	  }, {
	    key: 'add',
	    value: function add(key, sheet) {
	      var sheets = this.sheets,
	          refs = this.refs,
	          keys = this.keys;
	
	      var index = sheets.indexOf(sheet);
	
	      if (index !== -1) return index;
	
	      sheets.push(sheet);
	      refs.push(0);
	      keys.push(key);
	
	      return sheets.length - 1;
	    }
	  }, {
	    key: 'manage',
	    value: function manage(key) {
	      var index = this.keys.indexOf(key);
	      var sheet = this.sheets[index];
	      if (this.refs[index] === 0) sheet.attach();
	      this.refs[index]++;
	      if (!this.keys[index]) this.keys.splice(index, 0, key);
	      return sheet;
	    }
	  }, {
	    key: 'unmanage',
	    value: function unmanage(key) {
	      var index = this.keys.indexOf(key);
	      if (index === -1) {
	        // eslint-ignore-next-line no-console
	        (0, _warning2['default'])(false, "SheetsManager: can't find sheet to unmanage");
	        return;
	      }
	      if (this.refs[index] > 0) {
	        this.refs[index]--;
	        if (this.refs[index] === 0) this.sheets[index].detach();
	      }
	    }
	  }, {
	    key: 'size',
	    get: function get() {
	      return this.keys.length;
	    }
	  }]);
	
	  return SheetsManager;
	}();
	
	exports['default'] = SheetsManager;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.create = exports.createGenerateClassName = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.toCssValue = exports.getDynamicStyles = undefined;
	
	var _getDynamicStyles = __webpack_require__(203);
	
	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getDynamicStyles)['default'];
	  }
	});
	
	var _toCssValue = __webpack_require__(194);
	
	Object.defineProperty(exports, 'toCssValue', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_toCssValue)['default'];
	  }
	});
	
	var _SheetsRegistry = __webpack_require__(204);
	
	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsRegistry)['default'];
	  }
	});
	
	var _SheetsManager = __webpack_require__(201);
	
	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsManager)['default'];
	  }
	});
	
	var _RuleList = __webpack_require__(190);
	
	Object.defineProperty(exports, 'RuleList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RuleList)['default'];
	  }
	});
	
	var _sheets = __webpack_require__(205);
	
	Object.defineProperty(exports, 'sheets', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_sheets)['default'];
	  }
	});
	
	var _createGenerateClassName = __webpack_require__(187);
	
	Object.defineProperty(exports, 'createGenerateClassName', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createGenerateClassName)['default'];
	  }
	});
	
	var _Jss = __webpack_require__(206);
	
	var _Jss2 = _interopRequireDefault(_Jss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a new instance of Jss.
	 */
	var create = exports.create = function create(options) {
	  return new _Jss2['default'](options);
	};
	
	/**
	 * A global Jss instance.
	 */
	exports['default'] = create();

/***/ }),
/* 203 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/**
	 * Extracts a styles object with only props that contain function values.
	 */
	exports['default'] = function (styles) {
	  // eslint-disable-next-line no-shadow
	  function extract(styles) {
	    var to = null;
	
	    for (var key in styles) {
	      var value = styles[key];
	      var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	
	      if (type === 'function') {
	        if (!to) to = {};
	        to[key] = value;
	      } else if (type === 'object' && value !== null && !Array.isArray(value)) {
	        var extracted = extract(value);
	        if (extracted) {
	          if (!to) to = {};
	          to[key] = extracted;
	        }
	      }
	    }
	
	    return to;
	  }
	
	  return extract(styles);
	};

/***/ }),
/* 204 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Sheets registry to access them all at one place.
	 */
	var SheetsRegistry = function () {
	  function SheetsRegistry() {
	    _classCallCheck(this, SheetsRegistry);
	
	    this.registry = [];
	  }
	
	  _createClass(SheetsRegistry, [{
	    key: 'add',
	
	
	    /**
	     * Register a Style Sheet.
	     */
	    value: function add(sheet) {
	      var registry = this.registry;
	      var index = sheet.options.index;
	
	
	      if (registry.indexOf(sheet) !== -1) return;
	
	      if (registry.length === 0 || index >= this.index) {
	        registry.push(sheet);
	        return;
	      }
	
	      // Find a position.
	      for (var i = 0; i < registry.length; i++) {
	        if (registry[i].options.index > index) {
	          registry.splice(i, 0, sheet);
	          return;
	        }
	      }
	    }
	
	    /**
	     * Reset the registry.
	     */
	
	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.registry = [];
	    }
	
	    /**
	     * Remove a Style Sheet.
	     */
	
	  }, {
	    key: 'remove',
	    value: function remove(sheet) {
	      var index = this.registry.indexOf(sheet);
	      this.registry.splice(index, 1);
	    }
	
	    /**
	     * Convert all attached sheets to a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return this.registry.filter(function (sheet) {
	        return sheet.attached;
	      }).map(function (sheet) {
	        return sheet.toString(options);
	      }).join('\n');
	    }
	  }, {
	    key: 'index',
	
	
	    /**
	     * Current highest index number.
	     */
	    get: function get() {
	      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
	    }
	  }]);
	
	  return SheetsRegistry;
	}();
	
	exports['default'] = SheetsRegistry;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SheetsRegistry = __webpack_require__(204);
	
	var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * This is a global sheets registry. Only DomRenderer will add sheets to it.
	 * On the server one should use an own SheetsRegistry instance and add the
	 * sheets to it, because you need to make sure to create a new registry for
	 * each request in order to not leak sheets across requests.
	 */
	exports['default'] = new _SheetsRegistry2['default']();

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _isInBrowser = __webpack_require__(207);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _StyleSheet = __webpack_require__(188);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _PluginsRegistry = __webpack_require__(208);
	
	var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);
	
	var _rules = __webpack_require__(209);
	
	var _rules2 = _interopRequireDefault(_rules);
	
	var _observables = __webpack_require__(215);
	
	var _observables2 = _interopRequireDefault(_observables);
	
	var _functions = __webpack_require__(216);
	
	var _functions2 = _interopRequireDefault(_functions);
	
	var _sheets = __webpack_require__(205);
	
	var _sheets2 = _interopRequireDefault(_sheets);
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createGenerateClassName = __webpack_require__(187);
	
	var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);
	
	var _createRule2 = __webpack_require__(191);
	
	var _createRule3 = _interopRequireDefault(_createRule2);
	
	var _DomRenderer = __webpack_require__(217);
	
	var _DomRenderer2 = _interopRequireDefault(_DomRenderer);
	
	var _VirtualRenderer = __webpack_require__(218);
	
	var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var defaultPlugins = _rules2['default'].concat([_observables2['default'], _functions2['default']]);
	
	var instanceCounter = 0;
	
	var Jss = function () {
	  function Jss(options) {
	    _classCallCheck(this, Jss);
	
	    this.id = instanceCounter++;
	    this.version = "9.8.0";
	    this.plugins = new _PluginsRegistry2['default']();
	    this.options = {
	      createGenerateClassName: _createGenerateClassName2['default'],
	      Renderer: _isInBrowser2['default'] ? _DomRenderer2['default'] : _VirtualRenderer2['default'],
	      plugins: []
	    };
	    this.generateClassName = (0, _createGenerateClassName2['default'])();
	
	    // eslint-disable-next-line prefer-spread
	    this.use.apply(this, defaultPlugins);
	    this.setup(options);
	  }
	
	  _createClass(Jss, [{
	    key: 'setup',
	    value: function setup() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      if (options.createGenerateClassName) {
	        this.options.createGenerateClassName = options.createGenerateClassName;
	        // $FlowFixMe
	        this.generateClassName = options.createGenerateClassName();
	      }
	
	      if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;
	      if (options.virtual || options.Renderer) {
	        this.options.Renderer = options.Renderer || (options.virtual ? _VirtualRenderer2['default'] : _DomRenderer2['default']);
	      }
	
	      // eslint-disable-next-line prefer-spread
	      if (options.plugins) this.use.apply(this, options.plugins);
	
	      return this;
	    }
	
	    /**
	     * Create a Style Sheet.
	     */
	
	  }, {
	    key: 'createStyleSheet',
	    value: function createStyleSheet(styles) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var index = options.index;
	      if (typeof index !== 'number') {
	        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
	      }
	      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
	        jss: this,
	        generateClassName: options.generateClassName || this.generateClassName,
	        insertionPoint: this.options.insertionPoint,
	        Renderer: this.options.Renderer,
	        index: index
	      }));
	      this.plugins.onProcessSheet(sheet);
	
	      return sheet;
	    }
	
	    /**
	     * Detach the Style Sheet and remove it from the registry.
	     */
	
	  }, {
	    key: 'removeStyleSheet',
	    value: function removeStyleSheet(sheet) {
	      sheet.detach();
	      _sheets2['default'].remove(sheet);
	      return this;
	    }
	
	    /**
	     * Create a rule without a Style Sheet.
	     */
	
	  }, {
	    key: 'createRule',
	    value: function createRule(name) {
	      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      // Enable rule without name for inline styles.
	      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	        options = style;
	        style = name;
	        name = undefined;
	      }
	
	      // Cast from RuleFactoryOptions to RuleOptions
	      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	      var ruleOptions = options;
	
	      ruleOptions.jss = this;
	      ruleOptions.Renderer = this.options.Renderer;
	      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
	      if (!ruleOptions.classes) ruleOptions.classes = {};
	      var rule = (0, _createRule3['default'])(name, style, ruleOptions);
	
	      if (!ruleOptions.selector && rule instanceof _StyleRule2['default']) {
	        rule.selector = '.' + ruleOptions.generateClassName(rule);
	      }
	
	      this.plugins.onProcessRule(rule);
	
	      return rule;
	    }
	
	    /**
	     * Register plugin. Passed function will be invoked with a rule instance.
	     */
	
	  }, {
	    key: 'use',
	    value: function use() {
	      var _this = this;
	
	      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
	        plugins[_key] = arguments[_key];
	      }
	
	      plugins.forEach(function (plugin) {
	        // Avoids applying same plugin twice, at least based on ref.
	        if (_this.options.plugins.indexOf(plugin) === -1) {
	          _this.options.plugins.push(plugin);
	          _this.plugins.use(plugin);
	        }
	      });
	
	      return this;
	    }
	  }]);
	
	  return Jss;
	}();
	
	exports['default'] = Jss;

/***/ }),
/* 207 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var isBrowser = exports.isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;
	
	exports.default = isBrowser;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PluginsRegistry = function () {
	  function PluginsRegistry() {
	    _classCallCheck(this, PluginsRegistry);
	
	    this.hooks = {
	      onCreateRule: [],
	      onProcessRule: [],
	      onProcessStyle: [],
	      onProcessSheet: [],
	      onChangeValue: [],
	      onUpdate: []
	
	      /**
	       * Call `onCreateRule` hooks and return an object if returned by a hook.
	       */
	    };
	  }
	
	  _createClass(PluginsRegistry, [{
	    key: 'onCreateRule',
	    value: function onCreateRule(name, decl, options) {
	      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
	        var rule = this.hooks.onCreateRule[i](name, decl, options);
	        if (rule) return rule;
	      }
	      return null;
	    }
	
	    /**
	     * Call `onProcessRule` hooks.
	     */
	
	  }, {
	    key: 'onProcessRule',
	    value: function onProcessRule(rule) {
	      if (rule.isProcessed) return;
	      var sheet = rule.options.sheet;
	
	      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
	        this.hooks.onProcessRule[i](rule, sheet);
	      }
	
	      // $FlowFixMe
	      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);
	
	      rule.isProcessed = true;
	    }
	
	    /**
	     * Call `onProcessStyle` hooks.
	     */
	
	  }, {
	    key: 'onProcessStyle',
	    value: function onProcessStyle(style, rule, sheet) {
	      var nextStyle = style;
	
	      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
	        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
	        // $FlowFixMe
	        rule.style = nextStyle;
	      }
	    }
	
	    /**
	     * Call `onProcessSheet` hooks.
	     */
	
	  }, {
	    key: 'onProcessSheet',
	    value: function onProcessSheet(sheet) {
	      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
	        this.hooks.onProcessSheet[i](sheet);
	      }
	    }
	
	    /**
	     * Call `onUpdate` hooks.
	     */
	
	  }, {
	    key: 'onUpdate',
	    value: function onUpdate(data, rule, sheet) {
	      for (var i = 0; i < this.hooks.onUpdate.length; i++) {
	        this.hooks.onUpdate[i](data, rule, sheet);
	      }
	    }
	
	    /**
	     * Call `onChangeValue` hooks.
	     */
	
	  }, {
	    key: 'onChangeValue',
	    value: function onChangeValue(value, prop, rule) {
	      var processedValue = value;
	      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
	        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
	      }
	      return processedValue;
	    }
	
	    /**
	     * Register a plugin.
	     * If function is passed, it is a shortcut for `{onProcessRule}`.
	     */
	
	  }, {
	    key: 'use',
	    value: function use(plugin) {
	      for (var name in plugin) {
	        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
	      }
	    }
	  }]);
	
	  return PluginsRegistry;
	}();
	
	exports['default'] = PluginsRegistry;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SimpleRule = __webpack_require__(210);
	
	var _SimpleRule2 = _interopRequireDefault(_SimpleRule);
	
	var _KeyframesRule = __webpack_require__(211);
	
	var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);
	
	var _ConditionalRule = __webpack_require__(212);
	
	var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);
	
	var _FontFaceRule = __webpack_require__(213);
	
	var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);
	
	var _ViewportRule = __webpack_require__(214);
	
	var _ViewportRule2 = _interopRequireDefault(_ViewportRule);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var classes = {
	  '@charset': _SimpleRule2['default'],
	  '@import': _SimpleRule2['default'],
	  '@namespace': _SimpleRule2['default'],
	  '@keyframes': _KeyframesRule2['default'],
	  '@media': _ConditionalRule2['default'],
	  '@supports': _ConditionalRule2['default'],
	  '@font-face': _FontFaceRule2['default'],
	  '@viewport': _ViewportRule2['default'],
	  '@-ms-viewport': _ViewportRule2['default']
	
	  /**
	   * Generate plugins which will register all rules.
	   */
	};
	exports['default'] = Object.keys(classes).map(function (key) {
	  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
	  var re = new RegExp('^' + key);
	  var onCreateRule = function onCreateRule(name, decl, options) {
	    return re.test(name) ? new classes[key](name, decl, options) : null;
	  };
	  return { onCreateRule: onCreateRule };
	});

/***/ }),
/* 210 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var SimpleRule = function () {
	  function SimpleRule(key, value, options) {
	    _classCallCheck(this, SimpleRule);
	
	    this.type = 'simple';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.value = value;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	  // eslint-disable-next-line no-unused-vars
	
	
	  _createClass(SimpleRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.value)) {
	        var str = '';
	        for (var index = 0; index < this.value.length; index++) {
	          str += this.key + ' ' + this.value[index] + ';';
	          if (this.value[index + 1]) str += '\n';
	        }
	        return str;
	      }
	
	      return this.key + ' ' + this.value + ';';
	    }
	  }]);
	
	  return SimpleRule;
	}();
	
	exports['default'] = SimpleRule;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _RuleList = __webpack_require__(190);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Rule for @keyframes
	 */
	var KeyframesRule = function () {
	  function KeyframesRule(key, frames, options) {
	    _classCallCheck(this, KeyframesRule);
	
	    this.type = 'keyframes';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));
	
	    for (var name in frames) {
	      this.rules.add(name, frames[name], _extends({}, this.options, {
	        parent: this,
	        selector: name
	      }));
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(KeyframesRule, [{
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };
	
	      var inner = this.rules.toString(options);
	      if (inner) inner += '\n';
	      return this.key + ' {\n' + inner + '}';
	    }
	  }]);
	
	  return KeyframesRule;
	}();
	
	exports['default'] = KeyframesRule;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _RuleList = __webpack_require__(190);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Conditional rule for @media, @supports
	 */
	var ConditionalRule = function () {
	  function ConditionalRule(key, styles, options) {
	    _classCallCheck(this, ConditionalRule);
	
	    this.type = 'conditional';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));
	
	    for (var name in styles) {
	      this.rules.add(name, styles[name]);
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Get a rule.
	   */
	
	
	  _createClass(ConditionalRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Create and register rule, run plugins.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };
	
	      var inner = this.rules.toString(options);
	      return inner ? this.key + ' {\n' + inner + '\n}' : '';
	    }
	  }]);
	
	  return ConditionalRule;
	}();
	
	exports['default'] = ConditionalRule;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _toCss = __webpack_require__(193);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var FontFaceRule = function () {
	  function FontFaceRule(key, style, options) {
	    _classCallCheck(this, FontFaceRule);
	
	    this.type = 'font-face';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(FontFaceRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.style)) {
	        var str = '';
	        for (var index = 0; index < this.style.length; index++) {
	          str += (0, _toCss2['default'])(this.key, this.style[index]);
	          if (this.style[index + 1]) str += '\n';
	        }
	        return str;
	      }
	
	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);
	
	  return FontFaceRule;
	}();
	
	exports['default'] = FontFaceRule;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _toCss = __webpack_require__(193);
	
	var _toCss2 = _interopRequireDefault(_toCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ViewportRule = function () {
	  function ViewportRule(key, style, options) {
	    _classCallCheck(this, ViewportRule);
	
	    this.type = 'viewport';
	    this.isProcessed = false;
	
	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }
	
	  /**
	   * Generates a CSS string.
	   */
	
	
	  _createClass(ViewportRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);
	
	  return ViewportRule;
	}();
	
	exports['default'] = ViewportRule;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createRule = __webpack_require__(191);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	var _isObservable = __webpack_require__(196);
	
	var _isObservable2 = _interopRequireDefault(_isObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = {
	  onCreateRule: function onCreateRule(name, decl, options) {
	    if (!(0, _isObservable2['default'])(decl)) return null;
	
	    // Cast `decl` to `Observable`, since it passed the type guard.
	    var style$ = decl;
	
	    var rule = (0, _createRule2['default'])(name, {}, options);
	
	    // TODO
	    // Call `stream.subscribe()` returns a subscription, which should be explicitly
	    // unsubscribed from when we know this sheet is no longer needed.
	    style$.subscribe(function (style) {
	      for (var prop in style) {
	        rule.prop(prop, style[prop]);
	      }
	    });
	
	    return rule;
	  },
	  onProcessRule: function onProcessRule(rule) {
	    if (!(rule instanceof _StyleRule2['default'])) return;
	    var styleRule = rule;
	    var style = styleRule.style;
	
	    var _loop = function _loop(prop) {
	      var value = style[prop];
	      if (!(0, _isObservable2['default'])(value)) return 'continue';
	      delete style[prop];
	      value.subscribe({
	        next: function next(nextValue) {
	          styleRule.prop(prop, nextValue);
	        }
	      });
	    };
	
	    for (var prop in style) {
	      var _ret = _loop(prop);
	
	      if (_ret === 'continue') continue;
	    }
	  }
	};

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _RuleList = __webpack_require__(190);
	
	var _RuleList2 = _interopRequireDefault(_RuleList);
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _createRule = __webpack_require__(191);
	
	var _createRule2 = _interopRequireDefault(_createRule);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	// A symbol replacement.
	var now = Date.now();
	
	var fnValuesNs = 'fnValues' + now;
	var fnStyleNs = 'fnStyle' + ++now;
	
	exports['default'] = {
	  onCreateRule: function onCreateRule(name, decl, options) {
	    if (typeof decl !== 'function') return null;
	    var rule = (0, _createRule2['default'])(name, {}, options);
	    rule[fnStyleNs] = decl;
	    return rule;
	  },
	  onProcessStyle: function onProcessStyle(style, rule) {
	    var fn = {};
	    for (var prop in style) {
	      var value = style[prop];
	      if (typeof value !== 'function') continue;
	      delete style[prop];
	      fn[prop] = value;
	    }
	    rule = rule;
	    rule[fnValuesNs] = fn;
	    return style;
	  },
	  onUpdate: function onUpdate(data, rule) {
	    // It is a rules container like for e.g. ConditionalRule.
	    if (rule.rules instanceof _RuleList2['default']) {
	      rule.rules.update(data);
	      return;
	    }
	    if (!(rule instanceof _StyleRule2['default'])) return;
	
	    rule = rule;
	
	    // If we have a fn values map, it is a rule with function values.
	    if (rule[fnValuesNs]) {
	      for (var prop in rule[fnValuesNs]) {
	        rule.prop(prop, rule[fnValuesNs][prop](data));
	      }
	    }
	
	    rule = rule;
	
	    var fnStyle = rule[fnStyleNs];
	
	    // If we have a style function, the entire rule is dynamic and style object
	    // will be returned from that function.
	    if (fnStyle) {
	      var style = fnStyle(data);
	      for (var _prop in style) {
	        rule.prop(_prop, style[_prop]);
	      }
	    }
	  }
	};

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _sheets = __webpack_require__(205);
	
	var _sheets2 = _interopRequireDefault(_sheets);
	
	var _StyleRule = __webpack_require__(192);
	
	var _StyleRule2 = _interopRequireDefault(_StyleRule);
	
	var _toCssValue = __webpack_require__(194);
	
	var _toCssValue2 = _interopRequireDefault(_toCssValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Cache the value from the first time a function is called.
	 */
	var memoize = function memoize(fn) {
	  var value = void 0;
	  return function () {
	    if (!value) value = fn();
	    return value;
	  };
	};
	
	/**
	 * Get a style property value.
	 */
	function getPropertyValue(cssRule, prop) {
	  try {
	    return cssRule.style.getPropertyValue(prop);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return '';
	  }
	}
	
	/**
	 * Set a style property.
	 */
	function setProperty(cssRule, prop, value) {
	  try {
	    var cssValue = value;
	
	    if (Array.isArray(value)) {
	      cssValue = (0, _toCssValue2['default'])(value, true);
	
	      if (value[value.length - 1] === '!important') {
	        cssRule.style.setProperty(prop, cssValue, 'important');
	        return true;
	      }
	    }
	
	    cssRule.style.setProperty(prop, cssValue);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return false;
	  }
	  return true;
	}
	
	/**
	 * Remove a style property.
	 */
	function removeProperty(cssRule, prop) {
	  try {
	    cssRule.style.removeProperty(prop);
	  } catch (err) {
	    (0, _warning2['default'])(false, '[JSS] DOMException "%s" was thrown. Tried to remove property "%s".', err.message, prop);
	  }
	}
	
	var CSSRuleTypes = {
	  STYLE_RULE: 1,
	  KEYFRAMES_RULE: 7
	
	  /**
	   * Get the CSS Rule key.
	   */
	
	};var getKey = function () {
	  var extractKey = function extractKey(cssText) {
	    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    return cssText.substr(from, cssText.indexOf('{') - 1);
	  };
	
	  return function (cssRule) {
	    if (cssRule.type === CSSRuleTypes.STYLE_RULE) return cssRule.selectorText;
	    if (cssRule.type === CSSRuleTypes.KEYFRAMES_RULE) {
	      var name = cssRule.name;
	
	      if (name) return '@keyframes ' + name;
	
	      // There is no rule.name in the following browsers:
	      // - IE 9
	      // - Safari 7.1.8
	      // - Mobile Safari 9.0.0
	      var cssText = cssRule.cssText;
	
	      return '@' + extractKey(cssText, cssText.indexOf('keyframes'));
	    }
	
	    // Conditionals.
	    return extractKey(cssRule.cssText);
	  };
	}();
	
	/**
	 * Set the selector.
	 */
	function setSelector(cssRule, selectorText) {
	  cssRule.selectorText = selectorText;
	
	  // Return false if setter was not successful.
	  // Currently works in chrome only.
	  return cssRule.selectorText === selectorText;
	}
	
	/**
	 * Gets the `head` element upon the first call and caches it.
	 */
	var getHead = memoize(function () {
	  return document.head || document.getElementsByTagName('head')[0];
	});
	
	/**
	 * Gets a map of rule keys, where the property is an unescaped key and value
	 * is a potentially escaped one.
	 * It is used to identify CSS rules and the corresponding JSS rules. As an identifier
	 * for CSSStyleRule we normally use `selectorText`. Though if original selector text
	 * contains escaped code points e.g. `:not(#\\20)`, CSSOM will compile it to `:not(# )`
	 * and so CSS rule's `selectorText` won't match JSS rule selector.
	 *
	 * https://www.w3.org/International/questions/qa-escapes#cssescapes
	 */
	var getUnescapedKeysMap = function () {
	  var style = void 0;
	  var isAttached = false;
	
	  return function (rules) {
	    var map = {};
	    // https://github.com/facebook/flow/issues/2696
	    if (!style) style = document.createElement('style');
	    for (var i = 0; i < rules.length; i++) {
	      var rule = rules[i];
	      if (!(rule instanceof _StyleRule2['default'])) continue;
	      var selector = rule.selector;
	      // Only unescape selector over CSSOM if it contains a back slash.
	
	      if (selector && selector.indexOf('\\') !== -1) {
	        // Lazilly attach when needed.
	        if (!isAttached) {
	          getHead().appendChild(style);
	          isAttached = true;
	        }
	        style.textContent = selector + ' {}';
	        var _style = style,
	            sheet = _style.sheet;
	
	        if (sheet) {
	          var cssRules = sheet.cssRules;
	
	          if (cssRules) map[cssRules[0].selectorText] = rule.key;
	        }
	      }
	    }
	    if (isAttached) {
	      getHead().removeChild(style);
	      isAttached = false;
	    }
	    return map;
	  };
	}();
	
	/**
	 * Find attached sheet with an index higher than the passed one.
	 */
	function findHigherSheet(registry, options) {
	  for (var i = 0; i < registry.length; i++) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find attached sheet with the highest index.
	 */
	function findHighestSheet(registry, options) {
	  for (var i = registry.length - 1; i >= 0; i--) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find a comment with "jss" inside.
	 */
	function findCommentNode(text) {
	  var head = getHead();
	  for (var i = 0; i < head.childNodes.length; i++) {
	    var node = head.childNodes[i];
	    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Find a node before which we can insert the sheet.
	 */
	function findPrevNode(options) {
	  var registry = _sheets2['default'].registry;
	
	
	  if (registry.length > 0) {
	    // Try to insert before the next higher sheet.
	    var sheet = findHigherSheet(registry, options);
	    if (sheet) return sheet.renderer.element;
	
	    // Otherwise insert after the last attached.
	    sheet = findHighestSheet(registry, options);
	    if (sheet) return sheet.renderer.element.nextElementSibling;
	  }
	
	  // Try to find a comment placeholder if registry is empty.
	  var insertionPoint = options.insertionPoint;
	
	  if (insertionPoint && typeof insertionPoint === 'string') {
	    var comment = findCommentNode(insertionPoint);
	    if (comment) return comment.nextSibling;
	    // If user specifies an insertion point and it can't be found in the document -
	    // bad specificity issues may appear.
	    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
	  }
	
	  return null;
	}
	
	/**
	 * Insert style element into the DOM.
	 */
	function insertStyle(style, options) {
	  var insertionPoint = options.insertionPoint;
	
	  var prevNode = findPrevNode(options);
	
	  if (prevNode) {
	    var parentNode = prevNode.parentNode;
	
	    if (parentNode) parentNode.insertBefore(style, prevNode);
	    return;
	  }
	
	  // Works with iframes and any node types.
	  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
	    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	    var insertionPointElement = insertionPoint;
	    var _parentNode = insertionPointElement.parentNode;
	
	    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
	    return;
	  }
	
	  getHead().insertBefore(style, prevNode);
	}
	
	/**
	 * Read jss nonce setting from the page if the user has set it.
	 */
	var getNonce = memoize(function () {
	  var node = document.querySelector('meta[property="csp-nonce"]');
	  return node ? node.getAttribute('content') : null;
	});
	
	var DomRenderer = function () {
	  function DomRenderer(sheet) {
	    _classCallCheck(this, DomRenderer);
	
	    this.getPropertyValue = getPropertyValue;
	    this.setProperty = setProperty;
	    this.removeProperty = removeProperty;
	    this.setSelector = setSelector;
	    this.getKey = getKey;
	    this.getUnescapedKeysMap = getUnescapedKeysMap;
	    this.hasInsertedRules = false;
	
	    // There is no sheet when the renderer is used from a standalone StyleRule.
	    if (sheet) _sheets2['default'].add(sheet);
	
	    this.sheet = sheet;
	
	    var _ref = this.sheet ? this.sheet.options : {},
	        media = _ref.media,
	        meta = _ref.meta,
	        element = _ref.element;
	
	    this.element = element || document.createElement('style');
	    this.element.type = 'text/css';
	    this.element.setAttribute('data-jss', '');
	    if (media) this.element.setAttribute('media', media);
	    if (meta) this.element.setAttribute('data-meta', meta);
	    var nonce = getNonce();
	    if (nonce) this.element.setAttribute('nonce', nonce);
	  }
	
	  /**
	   * Insert style element into render tree.
	   */
	
	
	  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696
	
	
	  _createClass(DomRenderer, [{
	    key: 'attach',
	    value: function attach() {
	      // In the case the element node is external and it is already in the DOM.
	      if (this.element.parentNode || !this.sheet) return;
	
	      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
	      // browsers remove those rules.
	      // TODO figure out if its a bug and if it is known.
	      // Workaround is to redeploy the sheet before attaching as a string.
	      if (this.hasInsertedRules) {
	        this.deploy();
	        this.hasInsertedRules = false;
	      }
	
	      insertStyle(this.element, this.sheet.options);
	    }
	
	    /**
	     * Remove style element from render tree.
	     */
	
	  }, {
	    key: 'detach',
	    value: function detach() {
	      this.element.parentNode.removeChild(this.element);
	    }
	
	    /**
	     * Inject CSS string into element.
	     */
	
	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      if (!this.sheet) return;
	      this.element.textContent = '\n' + this.sheet.toString() + '\n';
	    }
	
	    /**
	     * Insert a rule into element.
	     */
	
	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule, index) {
	      var sheet = this.element.sheet;
	      var cssRules = sheet.cssRules;
	
	      var str = rule.toString();
	      if (!index) index = cssRules.length;
	
	      if (!str) return false;
	
	      try {
	        sheet.insertRule(str, index);
	      } catch (err) {
	        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
	        return false;
	      }
	      this.hasInsertedRules = true;
	
	      return cssRules[index];
	    }
	
	    /**
	     * Delete a rule.
	     */
	
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(cssRule) {
	      var sheet = this.element.sheet;
	
	      var index = this.indexOf(cssRule);
	      if (index === -1) return false;
	      sheet.deleteRule(index);
	      return true;
	    }
	
	    /**
	     * Get index of a CSS Rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(cssRule) {
	      var cssRules = this.element.sheet.cssRules;
	
	      for (var _index = 0; _index < cssRules.length; _index++) {
	        if (cssRule === cssRules[_index]) return _index;
	      }
	      return -1;
	    }
	
	    /**
	     * Generate a new CSS rule and replace the existing one.
	     */
	
	  }, {
	    key: 'replaceRule',
	    value: function replaceRule(cssRule, rule) {
	      var index = this.indexOf(cssRule);
	      var newCssRule = this.insertRule(rule, index);
	      this.element.sheet.deleteRule(index);
	      return newCssRule;
	    }
	
	    /**
	     * Get all rules elements.
	     */
	
	  }, {
	    key: 'getRules',
	    value: function getRules() {
	      return this.element.sheet.cssRules;
	    }
	  }]);
	
	  return DomRenderer;
	}();
	
	exports['default'] = DomRenderer;

/***/ }),
/* 218 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable class-methods-use-this */
	
	/**
	 * Rendering backend to do nothing in nodejs.
	 */
	var VirtualRenderer = function () {
	  function VirtualRenderer() {
	    _classCallCheck(this, VirtualRenderer);
	  }
	
	  _createClass(VirtualRenderer, [{
	    key: 'setProperty',
	    value: function setProperty() {
	      return true;
	    }
	  }, {
	    key: 'getPropertyValue',
	    value: function getPropertyValue() {
	      return '';
	    }
	  }, {
	    key: 'removeProperty',
	    value: function removeProperty() {}
	  }, {
	    key: 'setSelector',
	    value: function setSelector() {
	      return true;
	    }
	  }, {
	    key: 'getKey',
	    value: function getKey() {
	      return '';
	    }
	  }, {
	    key: 'attach',
	    value: function attach() {}
	  }, {
	    key: 'detach',
	    value: function detach() {}
	  }, {
	    key: 'deploy',
	    value: function deploy() {}
	  }, {
	    key: 'insertRule',
	    value: function insertRule() {
	      return false;
	    }
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule() {
	      return true;
	    }
	  }, {
	    key: 'replaceRule',
	    value: function replaceRule() {
	      return false;
	    }
	  }, {
	    key: 'getRules',
	    value: function getRules() {}
	  }, {
	    key: 'indexOf',
	    value: function indexOf() {
	      return -1;
	    }
	  }]);
	
	  return VirtualRenderer;
	}();
	
	exports['default'] = VirtualRenderer;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jssTemplate = __webpack_require__(220);
	
	var _jssTemplate2 = _interopRequireDefault(_jssTemplate);
	
	var _jssGlobal = __webpack_require__(222);
	
	var _jssGlobal2 = _interopRequireDefault(_jssGlobal);
	
	var _jssExtend = __webpack_require__(223);
	
	var _jssExtend2 = _interopRequireDefault(_jssExtend);
	
	var _jssNested = __webpack_require__(224);
	
	var _jssNested2 = _interopRequireDefault(_jssNested);
	
	var _jssCompose = __webpack_require__(225);
	
	var _jssCompose2 = _interopRequireDefault(_jssCompose);
	
	var _jssCamelCase = __webpack_require__(226);
	
	var _jssCamelCase2 = _interopRequireDefault(_jssCamelCase);
	
	var _jssDefaultUnit = __webpack_require__(228);
	
	var _jssDefaultUnit2 = _interopRequireDefault(_jssDefaultUnit);
	
	var _jssExpand = __webpack_require__(230);
	
	var _jssExpand2 = _interopRequireDefault(_jssExpand);
	
	var _jssVendorPrefixer = __webpack_require__(232);
	
	var _jssVendorPrefixer2 = _interopRequireDefault(_jssVendorPrefixer);
	
	var _jssPropsSort = __webpack_require__(238);
	
	var _jssPropsSort2 = _interopRequireDefault(_jssPropsSort);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return {
	    plugins: [(0, _jssTemplate2.default)(options.template), (0, _jssGlobal2.default)(options.global), (0, _jssExtend2.default)(options.extend), (0, _jssNested2.default)(options.nested), (0, _jssCompose2.default)(options.compose), (0, _jssCamelCase2.default)(options.camelCase), (0, _jssDefaultUnit2.default)(options.defaultUnit), (0, _jssExpand2.default)(options.expand), (0, _jssVendorPrefixer2.default)(options.vendorPrefixer), (0, _jssPropsSort2.default)(options.propsSort)]
	  };
	};

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _parse = __webpack_require__(221);
	
	var _parse2 = _interopRequireDefault(_parse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var onProcessRule = function onProcessRule(rule) {
	  if (typeof rule.style === 'string') {
	    rule.style = (0, _parse2['default'])(rule.style);
	  }
	};
	
	exports['default'] = function () {
	  return { onProcessRule: onProcessRule };
	};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var semiWithNl = /;\n/;
	
	/**
	 * Naive CSS parser.
	 * - Supports only rule body (no selectors)
	 * - Requires semicolon and new line after the value (except of last line)
	 * - No nested rules support
	 */
	
	exports['default'] = function (cssText) {
	  var style = {};
	  var split = cssText.split(semiWithNl);
	  for (var i = 0; i < split.length; i++) {
	    var decl = (split[i] || '').trim();
	
	    if (!decl) continue;
	    var colonIndex = decl.indexOf(':');
	    if (colonIndex === -1) {
	      (0, _warning2['default'])(false, 'Malformed CSS string "%s"', decl);
	      continue;
	    }
	    var prop = decl.substr(0, colonIndex).trim();
	    var value = decl.substr(colonIndex + 1).trim();
	    style[prop] = value;
	  }
	  return style;
	};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports['default'] = jssGlobal;
	
	var _jss = __webpack_require__(202);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var propKey = '@global';
	var prefixKey = '@global ';
	
	var GlobalContainerRule = function () {
	  function GlobalContainerRule(key, styles, options) {
	    _classCallCheck(this, GlobalContainerRule);
	
	    this.type = 'global';
	
	    this.key = key;
	    this.options = options;
	    this.rules = new _jss.RuleList(_extends({}, options, {
	      parent: this
	    }));
	
	    for (var selector in styles) {
	      this.rules.add(selector, styles[selector], { selector: selector });
	    }
	
	    this.rules.process();
	  }
	
	  /**
	   * Get a rule.
	   */
	
	
	  _createClass(GlobalContainerRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }
	
	    /**
	     * Create and register rule, run plugins.
	     */
	
	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }
	
	    /**
	     * Get index of a rule.
	     */
	
	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }
	
	    /**
	     * Generates a CSS string.
	     */
	
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return this.rules.toString();
	    }
	  }]);
	
	  return GlobalContainerRule;
	}();
	
	var GlobalPrefixedRule = function () {
	  function GlobalPrefixedRule(name, style, options) {
	    _classCallCheck(this, GlobalPrefixedRule);
	
	    this.name = name;
	    this.options = options;
	    var selector = name.substr(prefixKey.length);
	    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
	      parent: this,
	      selector: selector
	    }));
	  }
	
	  _createClass(GlobalPrefixedRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return this.rule.toString(options);
	    }
	  }]);
	
	  return GlobalPrefixedRule;
	}();
	
	var separatorRegExp = /\s*,\s*/g;
	
	function addScope(selector, scope) {
	  var parts = selector.split(separatorRegExp);
	  var scoped = '';
	  for (var i = 0; i < parts.length; i++) {
	    scoped += scope + ' ' + parts[i].trim();
	    if (parts[i + 1]) scoped += ', ';
	  }
	  return scoped;
	}
	
	function handleNestedGlobalContainerRule(rule) {
	  var options = rule.options,
	      style = rule.style;
	
	  var rules = style[propKey];
	
	  if (!rules) return;
	
	  for (var name in rules) {
	    options.sheet.addRule(name, rules[name], _extends({}, options, {
	      selector: addScope(name, rule.selector)
	    }));
	  }
	
	  delete style[propKey];
	}
	
	function handlePrefixedGlobalRule(rule) {
	  var options = rule.options,
	      style = rule.style;
	
	  for (var prop in style) {
	    if (prop.substr(0, propKey.length) !== propKey) continue;
	
	    var selector = addScope(prop.substr(propKey.length), rule.selector);
	    options.sheet.addRule(selector, style[prop], _extends({}, options, {
	      selector: selector
	    }));
	    delete style[prop];
	  }
	}
	
	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssGlobal() {
	  function onCreateRule(name, styles, options) {
	    if (name === propKey) {
	      return new GlobalContainerRule(name, styles, options);
	    }
	
	    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
	      return new GlobalPrefixedRule(name, styles, options);
	    }
	
	    var parent = options.parent;
	
	
	    if (parent) {
	      if (parent.type === 'global' || parent.options.parent.type === 'global') {
	        options.global = true;
	      }
	    }
	
	    if (options.global) options.selector = name;
	
	    return null;
	  }
	
	  function onProcessRule(rule) {
	    if (rule.type !== 'style') return;
	
	    handleNestedGlobalContainerRule(rule);
	    handlePrefixedGlobalRule(rule);
	  }
	
	  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
	}

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = jssExtend;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var isObject = function isObject(obj) {
	  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);
	};
	var valueNs = 'extendCurrValue' + Date.now();
	
	function mergeExtend(style, rule, sheet, newStyle) {
	  var extendType = _typeof(style.extend);
	  // Extend using a rule name.
	  if (extendType === 'string') {
	    if (!sheet) return;
	    var refRule = sheet.getRule(style.extend);
	    if (!refRule) return;
	    if (refRule === rule) {
	      (0, _warning2['default'])(false, '[JSS] A rule tries to extend itself \r\n%s', rule);
	      return;
	    }
	    var parent = refRule.options.parent;
	
	    if (parent) {
	      var originalStyle = parent.rules.raw[style.extend];
	      extend(originalStyle, rule, sheet, newStyle);
	    }
	    return;
	  }
	
	  // Extend using an array of objects.
	  if (Array.isArray(style.extend)) {
	    for (var index = 0; index < style.extend.length; index++) {
	      extend(style.extend[index], rule, sheet, newStyle);
	    }
	    return;
	  }
	
	  // Extend is a style object.
	  for (var prop in style.extend) {
	    if (prop === 'extend') {
	      extend(style.extend.extend, rule, sheet, newStyle);
	      continue;
	    }
	    if (isObject(style.extend[prop])) {
	      if (!(prop in newStyle)) newStyle[prop] = {};
	      extend(style.extend[prop], rule, sheet, newStyle[prop]);
	      continue;
	    }
	    newStyle[prop] = style.extend[prop];
	  }
	}
	
	function mergeRest(style, rule, sheet, newStyle) {
	  // Copy base style.
	  for (var prop in style) {
	    if (prop === 'extend') continue;
	    if (isObject(newStyle[prop]) && isObject(style[prop])) {
	      extend(style[prop], rule, sheet, newStyle[prop]);
	      continue;
	    }
	
	    if (isObject(style[prop])) {
	      newStyle[prop] = extend(style[prop], rule, sheet);
	      continue;
	    }
	
	    newStyle[prop] = style[prop];
	  }
	}
	
	/**
	 * Recursively extend styles.
	 */
	function extend(style, rule, sheet) {
	  var newStyle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	
	  mergeExtend(style, rule, sheet, newStyle);
	  mergeRest(style, rule, sheet, newStyle);
	  return newStyle;
	}
	
	/**
	 * Handle `extend` property.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExtend() {
	  function onProcessStyle(style, rule, sheet) {
	    if ('extend' in style) return extend(style, rule, sheet);
	    return style;
	  }
	
	  function onChangeValue(value, prop, rule) {
	    if (prop !== 'extend') return value;
	
	    // Value is empty, remove properties set previously.
	    if (value == null || value === false) {
	      for (var key in rule[valueNs]) {
	        rule.prop(key, null);
	      }
	      rule[valueNs] = null;
	      return null;
	    }
	
	    for (var _key in value) {
	      rule.prop(_key, value[_key]);
	    }
	    rule[valueNs] = value;
	
	    // Make sure we don't set the value in the core.
	    return null;
	  }
	
	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = jssNested;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var separatorRegExp = /\s*,\s*/g;
	var parentRegExp = /&/g;
	var refRegExp = /\$([\w-]+)/g;
	
	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssNested() {
	  // Get a function to be used for $ref replacement.
	  function getReplaceRef(container) {
	    return function (match, key) {
	      var rule = container.getRule(key);
	      if (rule) return rule.selector;
	      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
	      return key;
	    };
	  }
	
	  var hasAnd = function hasAnd(str) {
	    return str.indexOf('&') !== -1;
	  };
	
	  function replaceParentRefs(nestedProp, parentProp) {
	    var parentSelectors = parentProp.split(separatorRegExp);
	    var nestedSelectors = nestedProp.split(separatorRegExp);
	
	    var result = '';
	
	    for (var i = 0; i < parentSelectors.length; i++) {
	      var parent = parentSelectors[i];
	
	      for (var j = 0; j < nestedSelectors.length; j++) {
	        var nested = nestedSelectors[j];
	        if (result) result += ', ';
	        // Replace all & by the parent or prefix & with the parent.
	        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
	      }
	    }
	
	    return result;
	  }
	
	  function getOptions(rule, container, options) {
	    // Options has been already created, now we only increase index.
	    if (options) return _extends({}, options, { index: options.index + 1 });
	
	    var nestingLevel = rule.options.nestingLevel;
	
	    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;
	
	    return _extends({}, rule.options, {
	      nestingLevel: nestingLevel,
	      index: container.indexOf(rule) + 1
	    });
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	    var container = rule.options.parent;
	    var options = void 0;
	    var replaceRef = void 0;
	    for (var prop in style) {
	      var isNested = hasAnd(prop);
	      var isNestedConditional = prop[0] === '@';
	
	      if (!isNested && !isNestedConditional) continue;
	
	      options = getOptions(rule, container, options);
	
	      if (isNested) {
	        var selector = replaceParentRefs(prop, rule.selector
	        // Lazily create the ref replacer function just once for
	        // all nested rules within the sheet.
	        );if (!replaceRef) replaceRef = getReplaceRef(container
	        // Replace all $refs.
	        );selector = selector.replace(refRegExp, replaceRef);
	
	        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
	      } else if (isNestedConditional) {
	        container
	        // Place conditional right after the parent rule to ensure right ordering.
	        .addRule(prop, null, options).addRule(rule.key, style[prop], { selector: rule.selector });
	      }
	
	      delete style[prop];
	    }
	
	    return style;
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = jssCompose;
	
	var _warning = __webpack_require__(16);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Set selector.
	 *
	 * @param {Object} original rule
	 * @param {String} className class string
	 * @return {Boolean} flag, indicating function was successfull or not
	 */
	function registerClass(rule, className) {
	  // Skip falsy values
	  if (!className) return true;
	
	  // Support array of class names `{composes: ['foo', 'bar']}`
	  if (Array.isArray(className)) {
	    for (var index = 0; index < className.length; index++) {
	      var isSetted = registerClass(rule, className[index]);
	      if (!isSetted) return false;
	    }
	
	    return true;
	  }
	
	  // Support space separated class names `{composes: 'foo bar'}`
	  if (className.indexOf(' ') > -1) {
	    return registerClass(rule, className.split(' '));
	  }
	
	  var parent = rule.options.parent;
	
	  // It is a ref to a local rule.
	
	  if (className[0] === '$') {
	    var refRule = parent.getRule(className.substr(1));
	
	    if (!refRule) {
	      (0, _warning2.default)(false, '[JSS] Referenced rule is not defined. \r\n%s', rule);
	      return false;
	    }
	
	    if (refRule === rule) {
	      (0, _warning2.default)(false, '[JSS] Cyclic composition detected. \r\n%s', rule);
	      return false;
	    }
	
	    parent.classes[rule.key] += ' ' + parent.classes[refRule.key];
	
	    return true;
	  }
	
	  rule.options.parent.classes[rule.key] += ' ' + className;
	
	  return true;
	}
	
	/**
	 * Convert compose property to additional class, remove property from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssCompose() {
	  function onProcessStyle(style, rule) {
	    if (!style.composes) return style;
	    registerClass(rule, style.composes);
	    // Remove composes property to prevent infinite loop.
	    delete style.composes;
	    return style;
	  }
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelCase;
	
	var _hyphenateStyleName = __webpack_require__(227);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Convert camel cased property names to dash separated.
	 *
	 * @param {Object} style
	 * @return {Object}
	 */
	function convertCase(style) {
	  var converted = {};
	
	  for (var prop in style) {
	    converted[(0, _hyphenateStyleName2['default'])(prop)] = style[prop];
	  }
	
	  if (style.fallbacks) {
	    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
	  }
	
	  return converted;
	}
	
	/**
	 * Allow camel cased property names by converting them back to dasherized.
	 *
	 * @param {Rule} rule
	 */
	function camelCase() {
	  function onProcessStyle(style) {
	    if (Array.isArray(style)) {
	      // Handle rules like @font-face, which can have multiple styles in an array
	      for (var index = 0; index < style.length; index++) {
	        style[index] = convertCase(style[index]);
	      }
	      return style;
	    }
	
	    return convertCase(style);
	  }
	
	  function onChangeValue(value, prop, rule) {
	    var hyphenatedProp = (0, _hyphenateStyleName2['default'])(prop);
	
	    // There was no camel case in place
	    if (prop === hyphenatedProp) return value;
	
	    rule.prop(hyphenatedProp, value);
	
	    // Core will ignore that property value we set the proper one above.
	    return null;
	  }
	
	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 227 */
/***/ (function(module, exports) {

	'use strict';
	
	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;
	var cache = {};
	
	function hyphenateStyleName(string) {
	    return string in cache
	    ? cache[string]
	    : cache[string] = string
	      .replace(uppercasePattern, '-$&')
	      .toLowerCase()
	      .replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports['default'] = defaultUnit;
	
	var _defaultUnits = __webpack_require__(229);
	
	var _defaultUnits2 = _interopRequireDefault(_defaultUnits);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Clones the object and adds a camel cased property version.
	 */
	function addCamelCasedVersion(obj) {
	  var regExp = /(-[a-z])/g;
	  var replace = function replace(str) {
	    return str[1].toUpperCase();
	  };
	  var newObj = {};
	  for (var key in obj) {
	    newObj[key] = obj[key];
	    newObj[key.replace(regExp, replace)] = obj[key];
	  }
	  return newObj;
	}
	
	var units = addCamelCasedVersion(_defaultUnits2['default']);
	
	/**
	 * Recursive deep style passing function
	 *
	 * @param {String} current property
	 * @param {(Object|Array|Number|String)} property value
	 * @param {Object} options
	 * @return {(Object|Array|Number|String)} resulting value
	 */
	function iterate(prop, value, options) {
	  if (!value) return value;
	
	  var convertedValue = value;
	
	  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	  if (type === 'object' && Array.isArray(value)) type = 'array';
	
	  switch (type) {
	    case 'object':
	      if (prop === 'fallbacks') {
	        for (var innerProp in value) {
	          value[innerProp] = iterate(innerProp, value[innerProp], options);
	        }
	        break;
	      }
	      for (var _innerProp in value) {
	        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
	      }
	      break;
	    case 'array':
	      for (var i = 0; i < value.length; i++) {
	        value[i] = iterate(prop, value[i], options);
	      }
	      break;
	    case 'number':
	      if (value !== 0) {
	        convertedValue = value + (options[prop] || units[prop] || '');
	      }
	      break;
	    default:
	      break;
	  }
	
	  return convertedValue;
	}
	
	/**
	 * Add unit to numeric values.
	 */
	function defaultUnit() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var camelCasedOptions = addCamelCasedVersion(options);
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    for (var prop in style) {
	      style[prop] = iterate(prop, style[prop], camelCasedOptions);
	    }
	
	    return style;
	  }
	
	  function onChangeValue(value, prop) {
	    return iterate(prop, value, camelCasedOptions);
	  }
	
	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 229 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Generated jss-default-unit CSS property units
	 *
	 * @type object
	 */
	exports['default'] = {
	  'animation-delay': 'ms',
	  'animation-duration': 'ms',
	  'background-position': 'px',
	  'background-position-x': 'px',
	  'background-position-y': 'px',
	  'background-size': 'px',
	  border: 'px',
	  'border-bottom': 'px',
	  'border-bottom-left-radius': 'px',
	  'border-bottom-right-radius': 'px',
	  'border-bottom-width': 'px',
	  'border-left': 'px',
	  'border-left-width': 'px',
	  'border-radius': 'px',
	  'border-right': 'px',
	  'border-right-width': 'px',
	  'border-spacing': 'px',
	  'border-top': 'px',
	  'border-top-left-radius': 'px',
	  'border-top-right-radius': 'px',
	  'border-top-width': 'px',
	  'border-width': 'px',
	  'border-after-width': 'px',
	  'border-before-width': 'px',
	  'border-end-width': 'px',
	  'border-horizontal-spacing': 'px',
	  'border-start-width': 'px',
	  'border-vertical-spacing': 'px',
	  bottom: 'px',
	  'box-shadow': 'px',
	  'column-gap': 'px',
	  'column-rule': 'px',
	  'column-rule-width': 'px',
	  'column-width': 'px',
	  'flex-basis': 'px',
	  'font-size': 'px',
	  'font-size-delta': 'px',
	  height: 'px',
	  left: 'px',
	  'letter-spacing': 'px',
	  'logical-height': 'px',
	  'logical-width': 'px',
	  margin: 'px',
	  'margin-after': 'px',
	  'margin-before': 'px',
	  'margin-bottom': 'px',
	  'margin-left': 'px',
	  'margin-right': 'px',
	  'margin-top': 'px',
	  'max-height': 'px',
	  'max-width': 'px',
	  'margin-end': 'px',
	  'margin-start': 'px',
	  'mask-position-x': 'px',
	  'mask-position-y': 'px',
	  'mask-size': 'px',
	  'max-logical-height': 'px',
	  'max-logical-width': 'px',
	  'min-height': 'px',
	  'min-width': 'px',
	  'min-logical-height': 'px',
	  'min-logical-width': 'px',
	  motion: 'px',
	  'motion-offset': 'px',
	  outline: 'px',
	  'outline-offset': 'px',
	  'outline-width': 'px',
	  padding: 'px',
	  'padding-bottom': 'px',
	  'padding-left': 'px',
	  'padding-right': 'px',
	  'padding-top': 'px',
	  'padding-after': 'px',
	  'padding-before': 'px',
	  'padding-end': 'px',
	  'padding-start': 'px',
	  'perspective-origin-x': '%',
	  'perspective-origin-y': '%',
	  perspective: 'px',
	  right: 'px',
	  'shape-margin': 'px',
	  size: 'px',
	  'text-indent': 'px',
	  'text-stroke': 'px',
	  'text-stroke-width': 'px',
	  top: 'px',
	  'transform-origin': '%',
	  'transform-origin-x': '%',
	  'transform-origin-y': '%',
	  'transform-origin-z': '%',
	  'transition-delay': 'ms',
	  'transition-duration': 'ms',
	  'vertical-align': 'px',
	  width: 'px',
	  'word-spacing': 'px',
	  // Not existing properties.
	  // Used to avoid issues with jss-expand intergration.
	  'box-shadow-x': 'px',
	  'box-shadow-y': 'px',
	  'box-shadow-blur': 'px',
	  'box-shadow-spread': 'px',
	  'font-line-height': 'px',
	  'text-shadow-x': 'px',
	  'text-shadow-y': 'px',
	  'text-shadow-blur': 'px'
	};

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = jssExpand;
	
	var _props = __webpack_require__(231);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Map values by given prop.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {String} original rule
	 * @return {String} mapped values
	 */
	function mapValuesByProp(value, prop, rule) {
	  return value.map(function (item) {
	    return objectToString(item, prop, rule);
	  });
	}
	
	/**
	 * Convert array to string.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {Object} sheme, for converting arrays in strings
	 * @param {Object} original rule
	 * @return {String} converted string
	 */
	function arrayToString(value, prop, scheme, rule) {
	  if (scheme[prop] == null) return value.join(',');
	  if (value.length === 0) return '';
	  if (Array.isArray(value[0])) return arrayToString(value[0], prop, scheme);
	  if (_typeof(value[0]) === 'object') {
	    return mapValuesByProp(value, prop, rule);
	  }
	  return value.join(' ');
	}
	
	/**
	 * Convert object to string.
	 *
	 * @param {Object} object of values
	 * @param {String} original property
	 * @param {Object} original rule
	 * @param {Boolean} is fallback prop
	 * @return {String} converted string
	 */
	function objectToString(value, prop, rule, isFallback) {
	  if (!(_props.propObj[prop] || _props.customPropObj[prop])) return '';
	
	  var result = [];
	
	  // Check if exists any non-standart property
	  if (_props.customPropObj[prop]) {
	    value = customPropsToStyle(value, rule, _props.customPropObj[prop], isFallback);
	  }
	
	  // Pass throught all standart props
	  if (Object.keys(value).length) {
	    for (var baseProp in _props.propObj[prop]) {
	      if (value[baseProp]) {
	        if (Array.isArray(value[baseProp])) {
	          result.push(arrayToString(value[baseProp], baseProp, _props.propArrayInObj));
	        } else result.push(value[baseProp]);
	        continue;
	      }
	
	      // Add default value from props config.
	      if (_props.propObj[prop][baseProp] != null) {
	        result.push(_props.propObj[prop][baseProp]);
	      }
	    }
	  }
	
	  return result.join(' ');
	}
	
	/**
	 * Convert custom properties values to styles adding them to rule directly
	 *
	 * @param {Object} object of values
	 * @param {Object} original rule
	 * @param {String} property, that contain partial custom properties
	 * @param {Boolean} is fallback prop
	 * @return {Object} value without custom properties, that was already added to rule
	 */
	function customPropsToStyle(value, rule, customProps, isFallback) {
	  for (var prop in customProps) {
	    var propName = customProps[prop];
	
	    // If current property doesn't exist already in rule - add new one
	    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {
	      var appendedValue = styleDetector(_defineProperty({}, propName, value[prop]), rule)[propName];
	
	      // Add style directly in rule
	      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;
	    }
	    // Delete converted property to avoid double converting
	    delete value[prop];
	  }
	
	  return value;
	}
	
	/**
	 * Detect if a style needs to be converted.
	 *
	 * @param {Object} style
	 * @param {Object} rule
	 * @param {Boolean} is fallback prop
	 * @return {Object} convertedStyle
	 */
	function styleDetector(style, rule, isFallback) {
	  for (var prop in style) {
	    var value = style[prop];
	
	    if (Array.isArray(value)) {
	      // Check double arrays to avoid recursion.
	      if (!Array.isArray(value[0])) {
	        if (prop === 'fallbacks') {
	          for (var index = 0; index < style.fallbacks.length; index++) {
	            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);
	          }
	          continue;
	        }
	
	        style[prop] = arrayToString(value, prop, _props.propArray);
	        // Avoid creating properties with empty values
	        if (!style[prop]) delete style[prop];
	      }
	    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      if (prop === 'fallbacks') {
	        style.fallbacks = styleDetector(style.fallbacks, rule, true);
	        continue;
	      }
	
	      style[prop] = objectToString(value, prop, rule, isFallback);
	      // Avoid creating properties with empty values
	      if (!style[prop]) delete style[prop];
	    }
	
	    // Maybe a computed value resulting in an empty string
	    else if (style[prop] === '') delete style[prop];
	  }
	
	  return style;
	}
	
	/**
	 * Adds possibility to write expanded styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExpand() {
	  function onProcessStyle(style, rule) {
	    if (!style || rule.type !== 'style') return style;
	
	    if (Array.isArray(style)) {
	      // Pass rules one by one and reformat them
	      for (var index = 0; index < style.length; index++) {
	        style[index] = styleDetector(style[index], rule);
	      }
	      return style;
	    }
	
	    return styleDetector(style, rule);
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 231 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * A scheme for converting properties from array to regular style.
	 * All properties listed below will be transformed to a string separated by space.
	 */
	var propArray = exports.propArray = {
	  'background-size': true,
	  'background-position': true,
	  border: true,
	  'border-bottom': true,
	  'border-left': true,
	  'border-top': true,
	  'border-right': true,
	  'border-radius': true,
	  'border-image': true,
	  'box-shadow': true,
	  flex: true,
	  margin: true,
	  padding: true,
	  outline: true,
	  'transform-origin': true,
	  transform: true,
	  transition: true
	
	  /**
	   * A scheme for converting arrays to regular styles inside of objects.
	   * For e.g.: "{position: [0, 0]}" => "background-position: 0 0;".
	   */
	};var propArrayInObj = exports.propArrayInObj = {
	  position: true, // background-position
	  size: true // background-size
	
	
	  /**
	   * A scheme for parsing and building correct styles from passed objects.
	   */
	};var propObj = exports.propObj = {
	  padding: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  margin: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  background: {
	    attachment: null,
	    color: null,
	    image: null,
	    position: null,
	    repeat: null
	  },
	  border: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-top': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-right': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-bottom': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-left': {
	    width: null,
	    style: null,
	    color: null
	  },
	  outline: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'list-style': {
	    type: null,
	    position: null,
	    image: null
	  },
	  transition: {
	    property: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed for avoiding comilation issues with jss-camel-case
	    delay: null
	  },
	  animation: {
	    name: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed to avoid compilation issues with jss-camel-case
	    delay: null,
	    'iteration-count': null,
	    iterationCount: null, // Needed to avoid compilation issues with jss-camel-case
	    direction: null,
	    'fill-mode': null,
	    fillMode: null, // Needed to avoid compilation issues with jss-camel-case
	    'play-state': null,
	    playState: null // Needed to avoid compilation issues with jss-camel-case
	  },
	  'box-shadow': {
	    x: 0,
	    y: 0,
	    blur: 0,
	    spread: 0,
	    color: null,
	    inset: null
	  },
	  'text-shadow': {
	    x: 0,
	    y: 0,
	    blur: null,
	    color: null
	  }
	
	  /**
	   * A scheme for converting non-standart properties inside object.
	   * For e.g.: include 'border-radius' property inside 'border' object.
	   */
	};var customPropObj = exports.customPropObj = {
	  border: {
	    radius: 'border-radius',
	    image: 'border-image'
	  },
	  background: {
	    size: 'background-size',
	    image: 'background-image'
	  },
	  font: {
	    style: 'font-style',
	    variant: 'font-variant',
	    weight: 'font-weight',
	    stretch: 'font-stretch',
	    size: 'font-size',
	    family: 'font-family',
	    lineHeight: 'line-height', // Needed to avoid compilation issues with jss-camel-case
	    'line-height': 'line-height'
	  },
	  flex: {
	    grow: 'flex-grow',
	    basis: 'flex-basis',
	    direction: 'flex-direction',
	    wrap: 'flex-wrap',
	    flow: 'flex-flow',
	    shrink: 'flex-shrink'
	  },
	  align: {
	    self: 'align-self',
	    items: 'align-items',
	    content: 'align-content'
	  }
	};

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssVendorPrefixer;
	
	var _cssVendor = __webpack_require__(233);
	
	var vendor = _interopRequireWildcard(_cssVendor);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	/**
	 * Add vendor prefix to a property name when needed.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssVendorPrefixer() {
	  function onProcessRule(rule) {
	    if (rule.type === 'keyframes') {
	      rule.key = '@' + vendor.prefix.css + rule.key.substr(1);
	    }
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    for (var prop in style) {
	      var value = style[prop];
	
	      var changeProp = false;
	      var supportedProp = vendor.supportedProperty(prop);
	      if (supportedProp && supportedProp !== prop) changeProp = true;
	
	      var changeValue = false;
	      var supportedValue = vendor.supportedValue(supportedProp, value);
	      if (supportedValue && supportedValue !== value) changeValue = true;
	
	      if (changeProp || changeValue) {
	        if (changeProp) delete style[prop];
	        style[supportedProp || prop] = supportedValue || value;
	      }
	    }
	
	    return style;
	  }
	
	  function onChangeValue(value, prop) {
	    return vendor.supportedValue(prop, value);
	  }
	
	  return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;
	
	var _prefix = __webpack_require__(234);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _supportedProperty = __webpack_require__(235);
	
	var _supportedProperty2 = _interopRequireDefault(_supportedProperty);
	
	var _supportedValue = __webpack_require__(237);
	
	var _supportedValue2 = _interopRequireDefault(_supportedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = {
	  prefix: _prefix2['default'],
	  supportedProperty: _supportedProperty2['default'],
	  supportedValue: _supportedValue2['default']
	}; /**
	    * CSS Vendor prefix detection and property feature testing.
	    *
	    * @copyright Oleg Slobodskoi 2015
	    * @website https://github.com/jsstyles/css-vendor
	    * @license MIT
	    */
	
	exports.prefix = _prefix2['default'];
	exports.supportedProperty = _supportedProperty2['default'];
	exports.supportedValue = _supportedValue2['default'];

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isInBrowser = __webpack_require__(207);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var js = ''; /**
	              * Export javascript style and css style vendor prefixes.
	              * Based on "transform" support test.
	              */
	
	var css = '';
	
	// We should not do anything if required serverside.
	if (_isInBrowser2['default']) {
	  // Order matters. We need to check Webkit the last one because
	  // other vendors use to add Webkit prefixes to some properties
	  var jsCssMap = {
	    Moz: '-moz-',
	    // IE did it wrong again ...
	    ms: '-ms-',
	    O: '-o-',
	    Webkit: '-webkit-'
	  };
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      js = key;
	      css = jsCssMap[key];
	      break;
	    }
	  }
	}
	
	/**
	 * Vendor prefix string for the current browser.
	 *
	 * @type {{js: String, css: String}}
	 * @api public
	 */
	exports['default'] = { js: js, css: css };

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedProperty;
	
	var _isInBrowser = __webpack_require__(207);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _prefix = __webpack_require__(234);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	var _camelize = __webpack_require__(236);
	
	var _camelize2 = _interopRequireDefault(_camelize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var el = void 0;
	var cache = {};
	
	if (_isInBrowser2['default']) {
	  el = document.createElement('p');
	
	  /**
	   * We test every property on vendor prefix requirement.
	   * Once tested, result is cached. It gives us up to 70% perf boost.
	   * http://jsperf.com/element-style-object-access-vs-plain-object
	   *
	   * Prefill cache with known css properties to reduce amount of
	   * properties we need to feature test at runtime.
	   * http://davidwalsh.name/vendor-prefix
	   */
	  var computed = window.getComputedStyle(document.documentElement, '');
	  for (var key in computed) {
	    if (!isNaN(key)) cache[computed[key]] = computed[key];
	  }
	}
	
	/**
	 * Test if a property is supported, returns supported property with vendor
	 * prefix if required. Returns `false` if not supported.
	 *
	 * @param {String} prop dash separated
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedProperty(prop) {
	  // For server-side rendering.
	  if (!el) return prop;
	
	  // We have not tested this prop yet, lets do the test.
	  if (cache[prop] != null) return cache[prop];
	
	  // Camelization is required because we can't test using
	  // css syntax for e.g. in FF.
	  // Test if property is supported as it is.
	  if ((0, _camelize2['default'])(prop) in el.style) {
	    cache[prop] = prop;
	  }
	  // Test if property is supported with vendor prefix.
	  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {
	      cache[prop] = _prefix2['default'].css + prop;
	    } else {
	      cache[prop] = false;
	    }
	
	  return cache[prop];
	}

/***/ }),
/* 236 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelize;
	var regExp = /[-\s]+(.)?/g;
	
	/**
	 * Convert dash separated strings to camel cased.
	 *
	 * @param {String} str
	 * @return {String}
	 */
	function camelize(str) {
	  return str.replace(regExp, toUpper);
	}
	
	function toUpper(match, c) {
	  return c ? c.toUpperCase() : '';
	}

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedValue;
	
	var _isInBrowser = __webpack_require__(207);
	
	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);
	
	var _prefix = __webpack_require__(234);
	
	var _prefix2 = _interopRequireDefault(_prefix);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var cache = {};
	var el = void 0;
	
	if (_isInBrowser2['default']) el = document.createElement('p');
	
	/**
	 * Returns prefixed value if needed. Returns `false` if value is not supported.
	 *
	 * @param {String} property
	 * @param {String} value
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedValue(property, value) {
	  // For server-side rendering.
	  if (!el) return value;
	
	  // It is a string or a number as a string like '1'.
	  // We want only prefixable values here.
	  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;
	
	  var cacheKey = property + value;
	
	  if (cache[cacheKey] != null) return cache[cacheKey];
	
	  // IE can even throw an error in some cases, for e.g. style.content = 'bar'
	  try {
	    // Test value as it is.
	    el.style[property] = value;
	  } catch (err) {
	    cache[cacheKey] = false;
	    return false;
	  }
	
	  // Value is supported as it is.
	  if (el.style[property] !== '') {
	    cache[cacheKey] = value;
	  } else {
	    // Test value with vendor prefix.
	    value = _prefix2['default'].css + value;
	
	    // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
	    if (value === '-ms-flex') value = '-ms-flexbox';
	
	    el.style[property] = value;
	
	    // Value is supported with vendor prefix.
	    if (el.style[property] !== '') cache[cacheKey] = value;
	  }
	
	  if (!cache[cacheKey]) cache[cacheKey] = false;
	
	  // Reset style value.
	  el.style[property] = '';
	
	  return cache[cacheKey];
	}

/***/ }),
/* 238 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssPropsSort;
	/**
	 * Sort props by length.
	 */
	function jssPropsSort() {
	  function sort(prop0, prop1) {
	    return prop0.length - prop1.length;
	  }
	
	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	
	    var newStyle = {};
	    var props = Object.keys(style).sort(sort);
	    for (var prop in props) {
	      newStyle[props[prop]] = style[props[prop]];
	    }
	    return newStyle;
	  }
	
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 239 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Namespaces to avoid conflicts on the context.
	 */
	var jss = exports.jss = '64a55d578f856d258dc345b094a2a2b3';
	var sheetsRegistry = exports.sheetsRegistry = 'd4bd0baacbc52bbd48bbb9eb24344ecd';
	var providerId = exports.providerId = 'd9f144a51454eae08eb84ab3ade674a5';
	var sheetOptions = exports.sheetOptions = '6fc570d6bd61383819d0f9e7407c452d';

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ns$jss$ns$sheetOptio;
	
	var _propTypes = __webpack_require__(17);
	
	var _jss = __webpack_require__(186);
	
	var _jss2 = _interopRequireDefault(_jss);
	
	var _ns = __webpack_require__(239);
	
	var ns = _interopRequireWildcard(_ns);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	exports['default'] = (_ns$jss$ns$sheetOptio = {}, _defineProperty(_ns$jss$ns$sheetOptio, ns.jss, (0, _propTypes.instanceOf)(_jss2['default'].constructor)), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetOptions, _propTypes.object), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetsRegistry, (0, _propTypes.instanceOf)(_jss.SheetsRegistry)), _defineProperty(_ns$jss$ns$sheetOptio, ns.providerId, _propTypes.number), _ns$jss$ns$sheetOptio);

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = injectSheet;
	
	var _hoistNonReactStatics = __webpack_require__(54);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _createHoc = __webpack_require__(242);
	
	var _createHoc2 = _interopRequireDefault(_createHoc);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Global index counter to preserve source order.
	 * As we create the style sheet during componentWillMount lifecycle,
	 * children are handled after the parents, so the order of style elements would
	 * be parent->child. It is a problem though when a parent passes a className
	 * which needs to override any childs styles. StyleSheet of the child has a higher
	 * specificity, because of the source order.
	 * So our solution is to render sheets them in the reverse order child->sheet, so
	 * that parent has a higher specificity.
	 *
	 * @type {Number}
	 */
	var indexCounter = -100000;
	
	var NoRenderer = function NoRenderer(_ref) {
	  var children = _ref.children;
	  return children || null;
	};
	
	/**
	 * HOC creator function that wrapps the user component.
	 *
	 * `injectSheet(styles, [options])(Component)`
	 *
	 * @api public
	 */
	function injectSheet(stylesOrSheet) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (options.index === undefined) {
	    options.index = indexCounter++;
	  }
	  return function () {
	    var InnerComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NoRenderer;
	
	    var Jss = (0, _createHoc2['default'])(stylesOrSheet, InnerComponent, options);
	    return (0, _hoistNonReactStatics2['default'])(Jss, InnerComponent, { inner: true });
	  };
	}

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _theming = __webpack_require__(176);
	
	var _theming2 = _interopRequireDefault(_theming);
	
	var _jss = __webpack_require__(186);
	
	var _jss2 = _interopRequireDefault(_jss);
	
	var _compose = __webpack_require__(243);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _getDisplayName = __webpack_require__(244);
	
	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);
	
	var _ns = __webpack_require__(239);
	
	var ns = _interopRequireWildcard(_ns);
	
	var _contextTypes = __webpack_require__(240);
	
	var _contextTypes2 = _interopRequireDefault(_contextTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	// Like a Symbol
	var dynamicStylesNs = Math.random();
	
	/*
	 * # Use cases
	 *
	 * - Unthemed component accepts styles object
	 * - Themed component accepts styles creator function which takes theme as a single argument
	 * - Multiple instances will re-use the same static sheet via sheets manager
	 * - Sheet manager identifies static sheets by theme as a key
	 * - For unthemed components theme is an empty object
	 * - The very first instance will add static sheet to sheets manager
	 * - Every further instances will get that static sheet from sheet manager
	 * - Every mount of every instance will call method `sheetsManager.manage`,
	 * thus incrementing reference counter.
	 * - Every unmount of every instance will call method `sheetsManager.unmanage`,
	 * thus decrementing reference counter.
	 * - `sheetsManager.unmanage` under the hood will detach static sheet once reference
	 * counter is zero.
	 * - Dynamic styles are not shared between instances
	 *
	 */
	
	var getStyles = function getStyles(stylesOrCreator, theme) {
	  if (typeof stylesOrCreator !== 'function') {
	    return stylesOrCreator;
	  }
	  return stylesOrCreator(theme);
	};
	
	/**
	 * Wrap a Component into a JSS Container Component.
	 *
	 * @param {Object|Function} stylesOrCreator
	 * @param {Component} InnerComponent
	 * @param {Object} [options]
	 * @return {Component}
	 */
	
	exports['default'] = function (stylesOrCreator, InnerComponent) {
	  var _class, _temp, _initialiseProps;
	
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  var isThemingEnabled = typeof stylesOrCreator === 'function';
	
	  var _options$theming = options.theming,
	      theming = _options$theming === undefined ? _theming2['default'] : _options$theming,
	      sheetOptions = _objectWithoutProperties(options, ['theming']);
	
	  var themeListener = theming.themeListener;
	
	  var displayName = 'Jss(' + (0, _getDisplayName2['default'])(InnerComponent) + ')';
	  var noTheme = {};
	  var manager = new _jss.SheetsManager();
	  var providerId = void 0;
	
	  return _temp = _class = function (_Component) {
	    _inherits(Jss, _Component);
	
	    function Jss(props, context) {
	      _classCallCheck(this, Jss);
	
	      var _this = _possibleConstructorReturn(this, (Jss.__proto__ || Object.getPrototypeOf(Jss)).call(this, props, context));
	
	      _initialiseProps.call(_this);
	
	      var theme = isThemingEnabled ? themeListener.initial(context) : noTheme;
	
	      _this.state = _this.createState({ theme: theme });
	      return _this;
	    }
	
	    _createClass(Jss, [{
	      key: 'createState',
	      value: function createState(_ref) {
	        var theme = _ref.theme,
	            dynamicSheet = _ref.dynamicSheet;
	
	        var staticSheet = this.manager.get(theme);
	        var dynamicStyles = void 0;
	
	        if (!staticSheet) {
	          var styles = getStyles(stylesOrCreator, theme);
	          staticSheet = this.jss.createStyleSheet(styles, _extends({}, sheetOptions, this.context[ns.sheetOptions], {
	            meta: displayName + ', ' + (isThemingEnabled ? 'Themed' : 'Unthemed') + ', Static'
	          }));
	          this.manager.add(theme, staticSheet);
	          dynamicStyles = (0, _compose2['default'])(staticSheet, (0, _jss.getDynamicStyles)(styles));
	          staticSheet[dynamicStylesNs] = dynamicStyles;
	        } else dynamicStyles = staticSheet[dynamicStylesNs];
	
	        if (dynamicStyles) {
	          dynamicSheet = this.jss.createStyleSheet(dynamicStyles, _extends({}, sheetOptions, this.context[ns.sheetOptions], {
	            meta: displayName + ', ' + (isThemingEnabled ? 'Themed' : 'Unthemed') + ', Dynamic',
	            link: true
	          }));
	        }
	
	        return { theme: theme, dynamicSheet: dynamicSheet };
	      }
	    }, {
	      key: 'manage',
	      value: function manage(_ref2) {
	        var theme = _ref2.theme,
	            dynamicSheet = _ref2.dynamicSheet;
	
	        var registry = this.context[ns.sheetsRegistry];
	
	        var staticSheet = this.manager.manage(theme);
	        if (registry) registry.add(staticSheet);
	
	        if (dynamicSheet) {
	          dynamicSheet.update(this.props).attach();
	          if (registry) registry.add(dynamicSheet);
	        }
	      }
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        this.manage(this.state);
	      }
	    }, {
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (isThemingEnabled) {
	          this.unsubscribe = themeListener.subscribe(this.context, this.setTheme);
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var dynamicSheet = this.state.dynamicSheet;
	
	        if (dynamicSheet) dynamicSheet.update(nextProps);
	      }
	    }, {
	      key: 'componentWillUpdate',
	      value: function componentWillUpdate(nextProps, nextState) {
	        if (isThemingEnabled && this.state.theme !== nextState.theme) {
	          var newState = this.createState(nextState);
	          this.manage(newState);
	          this.manager.unmanage(this.state.theme);
	          this.setState(newState);
	        }
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate(prevProps, prevState) {
	        // We remove previous dynamicSheet only after new one was created to avoid FOUC.
	        if (prevState.dynamicSheet !== this.state.dynamicSheet) {
	          this.jss.removeStyleSheet(prevState.dynamicSheet);
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (isThemingEnabled && typeof this.unsubscribe === 'function') {
	          this.unsubscribe();
	        }
	
	        this.manager.unmanage(this.state.theme);
	        if (this.state.dynamicSheet) {
	          this.state.dynamicSheet.detach();
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _state = this.state,
	            theme = _state.theme,
	            dynamicSheet = _state.dynamicSheet;
	
	        var sheet = dynamicSheet || this.manager.get(theme);
	        var reactJssProps = { sheet: sheet, classes: sheet.classes };
	        if (isThemingEnabled) reactJssProps.theme = theme;
	        return _react2['default'].createElement(InnerComponent, _extends({}, reactJssProps, this.props));
	      }
	    }, {
	      key: 'jss',
	      get: function get() {
	        return this.context[ns.jss] || _jss2['default'];
	      }
	    }, {
	      key: 'manager',
	      get: function get() {
	        if (providerId && this.context[ns.providerId] !== providerId) {
	          manager = new _jss.SheetsManager();
	        }
	        providerId = this.context[ns.providerId];
	
	        return manager;
	      }
	    }]);
	
	    return Jss;
	  }(_react.Component), _class.displayName = displayName, _class.InnerComponent = InnerComponent, _class.contextTypes = _extends({}, _contextTypes2['default'], isThemingEnabled && themeListener.contextTypes), _class.defaultProps = InnerComponent.defaultProps, _initialiseProps = function _initialiseProps() {
	    var _this2 = this;
	
	    this.setTheme = function (theme) {
	      return _this2.setState({ theme: theme });
	    };
	  }, _temp;
	};

/***/ }),
/* 243 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	/**
	 * Adds `composes` property to each top level rule
	 * in order to have a composed class name for dynamic style sheets.
	 *
	 * @param {StyleSheet} staticSheet
	 * @param {Object} styles
	 * @return {Object|null}
	 */
	exports["default"] = function (staticSheet, styles) {
	  for (var name in styles) {
	    var className = staticSheet.classes[name];
	    if (!className) break;
	    styles[name] = _extends({}, styles[name], { composes: className });
	  }
	
	  if (styles) {
	    for (var _name in staticSheet.classes) {
	      var _className = styles[_name];
	      if (!_className) {
	        styles[_name] = { composes: staticSheet.classes[_name] };
	      }
	    }
	  }
	
	  return styles;
	};

/***/ }),
/* 244 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports['default'] = function (Component) {
	  return Component.displayName || Component.name || 'Component';
	};

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(246);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connectAdvanced = __webpack_require__(249);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _connect = __webpack_require__(251);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Provider = _Provider2.default;
	exports.createProvider = _Provider.createProvider;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createProvider = createProvider;
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _PropTypes = __webpack_require__(247);
	
	var _warning = __webpack_require__(248);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	function createProvider() {
	  var _Provider$childContex;
	
	  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
	  var subKey = arguments[1];
	
	  var subscriptionKey = subKey || storeKey + 'Subscription';
	
	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);
	
	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };
	
	    function Provider(props, context) {
	      _classCallCheck(this, Provider);
	
	      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	      _this[storeKey] = props.store;
	      return _this;
	    }
	
	    Provider.prototype.render = function render() {
	      return _react.Children.only(this.props.children);
	    };
	
	    return Provider;
	  }(_react.Component);
	
	  if (false) {
	    Provider.prototype.componentWillReceiveProps = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }
	
	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes2.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);
	
	  return Provider;
	}
	
	exports.default = createProvider();

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
	  trySubscribe: _propTypes2.default.func.isRequired,
	  tryUnsubscribe: _propTypes2.default.func.isRequired,
	  notifyNestedSubs: _propTypes2.default.func.isRequired,
	  isSubscribed: _propTypes2.default.func.isRequired
	});
	
	var storeShape = exports.storeShape = _propTypes2.default.shape({
	  subscribe: _propTypes2.default.func.isRequired,
	  dispatch: _propTypes2.default.func.isRequired,
	  getState: _propTypes2.default.func.isRequired
	});

/***/ }),
/* 248 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = connectAdvanced;
	
	var _hoistNonReactStatics = __webpack_require__(54);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(21);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _Subscription = __webpack_require__(250);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _PropTypes = __webpack_require__(247);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };
	
	  return selector;
	}
	
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);
	
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
	
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));
	
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	
	    var displayName = getDisplayName(wrappedComponentName);
	
	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
	
	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));
	
	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }
	
	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;
	
	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;
	
	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };
	
	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };
	
	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;
	
	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));
	
	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };
	
	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);
	
	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };
	
	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };
	
	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        var _this2 = this;
	
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();
	
	          // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	          var oldListeners = [];
	
	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	          this.initSubscription();
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}

/***/ }),
/* 250 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);
	
	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createConnect = createConnect;
	
	var _connectAdvanced = __webpack_require__(249);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _shallowEqual = __webpack_require__(252);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _mapDispatchToProps = __webpack_require__(253);
	
	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);
	
	var _mapStateToProps = __webpack_require__(267);
	
	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);
	
	var _mergeProps = __webpack_require__(268);
	
	var _mergeProps2 = _interopRequireDefault(_mergeProps);
	
	var _selectorFactory = __webpack_require__(269);
	
	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	}
	
	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);
	
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	
	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',
	
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },
	
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	
	    }, extraOptions));
	  };
	}
	
	exports.default = createConnect();

/***/ }),
/* 252 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) return false;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	
	var _redux = __webpack_require__(254);
	
	var _wrapMapToProps = __webpack_require__(255);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var $$observable = _interopDefault(__webpack_require__(197));
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = {
	  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),
	  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')
	};
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */
	function isPlainObject(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;
	
	  var proto = obj;
	  while (Object.getPrototypeOf(proto) !== null) {
	    proto = Object.getPrototypeOf(proto);
	  }
	
	  return Object.getPrototypeOf(obj) === proto;
	}
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    if (isDispatching) {
	      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
	    }
	
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected the listener to be a function.');
	    }
	
	    if (isDispatching) {
	      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      if (isDispatching) {
	        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!isPlainObject(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.REPLACE });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[$$observable] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[$$observable] = observable, _ref2;
	}
	
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	  } catch (e) {} // eslint-disable-line no-empty
	}
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionDescription = actionType && 'action "' + String(actionType) + '"' || 'an action';
	
	  return 'Given ' + actionDescription + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!isPlainObject(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (action && action.type === ActionTypes.REPLACE) return;
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        warning('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var unexpectedKeyCache = void 0;
	  if (false) {
	    unexpectedKeyCache = {};
	  }
	
	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        warning(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(this, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}
	
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function () {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      var store = createStore.apply(undefined, args);
	      var _dispatch = function dispatch() {
	        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
	      };
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch() {
	          return _dispatch.apply(undefined, arguments);
	        }
	      };
	      var chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = compose.apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}
	
	/*
	 * This is a dummy function to check if the function name has been altered by minification.
	 * If the function has been minified and NODE_ENV !== 'production', warn the user.
	 */
	function isCrushed() {}
	
	if (false) {
	  warning("You are currently using minified code outside of NODE_ENV === 'production'. " + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = createStore;
	exports.combineReducers = combineReducers;
	exports.bindActionCreators = bindActionCreators;
	exports.applyMiddleware = applyMiddleware;
	exports.compose = compose;
	exports.__DO_NOT_USE__ActionTypes = ActionTypes;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = __webpack_require__(256);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}
	
	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}
	
	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };
	
	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);
	
	      return props;
	    };
	
	    return proxy;
	  };
	}

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = __webpack_require__(257);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(248);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    getPrototype = __webpack_require__(264),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259),
	    getRawTag = __webpack_require__(262),
	    objectToString = __webpack_require__(263);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(260);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(261);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 261 */
/***/ (function(module, exports) {

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 263 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(265);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 265 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 266 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	
	var _wrapMapToProps = __webpack_require__(255);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	
	var _verifyPlainObject = __webpack_require__(256);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	
	    var hasRunOnce = false;
	    var mergedProps = void 0;
	
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	
	        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _verifySubselectors = __webpack_require__(270);
	
	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	
	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}
	
	// TODO: Add more comments
	
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);
	
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (false) {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = __webpack_require__(248);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = getPageContext;
	
	var _jss = __webpack_require__(202);
	
	var _styles = __webpack_require__(272);
	
	var _theme = __webpack_require__(316);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createPageContext() {
	  return {
	    theme: _theme2.default,
	    // This is needed in order to deduplicate the injection of CSS in the page.
	    sheetsManager: new Map(),
	    // This is needed in order to inject the critical CSS.
	    sheetsRegistry: new _jss.SheetsRegistry(),
	    // The standard class name generator.
	    generateClassName: (0, _styles.createGenerateClassName)()
	  };
	} /* eslint-disable no-underscore-dangle */
	
	function getPageContext() {
	  // Make sure to create a new context for every server-side request so that data
	  // isn't shared between connections (which would be bad).
	  if (!process.browser) {
	    return createPageContext();
	  }
	
	  // Reuse context on the client-side.
	  if (!global.__INIT_MATERIAL_UI__) {
	    global.__INIT_MATERIAL_UI__ = createPageContext();
	  }
	
	  return global.__INIT_MATERIAL_UI__;
	}
	module.exports = exports["default"];

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "createGenerateClassName", {
	  enumerable: true,
	  get: function get() {
	    return _createGenerateClassName.default;
	  }
	});
	Object.defineProperty(exports, "createMuiTheme", {
	  enumerable: true,
	  get: function get() {
	    return _createMuiTheme.default;
	  }
	});
	Object.defineProperty(exports, "jssPreset", {
	  enumerable: true,
	  get: function get() {
	    return _jssPreset.default;
	  }
	});
	Object.defineProperty(exports, "MuiThemeProvider", {
	  enumerable: true,
	  get: function get() {
	    return _MuiThemeProvider.default;
	  }
	});
	Object.defineProperty(exports, "createStyles", {
	  enumerable: true,
	  get: function get() {
	    return _createStyles.default;
	  }
	});
	Object.defineProperty(exports, "withStyles", {
	  enumerable: true,
	  get: function get() {
	    return _withStyles.default;
	  }
	});
	Object.defineProperty(exports, "withTheme", {
	  enumerable: true,
	  get: function get() {
	    return _withTheme.default;
	  }
	});
	
	var _createGenerateClassName = _interopRequireDefault(__webpack_require__(274));
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(275));
	
	var _jssPreset = _interopRequireDefault(__webpack_require__(295));
	
	var _MuiThemeProvider = _interopRequireDefault(__webpack_require__(296));
	
	var _createStyles = _interopRequireDefault(__webpack_require__(307));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _withTheme = _interopRequireDefault(__webpack_require__(315));

/***/ }),
/* 273 */
/***/ (function(module, exports) {

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    default: obj
	  };
	}
	
	module.exports = _interopRequireDefault;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createGenerateClassName;
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	/* eslint-disable no-underscore-dangle */
	// People might bundle this classname generator twice.
	// We need to use a global.
	global.__MUI_GENERATOR_COUNTER__ = 0;
	var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
	
	function safePrefix(classNamePrefix) {
	  var prefix = String(classNamePrefix);
	   false ? (0, _warning.default)(prefix.length < 100, "Material-UI: the class name prefix is too long: ".concat(prefix, ".")) : void 0; // Sanitize the string as will be used to prefix the generated class name.
	
	  return prefix.replace(escapeRegex, '-');
	} // Returns a function which generates unique class names based on counters.
	// When new generator function is created, rule counter is reset.
	// We need to reset the rule counter for SSR for each request.
	//
	// It's inspired by
	// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js
	
	
	function createGenerateClassName() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,
	      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,
	      _options$productionPr = options.productionPrefix,
	      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr;
	  var ruleCounter = 0; // - HMR can lead to many class name generators being instantiated,
	  // so the warning is only triggered in production.
	  // - We expect a class name generator to be instantiated per new request on the server,
	  // so the warning is only triggered client side.
	
	  if (("production") === 'production' && typeof window !== 'undefined') {
	    global.__MUI_GENERATOR_COUNTER__ += 1;
	
	    if (global.__MUI_GENERATOR_COUNTER__ > 2) {
	      // eslint-disable-next-line no-console
	      console.error(['Material-UI: we have detected more than needed creation of the class name generator.', 'You should only use one class name generator on the client side.', 'If you do otherwise, you take the risk to have conflicting class names in production.'].join('\n'));
	    }
	  }
	
	  return function (rule, styleSheet) {
	    ruleCounter += 1;
	     false ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0; // Code branch the whole block at the expense of more code.
	
	    if (dangerouslyUseGlobalCSS) {
	      if (styleSheet && styleSheet.options.classNamePrefix) {
	        var prefix = safePrefix(styleSheet.options.classNamePrefix);
	
	        if (prefix.match(/^Mui/)) {
	          return "".concat(prefix, "-").concat(rule.key);
	        }
	
	        if (false) {
	          return "".concat(prefix, "-").concat(rule.key, "-").concat(ruleCounter);
	        }
	      }
	
	      if (true) {
	        return "".concat(productionPrefix).concat(ruleCounter);
	      }
	
	      return "".concat(rule.key, "-").concat(ruleCounter);
	    }
	
	    if (true) {
	      return "".concat(productionPrefix).concat(ruleCounter);
	    }
	
	    if (styleSheet && styleSheet.options.classNamePrefix) {
	      var _prefix = safePrefix(styleSheet.options.classNamePrefix);
	
	      return "".concat(_prefix, "-").concat(rule.key, "-").concat(ruleCounter);
	    }
	
	    return "".concat(rule.key, "-").concat(ruleCounter);
	  };
	}

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(279));
	
	var _isPlainObject = _interopRequireDefault(__webpack_require__(179));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _createBreakpoints = _interopRequireDefault(__webpack_require__(280));
	
	var _createMixins = _interopRequireDefault(__webpack_require__(281));
	
	var _createPalette = _interopRequireDefault(__webpack_require__(282));
	
	var _createTypography = _interopRequireDefault(__webpack_require__(289));
	
	var _shadows = _interopRequireDefault(__webpack_require__(290));
	
	var _shape = _interopRequireDefault(__webpack_require__(291));
	
	var _spacing = _interopRequireDefault(__webpack_require__(292));
	
	var _transitions = _interopRequireDefault(__webpack_require__(293));
	
	var _zIndex = _interopRequireDefault(__webpack_require__(294));
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	function createMuiTheme() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$breakpoints = options.breakpoints,
	      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,
	      _options$mixins = options.mixins,
	      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,
	      _options$palette = options.palette,
	      paletteInput = _options$palette === void 0 ? {} : _options$palette,
	      shadowsInput = options.shadows,
	      _options$typography = options.typography,
	      typographyInput = _options$typography === void 0 ? {} : _options$typography,
	      other = (0, _objectWithoutProperties2.default)(options, ["breakpoints", "mixins", "palette", "shadows", "typography"]);
	  var palette = (0, _createPalette.default)(paletteInput);
	  var breakpoints = (0, _createBreakpoints.default)(breakpointsInput);
	  var muiTheme = (0, _objectSpread2.default)({
	    breakpoints: breakpoints,
	    direction: 'ltr',
	    mixins: (0, _createMixins.default)(breakpoints, _spacing.default, mixinsInput),
	    overrides: {},
	    // Inject custom styles
	    palette: palette,
	    props: {},
	    // Inject custom properties
	    shadows: shadowsInput || _shadows.default,
	    typography: (0, _createTypography.default)(palette, typographyInput)
	  }, (0, _deepmerge.default)({
	    shape: _shape.default,
	    spacing: _spacing.default,
	    transitions: _transitions.default,
	    zIndex: _zIndex.default
	  }, other, {
	    isMergeableObject: _isPlainObject.default
	  }));
	   false ? (0, _warning.default)(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.') : void 0;
	  return muiTheme;
	}
	
	var _default = createMuiTheme;
	exports.default = _default;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(277);
	
	function _objectSpread(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};
	    var ownKeys = Object.keys(source);
	
	    if (typeof Object.getOwnPropertySymbols === 'function') {
	      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
	        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
	      }));
	    }
	
	    ownKeys.forEach(function (key) {
	      defineProperty(target, key, source[key]);
	    });
	  }
	
	  return target;
	}
	
	module.exports = _objectSpread;

/***/ }),
/* 277 */
/***/ (function(module, exports) {

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	module.exports = _defineProperty;

/***/ }),
/* 278 */
/***/ (function(module, exports) {

	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
	
	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutProperties;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.deepmerge = factory());
	}(this, (function () { 'use strict';
	
	var isMergeableObject = function isMergeableObject(value) {
		return isNonNullObject(value)
			&& !isSpecial(value)
	};
	
	function isNonNullObject(value) {
		return !!value && typeof value === 'object'
	}
	
	function isSpecial(value) {
		var stringValue = Object.prototype.toString.call(value);
	
		return stringValue === '[object RegExp]'
			|| stringValue === '[object Date]'
			|| isReactElement(value)
	}
	
	// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
	var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;
	
	function isReactElement(value) {
		return value.$$typeof === REACT_ELEMENT_TYPE
	}
	
	function emptyTarget(val) {
		return Array.isArray(val) ? [] : {}
	}
	
	function cloneUnlessOtherwiseSpecified(value, optionsArgument) {
		var clone = !optionsArgument || optionsArgument.clone !== false;
	
		return (clone && isMergeableObject(value))
			? deepmerge(emptyTarget(value), value, optionsArgument)
			: value
	}
	
	function defaultArrayMerge(target, source, optionsArgument) {
		return target.concat(source).map(function(element) {
			return cloneUnlessOtherwiseSpecified(element, optionsArgument)
		})
	}
	
	function mergeObject(target, source, optionsArgument) {
		var destination = {};
		if (isMergeableObject(target)) {
			Object.keys(target).forEach(function(key) {
				destination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);
			});
		}
		Object.keys(source).forEach(function(key) {
			if (!isMergeableObject(source[key]) || !target[key]) {
				destination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);
			} else {
				destination[key] = deepmerge(target[key], source[key], optionsArgument);
			}
		});
		return destination
	}
	
	function deepmerge(target, source, optionsArgument) {
		var sourceIsArray = Array.isArray(source);
		var targetIsArray = Array.isArray(target);
		var options = optionsArgument || { arrayMerge: defaultArrayMerge };
		var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
	
		if (!sourceAndTargetTypesMatch) {
			return cloneUnlessOtherwiseSpecified(source, optionsArgument)
		} else if (sourceIsArray) {
			var arrayMerge = options.arrayMerge || defaultArrayMerge;
			return arrayMerge(target, source, optionsArgument)
		} else {
			return mergeObject(target, source, optionsArgument)
		}
	}
	
	deepmerge.all = function deepmergeAll(array, optionsArgument) {
		if (!Array.isArray(array)) {
			throw new Error('first argument should be an array')
		}
	
		return array.reduce(function(prev, next) {
			return deepmerge(prev, next, optionsArgument)
		}, {})
	};
	
	var deepmerge_1 = deepmerge;
	
	return deepmerge_1;
	
	})));


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createBreakpoints;
	exports.keys = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	// Sorted ASC by size. That's important.
	// It can't be configured as it's used statically for propTypes.
	var keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.
	
	exports.keys = keys;
	
	function createBreakpoints(breakpoints) {
	  var _breakpoints$values = breakpoints.values,
	      values = _breakpoints$values === void 0 ? {
	    xs: 0,
	    sm: 600,
	    md: 960,
	    lg: 1280,
	    xl: 1920
	  } : _breakpoints$values,
	      _breakpoints$unit = breakpoints.unit,
	      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,
	      _breakpoints$step = breakpoints.step,
	      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,
	      other = (0, _objectWithoutProperties2.default)(breakpoints, ["values", "unit", "step"]);
	
	  function up(key) {
	    var value = typeof values[key] === 'number' ? values[key] : key;
	    return "@media (min-width:".concat(value).concat(unit, ")");
	  }
	
	  function down(key) {
	    var endIndex = keys.indexOf(key) + 1;
	    var upperbound = values[keys[endIndex]];
	
	    if (endIndex === keys.length) {
	      // xl down applies to all sizes
	      return up('xs');
	    }
	
	    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;
	    return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
	  }
	
	  function between(start, end) {
	    var endIndex = keys.indexOf(end) + 1;
	
	    if (endIndex === keys.length) {
	      return up(start);
	    }
	
	    return "@media (min-width:".concat(values[start]).concat(unit, ") and ") + "(max-width:".concat(values[keys[endIndex]] - step / 100).concat(unit, ")");
	  }
	
	  function only(key) {
	    return between(key, key);
	  }
	
	  function width(key) {
	    return values[key];
	  }
	
	  return (0, _objectSpread2.default)({
	    keys: keys,
	    values: values,
	    up: up,
	    down: down,
	    between: between,
	    only: only,
	    width: width
	  }, other);
	}

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createMixins;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectSpread3 = _interopRequireDefault(__webpack_require__(276));
	
	function createMixins(breakpoints, spacing, mixins) {
	  var _toolbar;
	
	  return (0, _objectSpread3.default)({
	    gutters: function gutters() {
	      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      return (0, _objectSpread3.default)({
	        paddingLeft: spacing.unit * 2,
	        paddingRight: spacing.unit * 2
	      }, styles, (0, _defineProperty2.default)({}, breakpoints.up('sm'), (0, _objectSpread3.default)({
	        paddingLeft: spacing.unit * 3,
	        paddingRight: spacing.unit * 3
	      }, styles[breakpoints.up('sm')])));
	    },
	    toolbar: (_toolbar = {
	      minHeight: 56
	    }, (0, _defineProperty2.default)(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), {
	      minHeight: 48
	    }), (0, _defineProperty2.default)(_toolbar, breakpoints.up('sm'), {
	      minHeight: 64
	    }), _toolbar)
	  }, mixins);
	}

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createPalette;
	exports.dark = exports.light = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(279));
	
	var _indigo = _interopRequireDefault(__webpack_require__(283));
	
	var _pink = _interopRequireDefault(__webpack_require__(284));
	
	var _grey = _interopRequireDefault(__webpack_require__(285));
	
	var _red = _interopRequireDefault(__webpack_require__(286));
	
	var _common = _interopRequireDefault(__webpack_require__(287));
	
	var _colorManipulator = __webpack_require__(288);
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	var light = {
	  // The colors used to style the text.
	  text: {
	    // The most important text.
	    primary: 'rgba(0, 0, 0, 0.87)',
	    // Secondary text.
	    secondary: 'rgba(0, 0, 0, 0.54)',
	    // Disabled text have even lower visual prominence.
	    disabled: 'rgba(0, 0, 0, 0.38)',
	    // Text hints.
	    hint: 'rgba(0, 0, 0, 0.38)'
	  },
	  // The color used to divide different elements.
	  divider: 'rgba(0, 0, 0, 0.12)',
	  // The background colors used to style the surfaces.
	  // Consistency between these values is important.
	  background: {
	    paper: _common.default.white,
	    default: _grey.default[50]
	  },
	  // The colors used to style the action elements.
	  action: {
	    // The color of an active action like an icon button.
	    active: 'rgba(0, 0, 0, 0.54)',
	    // The color of an hovered action.
	    hover: 'rgba(0, 0, 0, 0.08)',
	    hoverOpacity: 0.08,
	    // The color of a selected action.
	    selected: 'rgba(0, 0, 0, 0.14)',
	    // The color of a disabled action.
	    disabled: 'rgba(0, 0, 0, 0.26)',
	    // The background color of a disabled action.
	    disabledBackground: 'rgba(0, 0, 0, 0.12)'
	  }
	};
	exports.light = light;
	var dark = {
	  text: {
	    primary: _common.default.white,
	    secondary: 'rgba(255, 255, 255, 0.7)',
	    disabled: 'rgba(255, 255, 255, 0.5)',
	    hint: 'rgba(255, 255, 255, 0.5)',
	    icon: 'rgba(255, 255, 255, 0.5)'
	  },
	  divider: 'rgba(255, 255, 255, 0.12)',
	  background: {
	    paper: _grey.default[800],
	    default: '#303030'
	  },
	  action: {
	    active: _common.default.white,
	    hover: 'rgba(255, 255, 255, 0.1)',
	    hoverOpacity: 0.1,
	    selected: 'rgba(255, 255, 255, 0.2)',
	    disabled: 'rgba(255, 255, 255, 0.3)',
	    disabledBackground: 'rgba(255, 255, 255, 0.12)'
	  }
	};
	exports.dark = dark;
	
	function addLightOrDark(intent, direction, shade, tonalOffset) {
	  if (!intent[direction]) {
	    if (intent.hasOwnProperty(shade)) {
	      intent[direction] = intent[shade];
	    } else if (direction === 'light') {
	      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffset);
	    } else if (direction === 'dark') {
	      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffset * 1.5);
	    }
	  }
	}
	
	function createPalette(palette) {
	  var _palette$primary = palette.primary,
	      primary = _palette$primary === void 0 ? {
	    light: _indigo.default[300],
	    main: _indigo.default[500],
	    dark: _indigo.default[700]
	  } : _palette$primary,
	      _palette$secondary = palette.secondary,
	      secondary = _palette$secondary === void 0 ? {
	    light: _pink.default.A200,
	    main: _pink.default.A400,
	    dark: _pink.default.A700
	  } : _palette$secondary,
	      _palette$error = palette.error,
	      error = _palette$error === void 0 ? {
	    light: _red.default[300],
	    main: _red.default[500],
	    dark: _red.default[700]
	  } : _palette$error,
	      _palette$type = palette.type,
	      type = _palette$type === void 0 ? 'light' : _palette$type,
	      _palette$contrastThre = palette.contrastThreshold,
	      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,
	      _palette$tonalOffset = palette.tonalOffset,
	      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,
	      other = (0, _objectWithoutProperties2.default)(palette, ["primary", "secondary", "error", "type", "contrastThreshold", "tonalOffset"]);
	
	  function getContrastText(background) {
	    // Use the same logic as
	    // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
	    // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
	    var contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
	
	    if (false) {
	      var contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);
	      process.env.NODE_ENV !== "production" ? (0, _warning.default)(contrast >= 3, ["Material-UI: the contrast ratio of ".concat(contrast, ":1 for ").concat(contrastText, " on ").concat(background), 'falls below the WACG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n')) : void 0;
	    }
	
	    return contrastText;
	  }
	
	  function augmentColor(color) {
	    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
	    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
	    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;
	
	    if (!color.main && color[mainShade]) {
	      color.main = color[mainShade];
	    }
	
	    addLightOrDark(color, 'light', lightShade, tonalOffset);
	    addLightOrDark(color, 'dark', darkShade, tonalOffset);
	
	    if (!color.contrastText) {
	      color.contrastText = getContrastText(color.main);
	    }
	  }
	
	  augmentColor(primary);
	  augmentColor(secondary, 'A400', 'A200', 'A700');
	  augmentColor(error);
	  var types = {
	    dark: dark,
	    light: light
	  };
	   false ? (0, _warning.default)(types[type], "Material-UI: the palette type `".concat(type, "` is not supported.")) : void 0;
	  var paletteOutput = (0, _deepmerge.default)((0, _objectSpread2.default)({
	    // A collection of common colors.
	    common: _common.default,
	    // The palette type, can be light or dark.
	    type: type,
	    // The colors used to represent primary interface elements for a user.
	    primary: primary,
	    // The colors used to represent secondary interface elements for a user.
	    secondary: secondary,
	    // The colors used to represent interface elements that the user should be made aware of.
	    error: error,
	    // The grey colors.
	    grey: _grey.default,
	    // Used by `getContrastText()` to maximize the contrast between the background and
	    // the text.
	    contrastThreshold: contrastThreshold,
	    // Take a background color and return the color of the text to maximize the contrast.
	    getContrastText: getContrastText,
	    // Generate a rich color object.
	    augmentColor: augmentColor,
	    // Used by the functions below to shift a color's luminance by approximately
	    // two indexes within its tonal palette.
	    // E.g., shift from Red 500 to Red 300 or Red 700.
	    tonalOffset: tonalOffset
	  }, types[type]), other, {
	    clone: false // No need to clone deep
	
	  });
	  return paletteOutput;
	}

/***/ }),
/* 283 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var indigo = {
	  50: '#e8eaf6',
	  100: '#c5cae9',
	  200: '#9fa8da',
	  300: '#7986cb',
	  400: '#5c6bc0',
	  500: '#3f51b5',
	  600: '#3949ab',
	  700: '#303f9f',
	  800: '#283593',
	  900: '#1a237e',
	  A100: '#8c9eff',
	  A200: '#536dfe',
	  A400: '#3d5afe',
	  A700: '#304ffe'
	};
	var _default = indigo;
	exports.default = _default;

/***/ }),
/* 284 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var pink = {
	  50: '#fce4ec',
	  100: '#f8bbd0',
	  200: '#f48fb1',
	  300: '#f06292',
	  400: '#ec407a',
	  500: '#e91e63',
	  600: '#d81b60',
	  700: '#c2185b',
	  800: '#ad1457',
	  900: '#880e4f',
	  A100: '#ff80ab',
	  A200: '#ff4081',
	  A400: '#f50057',
	  A700: '#c51162'
	};
	var _default = pink;
	exports.default = _default;

/***/ }),
/* 285 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var grey = {
	  50: '#fafafa',
	  100: '#f5f5f5',
	  200: '#eeeeee',
	  300: '#e0e0e0',
	  400: '#bdbdbd',
	  500: '#9e9e9e',
	  600: '#757575',
	  700: '#616161',
	  800: '#424242',
	  900: '#212121',
	  A100: '#d5d5d5',
	  A200: '#aaaaaa',
	  A400: '#303030',
	  A700: '#616161'
	};
	var _default = grey;
	exports.default = _default;

/***/ }),
/* 286 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var red = {
	  50: '#ffebee',
	  100: '#ffcdd2',
	  200: '#ef9a9a',
	  300: '#e57373',
	  400: '#ef5350',
	  500: '#f44336',
	  600: '#e53935',
	  700: '#d32f2f',
	  800: '#c62828',
	  900: '#b71c1c',
	  A100: '#ff8a80',
	  A200: '#ff5252',
	  A400: '#ff1744',
	  A700: '#d50000'
	};
	var _default = red;
	exports.default = _default;

/***/ }),
/* 287 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var common = {
	  black: '#000',
	  white: '#fff'
	};
	var _default = common;
	exports.default = _default;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.convertHexToRGB = convertHexToRGB;
	exports.rgbToHex = rgbToHex;
	exports.decomposeColor = decomposeColor;
	exports.recomposeColor = recomposeColor;
	exports.getContrastRatio = getContrastRatio;
	exports.getLuminance = getLuminance;
	exports.emphasize = emphasize;
	exports.fade = fade;
	exports.darken = darken;
	exports.lighten = lighten;
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	//  weak
	
	/* eslint-disable no-use-before-define */
	
	/**
	 * Returns a number whose value is limited to the given range.
	 *
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clamp(value) {
	  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
	   false ? (0, _warning.default)(value >= min && value <= max, "Material-UI: the value provided ".concat(value, " is out of range [").concat(min, ", ").concat(max, "].")) : void 0;
	
	  if (value < min) {
	    return min;
	  }
	
	  if (value > max) {
	    return max;
	  }
	
	  return value;
	}
	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 *
	 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 * @returns {string} A CSS rgb color string
	 */
	
	
	function convertHexToRGB(color) {
	  color = color.substr(1);
	  var re = new RegExp(".{1,".concat(color.length / 3, "}"), 'g');
	  var colors = color.match(re);
	
	  if (colors && colors[0].length === 1) {
	    colors = colors.map(function (n) {
	      return n + n;
	    });
	  }
	
	  return colors ? "rgb(".concat(colors.map(function (n) {
	    return parseInt(n, 16);
	  }).join(', '), ")") : '';
	}
	/**
	 * Converts a color from CSS rgb format to CSS hex format.
	 *
	 * @param {string} color - RGB color, i.e. rgb(n, n, n)
	 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
	 */
	
	
	function rgbToHex(color) {
	  // Pass hex straight through
	  if (color.indexOf('#') === 0) {
	    return color;
	  }
	
	  function intToHex(c) {
	    var hex = c.toString(16);
	    return hex.length === 1 ? "0".concat(hex) : hex;
	  }
	
	  var _decomposeColor = decomposeColor(color),
	      values = _decomposeColor.values;
	
	  values = values.map(function (n) {
	    return intToHex(n);
	  });
	  return "#".concat(values.join(''));
	}
	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {object} - A MUI color object: {type: string, values: number[]}
	 */
	
	
	function decomposeColor(color) {
	  if (color.charAt(0) === '#') {
	    return decomposeColor(convertHexToRGB(color));
	  }
	
	  var marker = color.indexOf('(');
	  var type = color.substring(0, marker);
	  var values = color.substring(marker + 1, color.length - 1).split(',');
	  values = values.map(function (value) {
	    return parseFloat(value);
	  });
	
	  if (false) {
	    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
	      throw new Error(["Material-UI: unsupported `".concat(color, "` color."), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
	    }
	  }
	
	  return {
	    type: type,
	    values: values
	  };
	}
	/**
	 * Converts a color object with type and values to a string.
	 *
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	
	
	function recomposeColor(color) {
	  var type = color.type;
	  var values = color.values;
	
	  if (type.indexOf('rgb') !== -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    values = values.map(function (n, i) {
	      return i < 3 ? parseInt(n, 10) : n;
	    });
	  }
	
	  if (type.indexOf('hsl') !== -1) {
	    values[1] = "".concat(values[1], "%");
	    values[2] = "".concat(values[2], "%");
	  }
	
	  return "".concat(color.type, "(").concat(values.join(', '), ")");
	}
	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 *
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21.
	 */
	
	
	function getContrastRatio(foreground, background) {
	  var lumA = getLuminance(foreground);
	  var lumB = getLuminance(background);
	  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
	}
	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	
	
	function getLuminance(color) {
	  var decomposedColor = decomposeColor(color);
	
	  if (decomposedColor.type.indexOf('rgb') !== -1) {
	    var rgb = decomposedColor.values.map(function (val) {
	      val /= 255; // normalized
	
	      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
	    }); // Truncate at 3 digits
	
	    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
	  } // else if (decomposedColor.type.indexOf('hsl') !== -1)
	
	
	  return decomposedColor.values[2] / 100;
	}
	/**
	 * Darken or lighten a colour, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function emphasize(color) {
	  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}
	/**
	 * Set the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} value - value to set the alpha channel to in the range 0 -1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function fade(color, value) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in fade(".concat(color, ", ").concat(value, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  value = clamp(value);
	
	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	
	  color.values[3] = value;
	  return recomposeColor(color);
	}
	/**
	 * Darkens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function darken(color, coefficient) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in darken(".concat(color, ", ").concat(coefficient, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient);
	
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	
	  return recomposeColor(color);
	}
	/**
	 * Lightens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	
	
	function lighten(color, coefficient) {
	   false ? (0, _warning.default)(color, "Material-UI: missing color argument in lighten(".concat(color, ", ").concat(coefficient, ").")) : void 0;
	  if (!color) return color;
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient);
	
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  }
	
	  return recomposeColor(color);
	}

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createTypography;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(279));
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	function round(value) {
	  return Math.round(value * 1e5) / 1e5;
	}
	
	function createTypography(palette, typography) {
	  var _ref = typeof typography === 'function' ? typography(palette) : typography,
	      _ref$fontFamily = _ref.fontFamily,
	      fontFamily = _ref$fontFamily === void 0 ? '"Roboto", "Helvetica", "Arial", sans-serif' : _ref$fontFamily,
	      _ref$fontSize = _ref.fontSize,
	      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
	      _ref$fontWeightLight = _ref.fontWeightLight,
	      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,
	      _ref$fontWeightRegula = _ref.fontWeightRegular,
	      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,
	      _ref$fontWeightMedium = _ref.fontWeightMedium,
	      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,
	      _ref$htmlFontSize = _ref.htmlFontSize,
	      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,
	      allVariants = _ref.allVariants,
	      other = (0, _objectWithoutProperties2.default)(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "htmlFontSize", "allVariants"]);
	
	  var coef = fontSize / 14;
	
	  function pxToRem(value) {
	    return "".concat(value / htmlFontSize * coef, "rem");
	  }
	
	  return (0, _deepmerge.default)({
	    pxToRem: pxToRem,
	    round: round,
	    fontFamily: fontFamily,
	    fontSize: fontSize,
	    fontWeightLight: fontWeightLight,
	    fontWeightRegular: fontWeightRegular,
	    fontWeightMedium: fontWeightMedium,
	    display4: (0, _objectSpread2.default)({
	      fontSize: pxToRem(112),
	      fontWeight: fontWeightLight,
	      fontFamily: fontFamily,
	      letterSpacing: '-.04em',
	      lineHeight: "".concat(round(128 / 112), "em"),
	      marginLeft: '-.04em',
	      color: palette.text.secondary
	    }, allVariants),
	    display3: (0, _objectSpread2.default)({
	      fontSize: pxToRem(56),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      letterSpacing: '-.02em',
	      lineHeight: "".concat(round(73 / 56), "em"),
	      marginLeft: '-.02em',
	      color: palette.text.secondary
	    }, allVariants),
	    display2: (0, _objectSpread2.default)({
	      fontSize: pxToRem(45),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(51 / 45), "em"),
	      marginLeft: '-.02em',
	      color: palette.text.secondary
	    }, allVariants),
	    display1: (0, _objectSpread2.default)({
	      fontSize: pxToRem(34),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(41 / 34), "em"),
	      color: palette.text.secondary
	    }, allVariants),
	    headline: (0, _objectSpread2.default)({
	      fontSize: pxToRem(24),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(32.5 / 24), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    title: (0, _objectSpread2.default)({
	      fontSize: pxToRem(21),
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24.5 / 21), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    subheading: (0, _objectSpread2.default)({
	      fontSize: pxToRem(16),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24 / 16), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    body2: (0, _objectSpread2.default)({
	      fontSize: pxToRem(14),
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(24 / 14), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    body1: (0, _objectSpread2.default)({
	      fontSize: pxToRem(14),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(20.5 / 14), "em"),
	      color: palette.text.primary
	    }, allVariants),
	    caption: (0, _objectSpread2.default)({
	      fontSize: pxToRem(12),
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: "".concat(round(16.5 / 12), "em"),
	      color: palette.text.secondary
	    }, allVariants),
	    button: (0, _objectSpread2.default)({
	      fontSize: pxToRem(14),
	      textTransform: 'uppercase',
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      color: palette.text.primary
	    }, allVariants)
	  }, other, {
	    clone: false // No need to clone deep
	
	  });
	}

/***/ }),
/* 290 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var shadowKeyUmbraOpacity = 0.2;
	var shadowKeyPenumbraOpacity = 0.14;
	var shadowAmbientShadowOpacity = 0.12;
	
	function createShadow() {
	  return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0, 0, 0, ").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0, 0, 0, ").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0, 0, 0, ").concat(shadowAmbientShadowOpacity, ")")].join(',');
	}
	
	var shadows = ['none', createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1), createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2), createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
	var _default = shadows;
	exports.default = _default;

/***/ }),
/* 291 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var shape = {
	  borderRadius: 4
	};
	var _default = shape;
	exports.default = _default;

/***/ }),
/* 292 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var spacing = {
	  // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
	  // https://material.io/design/layout/understanding-layout.html#pixel-density
	  unit: 8
	};
	var _default = spacing;
	exports.default = _default;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = void 0;
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	/* eslint-disable no-param-reassign */
	
	/* eslint-disable no-restricted-globals */
	// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
	// to learn the context in which each easing should be used.
	var easing = {
	  // This is the most common easing curve.
	  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
	  // Objects enter the screen at full velocity from off-screen and
	  // slowly decelerate to a resting point.
	  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
	  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
	  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
	  // The sharp curve is used by objects that may return to the screen at any time.
	  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
	}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
	// to learn when use what timing
	
	exports.easing = easing;
	var duration = {
	  shortest: 150,
	  shorter: 200,
	  short: 250,
	  // most basic recommended timing
	  standard: 300,
	  // this is to be used in complex animations
	  complex: 375,
	  // recommended when something is entering screen
	  enteringScreen: 225,
	  // recommended when something is leaving screen
	  leavingScreen: 195
	};
	exports.duration = duration;
	
	var formatMs = function formatMs(milliseconds) {
	  return "".concat(Math.round(milliseconds), "ms");
	};
	
	exports.formatMs = formatMs;
	
	var isString = function isString(value) {
	  return typeof value === 'string';
	};
	
	exports.isString = isString;
	
	var isNumber = function isNumber(value) {
	  return !isNaN(parseFloat(value));
	};
	/**
	 * @param {string|Array} props
	 * @param {object} param
	 * @param {string} param.prop
	 * @param {number} param.duration
	 * @param {string} param.easing
	 * @param {number} param.delay
	 */
	
	
	exports.isNumber = isNumber;
	var _default = {
	  easing: easing,
	  duration: duration,
	  create: function create() {
	    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    return function () {
	      var _options$duration = options.duration,
	          durationOption = _options$duration === void 0 ? duration.standard : _options$duration,
	          _options$easing = options.easing,
	          easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,
	          _options$delay = options.delay,
	          delay = _options$delay === void 0 ? 0 : _options$delay,
	          other = (0, _objectWithoutProperties2.default)(options, ["duration", "easing", "delay"]);
	       false ? (0, _warning.default)(isString(props) || Array.isArray(props), 'Material-UI: argument "props" must be a string or Array.') : void 0;
	       false ? (0, _warning.default)(isNumber(durationOption) || isString(durationOption), "Material-UI: argument \"duration\" must be a number or a string but found ".concat(durationOption, ".")) : void 0;
	       false ? (0, _warning.default)(isString(easingOption), 'Material-UI: argument "easing" must be a string.') : void 0;
	       false ? (0, _warning.default)(isNumber(delay) || isString(delay), 'Material-UI: argument "delay" must be a number or a string.') : void 0;
	       false ? (0, _warning.default)(Object.keys(other).length === 0, "Material-UI: unrecognized argument(s) [".concat(Object.keys(other).join(','), "]")) : void 0;
	      return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
	        return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
	      }).join(',');
	    }();
	  },
	  getAutoHeightDuration: function getAutoHeightDuration(height) {
	    if (!height) {
	      return 0;
	    }
	
	    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
	
	    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
	  }
	};
	exports.default = _default;

/***/ }),
/* 294 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	// We need to centralize the zIndex definitions as they work
	// like global values in the browser.
	var zIndex = {
	  mobileStepper: 1000,
	  appBar: 1100,
	  drawer: 1200,
	  modal: 1300,
	  snackbar: 1400,
	  tooltip: 1500
	};
	var _default = zIndex;
	exports.default = _default;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _jssGlobal = _interopRequireDefault(__webpack_require__(222));
	
	var _jssNested = _interopRequireDefault(__webpack_require__(224));
	
	var _jssCamelCase = _interopRequireDefault(__webpack_require__(226));
	
	var _jssDefaultUnit = _interopRequireDefault(__webpack_require__(228));
	
	var _jssVendorPrefixer = _interopRequireDefault(__webpack_require__(232));
	
	var _jssPropsSort = _interopRequireDefault(__webpack_require__(238));
	
	// Subset of jss-preset-default with only the plugins the Material-UI
	// components are using.
	function jssPreset() {
	  return {
	    plugins: [(0, _jssGlobal.default)(), (0, _jssNested.default)(), (0, _jssCamelCase.default)(), (0, _jssDefaultUnit.default)(), (0, _jssVendorPrefixer.default)(), (0, _jssPropsSort.default)()]
	  };
	}
	
	var _default = jssPreset;
	exports.default = _default;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(297);
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _brcast = _interopRequireDefault(__webpack_require__(182));
	
	var _themeListener = _interopRequireWildcard(__webpack_require__(305));
	
	var _exactProp = _interopRequireDefault(__webpack_require__(306));
	
	/**
	 * This component takes a `theme` property.
	 * It makes the `theme` available down the React tree thanks to React context.
	 * This component should preferably be used at **the root of your component tree**.
	 */
	var MuiThemeProvider =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(MuiThemeProvider, _React$Component);
	
	  // We are not using the React state in order to avoid unnecessary rerender.
	  function MuiThemeProvider(props, context) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, MuiThemeProvider);
	    _this = (0, _possibleConstructorReturn2.default)(this, (MuiThemeProvider.__proto__ || Object.getPrototypeOf(MuiThemeProvider)).call(this, props, context)); // Get the outer theme from the context, can be null
	
	    _this.broadcast = (0, _brcast.default)();
	    _this.unsubscribeId = null;
	    _this.outerTheme = null;
	    _this.outerTheme = _themeListener.default.initial(context); // Propagate the theme so it can be accessed by the children
	
	    _this.broadcast.setState(_this.mergeOuterLocalTheme(_this.props.theme));
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(MuiThemeProvider, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      var _ref;
	
	      var _props = this.props,
	          sheetsManager = _props.sheetsManager,
	          disableStylesGeneration = _props.disableStylesGeneration;
	      var muiThemeProviderOptions = this.context.muiThemeProviderOptions || {};
	
	      if (sheetsManager !== undefined) {
	        muiThemeProviderOptions.sheetsManager = sheetsManager;
	      }
	
	      if (disableStylesGeneration !== undefined) {
	        muiThemeProviderOptions.disableStylesGeneration = disableStylesGeneration;
	      }
	
	      return _ref = {}, (0, _defineProperty2.default)(_ref, _themeListener.CHANNEL, this.broadcast), (0, _defineProperty2.default)(_ref, "muiThemeProviderOptions", muiThemeProviderOptions), _ref;
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      // Subscribe on the outer theme, if present
	      this.unsubscribeId = _themeListener.default.subscribe(this.context, function (outerTheme) {
	        _this2.outerTheme = outerTheme; // Forward the parent theme update to the children
	
	        _this2.broadcast.setState(_this2.mergeOuterLocalTheme(_this2.props.theme));
	      });
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      // Propagate a local theme update
	      if (this.props.theme !== prevProps.theme) {
	        this.broadcast.setState(this.mergeOuterLocalTheme(this.props.theme));
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      if (this.unsubscribeId !== null) {
	        _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	      }
	    } // Simple merge between the outer theme and the local theme
	
	  }, {
	    key: "mergeOuterLocalTheme",
	    value: function mergeOuterLocalTheme(localTheme) {
	      // To support composition of theme.
	      if (typeof localTheme === 'function') {
	         false ? (0, _warning.default)(this.outerTheme, ['Material-UI: you are providing a theme function property ' + 'to the MuiThemeProvider component:', '<MuiThemeProvider theme={outerTheme => outerTheme} />', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\n')) : void 0;
	        return localTheme(this.outerTheme);
	      }
	
	      if (!this.outerTheme) {
	        return localTheme;
	      }
	
	      return (0, _objectSpread2.default)({}, this.outerTheme, localTheme);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      // TODO move the sheetsManager property to a different component.
	      // warning(
	      //   typeof window !== 'undefined' || this.props.sheetsManager,
	      //   [
	      //     'Material-UI: you need to provide a sheetsManager to the MuiThemeProvider ' +
	      //       'when rendering on the server.',
	      //     'If you do not, you might experience a memory leak',
	      //   ].join('\n'),
	      // );
	      return this.props.children;
	    }
	  }]);
	  return MuiThemeProvider;
	}(_react.default.Component);
	
	MuiThemeProvider.propTypes =  false ? {
	  /**
	   * You can wrap a node.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * You can disable the generation of the styles with this option.
	   * It can be useful when traversing the React tree outside of the HTML
	   * rendering step on the server.
	   * Let's say you are using react-apollo to extract all
	   * the queries made by the interface server side.
	   * You can significantly speed up the traversal with this property.
	   */
	  disableStylesGeneration: _propTypes.default.bool,
	
	  /**
	   * The sheetsManager is used to deduplicate style sheet injection in the page.
	   * It's deduplicating using the (theme, styles) couple.
	   * On the server, you should provide a new instance for each request.
	   */
	  sheetsManager: _propTypes.default.object,
	
	  /**
	   * A theme object.
	   */
	  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]).isRequired
	} : {};
	MuiThemeProvider.propTypes =  false ? (0, _exactProp.default)(MuiThemeProvider.propTypes) : {};
	MuiThemeProvider.childContextTypes = (0, _objectSpread2.default)({}, _themeListener.default.contextTypes, {
	  muiThemeProviderOptions: _propTypes.default.object
	});
	MuiThemeProvider.contextTypes = (0, _objectSpread2.default)({}, _themeListener.default.contextTypes, {
	  muiThemeProviderOptions: _propTypes.default.object
	});
	var _default = MuiThemeProvider;
	exports.default = _default;

/***/ }),
/* 297 */
/***/ (function(module, exports) {

	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};
	
	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
	
	          if (desc.get || desc.set) {
	            Object.defineProperty(newObj, key, desc);
	          } else {
	            newObj[key] = obj[key];
	          }
	        }
	      }
	    }
	
	    newObj.default = obj;
	    return newObj;
	  }
	}
	
	module.exports = _interopRequireWildcard;

/***/ }),
/* 298 */
/***/ (function(module, exports) {

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	module.exports = _classCallCheck;

/***/ }),
/* 299 */
/***/ (function(module, exports) {

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}
	
	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}
	
	module.exports = _createClass;

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

	var _typeof = __webpack_require__(301);
	
	var assertThisInitialized = __webpack_require__(302);
	
	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof(call) === "object" || typeof call === "function")) {
	    return call;
	  }
	
	  return assertThisInitialized(self);
	}
	
	module.exports = _possibleConstructorReturn;

/***/ }),
/* 301 */
/***/ (function(module, exports) {

	function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }
	
	function _typeof(obj) {
	  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return _typeof2(obj);
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
	    };
	  }
	
	  return _typeof(obj);
	}
	
	module.exports = _typeof;

/***/ }),
/* 302 */
/***/ (function(module, exports) {

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return self;
	}
	
	module.exports = _assertThisInitialized;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	var setPrototypeOf = __webpack_require__(304);
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }
	
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) setPrototypeOf(subClass, superClass);
	}
	
	module.exports = _inherits;

/***/ }),
/* 304 */
/***/ (function(module, exports) {

	function _setPrototypeOf(o, p) {
	  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	
	  return _setPrototypeOf(o, p);
	}
	
	module.exports = _setPrototypeOf;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CHANNEL = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	// Same value used by react-jss
	var CHANNEL = '__THEMING__';
	exports.CHANNEL = CHANNEL;
	var themeListener = {
	  contextTypes: (0, _defineProperty2.default)({}, CHANNEL, _propTypes.default.object),
	  initial: function initial(context) {
	    if (!context[CHANNEL]) {
	      return null;
	    }
	
	    return context[CHANNEL].getState();
	  },
	  subscribe: function subscribe(context, cb) {
	    if (!context[CHANNEL]) {
	      return null;
	    }
	
	    return context[CHANNEL].subscribe(cb);
	  },
	  unsubscribe: function unsubscribe(context, subscriptionId) {
	    if (context[CHANNEL]) {
	      context[CHANNEL].unsubscribe(subscriptionId);
	    }
	  }
	};
	var _default = themeListener;
	exports.default = _default;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.specialProperty = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectSpread3 = _interopRequireDefault(__webpack_require__(276));
	
	// This module is based on https://github.com/airbnb/prop-types-exact repository.
	// However, in order to reduce the number of dependencies and to remove some extra safe checks
	// the module was forked.
	// Only exported for test purposes.
	var specialProperty = "exact-prop: \u200B";
	exports.specialProperty = specialProperty;
	
	function exactProp(propTypes) {
	  /* istanbul ignore if */
	  if (true) {
	    return propTypes;
	  }
	
	  return (0, _objectSpread3.default)({}, propTypes, (0, _defineProperty2.default)({}, specialProperty, function (props) {
	    var unsupportedProps = Object.keys(props).filter(function (prop) {
	      return !propTypes.hasOwnProperty(prop);
	    });
	
	    if (unsupportedProps.length > 0) {
	      return new Error("The following properties are not supported: ".concat(unsupportedProps.map(function (prop) {
	        return "`".concat(prop, "`");
	      }).join(', '), ". Please remove them."));
	    }
	
	    return null;
	  }));
	}
	
	var _default = exactProp;
	exports.default = _default;

/***/ }),
/* 307 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createStyles;
	
	function createStyles(s) {
	  return s;
	}

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(297);
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.sheetsManager = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(54));
	
	var _getDisplayName = _interopRequireDefault(__webpack_require__(310));
	
	var _wrapDisplayName = _interopRequireDefault(__webpack_require__(311));
	
	var _contextTypes = _interopRequireDefault(__webpack_require__(240));
	
	var _jss = __webpack_require__(202);
	
	var ns = _interopRequireWildcard(__webpack_require__(239));
	
	var _jssPreset = _interopRequireDefault(__webpack_require__(295));
	
	var _mergeClasses = _interopRequireDefault(__webpack_require__(312));
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(275));
	
	var _themeListener = _interopRequireDefault(__webpack_require__(305));
	
	var _createGenerateClassName = _interopRequireDefault(__webpack_require__(274));
	
	var _getStylesCreator = _interopRequireDefault(__webpack_require__(313));
	
	var _getThemeProps = _interopRequireDefault(__webpack_require__(314));
	
	// Default JSS instance.
	var jss = (0, _jss.create)((0, _jssPreset.default)()); // Use a singleton or the provided one by the context.
	
	var generateClassName = (0, _createGenerateClassName.default)(); // Global index counter to preserve source order.
	// We create the style sheet during at the creation of the component,
	// children are handled after the parents, so the order of style elements would be parent->child.
	// It is a problem though when a parent passes a className
	// which needs to override any childs styles.
	// StyleSheet of the child has a higher specificity, because of the source order.
	// So our solution is to render sheets them in the reverse order child->sheet, so
	// that parent has a higher specificity.
	
	var indexCounter = -10e10; // Exported for test purposes
	
	var sheetsManager = new Map(); // We use the same empty object to ref count the styles that don't need a theme object.
	
	exports.sheetsManager = sheetsManager;
	var noopTheme = {}; // In order to have self-supporting components, we rely on default theme when not provided.
	
	var defaultTheme;
	
	function getDefaultTheme() {
	  if (defaultTheme) {
	    return defaultTheme;
	  }
	
	  defaultTheme = (0, _createMuiTheme.default)();
	  return defaultTheme;
	} // Link a style sheet with a component.
	// It does not modify the component passed to it;
	// instead, it returns a new component, with a `classes` property.
	
	
	var withStyles = function withStyles(stylesOrCreator) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return function (Component) {
	    var _options$withTheme = options.withTheme,
	        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,
	        _options$flip = options.flip,
	        flip = _options$flip === void 0 ? null : _options$flip,
	        name = options.name,
	        styleSheetOptions = (0, _objectWithoutProperties2.default)(options, ["withTheme", "flip", "name"]);
	    var stylesCreator = (0, _getStylesCreator.default)(stylesOrCreator);
	    var listenToTheme = stylesCreator.themingEnabled || withTheme || typeof name === 'string';
	    indexCounter += 1;
	    stylesCreator.options.index = indexCounter;
	     false ? (0, _warning.default)(indexCounter < 0, ['Material-UI: you might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join(' ')) : void 0;
	
	    var WithStyles =
	    /*#__PURE__*/
	    function (_React$Component) {
	      (0, _inherits2.default)(WithStyles, _React$Component);
	
	      function WithStyles(props, context) {
	        var _this;
	
	        (0, _classCallCheck2.default)(this, WithStyles);
	        _this = (0, _possibleConstructorReturn2.default)(this, (WithStyles.__proto__ || Object.getPrototypeOf(WithStyles)).call(this, props, context));
	        _this.disableStylesGeneration = false;
	        _this.jss = null;
	        _this.sheetOptions = null;
	        _this.sheetsManager = sheetsManager;
	        _this.stylesCreatorSaved = null;
	        _this.theme = null;
	        _this.unsubscribeId = null;
	        _this.state = {};
	        _this.jss = _this.context[ns.jss] || jss;
	        var muiThemeProviderOptions = _this.context.muiThemeProviderOptions;
	
	        if (muiThemeProviderOptions) {
	          if (muiThemeProviderOptions.sheetsManager) {
	            _this.sheetsManager = muiThemeProviderOptions.sheetsManager;
	          }
	
	          _this.disableStylesGeneration = muiThemeProviderOptions.disableStylesGeneration;
	        } // Attach the stylesCreator to the instance of the component as in the context
	        // of react-hot-loader the hooks can be executed in a different closure context:
	        // https://github.com/gaearon/react-hot-loader/blob/master/src/patch.dev.js#L107
	
	
	        _this.stylesCreatorSaved = stylesCreator;
	        _this.sheetOptions = (0, _objectSpread2.default)({
	          generateClassName: generateClassName
	        }, _this.context[ns.sheetOptions]); // We use || as the function call is lazy evaluated.
	
	        _this.theme = listenToTheme ? _themeListener.default.initial(context) || getDefaultTheme() : noopTheme;
	
	        _this.attach(_this.theme);
	
	        _this.cacheClasses = {
	          // Cache for the finalized classes value.
	          value: null,
	          // Cache for the last used classes prop pointer.
	          lastProp: null,
	          // Cache for the last used rendered classes pointer.
	          lastJSS: {}
	        };
	        return _this;
	      }
	
	      (0, _createClass2.default)(WithStyles, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          if (!listenToTheme) {
	            return;
	          }
	
	          this.unsubscribeId = _themeListener.default.subscribe(this.context, function (theme) {
	            var oldTheme = _this2.theme;
	            _this2.theme = theme;
	
	            _this2.attach(_this2.theme); // Rerender the component so the underlying component gets the theme update.
	            // By theme update we mean receiving and applying the new class names.
	
	
	            _this2.setState({}, function () {
	              _this2.detach(oldTheme);
	            });
	          });
	        }
	      }, {
	        key: "componentDidUpdate",
	        value: function componentDidUpdate() {
	          // react-hot-loader specific logic
	          if (this.stylesCreatorSaved === stylesCreator || ("production") === 'production') {
	            return;
	          }
	
	          this.detach(this.theme);
	          this.stylesCreatorSaved = stylesCreator;
	          this.attach(this.theme);
	          this.forceUpdate();
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          this.detach(this.theme);
	
	          if (this.unsubscribeId !== null) {
	            _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: "getClasses",
	        value: function getClasses() {
	          // Tracks if either the rendered classes or classes prop has changed,
	          // requiring the generation of a new finalized classes object.
	          var generate = false;
	
	          if (!this.disableStylesGeneration) {
	            var sheetManager = this.sheetsManager.get(this.stylesCreatorSaved);
	            var sheetsManagerTheme = sheetManager.get(this.theme);
	
	            if (sheetsManagerTheme.sheet.classes !== this.cacheClasses.lastJSS) {
	              this.cacheClasses.lastJSS = sheetsManagerTheme.sheet.classes;
	              generate = true;
	            }
	          }
	
	          if (this.props.classes !== this.cacheClasses.lastProp) {
	            this.cacheClasses.lastProp = this.props.classes;
	            generate = true;
	          }
	
	          if (generate) {
	            this.cacheClasses.value = (0, _mergeClasses.default)({
	              baseClasses: this.cacheClasses.lastJSS,
	              newClasses: this.props.classes,
	              Component: Component,
	              noBase: this.disableStylesGeneration
	            });
	          }
	
	          return this.cacheClasses.value;
	        }
	      }, {
	        key: "attach",
	        value: function attach(theme) {
	          if (this.disableStylesGeneration) {
	            return;
	          }
	
	          var stylesCreatorSaved = this.stylesCreatorSaved;
	          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);
	
	          if (!sheetManager) {
	            sheetManager = new Map();
	            this.sheetsManager.set(stylesCreatorSaved, sheetManager);
	          }
	
	          var sheetManagerTheme = sheetManager.get(theme);
	
	          if (!sheetManagerTheme) {
	            sheetManagerTheme = {
	              refs: 0,
	              sheet: null
	            };
	            sheetManager.set(theme, sheetManagerTheme);
	          }
	
	          if (sheetManagerTheme.refs === 0) {
	            var styles = stylesCreatorSaved.create(theme, name);
	            var meta = name;
	
	            if (false) {
	              meta = (0, _getDisplayName.default)(Component);
	              process.env.NODE_ENV !== "production" ? (0, _warning.default)(typeof meta === 'string', ['Material-UI: the component displayName is invalid. It needs to be a string.', "Please fix the following component: ".concat(Component, ".")].join('\n')) : void 0;
	            }
	
	            var sheet = this.jss.createStyleSheet(styles, (0, _objectSpread2.default)({
	              meta: meta,
	              classNamePrefix: meta,
	              flip: typeof flip === 'boolean' ? flip : theme.direction === 'rtl',
	              link: false
	            }, this.sheetOptions, stylesCreatorSaved.options, {
	              name: name
	            }, styleSheetOptions));
	            sheetManagerTheme.sheet = sheet;
	            sheet.attach();
	            var sheetsRegistry = this.context[ns.sheetsRegistry];
	
	            if (sheetsRegistry) {
	              sheetsRegistry.add(sheet);
	            }
	          }
	
	          sheetManagerTheme.refs += 1;
	        }
	      }, {
	        key: "detach",
	        value: function detach(theme) {
	          if (this.disableStylesGeneration) {
	            return;
	          }
	
	          var stylesCreatorSaved = this.stylesCreatorSaved;
	          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);
	          var sheetManagerTheme = sheetManager.get(theme);
	          sheetManagerTheme.refs -= 1;
	
	          if (sheetManagerTheme.refs === 0) {
	            sheetManager.delete(theme);
	            this.jss.removeStyleSheet(sheetManagerTheme.sheet);
	            var sheetsRegistry = this.context[ns.sheetsRegistry];
	
	            if (sheetsRegistry) {
	              sheetsRegistry.remove(sheetManagerTheme.sheet);
	            }
	          }
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          var _props = this.props,
	              classes = _props.classes,
	              innerRef = _props.innerRef,
	              other = (0, _objectWithoutProperties2.default)(_props, ["classes", "innerRef"]);
	          var more = (0, _getThemeProps.default)({
	            theme: this.theme,
	            name: name
	          }); // Provide the theme to the wrapped component.
	          // So we don't have to use the `withTheme()` Higher-order Component.
	
	          if (withTheme) {
	            more.theme = this.theme;
	          }
	
	          return _react.default.createElement(Component, (0, _extends2.default)({}, more, {
	            classes: this.getClasses(),
	            ref: innerRef
	          }, other));
	        }
	      }]);
	      return WithStyles;
	    }(_react.default.Component);
	
	    WithStyles.propTypes =  false ? {
	      /**
	       * Override or extend the styles applied to the component.
	       */
	      classes: _propTypes.default.object,
	
	      /**
	       * Use that property to pass a ref callback to the decorated component.
	       */
	      innerRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
	    } : {};
	    WithStyles.contextTypes = (0, _objectSpread2.default)({
	      muiThemeProviderOptions: _propTypes.default.object
	    }, _contextTypes.default, listenToTheme ? _themeListener.default.contextTypes : {});
	
	    if (false) {
	      WithStyles.displayName = (0, _wrapDisplayName.default)(Component, 'WithStyles');
	    }
	
	    (0, _hoistNonReactStatics.default)(WithStyles, Component);
	
	    if (false) {
	      // Exposed for test purposes.
	      WithStyles.Naked = Component;
	      WithStyles.options = options;
	    }
	
	    return WithStyles;
	  };
	};
	
	var _default = withStyles;
	exports.default = _default;

/***/ }),
/* 309 */
/***/ (function(module, exports) {

	function _extends() {
	  module.exports = _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	module.exports = _extends;

/***/ }),
/* 310 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var getDisplayName = function getDisplayName(Component) {
	  if (typeof Component === 'string') {
	    return Component;
	  }
	
	  if (!Component) {
	    return undefined;
	  }
	
	  return Component.displayName || Component.name || 'Component';
	};
	
	exports.default = getDisplayName;

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getDisplayName = __webpack_require__(310);
	
	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
	  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';
	};
	
	exports.default = wrapDisplayName;

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _getDisplayName = _interopRequireDefault(__webpack_require__(310));
	
	function mergeClasses() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var baseClasses = options.baseClasses,
	      newClasses = options.newClasses,
	      Component = options.Component,
	      _options$noBase = options.noBase,
	      noBase = _options$noBase === void 0 ? false : _options$noBase;
	
	  if (!newClasses) {
	    return baseClasses;
	  }
	
	  return (0, _objectSpread2.default)({}, baseClasses, Object.keys(newClasses).reduce(function (accumulator, key) {
	     false ? (0, _warning.default)(baseClasses[key] || noBase, ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not implemented in ".concat((0, _getDisplayName.default)(Component), "."), "You can only override one of the following: ".concat(Object.keys(baseClasses).join(','))].join('\n')) : void 0;
	     false ? (0, _warning.default)(!newClasses[key] || typeof newClasses[key] === 'string', ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not valid for ".concat((0, _getDisplayName.default)(Component), "."), "You need to provide a non empty string instead of: ".concat(newClasses[key], ".")].join('\n')) : void 0;
	
	    if (newClasses[key]) {
	      accumulator[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
	    }
	
	    return accumulator;
	  }, {}));
	}
	
	var _default = mergeClasses;
	exports.default = _default;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(301));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _deepmerge = _interopRequireDefault(__webpack_require__(279));
	
	// < 1kb payload overhead when lodash/merge is > 3kb.
	// Support for the jss-expand plugin.
	function arrayMerge(destination, source) {
	  return source;
	}
	
	function getStylesCreator(stylesOrCreator) {
	  var themingEnabled = typeof stylesOrCreator === 'function';
	   false ? (0, _warning.default)((0, _typeof2.default)(stylesOrCreator) === 'object' || themingEnabled, ['Material-UI: the first argument provided to withStyles() is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\n')) : void 0;
	
	  function create(theme, name) {
	    var styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
	
	    if (!name || !theme.overrides || !theme.overrides[name]) {
	      return styles;
	    }
	
	    var overrides = theme.overrides[name];
	    var stylesWithOverrides = (0, _objectSpread2.default)({}, styles);
	    Object.keys(overrides).forEach(function (key) {
	       false ? (0, _warning.default)(stylesWithOverrides[key], ['Material-UI: you are trying to override a style that does not exist.', "Fix the `".concat(key, "` key of `theme.overrides.").concat(name, "`.")].join('\n')) : void 0;
	      stylesWithOverrides[key] = (0, _deepmerge.default)(stylesWithOverrides[key], overrides[key], {
	        arrayMerge: arrayMerge
	      });
	    });
	    return stylesWithOverrides;
	  }
	
	  return {
	    create: create,
	    options: {},
	    themingEnabled: themingEnabled
	  };
	}
	
	var _default = getStylesCreator;
	exports.default = _default;

/***/ }),
/* 314 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function getThemeProps(params) {
	  var theme = params.theme,
	      name = params.name;
	
	  if (!name || !theme.props || !theme.props[name]) {
	    return {};
	  }
	
	  return theme.props[name];
	}
	
	var _default = getThemeProps;
	exports.default = _default;

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(54));
	
	var _wrapDisplayName = _interopRequireDefault(__webpack_require__(311));
	
	var _createMuiTheme = _interopRequireDefault(__webpack_require__(275));
	
	var _themeListener = _interopRequireDefault(__webpack_require__(305));
	
	var defaultTheme;
	
	function getDefaultTheme() {
	  if (defaultTheme) {
	    return defaultTheme;
	  }
	
	  defaultTheme = (0, _createMuiTheme.default)();
	  return defaultTheme;
	} // Provide the theme object as a property to the input component.
	
	
	var withTheme = function withTheme() {
	  return function (Component) {
	    var WithTheme =
	    /*#__PURE__*/
	    function (_React$Component) {
	      (0, _inherits2.default)(WithTheme, _React$Component);
	
	      function WithTheme(props, context) {
	        var _this;
	
	        (0, _classCallCheck2.default)(this, WithTheme);
	        _this = (0, _possibleConstructorReturn2.default)(this, (WithTheme.__proto__ || Object.getPrototypeOf(WithTheme)).call(this, props, context));
	        _this.unsubscribeId = null;
	        _this.state = {};
	        _this.state = {
	          // We use || as the function call is lazy evaluated.
	          theme: _themeListener.default.initial(context) || getDefaultTheme()
	        };
	        return _this;
	      }
	
	      (0, _createClass2.default)(WithTheme, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          this.unsubscribeId = _themeListener.default.subscribe(this.context, function (theme) {
	            _this2.setState({
	              theme: theme
	            });
	          });
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          if (this.unsubscribeId !== null) {
	            _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          return _react.default.createElement(Component, (0, _extends2.default)({
	            theme: this.state.theme
	          }, this.props));
	        }
	      }]);
	      return WithTheme;
	    }(_react.default.Component);
	
	    WithTheme.contextTypes = _themeListener.default.contextTypes;
	
	    if (false) {
	      WithTheme.displayName = (0, _wrapDisplayName.default)(Component, 'WithTheme');
	    }
	
	    (0, _hoistNonReactStatics.default)(WithTheme, Component);
	
	    if (false) {
	      // Exposed for test purposes.
	      WithTheme.Naked = Component;
	    }
	
	    return WithTheme;
	  };
	};
	
	var _default = withTheme;
	exports.default = _default;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _styles = __webpack_require__(272);
	
	var _color = __webpack_require__(317);
	
	var _color2 = _interopRequireDefault(_color);
	
	var _colors = __webpack_require__(325);
	
	var _colors2 = _interopRequireDefault(_colors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var theme = (0, _styles.createMuiTheme)({
	  base: {
	    colors: {
	      background: _colors2.default.background,
	      text: _colors2.default.dark,
	      link: _colors2.default.accent,
	      linkHover: (0, _color2.default)(_colors2.default.accent).lighten(0.1).string(),
	      accent: _colors2.default.accent,
	      lines: _colors2.default.superLightGray
	    },
	    sizes: {
	      linesMargin: "20px"
	    },
	    fonts: {
	      unstyledFamily: "Arial",
	      styledFamily: "Arial",
	      styledFonts: "300,400,600"
	    }
	  },
	  info: {
	    colors: {
	      text: _colors2.default.gray,
	      background: _colors2.default.background,
	      socialIcons: _colors2.default.lightGray,
	      socialIconsHover: _colors2.default.accent,
	      menuLink: _colors2.default.gray,
	      menuLinkHover: _colors2.default.accent
	    },
	    sizes: {
	      width: 320,
	      headerHeight: 170
	    },
	    fonts: {
	      boxTitleSize: 1.3,
	      boxTitleSizeM: 1.5,
	      boxTitleSizeL: 1.7
	    }
	  },
	  navigator: {
	    colors: {
	      background: _colors2.default.background,
	      postsListItemLink: _colors2.default.gray,
	      postsListItemLinkHover: _colors2.default.accent,
	      postsHeader: _colors2.default.gray
	    },
	    sizes: {
	      closedHeight: 80,
	      postsListItemH1Font: 1.3,
	      postsListItemH2Font: 1.1,
	      fontIncraseForM: 1.15,
	      fontIncraseForL: 1.3
	    }
	  },
	  main: {
	    colors: {
	      background: _colors2.default.background,
	      title: _colors2.default.gray,
	      subTitle: _colors2.default.gray,
	      meta: _colors2.default.gray,
	      content: _colors2.default.dark,
	      footer: _colors2.default.gray,
	      contentHeading: _colors2.default.gray,
	      blockquoteFrame: _colors2.default.lightGray,
	      link: _colors2.default.accent,
	      linkHover: _colors2.default.dark,
	      fbCommentsColorscheme: "light"
	    },
	    sizes: {
	      articleMaxWidth: "50em"
	    },
	    fonts: {
	      title: {
	        size: 1.9,
	        sizeM: 2.5,
	        sizeL: 2.7,
	        weight: 600,
	        lineHeight: 1.1
	      },
	      subTitle: {
	        size: 1.5,
	        sizeM: 1.8,
	        sizeL: 1.95,
	        weight: 300,
	        lineHeight: 1.1
	      },
	      meta: {
	        size: 0.9,
	        weight: 600
	      },
	      content: {
	        size: 1.0,
	        sizeM: 1.15,
	        sizeL: 1.1,
	        lineHeight: 1.6
	      },
	      contentHeading: {
	        h2Size: 1.5,
	        h3Size: 1.3,
	        weight: 600,
	        lineHeight: 1.3
	      },
	      footer: {
	        size: 1,
	        lineHeight: 1.4
	      }
	    }
	  },
	  footer: {
	    colors: {
	      text: (0, _color2.default)(_colors2.default.gray).lighten(0.5).string(),
	      link: _colors2.default.accent,
	      linkHover: (0, _color2.default)(_colors2.default.accent).lighten(0.2).string()
	    },
	    fonts: {
	      footnote: {
	        size: 0.8,
	        lineHeight: 1.4
	      }
	    }
	  },
	  bars: {
	    colors: {
	      background: _colors2.default.background,
	      icon: _colors2.default.gray,
	      text: _colors2.default.gray
	    },
	    sizes: {
	      actionsBar: 60,
	      infoBar: 60
	    }
	  },
	  mediaQueryTresholds: {
	    M: 600,
	    L: 1024
	  },
	  palette: {
	    primary: {
	      main: _colors2.default.accent
	    },
	    action: {
	      hover: "rgba(0, 0, 0, 0.01)"
	    }
	  },
	  typography: {
	    fontFamily: "Arial, Arial",
	    fontSize: 16
	  }
	});
	
	exports.default = theme;
	module.exports = exports["default"];

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var colorString = __webpack_require__(318);
	var convert = __webpack_require__(322);
	
	var _slice = [].slice;
	
	var skippedModels = [
		// to be honest, I don't really feel like keyword belongs in color convert, but eh.
		'keyword',
	
		// gray conflicts with some method names, and has its own method defined.
		'gray',
	
		// shouldn't really be in color-convert either...
		'hex'
	];
	
	var hashedModelKeys = {};
	Object.keys(convert).forEach(function (model) {
		hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;
	});
	
	var limiters = {};
	
	function Color(obj, model) {
		if (!(this instanceof Color)) {
			return new Color(obj, model);
		}
	
		if (model && model in skippedModels) {
			model = null;
		}
	
		if (model && !(model in convert)) {
			throw new Error('Unknown model: ' + model);
		}
	
		var i;
		var channels;
	
		if (!obj) {
			this.model = 'rgb';
			this.color = [0, 0, 0];
			this.valpha = 1;
		} else if (obj instanceof Color) {
			this.model = obj.model;
			this.color = obj.color.slice();
			this.valpha = obj.valpha;
		} else if (typeof obj === 'string') {
			var result = colorString.get(obj);
			if (result === null) {
				throw new Error('Unable to parse color from string: ' + obj);
			}
	
			this.model = result.model;
			channels = convert[this.model].channels;
			this.color = result.value.slice(0, channels);
			this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
		} else if (obj.length) {
			this.model = model || 'rgb';
			channels = convert[this.model].channels;
			var newArr = _slice.call(obj, 0, channels);
			this.color = zeroArray(newArr, channels);
			this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;
		} else if (typeof obj === 'number') {
			// this is always RGB - can be converted later on.
			obj &= 0xFFFFFF;
			this.model = 'rgb';
			this.color = [
				(obj >> 16) & 0xFF,
				(obj >> 8) & 0xFF,
				obj & 0xFF
			];
			this.valpha = 1;
		} else {
			this.valpha = 1;
	
			var keys = Object.keys(obj);
			if ('alpha' in obj) {
				keys.splice(keys.indexOf('alpha'), 1);
				this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;
			}
	
			var hashedKeys = keys.sort().join('');
			if (!(hashedKeys in hashedModelKeys)) {
				throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));
			}
	
			this.model = hashedModelKeys[hashedKeys];
	
			var labels = convert[this.model].labels;
			var color = [];
			for (i = 0; i < labels.length; i++) {
				color.push(obj[labels[i]]);
			}
	
			this.color = zeroArray(color);
		}
	
		// perform limitations (clamping, etc.)
		if (limiters[this.model]) {
			channels = convert[this.model].channels;
			for (i = 0; i < channels; i++) {
				var limit = limiters[this.model][i];
				if (limit) {
					this.color[i] = limit(this.color[i]);
				}
			}
		}
	
		this.valpha = Math.max(0, Math.min(1, this.valpha));
	
		if (Object.freeze) {
			Object.freeze(this);
		}
	}
	
	Color.prototype = {
		toString: function () {
			return this.string();
		},
	
		toJSON: function () {
			return this[this.model]();
		},
	
		string: function (places) {
			var self = this.model in colorString.to ? this : this.rgb();
			self = self.round(typeof places === 'number' ? places : 1);
			var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
			return colorString.to[self.model](args);
		},
	
		percentString: function (places) {
			var self = this.rgb().round(typeof places === 'number' ? places : 1);
			var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
			return colorString.to.rgb.percent(args);
		},
	
		array: function () {
			return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
		},
	
		object: function () {
			var result = {};
			var channels = convert[this.model].channels;
			var labels = convert[this.model].labels;
	
			for (var i = 0; i < channels; i++) {
				result[labels[i]] = this.color[i];
			}
	
			if (this.valpha !== 1) {
				result.alpha = this.valpha;
			}
	
			return result;
		},
	
		unitArray: function () {
			var rgb = this.rgb().color;
			rgb[0] /= 255;
			rgb[1] /= 255;
			rgb[2] /= 255;
	
			if (this.valpha !== 1) {
				rgb.push(this.valpha);
			}
	
			return rgb;
		},
	
		unitObject: function () {
			var rgb = this.rgb().object();
			rgb.r /= 255;
			rgb.g /= 255;
			rgb.b /= 255;
	
			if (this.valpha !== 1) {
				rgb.alpha = this.valpha;
			}
	
			return rgb;
		},
	
		round: function (places) {
			places = Math.max(places || 0, 0);
			return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
		},
	
		alpha: function (val) {
			if (arguments.length) {
				return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
			}
	
			return this.valpha;
		},
	
		// rgb
		red: getset('rgb', 0, maxfn(255)),
		green: getset('rgb', 1, maxfn(255)),
		blue: getset('rgb', 2, maxfn(255)),
	
		hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style
	
		saturationl: getset('hsl', 1, maxfn(100)),
		lightness: getset('hsl', 2, maxfn(100)),
	
		saturationv: getset('hsv', 1, maxfn(100)),
		value: getset('hsv', 2, maxfn(100)),
	
		chroma: getset('hcg', 1, maxfn(100)),
		gray: getset('hcg', 2, maxfn(100)),
	
		white: getset('hwb', 1, maxfn(100)),
		wblack: getset('hwb', 2, maxfn(100)),
	
		cyan: getset('cmyk', 0, maxfn(100)),
		magenta: getset('cmyk', 1, maxfn(100)),
		yellow: getset('cmyk', 2, maxfn(100)),
		black: getset('cmyk', 3, maxfn(100)),
	
		x: getset('xyz', 0, maxfn(100)),
		y: getset('xyz', 1, maxfn(100)),
		z: getset('xyz', 2, maxfn(100)),
	
		l: getset('lab', 0, maxfn(100)),
		a: getset('lab', 1),
		b: getset('lab', 2),
	
		keyword: function (val) {
			if (arguments.length) {
				return new Color(val);
			}
	
			return convert[this.model].keyword(this.color);
		},
	
		hex: function (val) {
			if (arguments.length) {
				return new Color(val);
			}
	
			return colorString.to.hex(this.rgb().round().color);
		},
	
		rgbNumber: function () {
			var rgb = this.rgb().color;
			return ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);
		},
	
		luminosity: function () {
			// http://www.w3.org/TR/WCAG20/#relativeluminancedef
			var rgb = this.rgb().color;
	
			var lum = [];
			for (var i = 0; i < rgb.length; i++) {
				var chan = rgb[i] / 255;
				lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
			}
	
			return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
		},
	
		contrast: function (color2) {
			// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
			var lum1 = this.luminosity();
			var lum2 = color2.luminosity();
	
			if (lum1 > lum2) {
				return (lum1 + 0.05) / (lum2 + 0.05);
			}
	
			return (lum2 + 0.05) / (lum1 + 0.05);
		},
	
		level: function (color2) {
			var contrastRatio = this.contrast(color2);
			if (contrastRatio >= 7.1) {
				return 'AAA';
			}
	
			return (contrastRatio >= 4.5) ? 'AA' : '';
		},
	
		isDark: function () {
			// YIQ equation from http://24ways.org/2010/calculating-color-contrast
			var rgb = this.rgb().color;
			var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
			return yiq < 128;
		},
	
		isLight: function () {
			return !this.isDark();
		},
	
		negate: function () {
			var rgb = this.rgb();
			for (var i = 0; i < 3; i++) {
				rgb.color[i] = 255 - rgb.color[i];
			}
			return rgb;
		},
	
		lighten: function (ratio) {
			var hsl = this.hsl();
			hsl.color[2] += hsl.color[2] * ratio;
			return hsl;
		},
	
		darken: function (ratio) {
			var hsl = this.hsl();
			hsl.color[2] -= hsl.color[2] * ratio;
			return hsl;
		},
	
		saturate: function (ratio) {
			var hsl = this.hsl();
			hsl.color[1] += hsl.color[1] * ratio;
			return hsl;
		},
	
		desaturate: function (ratio) {
			var hsl = this.hsl();
			hsl.color[1] -= hsl.color[1] * ratio;
			return hsl;
		},
	
		whiten: function (ratio) {
			var hwb = this.hwb();
			hwb.color[1] += hwb.color[1] * ratio;
			return hwb;
		},
	
		blacken: function (ratio) {
			var hwb = this.hwb();
			hwb.color[2] += hwb.color[2] * ratio;
			return hwb;
		},
	
		grayscale: function () {
			// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
			var rgb = this.rgb().color;
			var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
			return Color.rgb(val, val, val);
		},
	
		fade: function (ratio) {
			return this.alpha(this.valpha - (this.valpha * ratio));
		},
	
		opaquer: function (ratio) {
			return this.alpha(this.valpha + (this.valpha * ratio));
		},
	
		rotate: function (degrees) {
			var hsl = this.hsl();
			var hue = hsl.color[0];
			hue = (hue + degrees) % 360;
			hue = hue < 0 ? 360 + hue : hue;
			hsl.color[0] = hue;
			return hsl;
		},
	
		mix: function (mixinColor, weight) {
			// ported from sass implementation in C
			// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
			var color1 = mixinColor.rgb();
			var color2 = this.rgb();
			var p = weight === undefined ? 0.5 : weight;
	
			var w = 2 * p - 1;
			var a = color1.alpha() - color2.alpha();
	
			var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
			var w2 = 1 - w1;
	
			return Color.rgb(
					w1 * color1.red() + w2 * color2.red(),
					w1 * color1.green() + w2 * color2.green(),
					w1 * color1.blue() + w2 * color2.blue(),
					color1.alpha() * p + color2.alpha() * (1 - p));
		}
	};
	
	// model conversion methods and static constructors
	Object.keys(convert).forEach(function (model) {
		if (skippedModels.indexOf(model) !== -1) {
			return;
		}
	
		var channels = convert[model].channels;
	
		// conversion methods
		Color.prototype[model] = function () {
			if (this.model === model) {
				return new Color(this);
			}
	
			if (arguments.length) {
				return new Color(arguments, model);
			}
	
			var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
			return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
		};
	
		// 'static' construction methods
		Color[model] = function (color) {
			if (typeof color === 'number') {
				color = zeroArray(_slice.call(arguments), channels);
			}
			return new Color(color, model);
		};
	});
	
	function roundTo(num, places) {
		return Number(num.toFixed(places));
	}
	
	function roundToPlace(places) {
		return function (num) {
			return roundTo(num, places);
		};
	}
	
	function getset(model, channel, modifier) {
		model = Array.isArray(model) ? model : [model];
	
		model.forEach(function (m) {
			(limiters[m] || (limiters[m] = []))[channel] = modifier;
		});
	
		model = model[0];
	
		return function (val) {
			var result;
	
			if (arguments.length) {
				if (modifier) {
					val = modifier(val);
				}
	
				result = this[model]();
				result.color[channel] = val;
				return result;
			}
	
			result = this[model]().color[channel];
			if (modifier) {
				result = modifier(result);
			}
	
			return result;
		};
	}
	
	function maxfn(max) {
		return function (v) {
			return Math.max(0, Math.min(max, v));
		};
	}
	
	function assertArray(val) {
		return Array.isArray(val) ? val : [val];
	}
	
	function zeroArray(arr, length) {
		for (var i = 0; i < length; i++) {
			if (typeof arr[i] !== 'number') {
				arr[i] = 0;
			}
		}
	
		return arr;
	}
	
	module.exports = Color;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	/* MIT license */
	var colorNames = __webpack_require__(319);
	var swizzle = __webpack_require__(320);
	
	var reverseNames = {};
	
	// create a list of reverse color names
	for (var name in colorNames) {
		if (colorNames.hasOwnProperty(name)) {
			reverseNames[colorNames[name]] = name;
		}
	}
	
	var cs = module.exports = {
		to: {}
	};
	
	cs.get = function (string) {
		var prefix = string.substring(0, 3).toLowerCase();
		var val;
		var model;
		switch (prefix) {
			case 'hsl':
				val = cs.get.hsl(string);
				model = 'hsl';
				break;
			case 'hwb':
				val = cs.get.hwb(string);
				model = 'hwb';
				break;
			default:
				val = cs.get.rgb(string);
				model = 'rgb';
				break;
		}
	
		if (!val) {
			return null;
		}
	
		return {model: model, value: val};
	};
	
	cs.get.rgb = function (string) {
		if (!string) {
			return null;
		}
	
		var abbr = /^#([a-f0-9]{3,4})$/i;
		var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
		var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var keyword = /(\D+)/;
	
		var rgb = [0, 0, 0, 1];
		var match;
		var i;
		var hexAlpha;
	
		if (match = string.match(hex)) {
			hexAlpha = match[2];
			match = match[1];
	
			for (i = 0; i < 3; i++) {
				// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
				var i2 = i * 2;
				rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
			}
	
			if (hexAlpha) {
				rgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;
			}
		} else if (match = string.match(abbr)) {
			match = match[1];
			hexAlpha = match[3];
	
			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i] + match[i], 16);
			}
	
			if (hexAlpha) {
				rgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;
			}
		} else if (match = string.match(rgba)) {
			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i + 1], 0);
			}
	
			if (match[4]) {
				rgb[3] = parseFloat(match[4]);
			}
		} else if (match = string.match(per)) {
			for (i = 0; i < 3; i++) {
				rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
			}
	
			if (match[4]) {
				rgb[3] = parseFloat(match[4]);
			}
		} else if (match = string.match(keyword)) {
			if (match[1] === 'transparent') {
				return [0, 0, 0, 0];
			}
	
			rgb = colorNames[match[1]];
	
			if (!rgb) {
				return null;
			}
	
			rgb[3] = 1;
	
			return rgb;
		} else {
			return null;
		}
	
		for (i = 0; i < 3; i++) {
			rgb[i] = clamp(rgb[i], 0, 255);
		}
		rgb[3] = clamp(rgb[3], 0, 1);
	
		return rgb;
	};
	
	cs.get.hsl = function (string) {
		if (!string) {
			return null;
		}
	
		var hsl = /^hsla?\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var match = string.match(hsl);
	
		if (match) {
			var alpha = parseFloat(match[4]);
			var h = ((parseFloat(match[1]) % 360) + 360) % 360;
			var s = clamp(parseFloat(match[2]), 0, 100);
			var l = clamp(parseFloat(match[3]), 0, 100);
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
	
			return [h, s, l, a];
		}
	
		return null;
	};
	
	cs.get.hwb = function (string) {
		if (!string) {
			return null;
		}
	
		var hwb = /^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
		var match = string.match(hwb);
	
		if (match) {
			var alpha = parseFloat(match[4]);
			var h = ((parseFloat(match[1]) % 360) + 360) % 360;
			var w = clamp(parseFloat(match[2]), 0, 100);
			var b = clamp(parseFloat(match[3]), 0, 100);
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
			return [h, w, b, a];
		}
	
		return null;
	};
	
	cs.to.hex = function () {
		var rgba = swizzle(arguments);
	
		return (
			'#' +
			hexDouble(rgba[0]) +
			hexDouble(rgba[1]) +
			hexDouble(rgba[2]) +
			(rgba[3] < 1
				? (hexDouble(Math.round(rgba[3] * 255)))
				: '')
		);
	};
	
	cs.to.rgb = function () {
		var rgba = swizzle(arguments);
	
		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'
			: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
	};
	
	cs.to.rgb.percent = function () {
		var rgba = swizzle(arguments);
	
		var r = Math.round(rgba[0] / 255 * 100);
		var g = Math.round(rgba[1] / 255 * 100);
		var b = Math.round(rgba[2] / 255 * 100);
	
		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'
			: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
	};
	
	cs.to.hsl = function () {
		var hsla = swizzle(arguments);
		return hsla.length < 4 || hsla[3] === 1
			? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'
			: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
	};
	
	// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
	// (hwb have alpha optional & 1 is default value)
	cs.to.hwb = function () {
		var hwba = swizzle(arguments);
	
		var a = '';
		if (hwba.length >= 4 && hwba[3] !== 1) {
			a = ', ' + hwba[3];
		}
	
		return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
	};
	
	cs.to.keyword = function (rgb) {
		return reverseNames[rgb.slice(0, 3)];
	};
	
	// helpers
	function clamp(num, min, max) {
		return Math.min(Math.max(min, num), max);
	}
	
	function hexDouble(num) {
		var str = num.toString(16).toUpperCase();
		return (str.length < 2) ? '0' + str : str;
	}


/***/ }),
/* 319 */
/***/ (function(module, exports) {

	'use strict'
	
	module.exports = {
		"aliceblue": [240, 248, 255],
		"antiquewhite": [250, 235, 215],
		"aqua": [0, 255, 255],
		"aquamarine": [127, 255, 212],
		"azure": [240, 255, 255],
		"beige": [245, 245, 220],
		"bisque": [255, 228, 196],
		"black": [0, 0, 0],
		"blanchedalmond": [255, 235, 205],
		"blue": [0, 0, 255],
		"blueviolet": [138, 43, 226],
		"brown": [165, 42, 42],
		"burlywood": [222, 184, 135],
		"cadetblue": [95, 158, 160],
		"chartreuse": [127, 255, 0],
		"chocolate": [210, 105, 30],
		"coral": [255, 127, 80],
		"cornflowerblue": [100, 149, 237],
		"cornsilk": [255, 248, 220],
		"crimson": [220, 20, 60],
		"cyan": [0, 255, 255],
		"darkblue": [0, 0, 139],
		"darkcyan": [0, 139, 139],
		"darkgoldenrod": [184, 134, 11],
		"darkgray": [169, 169, 169],
		"darkgreen": [0, 100, 0],
		"darkgrey": [169, 169, 169],
		"darkkhaki": [189, 183, 107],
		"darkmagenta": [139, 0, 139],
		"darkolivegreen": [85, 107, 47],
		"darkorange": [255, 140, 0],
		"darkorchid": [153, 50, 204],
		"darkred": [139, 0, 0],
		"darksalmon": [233, 150, 122],
		"darkseagreen": [143, 188, 143],
		"darkslateblue": [72, 61, 139],
		"darkslategray": [47, 79, 79],
		"darkslategrey": [47, 79, 79],
		"darkturquoise": [0, 206, 209],
		"darkviolet": [148, 0, 211],
		"deeppink": [255, 20, 147],
		"deepskyblue": [0, 191, 255],
		"dimgray": [105, 105, 105],
		"dimgrey": [105, 105, 105],
		"dodgerblue": [30, 144, 255],
		"firebrick": [178, 34, 34],
		"floralwhite": [255, 250, 240],
		"forestgreen": [34, 139, 34],
		"fuchsia": [255, 0, 255],
		"gainsboro": [220, 220, 220],
		"ghostwhite": [248, 248, 255],
		"gold": [255, 215, 0],
		"goldenrod": [218, 165, 32],
		"gray": [128, 128, 128],
		"green": [0, 128, 0],
		"greenyellow": [173, 255, 47],
		"grey": [128, 128, 128],
		"honeydew": [240, 255, 240],
		"hotpink": [255, 105, 180],
		"indianred": [205, 92, 92],
		"indigo": [75, 0, 130],
		"ivory": [255, 255, 240],
		"khaki": [240, 230, 140],
		"lavender": [230, 230, 250],
		"lavenderblush": [255, 240, 245],
		"lawngreen": [124, 252, 0],
		"lemonchiffon": [255, 250, 205],
		"lightblue": [173, 216, 230],
		"lightcoral": [240, 128, 128],
		"lightcyan": [224, 255, 255],
		"lightgoldenrodyellow": [250, 250, 210],
		"lightgray": [211, 211, 211],
		"lightgreen": [144, 238, 144],
		"lightgrey": [211, 211, 211],
		"lightpink": [255, 182, 193],
		"lightsalmon": [255, 160, 122],
		"lightseagreen": [32, 178, 170],
		"lightskyblue": [135, 206, 250],
		"lightslategray": [119, 136, 153],
		"lightslategrey": [119, 136, 153],
		"lightsteelblue": [176, 196, 222],
		"lightyellow": [255, 255, 224],
		"lime": [0, 255, 0],
		"limegreen": [50, 205, 50],
		"linen": [250, 240, 230],
		"magenta": [255, 0, 255],
		"maroon": [128, 0, 0],
		"mediumaquamarine": [102, 205, 170],
		"mediumblue": [0, 0, 205],
		"mediumorchid": [186, 85, 211],
		"mediumpurple": [147, 112, 219],
		"mediumseagreen": [60, 179, 113],
		"mediumslateblue": [123, 104, 238],
		"mediumspringgreen": [0, 250, 154],
		"mediumturquoise": [72, 209, 204],
		"mediumvioletred": [199, 21, 133],
		"midnightblue": [25, 25, 112],
		"mintcream": [245, 255, 250],
		"mistyrose": [255, 228, 225],
		"moccasin": [255, 228, 181],
		"navajowhite": [255, 222, 173],
		"navy": [0, 0, 128],
		"oldlace": [253, 245, 230],
		"olive": [128, 128, 0],
		"olivedrab": [107, 142, 35],
		"orange": [255, 165, 0],
		"orangered": [255, 69, 0],
		"orchid": [218, 112, 214],
		"palegoldenrod": [238, 232, 170],
		"palegreen": [152, 251, 152],
		"paleturquoise": [175, 238, 238],
		"palevioletred": [219, 112, 147],
		"papayawhip": [255, 239, 213],
		"peachpuff": [255, 218, 185],
		"peru": [205, 133, 63],
		"pink": [255, 192, 203],
		"plum": [221, 160, 221],
		"powderblue": [176, 224, 230],
		"purple": [128, 0, 128],
		"rebeccapurple": [102, 51, 153],
		"red": [255, 0, 0],
		"rosybrown": [188, 143, 143],
		"royalblue": [65, 105, 225],
		"saddlebrown": [139, 69, 19],
		"salmon": [250, 128, 114],
		"sandybrown": [244, 164, 96],
		"seagreen": [46, 139, 87],
		"seashell": [255, 245, 238],
		"sienna": [160, 82, 45],
		"silver": [192, 192, 192],
		"skyblue": [135, 206, 235],
		"slateblue": [106, 90, 205],
		"slategray": [112, 128, 144],
		"slategrey": [112, 128, 144],
		"snow": [255, 250, 250],
		"springgreen": [0, 255, 127],
		"steelblue": [70, 130, 180],
		"tan": [210, 180, 140],
		"teal": [0, 128, 128],
		"thistle": [216, 191, 216],
		"tomato": [255, 99, 71],
		"turquoise": [64, 224, 208],
		"violet": [238, 130, 238],
		"wheat": [245, 222, 179],
		"white": [255, 255, 255],
		"whitesmoke": [245, 245, 245],
		"yellow": [255, 255, 0],
		"yellowgreen": [154, 205, 50]
	};


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArrayish = __webpack_require__(321);
	
	var concat = Array.prototype.concat;
	var slice = Array.prototype.slice;
	
	var swizzle = module.exports = function swizzle(args) {
		var results = [];
	
		for (var i = 0, len = args.length; i < len; i++) {
			var arg = args[i];
	
			if (isArrayish(arg)) {
				// http://jsperf.com/javascript-array-concat-vs-push/98
				results = concat.call(results, slice.call(arg));
			} else {
				results.push(arg);
			}
		}
	
		return results;
	};
	
	swizzle.wrap = function (fn) {
		return function () {
			return fn(swizzle(arguments));
		};
	};


/***/ }),
/* 321 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function isArrayish(obj) {
		if (!obj || typeof obj === 'string') {
			return false;
		}
	
		return obj instanceof Array || Array.isArray(obj) ||
			(obj.length >= 0 && (obj.splice instanceof Function ||
				(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));
	};


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

	var conversions = __webpack_require__(323);
	var route = __webpack_require__(324);
	
	var convert = {};
	
	var models = Object.keys(conversions);
	
	function wrapRaw(fn) {
		var wrappedFn = function (args) {
			if (args === undefined || args === null) {
				return args;
			}
	
			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}
	
			return fn(args);
		};
	
		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}
	
		return wrappedFn;
	}
	
	function wrapRounded(fn) {
		var wrappedFn = function (args) {
			if (args === undefined || args === null) {
				return args;
			}
	
			if (arguments.length > 1) {
				args = Array.prototype.slice.call(arguments);
			}
	
			var result = fn(args);
	
			// we're assuming the result is an array here.
			// see notice in conversions.js; don't use box types
			// in conversion functions.
			if (typeof result === 'object') {
				for (var len = result.length, i = 0; i < len; i++) {
					result[i] = Math.round(result[i]);
				}
			}
	
			return result;
		};
	
		// preserve .conversion property if there is one
		if ('conversion' in fn) {
			wrappedFn.conversion = fn.conversion;
		}
	
		return wrappedFn;
	}
	
	models.forEach(function (fromModel) {
		convert[fromModel] = {};
	
		Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
		Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});
	
		var routes = route(fromModel);
		var routeModels = Object.keys(routes);
	
		routeModels.forEach(function (toModel) {
			var fn = routes[toModel];
	
			convert[fromModel][toModel] = wrapRounded(fn);
			convert[fromModel][toModel].raw = wrapRaw(fn);
		});
	});
	
	module.exports = convert;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	/* MIT license */
	var cssKeywords = __webpack_require__(319);
	
	// NOTE: conversions should only return primitive values (i.e. arrays, or
	//       values that give correct `typeof` results).
	//       do not use box values types (i.e. Number(), String(), etc.)
	
	var reverseKeywords = {};
	for (var key in cssKeywords) {
		if (cssKeywords.hasOwnProperty(key)) {
			reverseKeywords[cssKeywords[key]] = key;
		}
	}
	
	var convert = module.exports = {
		rgb: {channels: 3, labels: 'rgb'},
		hsl: {channels: 3, labels: 'hsl'},
		hsv: {channels: 3, labels: 'hsv'},
		hwb: {channels: 3, labels: 'hwb'},
		cmyk: {channels: 4, labels: 'cmyk'},
		xyz: {channels: 3, labels: 'xyz'},
		lab: {channels: 3, labels: 'lab'},
		lch: {channels: 3, labels: 'lch'},
		hex: {channels: 1, labels: ['hex']},
		keyword: {channels: 1, labels: ['keyword']},
		ansi16: {channels: 1, labels: ['ansi16']},
		ansi256: {channels: 1, labels: ['ansi256']},
		hcg: {channels: 3, labels: ['h', 'c', 'g']},
		apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
		gray: {channels: 1, labels: ['gray']}
	};
	
	// hide .channels and .labels properties
	for (var model in convert) {
		if (convert.hasOwnProperty(model)) {
			if (!('channels' in convert[model])) {
				throw new Error('missing channels property: ' + model);
			}
	
			if (!('labels' in convert[model])) {
				throw new Error('missing channel labels property: ' + model);
			}
	
			if (convert[model].labels.length !== convert[model].channels) {
				throw new Error('channel and label counts mismatch: ' + model);
			}
	
			var channels = convert[model].channels;
			var labels = convert[model].labels;
			delete convert[model].channels;
			delete convert[model].labels;
			Object.defineProperty(convert[model], 'channels', {value: channels});
			Object.defineProperty(convert[model], 'labels', {value: labels});
		}
	}
	
	convert.rgb.hsl = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var min = Math.min(r, g, b);
		var max = Math.max(r, g, b);
		var delta = max - min;
		var h;
		var s;
		var l;
	
		if (max === min) {
			h = 0;
		} else if (r === max) {
			h = (g - b) / delta;
		} else if (g === max) {
			h = 2 + (b - r) / delta;
		} else if (b === max) {
			h = 4 + (r - g) / delta;
		}
	
		h = Math.min(h * 60, 360);
	
		if (h < 0) {
			h += 360;
		}
	
		l = (min + max) / 2;
	
		if (max === min) {
			s = 0;
		} else if (l <= 0.5) {
			s = delta / (max + min);
		} else {
			s = delta / (2 - max - min);
		}
	
		return [h, s * 100, l * 100];
	};
	
	convert.rgb.hsv = function (rgb) {
		var r = rgb[0];
		var g = rgb[1];
		var b = rgb[2];
		var min = Math.min(r, g, b);
		var max = Math.max(r, g, b);
		var delta = max - min;
		var h;
		var s;
		var v;
	
		if (max === 0) {
			s = 0;
		} else {
			s = (delta / max * 1000) / 10;
		}
	
		if (max === min) {
			h = 0;
		} else if (r === max) {
			h = (g - b) / delta;
		} else if (g === max) {
			h = 2 + (b - r) / delta;
		} else if (b === max) {
			h = 4 + (r - g) / delta;
		}
	
		h = Math.min(h * 60, 360);
	
		if (h < 0) {
			h += 360;
		}
	
		v = ((max / 255) * 1000) / 10;
	
		return [h, s, v];
	};
	
	convert.rgb.hwb = function (rgb) {
		var r = rgb[0];
		var g = rgb[1];
		var b = rgb[2];
		var h = convert.rgb.hsl(rgb)[0];
		var w = 1 / 255 * Math.min(r, Math.min(g, b));
	
		b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
	
		return [h, w * 100, b * 100];
	};
	
	convert.rgb.cmyk = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var c;
		var m;
		var y;
		var k;
	
		k = Math.min(1 - r, 1 - g, 1 - b);
		c = (1 - r - k) / (1 - k) || 0;
		m = (1 - g - k) / (1 - k) || 0;
		y = (1 - b - k) / (1 - k) || 0;
	
		return [c * 100, m * 100, y * 100, k * 100];
	};
	
	/**
	 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	 * */
	function comparativeDistance(x, y) {
		return (
			Math.pow(x[0] - y[0], 2) +
			Math.pow(x[1] - y[1], 2) +
			Math.pow(x[2] - y[2], 2)
		);
	}
	
	convert.rgb.keyword = function (rgb) {
		var reversed = reverseKeywords[rgb];
		if (reversed) {
			return reversed;
		}
	
		var currentClosestDistance = Infinity;
		var currentClosestKeyword;
	
		for (var keyword in cssKeywords) {
			if (cssKeywords.hasOwnProperty(keyword)) {
				var value = cssKeywords[keyword];
	
				// Compute comparative distance
				var distance = comparativeDistance(rgb, value);
	
				// Check if its less, if so set as closest
				if (distance < currentClosestDistance) {
					currentClosestDistance = distance;
					currentClosestKeyword = keyword;
				}
			}
		}
	
		return currentClosestKeyword;
	};
	
	convert.keyword.rgb = function (keyword) {
		return cssKeywords[keyword];
	};
	
	convert.rgb.xyz = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
	
		// assume sRGB
		r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
		g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
		b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);
	
		var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
		var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
		var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);
	
		return [x * 100, y * 100, z * 100];
	};
	
	convert.rgb.lab = function (rgb) {
		var xyz = convert.rgb.xyz(rgb);
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;
	
		x /= 95.047;
		y /= 100;
		z /= 108.883;
	
		x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);
	
		l = (116 * y) - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);
	
		return [l, a, b];
	};
	
	convert.hsl.rgb = function (hsl) {
		var h = hsl[0] / 360;
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var t1;
		var t2;
		var t3;
		var rgb;
		var val;
	
		if (s === 0) {
			val = l * 255;
			return [val, val, val];
		}
	
		if (l < 0.5) {
			t2 = l * (1 + s);
		} else {
			t2 = l + s - l * s;
		}
	
		t1 = 2 * l - t2;
	
		rgb = [0, 0, 0];
		for (var i = 0; i < 3; i++) {
			t3 = h + 1 / 3 * -(i - 1);
			if (t3 < 0) {
				t3++;
			}
			if (t3 > 1) {
				t3--;
			}
	
			if (6 * t3 < 1) {
				val = t1 + (t2 - t1) * 6 * t3;
			} else if (2 * t3 < 1) {
				val = t2;
			} else if (3 * t3 < 2) {
				val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
			} else {
				val = t1;
			}
	
			rgb[i] = val * 255;
		}
	
		return rgb;
	};
	
	convert.hsl.hsv = function (hsl) {
		var h = hsl[0];
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var smin = s;
		var lmin = Math.max(l, 0.01);
		var sv;
		var v;
	
		l *= 2;
		s *= (l <= 1) ? l : 2 - l;
		smin *= lmin <= 1 ? lmin : 2 - lmin;
		v = (l + s) / 2;
		sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);
	
		return [h, sv * 100, v * 100];
	};
	
	convert.hsv.rgb = function (hsv) {
		var h = hsv[0] / 60;
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var hi = Math.floor(h) % 6;
	
		var f = h - Math.floor(h);
		var p = 255 * v * (1 - s);
		var q = 255 * v * (1 - (s * f));
		var t = 255 * v * (1 - (s * (1 - f)));
		v *= 255;
	
		switch (hi) {
			case 0:
				return [v, t, p];
			case 1:
				return [q, v, p];
			case 2:
				return [p, v, t];
			case 3:
				return [p, q, v];
			case 4:
				return [t, p, v];
			case 5:
				return [v, p, q];
		}
	};
	
	convert.hsv.hsl = function (hsv) {
		var h = hsv[0];
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
		var vmin = Math.max(v, 0.01);
		var lmin;
		var sl;
		var l;
	
		l = (2 - s) * v;
		lmin = (2 - s) * vmin;
		sl = s * vmin;
		sl /= (lmin <= 1) ? lmin : 2 - lmin;
		sl = sl || 0;
		l /= 2;
	
		return [h, sl * 100, l * 100];
	};
	
	// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
	convert.hwb.rgb = function (hwb) {
		var h = hwb[0] / 360;
		var wh = hwb[1] / 100;
		var bl = hwb[2] / 100;
		var ratio = wh + bl;
		var i;
		var v;
		var f;
		var n;
	
		// wh + bl cant be > 1
		if (ratio > 1) {
			wh /= ratio;
			bl /= ratio;
		}
	
		i = Math.floor(6 * h);
		v = 1 - bl;
		f = 6 * h - i;
	
		if ((i & 0x01) !== 0) {
			f = 1 - f;
		}
	
		n = wh + f * (v - wh); // linear interpolation
	
		var r;
		var g;
		var b;
		switch (i) {
			default:
			case 6:
			case 0: r = v; g = n; b = wh; break;
			case 1: r = n; g = v; b = wh; break;
			case 2: r = wh; g = v; b = n; break;
			case 3: r = wh; g = n; b = v; break;
			case 4: r = n; g = wh; b = v; break;
			case 5: r = v; g = wh; b = n; break;
		}
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.cmyk.rgb = function (cmyk) {
		var c = cmyk[0] / 100;
		var m = cmyk[1] / 100;
		var y = cmyk[2] / 100;
		var k = cmyk[3] / 100;
		var r;
		var g;
		var b;
	
		r = 1 - Math.min(1, c * (1 - k) + k);
		g = 1 - Math.min(1, m * (1 - k) + k);
		b = 1 - Math.min(1, y * (1 - k) + k);
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.xyz.rgb = function (xyz) {
		var x = xyz[0] / 100;
		var y = xyz[1] / 100;
		var z = xyz[2] / 100;
		var r;
		var g;
		var b;
	
		r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
		g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
		b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);
	
		// assume sRGB
		r = r > 0.0031308
			? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
			: r * 12.92;
	
		g = g > 0.0031308
			? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
			: g * 12.92;
	
		b = b > 0.0031308
			? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
			: b * 12.92;
	
		r = Math.min(Math.max(0, r), 1);
		g = Math.min(Math.max(0, g), 1);
		b = Math.min(Math.max(0, b), 1);
	
		return [r * 255, g * 255, b * 255];
	};
	
	convert.xyz.lab = function (xyz) {
		var x = xyz[0];
		var y = xyz[1];
		var z = xyz[2];
		var l;
		var a;
		var b;
	
		x /= 95.047;
		y /= 100;
		z /= 108.883;
	
		x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);
	
		l = (116 * y) - 16;
		a = 500 * (x - y);
		b = 200 * (y - z);
	
		return [l, a, b];
	};
	
	convert.lab.xyz = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var x;
		var y;
		var z;
	
		y = (l + 16) / 116;
		x = a / 500 + y;
		z = y - b / 200;
	
		var y2 = Math.pow(y, 3);
		var x2 = Math.pow(x, 3);
		var z2 = Math.pow(z, 3);
		y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
		x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
		z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
	
		x *= 95.047;
		y *= 100;
		z *= 108.883;
	
		return [x, y, z];
	};
	
	convert.lab.lch = function (lab) {
		var l = lab[0];
		var a = lab[1];
		var b = lab[2];
		var hr;
		var h;
		var c;
	
		hr = Math.atan2(b, a);
		h = hr * 360 / 2 / Math.PI;
	
		if (h < 0) {
			h += 360;
		}
	
		c = Math.sqrt(a * a + b * b);
	
		return [l, c, h];
	};
	
	convert.lch.lab = function (lch) {
		var l = lch[0];
		var c = lch[1];
		var h = lch[2];
		var a;
		var b;
		var hr;
	
		hr = h / 360 * 2 * Math.PI;
		a = c * Math.cos(hr);
		b = c * Math.sin(hr);
	
		return [l, a, b];
	};
	
	convert.rgb.ansi16 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];
		var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization
	
		value = Math.round(value / 50);
	
		if (value === 0) {
			return 30;
		}
	
		var ansi = 30
			+ ((Math.round(b / 255) << 2)
			| (Math.round(g / 255) << 1)
			| Math.round(r / 255));
	
		if (value === 2) {
			ansi += 60;
		}
	
		return ansi;
	};
	
	convert.hsv.ansi16 = function (args) {
		// optimization here; we already know the value and don't need to get
		// it converted for us.
		return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
	};
	
	convert.rgb.ansi256 = function (args) {
		var r = args[0];
		var g = args[1];
		var b = args[2];
	
		// we use the extended greyscale palette here, with the exception of
		// black and white. normal palette only has 4 greyscale shades.
		if (r === g && g === b) {
			if (r < 8) {
				return 16;
			}
	
			if (r > 248) {
				return 231;
			}
	
			return Math.round(((r - 8) / 247) * 24) + 232;
		}
	
		var ansi = 16
			+ (36 * Math.round(r / 255 * 5))
			+ (6 * Math.round(g / 255 * 5))
			+ Math.round(b / 255 * 5);
	
		return ansi;
	};
	
	convert.ansi16.rgb = function (args) {
		var color = args % 10;
	
		// handle greyscale
		if (color === 0 || color === 7) {
			if (args > 50) {
				color += 3.5;
			}
	
			color = color / 10.5 * 255;
	
			return [color, color, color];
		}
	
		var mult = (~~(args > 50) + 1) * 0.5;
		var r = ((color & 1) * mult) * 255;
		var g = (((color >> 1) & 1) * mult) * 255;
		var b = (((color >> 2) & 1) * mult) * 255;
	
		return [r, g, b];
	};
	
	convert.ansi256.rgb = function (args) {
		// handle greyscale
		if (args >= 232) {
			var c = (args - 232) * 10 + 8;
			return [c, c, c];
		}
	
		args -= 16;
	
		var rem;
		var r = Math.floor(args / 36) / 5 * 255;
		var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
		var b = (rem % 6) / 5 * 255;
	
		return [r, g, b];
	};
	
	convert.rgb.hex = function (args) {
		var integer = ((Math.round(args[0]) & 0xFF) << 16)
			+ ((Math.round(args[1]) & 0xFF) << 8)
			+ (Math.round(args[2]) & 0xFF);
	
		var string = integer.toString(16).toUpperCase();
		return '000000'.substring(string.length) + string;
	};
	
	convert.hex.rgb = function (args) {
		var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
		if (!match) {
			return [0, 0, 0];
		}
	
		var colorString = match[0];
	
		if (match[0].length === 3) {
			colorString = colorString.split('').map(function (char) {
				return char + char;
			}).join('');
		}
	
		var integer = parseInt(colorString, 16);
		var r = (integer >> 16) & 0xFF;
		var g = (integer >> 8) & 0xFF;
		var b = integer & 0xFF;
	
		return [r, g, b];
	};
	
	convert.rgb.hcg = function (rgb) {
		var r = rgb[0] / 255;
		var g = rgb[1] / 255;
		var b = rgb[2] / 255;
		var max = Math.max(Math.max(r, g), b);
		var min = Math.min(Math.min(r, g), b);
		var chroma = (max - min);
		var grayscale;
		var hue;
	
		if (chroma < 1) {
			grayscale = min / (1 - chroma);
		} else {
			grayscale = 0;
		}
	
		if (chroma <= 0) {
			hue = 0;
		} else
		if (max === r) {
			hue = ((g - b) / chroma) % 6;
		} else
		if (max === g) {
			hue = 2 + (b - r) / chroma;
		} else {
			hue = 4 + (r - g) / chroma + 4;
		}
	
		hue /= 6;
		hue %= 1;
	
		return [hue * 360, chroma * 100, grayscale * 100];
	};
	
	convert.hsl.hcg = function (hsl) {
		var s = hsl[1] / 100;
		var l = hsl[2] / 100;
		var c = 1;
		var f = 0;
	
		if (l < 0.5) {
			c = 2.0 * s * l;
		} else {
			c = 2.0 * s * (1.0 - l);
		}
	
		if (c < 1.0) {
			f = (l - 0.5 * c) / (1.0 - c);
		}
	
		return [hsl[0], c * 100, f * 100];
	};
	
	convert.hsv.hcg = function (hsv) {
		var s = hsv[1] / 100;
		var v = hsv[2] / 100;
	
		var c = s * v;
		var f = 0;
	
		if (c < 1.0) {
			f = (v - c) / (1 - c);
		}
	
		return [hsv[0], c * 100, f * 100];
	};
	
	convert.hcg.rgb = function (hcg) {
		var h = hcg[0] / 360;
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		if (c === 0.0) {
			return [g * 255, g * 255, g * 255];
		}
	
		var pure = [0, 0, 0];
		var hi = (h % 1) * 6;
		var v = hi % 1;
		var w = 1 - v;
		var mg = 0;
	
		switch (Math.floor(hi)) {
			case 0:
				pure[0] = 1; pure[1] = v; pure[2] = 0; break;
			case 1:
				pure[0] = w; pure[1] = 1; pure[2] = 0; break;
			case 2:
				pure[0] = 0; pure[1] = 1; pure[2] = v; break;
			case 3:
				pure[0] = 0; pure[1] = w; pure[2] = 1; break;
			case 4:
				pure[0] = v; pure[1] = 0; pure[2] = 1; break;
			default:
				pure[0] = 1; pure[1] = 0; pure[2] = w;
		}
	
		mg = (1.0 - c) * g;
	
		return [
			(c * pure[0] + mg) * 255,
			(c * pure[1] + mg) * 255,
			(c * pure[2] + mg) * 255
		];
	};
	
	convert.hcg.hsv = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		var v = c + g * (1.0 - c);
		var f = 0;
	
		if (v > 0.0) {
			f = c / v;
		}
	
		return [hcg[0], f * 100, v * 100];
	};
	
	convert.hcg.hsl = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
	
		var l = g * (1.0 - c) + 0.5 * c;
		var s = 0;
	
		if (l > 0.0 && l < 0.5) {
			s = c / (2 * l);
		} else
		if (l >= 0.5 && l < 1.0) {
			s = c / (2 * (1 - l));
		}
	
		return [hcg[0], s * 100, l * 100];
	};
	
	convert.hcg.hwb = function (hcg) {
		var c = hcg[1] / 100;
		var g = hcg[2] / 100;
		var v = c + g * (1.0 - c);
		return [hcg[0], (v - c) * 100, (1 - v) * 100];
	};
	
	convert.hwb.hcg = function (hwb) {
		var w = hwb[1] / 100;
		var b = hwb[2] / 100;
		var v = 1 - b;
		var c = v - w;
		var g = 0;
	
		if (c < 1) {
			g = (v - c) / (1 - c);
		}
	
		return [hwb[0], c * 100, g * 100];
	};
	
	convert.apple.rgb = function (apple) {
		return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
	};
	
	convert.rgb.apple = function (rgb) {
		return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
	};
	
	convert.gray.rgb = function (args) {
		return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
	};
	
	convert.gray.hsl = convert.gray.hsv = function (args) {
		return [0, 0, args[0]];
	};
	
	convert.gray.hwb = function (gray) {
		return [0, 100, gray[0]];
	};
	
	convert.gray.cmyk = function (gray) {
		return [0, 0, 0, gray[0]];
	};
	
	convert.gray.lab = function (gray) {
		return [gray[0], 0, 0];
	};
	
	convert.gray.hex = function (gray) {
		var val = Math.round(gray[0] / 100 * 255) & 0xFF;
		var integer = (val << 16) + (val << 8) + val;
	
		var string = integer.toString(16).toUpperCase();
		return '000000'.substring(string.length) + string;
	};
	
	convert.rgb.gray = function (rgb) {
		var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
		return [val / 255 * 100];
	};


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	var conversions = __webpack_require__(323);
	
	/*
		this function routes a model to all other models.
	
		all functions that are routed have a property `.conversion` attached
		to the returned synthetic function. This property is an array
		of strings, each with the steps in between the 'from' and 'to'
		color models (inclusive).
	
		conversions that are not possible simply are not included.
	*/
	
	function buildGraph() {
		var graph = {};
		// https://jsperf.com/object-keys-vs-for-in-with-closure/3
		var models = Object.keys(conversions);
	
		for (var len = models.length, i = 0; i < len; i++) {
			graph[models[i]] = {
				// http://jsperf.com/1-vs-infinity
				// micro-opt, but this is simple.
				distance: -1,
				parent: null
			};
		}
	
		return graph;
	}
	
	// https://en.wikipedia.org/wiki/Breadth-first_search
	function deriveBFS(fromModel) {
		var graph = buildGraph();
		var queue = [fromModel]; // unshift -> queue -> pop
	
		graph[fromModel].distance = 0;
	
		while (queue.length) {
			var current = queue.pop();
			var adjacents = Object.keys(conversions[current]);
	
			for (var len = adjacents.length, i = 0; i < len; i++) {
				var adjacent = adjacents[i];
				var node = graph[adjacent];
	
				if (node.distance === -1) {
					node.distance = graph[current].distance + 1;
					node.parent = current;
					queue.unshift(adjacent);
				}
			}
		}
	
		return graph;
	}
	
	function link(from, to) {
		return function (args) {
			return to(from(args));
		};
	}
	
	function wrapConversion(toModel, graph) {
		var path = [graph[toModel].parent, toModel];
		var fn = conversions[graph[toModel].parent][toModel];
	
		var cur = graph[toModel].parent;
		while (graph[cur].parent) {
			path.unshift(graph[cur].parent);
			fn = link(conversions[graph[cur].parent][cur], fn);
			cur = graph[cur].parent;
		}
	
		fn.conversion = path;
		return fn;
	}
	
	module.exports = function (fromModel) {
		var graph = deriveBFS(fromModel);
		var conversion = {};
	
		var models = Object.keys(graph);
		for (var len = models.length, i = 0; i < len; i++) {
			var toModel = models[i];
			var node = graph[toModel];
	
			if (node.parent === null) {
				// no possible conversion, or this node is the source model.
				continue;
			}
	
			conversion[toModel] = wrapConversion(toModel, graph);
		}
	
		return conversion;
	};
	


/***/ }),
/* 325 */
/***/ (function(module, exports) {

	"use strict";
	
	module.exports = {
	  background: "#ffffff",
	  white: "#ffffff",
	  accent: "#709425",
	  bright: "#ffffff",
	  dark: "#333333",
	  gray: "#555555",
	  lightGray: "#bbbbbb",
	  superLightGray: "#dedede"
	};

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.setNavigatorPosition = setNavigatorPosition;
	exports.setNavigatorShape = setNavigatorShape;
	exports.setNavigatorFilter = setNavigatorFilter;
	exports.setIsWideScreen = setIsWideScreen;
	exports.setScrollToTop = setScrollToTop;
	exports.setFontSizeIncrease = setFontSizeIncrease;
	exports.setCategoryFilter = setCategoryFilter;
	
	var _redux = __webpack_require__(254);
	
	var _reduxDevtoolsExtension = __webpack_require__(327);
	
	/*
	 * action types
	 */
	
	var SET_NAVIGATOR_POSITION = "SET_NAVIGATOR_POSITION";
	var SET_NAVIGATOR_SHAPE = "SET_NAVIGATOR_SHAPE";
	var SET_NAVIGATOR_FILTER = "SET_NAVIGATOR_FILTER";
	var SET_IS_WIDE_SCREEN = "SET_IS_WIDE_SCREEN";
	var SET_SCROLL_TO_TOP = "SET_SCROLL_TO_TOP";
	var SET_FONT_SIZE_INCREASE = "SET_FONT_SIZE_INCREASE";
	var SET_CATEGORY_FILTER = "SET_CATEGORY_FILTER";
	
	/*
	 * action creators
	 */
	
	function setNavigatorPosition(val) {
	  return { type: SET_NAVIGATOR_POSITION, val: val };
	}
	
	function setNavigatorShape(val) {
	  return { type: SET_NAVIGATOR_SHAPE, val: val };
	}
	
	function setNavigatorFilter(val) {
	  return { type: SET_NAVIGATOR_FILTER, val: val };
	}
	
	function setIsWideScreen(val) {
	  return { type: SET_IS_WIDE_SCREEN, val: val };
	}
	
	function setScrollToTop(val) {
	  return { type: SET_SCROLL_TO_TOP, val: val };
	}
	
	function setFontSizeIncrease(val) {
	  return { type: SET_FONT_SIZE_INCREASE, val: val };
	}
	
	function setCategoryFilter(val) {
	  return { type: SET_CATEGORY_FILTER, val: val };
	}
	
	/*
	 * reducer
	 */
	var reducer = function reducer(state, action) {
	  switch (action.type) {
	    case SET_NAVIGATOR_POSITION:
	      return _extends({}, state, {
	        navigatorPosition: action.val
	      });
	
	    case SET_NAVIGATOR_SHAPE:
	      return _extends({}, state, {
	        navigatorShape: action.val
	      });
	
	    case SET_NAVIGATOR_FILTER:
	      return _extends({}, state, {
	        navigatorFilter: action.val
	      });
	
	    case SET_IS_WIDE_SCREEN:
	      return _extends({}, state, {
	        isWideScreen: action.val
	      });
	
	    case SET_SCROLL_TO_TOP:
	      return _extends({}, state, {
	        scrollToTop: action.val
	      });
	
	    case SET_FONT_SIZE_INCREASE:
	      return _extends({}, state, {
	        fontSizeIncrease: action.val
	      });
	
	    case SET_CATEGORY_FILTER:
	      return _extends({}, state, {
	        categoryFilter: action.val
	      });
	
	    default:
	      return state;
	  }
	};
	
	var initialState = {
	  navigatorPosition: "is-aside",
	  navigatorShape: "open",
	  navigatorFilter: "",
	  isWideScreen: false,
	  scrollToTop: false,
	  fontSizeIncrease: 1,
	  categoryFilter: "all posts"
	};
	
	var createStore = function createStore() {
	  return (0, _redux.createStore)(reducer, initialState, (0, _reduxDevtoolsExtension.composeWithDevTools)((0, _redux.applyMiddleware)()));
	};
	exports.default = createStore;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var compose = __webpack_require__(254).compose;
	
	exports.__esModule = true;
	exports.composeWithDevTools = (
	  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
	    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :
	    function() {
	      if (arguments.length === 0) return undefined;
	      if (typeof arguments[0] === 'object') return compose;
	      return compose.apply(null, arguments);
	    }
	);
	
	exports.devToolsEnhancer = (
	  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?
	    window.__REDUX_DEVTOOLS_EXTENSION__ :
	    function() { return function(noop) { return noop; } }
	);


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	const fs = __webpack_require__(169)
	const path = __webpack_require__(163)
	
	/*
	 * Parses a string or buffer into an object
	 * @param {(string|Buffer)} src - source to be parsed
	 * @returns {Object} keys and values from src
	*/
	function parse (src) {
	  const obj = {}
	
	  // convert Buffers before splitting into lines and processing
	  src.toString().split('\n').forEach(function (line) {
	    // matching "KEY' and 'VAL' in 'KEY=VAL'
	    const keyValueArr = line.match(/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/)
	    // matched?
	    if (keyValueArr != null) {
	      const key = keyValueArr[1]
	
	      // default undefined or missing values to empty string
	      let value = keyValueArr[2] || ''
	
	      // expand newlines in quoted values
	      const len = value ? value.length : 0
	      if (len > 0 && value.charAt(0) === '"' && value.charAt(len - 1) === '"') {
	        value = value.replace(/\\n/gm, '\n')
	      }
	
	      // remove any surrounding quotes and extra spaces
	      value = value.replace(/(^['"]|['"]$)/g, '').trim()
	
	      obj[key] = value
	    }
	  })
	
	  return obj
	}
	
	/*
	 * Main entry point into dotenv. Allows configuration before loading .env
	 * @param {Object} options - options for parsing .env file
	 * @param {string} [options.path=.env] - path to .env file
	 * @param {string} [options.encoding=utf8] - encoding of .env file
	 * @returns {Object} parsed object or error
	*/
	function config (options) {
	  let dotenvPath = path.resolve(process.cwd(), '.env')
	  let encoding = 'utf8'
	
	  if (options) {
	    if (options.path) {
	      dotenvPath = options.path
	    }
	    if (options.encoding) {
	      encoding = options.encoding
	    }
	  }
	
	  try {
	    // specifying an encoding returns a string instead of a buffer
	    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }))
	
	    Object.keys(parsed).forEach(function (key) {
	      if (!({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).hasOwnProperty(key)) {
	        ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"})[key] = parsed[key]
	      }
	    })
	
	    return { parsed }
	  } catch (e) {
	    return { error: e }
	  }
	}
	
	module.exports.config = config
	module.exports.load = config
	module.exports.parse = parse


/***/ }),
/* 329 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Replace the default server renderer. This is useful for integration with
	 * Redux, css-in-js libraries, etc. that need custom setups for server
	 * rendering.
	 * @param {Object} $0
	 * @param {function} $0.replaceBodyHTMLString Call this with the HTML string
	 * you render. **WARNING** if multiple plugins implement this API it's the
	 * last plugin that "wins". TODO implement an automated warning against this.
	 * @param {function} $0.setHeadComponents Takes an array of components as its
	 * first argument which are added to the `headComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setHtmlAttributes Takes an object of props which will
	 * spread into the `<html>` component.
	 * @param {function} $0.setBodyAttributes Takes an object of props which will
	 * spread into the `<body>` component.
	 * @param {function} $0.setPreBodyComponents Takes an array of components as its
	 * first argument which are added to the `preBodyComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setPostBodyComponents Takes an array of components as its
	 * first argument which are added to the `postBodyComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setBodyProps Takes an object of data which
	 * is merged with other body props and passed to `html.js` as `bodyProps`.
	 * @param {Object} pluginOptions
	 * @example
	 * // From gatsby-plugin-glamor
	 * import { renderToString } from "react-dom/server"
	 * import inline from "glamor-inline"
	 *
	 * exports.replaceRenderer = ({ bodyComponent, replaceBodyHTMLString }) => {
	 *   const bodyHTML = renderToString(bodyComponent)
	 *   const inlinedHTML = inline(bodyHTML)
	 *
	 *   replaceBodyHTMLString(inlinedHTML)
	 * }
	 */
	exports.replaceRenderer = true;
	
	/**
	 * Called after every page Gatsby server renders while building HTML so you can
	 * set head and body components to be rendered in your `html.js`.
	 *
	 * Gatsby does a two-pass render for HTML. It loops through your pages first
	 * rendering only the body and then takes the result body HTML string and
	 * passes it as the `body` prop to your `html.js` to complete the render.
	 *
	 * It's often handy to be able to send custom components to your `html.js`.
	 * For example, it's a very common pattern for React.js libraries that
	 * support server rendering to pull out data generated during the render to
	 * add to your HTML.
	 *
	 * Using this API over [`replaceRenderer`](#replaceRenderer) is preferable as
	 * multiple plugins can implement this API where only one plugin can take
	 * over server rendering. However, if your plugin requires taking over server
	 * rendering then that's the one to
	 * use
	 * @param {Object} $0
	 * @param {string} $0.pathname The pathname of the page currently being rendered.
	 * @param {function} $0.setHeadComponents Takes an array of components as its
	 * first argument which are added to the `headComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setHtmlAttributes Takes an object of props which will
	 * spread into the `<html>` component.
	 * @param {function} $0.setBodyAttributes Takes an object of props which will
	 * spread into the `<body>` component.
	 * @param {function} $0.setPreBodyComponents Takes an array of components as its
	 * first argument which are added to the `preBodyComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setPostBodyComponents Takes an array of components as its
	 * first argument which are added to the `postBodyComponents` array which is passed
	 * to the `html.js` component.
	 * @param {function} $0.setBodyProps Takes an object of data which
	 * is merged with other body props and passed to `html.js` as `bodyProps`.
	 * @param {Object} pluginOptions
	 * @example
	 * import Helmet from "react-helmet"
	 *
	 * exports.onRenderBody = (
	 *   { setHeadComponents, setHtmlAttributes, setBodyAttributes },
	 *   pluginOptions
	 * ) => {
	 *   const helmet = Helmet.renderStatic()
	 *   setHtmlAttributes(helmet.htmlAttributes.toComponent())
	 *   setBodyAttributes(helmet.bodyAttributes.toComponent())
	 *   setHeadComponents([
	 *     helmet.title.toComponent(),
	 *     helmet.link.toComponent(),
	 *     helmet.meta.toComponent(),
	 *     helmet.noscript.toComponent(),
	 *     helmet.script.toComponent(),
	 *     helmet.style.toComponent(),
	 *   ])
	 * }
	 */
	exports.onRenderBody = true;

/***/ }),
/* 330 */
/***/ (function(module, exports) {

	module.exports = [{"componentChunkName":"component---node-modules-gatsby-plugin-offline-app-shell-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"offline-plugin-app-shell-fallback.json","path":"/offline-plugin-app-shell-fallback/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"its-a-blog.json","path":"/its_a_blog/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"my-testimony-about-blockchain-p-1.json","path":"/my_testimony_about_blockchain_p1/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"a-real-life-hogwarts.json","path":"/a_real_life_hogwarts/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"my-testimony-about-blockchain-p-2.json","path":"/my_testimony_about_blockchain_p2/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"arch.json","path":"/arch/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"blurred-lines.json","path":"/blurred_lines/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"a-better-blog.json","path":"/a_better_blog/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"recovering-arch-from-hell.json","path":"/recovering_arch_from_hell/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"abc-of-unix.json","path":"/abc_of_unix/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"arcanist.json","path":"/arcanist/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"contributing-to-pandas.json","path":"/contributing_to_pandas/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"the-git-flow.json","path":"/the_git_flow/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"breaking-free.json","path":"/breaking_free/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"muli-booting.json","path":"/muli_booting/"},{"componentChunkName":"component---src-templates-post-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"hello-gsoc.json","path":"/hello_gsoc/"},{"componentChunkName":"component---src-templates-page-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"about.json","path":"/about/"},{"componentChunkName":"component---src-templates-page-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"links.json","path":"/links/"},{"componentChunkName":"component---src-templates-page-template-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"success.json","path":"/success/"},{"componentChunkName":"component---src-pages-contact-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"contact.json","path":"/contact/"},{"componentChunkName":"component---src-pages-index-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"index.json","path":"/"},{"componentChunkName":"component---src-pages-search-js","layout":"layout---index","layoutComponentChunkName":"component---src-layouts-index-js","jsonName":"search.json","path":"/search/"}]

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	// prefer default export if available
	var preferDefault = function preferDefault(m) {
	  return m && m.default || m;
	};
	
	exports.layouts = {
	  "layout---index": preferDefault(__webpack_require__(332))
	};
	
	exports.components = {
	  "component---node-modules-gatsby-plugin-offline-app-shell-js": preferDefault(__webpack_require__(513)),
	  "component---src-templates-post-template-js": preferDefault(__webpack_require__(514)),
	  "component---src-templates-page-template-js": preferDefault(__webpack_require__(532)),
	  "component---src-pages-contact-js": preferDefault(__webpack_require__(537)),
	  "component---src-pages-index-js": preferDefault(__webpack_require__(600)),
	  "component---src-pages-search-js": preferDefault(__webpack_require__(601))
	};
	
	exports.json = {
	  "layout-index.json": __webpack_require__(512),
	  "offline-plugin-app-shell-fallback.json": __webpack_require__(1050),
	  "its-a-blog.json": __webpack_require__(1051),
	  "my-testimony-about-blockchain-p-1.json": __webpack_require__(1052),
	  "a-real-life-hogwarts.json": __webpack_require__(1053),
	  "my-testimony-about-blockchain-p-2.json": __webpack_require__(1054),
	  "arch.json": __webpack_require__(1055),
	  "blurred-lines.json": __webpack_require__(1056),
	  "a-better-blog.json": __webpack_require__(1057),
	  "recovering-arch-from-hell.json": __webpack_require__(1058),
	  "abc-of-unix.json": __webpack_require__(1059),
	  "arcanist.json": __webpack_require__(1060),
	  "contributing-to-pandas.json": __webpack_require__(1061),
	  "the-git-flow.json": __webpack_require__(1062),
	  "breaking-free.json": __webpack_require__(1063),
	  "muli-booting.json": __webpack_require__(1064),
	  "hello-gsoc.json": __webpack_require__(1065),
	  "about.json": __webpack_require__(1066),
	  "links.json": __webpack_require__(1067),
	  "success.json": __webpack_require__(1068),
	  "contact.json": __webpack_require__(1069),
	  "index.json": __webpack_require__(1070),
	  "search.json": __webpack_require__(1071)
	};

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(333);
	
	var _index2 = _interopRequireDefault(_index);
	
	var _layoutIndex = __webpack_require__(512);
	
	var _layoutIndex2 = _interopRequireDefault(_layoutIndex);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));
	};
	
	module.exports = exports["default"];

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.guery = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _styles = __webpack_require__(272);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactRedux = __webpack_require__(245);
	
	var _withRoot = __webpack_require__(334);
	
	var _withRoot2 = _interopRequireDefault(_withRoot);
	
	var _theme = __webpack_require__(316);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	var _globals = __webpack_require__(337);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	var _store = __webpack_require__(326);
	
	var _AsyncComponent = __webpack_require__(338);
	
	var _AsyncComponent2 = _interopRequireDefault(_AsyncComponent);
	
	var _Loading = __webpack_require__(340);
	
	var _Loading2 = _interopRequireDefault(_Loading);
	
	var _Navigator = __webpack_require__(346);
	
	var _Navigator2 = _interopRequireDefault(_Navigator);
	
	var _ActionsBar = __webpack_require__(415);
	
	var _ActionsBar2 = _interopRequireDefault(_ActionsBar);
	
	var _InfoBar = __webpack_require__(446);
	
	var _InfoBar2 = _interopRequireDefault(_InfoBar);
	
	var _LayoutWrapper = __webpack_require__(454);
	
	var _LayoutWrapper2 = _interopRequireDefault(_LayoutWrapper);
	
	var _helpers = __webpack_require__(456);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var InfoBox = (0, _AsyncComponent2.default)(function () {
	  return new Promise(function (resolve) {
	    __webpack_require__.e/* nsure */(1, function (require) {
	      resolve(__webpack_require__(457));
	    });
	  }).then(function (module) {
	    return module;
	  }).catch(function (error) {});
	}, _react2.default.createElement(_Loading2.default, {
	  overrides: { width: _theme2.default.info.sizes.width + "px", height: "100vh", right: "auto" },
	  afterRight: true
	}));
	
	var Layout = function (_React$Component) {
	  _inherits(Layout, _React$Component);
	
	  function Layout() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Layout);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.timeouts = {}, _this.categories = [], _this.getCategories = function () {
	      _this.categories = _this.props.data.posts.edges.reduce(function (list, edge, i) {
	        var category = edge.node.frontmatter.category;
	        if (category && !~list.indexOf(category)) {
	          return list.concat(edge.node.frontmatter.category);
	        } else {
	          return list;
	        }
	      }, []);
	    }, _this.resizeThrottler = function () {
	      return (0, _helpers.timeoutThrottlerHandler)(_this.timeouts, "resize", 500, _this.resizeHandler);
	    }, _this.resizeHandler = function () {
	      _this.props.setIsWideScreen((0, _helpers.isWideScreen)());
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Layout.prototype.componentDidMount = function componentDidMount() {
	    this.props.setIsWideScreen((0, _helpers.isWideScreen)());
	    if (typeof window !== "undefined") {
	      window.addEventListener("resize", this.resizeThrottler, false);
	    }
	  };
	
	  Layout.prototype.componentWillMount = function componentWillMount() {
	    if (typeof localStorage !== "undefined") {
	      var inLocal = +localStorage.getItem("font-size-increase");
	
	      var inStore = this.props.fontSizeIncrease;
	
	      if (inLocal && inLocal !== inStore && inLocal >= 1 && inLocal <= 1.5) {
	        this.props.setFontSizeIncrease(inLocal);
	      }
	    }
	
	    this.getCategories();
	  };
	
	  Layout.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        data = _props.data;
	
	    // TODO: dynamic management of tabindexes for keybord navigation
	
	    return _react2.default.createElement(
	      _LayoutWrapper2.default,
	      null,
	      children(),
	      _react2.default.createElement(_Navigator2.default, { posts: data.posts.edges }),
	      _react2.default.createElement(_ActionsBar2.default, { categories: this.categories }),
	      _react2.default.createElement(_InfoBar2.default, { pages: data.pages.edges, parts: data.parts.edges }),
	      this.props.isWideScreen && _react2.default.createElement(InfoBox, { pages: data.pages.edges, parts: data.parts.edges })
	    );
	  };
	
	  return Layout;
	}(_react2.default.Component);
	
	Layout.propTypes = {
	  data: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.func.isRequired,
	  setIsWideScreen: _propTypes2.default.func.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired,
	  fontSizeIncrease: _propTypes2.default.number.isRequired,
	  setFontSizeIncrease: _propTypes2.default.func.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    pages: state.pages,
	    isWideScreen: state.isWideScreen,
	    fontSizeIncrease: state.fontSizeIncrease
	  };
	};
	
	var mapDispatchToProps = {
	  setIsWideScreen: _store.setIsWideScreen,
	  setFontSizeIncrease: _store.setFontSizeIncrease
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _withRoot2.default)((0, _reactJss2.default)(_globals2.default)(Layout)));
	
	//eslint-disable-next-line no-undef
	
	var guery = exports.guery = "** extracted graphql fragment **";

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _styles = __webpack_require__(272);
	
	var _CssBaseline = __webpack_require__(335);
	
	var _CssBaseline2 = _interopRequireDefault(_CssBaseline);
	
	var _getPageContext = __webpack_require__(271);
	
	var _getPageContext2 = _interopRequireDefault(_getPageContext);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function withRoot(Component) {
	  var WithRoot = function (_React$Component) {
	    _inherits(WithRoot, _React$Component);
	
	    function WithRoot(props) {
	      _classCallCheck(this, WithRoot);
	
	      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
	
	      _this.pageContext = null;
	
	
	      _this.pageContext = _this.props.pageContext || (0, _getPageContext2.default)();
	      return _this;
	    }
	
	    WithRoot.prototype.componentDidMount = function componentDidMount() {
	      // Remove the server-side injected CSS.
	      var jssStyles = document.querySelector("#server-side-jss");
	      if (jssStyles && jssStyles.parentNode) {
	        jssStyles.parentNode.removeChild(jssStyles);
	      }
	    };
	
	    WithRoot.prototype.render = function render() {
	      // MuiThemeProvider makes the theme available down the React tree thanks to React context.
	      return _react2.default.createElement(
	        _styles.MuiThemeProvider,
	        {
	          theme: this.pageContext.theme,
	          sheetsManager: this.pageContext.sheetsManager
	        },
	        _react2.default.createElement(_CssBaseline2.default, null),
	        _react2.default.createElement(Component, this.props)
	      );
	    };
	
	    return WithRoot;
	  }(_react2.default.Component);
	
	  WithRoot.propTypes = {
	    pageContext: _propTypes2.default.object
	  };
	
	  return WithRoot;
	}
	
	exports.default = withRoot;
	module.exports = exports["default"];

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _CssBaseline.default;
	  }
	});
	
	var _CssBaseline = _interopRequireDefault(__webpack_require__(336));

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _styles = __webpack_require__(272);
	
	var _exactProp = _interopRequireDefault(__webpack_require__(306));
	
	/* eslint-disable react/no-unused-prop-types */
	var styles = function styles(theme) {
	  return {
	    '@global': {
	      html: {
	        WebkitFontSmoothing: 'antialiased',
	        // Antialiasing.
	        MozOsxFontSmoothing: 'grayscale',
	        // Antialiasing.
	        // Change from `box-sizing: content-box` so that `width`
	        // is not affected by `padding` or `border`.
	        boxSizing: 'border-box'
	      },
	      '*, *::before, *::after': {
	        boxSizing: 'inherit'
	      },
	      body: {
	        margin: 0,
	        // Remove the margin in all browsers.
	        backgroundColor: theme.palette.background.default,
	        '@media print': {
	          // Save printer ink.
	          backgroundColor: theme.palette.common.white
	        }
	      }
	    }
	  };
	};
	/**
	 * Kickstart an elegant, consistent, and simple baseline to build upon.
	 */
	
	
	var CssBaseline =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(CssBaseline, _React$Component);
	
	  function CssBaseline() {
	    (0, _classCallCheck2.default)(this, CssBaseline);
	    return (0, _possibleConstructorReturn2.default)(this, (CssBaseline.__proto__ || Object.getPrototypeOf(CssBaseline)).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(CssBaseline, [{
	    key: "render",
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return CssBaseline;
	}(_react.default.Component);
	
	CssBaseline.propTypes =  false ? {
	  /**
	   * You can wrap a node.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   */
	  classes: _propTypes.default.object.isRequired
	} : {};
	CssBaseline.propTypes =  false ? (0, _exactProp.default)(CssBaseline.propTypes) : {};
	CssBaseline.defaultProps = {
	  children: null
	};
	
	var _default = (0, _styles.withStyles)(styles, {
	  name: 'MuiCssBaseline'
	})(CssBaseline);
	
	exports.default = _default;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _theme = __webpack_require__(316);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	  /*
	      BEGINNING OF NORMALIZE STYLE
	    */
	
	  "@global": {
	    /**
	     * Add the correct display in IE9
	     */
	    "article, aside, footer, header, nav, section, figcaption, figure, main": {
	      display: "block"
	    },
	
	    /**
	     * Correct the font size and margin on `h1` elements within `section` and
	     * `article` contexts in Chrome, Firefox, and Safari.
	     */
	    h1: {
	      fontSize: "2em",
	      margin: [["0.67em", 0]]
	    },
	
	    /**
	     * 1. Add the correct box sizing in Firefox.
	     * 2. Show the overflow in Edge and IE.
	     */
	    hr: {
	      boxSizing: "content-box" /* 1 */
	      , height: 0 /* 1 */
	      , overflow: "visible" /* 2 */
	    },
	
	    /**
	     * 1. Correct the inheritance and scaling of font size in all browsers.
	     * 2. Correct the odd `em` font sizing in all browsers.
	     */
	    pre: {
	      fontFamily: "monospace, monospace" /* 1 */
	      , fontSize: "1em" /* 2 */
	    },
	
	    /**
	     * 1. Remove the gray background on active links in IE 10.
	     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
	     * 3. Remove the outline on focused links when they are also
	     *    active or hovered in all browsers (opinionated).
	     */
	    // a: {
	    //   background: "transparent" /* 1 */,
	    //   textDecorationSkip: "objects" /* 2 */
	    // },
	    "a:active, a:hover": {
	      outlineWidth: 0 /* 3 */
	    },
	
	    /**
	     * 1. Remove the bottom border in Firefox 39-.
	     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
	     */
	    "abbr[title]": {
	      borderBottom: "none" /* 1 */
	      , textDecoration: "underline" /* 2 */
	    },
	
	    /**
	     * Add the correct font weight in Chrome, Edge, and Safari.
	     */
	    "b, strong": {
	      fontWeight: "bolder"
	    },
	
	    /**
	     * 1. Correct the inheritance and scaling of font size in all browsers.
	     * 2. Correct the odd `em` font sizing in all browsers.
	     */
	    "code, kbp, samp": {
	      fontFamily: "monospace, monospace" /* 1 */
	      , fontSize: "1em" /* 2 */
	    },
	
	    /**
	     * Add the correct font style in Android 4.3-.
	     */
	    dfn: {
	      fontStyle: "italic"
	    },
	
	    /**
	     * Add the correct background and color in IE 9-.
	     */
	    mark: {
	      backgroundColor: "#ff0",
	      color: "#000"
	    },
	
	    /**
	     * Add the correct font size in all browsers.
	     */
	    small: {
	      fontSize: "80%"
	    },
	
	    /**
	     * Prevent `sub` and `sup` elements from affecting the line height in
	     * all browsers.
	     */
	    "sub, sup": {
	      fontSize: "75%",
	      lineHeight: 0,
	      position: "relative",
	      verticalAlign: "baseline"
	    },
	    sup: {
	      top: "-0.5em"
	    },
	    sub: {
	      bottom: "-0.25em"
	    },
	
	    /**
	     * Add the correct display in IE 9-.
	     */
	    "audio, video": {
	      display: "inline-block"
	    },
	
	    /**
	     * Add the correct display in iOS 4-7.
	     */
	    "audio:not([controls])": {
	      display: "none",
	      height: 0
	    },
	
	    /**
	     * 1. Remove the border on images inside links in IE 10-.
	     * 2. Remove extra space in all browsers
	     */
	    img: {
	      borderStyle: "none" /* 1 */
	      , verticalAlign: "middle" /* 2 */
	    },
	
	    /**
	     * Hide the overflow in IE.
	     */
	    "svg:not(:root)": {
	      overflow: "hidden"
	    },
	
	    /**
	     * 1. Change the font styles in all browsers (opinionated).
	     * 2. Remove the margin in Firefox and Safari.
	     */
	    "button, input, optgroup, select, textarea": {
	      fontFamily: "Arial" /* 1 */
	      , fontSize: "100%" /* 1 */
	      , lineHeight: "1.15" /* 1 */
	      , margin: 0 /* 2 */
	    },
	
	    /**
	     * Show the overflow in IE & Edge.
	     */
	    "button, input": {
	      overflow: "visible"
	    },
	
	    /**
	     * Remove the inheritance of text transform in Edge, Firefox, and IE.
	     */
	    "button, select": {
	      textTransform: "none"
	    },
	
	    /**
	     * Correct the inability to style clickable types in iOS and Safari.
	     */
	    "button, [type=reset], [type=submit]": {
	      "-webkit-appearance": "button"
	    },
	
	    /**
	     * Remove the inner border and padding in Firefox.
	     */
	    "button::-moz-focus-inner, [type=button]::-moz-focus-inner, [type=reset]::-moz-focus-inner, [type=submit]::-moz-focus-inner": {
	      borderStyle: "none",
	      padding: 0
	    },
	
	    /**
	     * Restore the focus styles unset by the previous rule.
	     */
	    "button:-moz-focusring, [type=button]:-moz-focusring, [type=reset]:-moz-focusring, [type=submit]:-moz-focusring": {
	      outline: "1px dotted ButtonText"
	    },
	
	    /**
	     * Change the border, margin, and padding in all browsers (opinionated).
	     */
	    fieldset: {
	      border: "1px solid #c0c0c0",
	      margin: [[0, "2px"]],
	      padding: [["0.35em", "0.625em", "0.75em"]]
	    },
	
	    /**
	     * 1. Correct the text wrapping in Edge and IE.
	     * 2. Correct the color inheritance from `fieldset` elements in IE.
	     * 3. Remove the padding so developers are not caught out when they zero out
	     *    `fieldset` elements in all browsers.
	     */
	    legend: {
	      boxSizing: "border-box" /* 1 */
	      , color: "inherit" /* 2 */
	      , display: "table" /* 1 */
	      , maxWidth: "100%" /* 1 */
	      , padding: 0 /* 3 */
	      , whiteSpace: "normal" /* 1 */
	    },
	
	    /**
	     * 1. Add the correct display in IE 9-.
	     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
	     */
	    progress: {
	      display: "inline-block" /* 1 */
	      , verticalAlign: "baseline" /* 2 */
	    },
	
	    /**
	     * Remove the default vertical scrollbar in IE.
	     */
	    textarea: {
	      overflow: "auto"
	    },
	
	    /**
	     * 1. Add the correct box sizing in IE 10-.
	     * 2. Remove the padding in IE 10-.
	     */
	    "[type=checkbox], [type=radio]": {
	      boxSizing: "border-box" /* 1 */
	      , padding: 0 /* 2 */
	    },
	
	    /**
	     * Correct the cursor style of increment and decrement buttons in Chrome.
	     */
	    "[type=number]::-webkit-inner-spin-button, [type=number]::-webkit-outer-spin-button": {
	      height: "auto"
	    },
	
	    /**
	     * 1. Correct the odd appearance in Chrome and Safari.
	     * 2. Correct the outline style in Safari.
	     */
	    "[type=search]": {
	      appearance: "textfield" /* 1 */
	      , outlineOffset: "-2px" /* 2 */
	    },
	
	    /**
	     * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
	     */
	    "[type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration": {
	      appearance: "none"
	    },
	
	    /**
	     * 1. Correct the inability to style clickable types in iOS and Safari.
	     * 2. Change font properties to `inherit` in Safari.
	     */
	    "::-webkit-file-upload-button": {
	      appearance: "button" /* 1 */
	      , font: "inherit" /* 2 */
	    },
	
	    /*
	     * Add the correct display in Edge, IE, and Firefox.
	     */
	    "details, menu": {
	      display: "block"
	    },
	
	    /*
	     * Add the correct display in all browsers.
	     */
	    summary: {
	      display: "list-item"
	    },
	
	    /**
	     * Add the correct display in IE 9-.
	     */
	    canvas: {
	      display: "inline-block"
	    },
	
	    /**
	     * Add the correct display in IE.
	     */
	    template: {
	      display: "none"
	    },
	
	    /**
	     * Add the correct display in IE 10-.
	     */
	    "[hidden]": {
	      display: "none"
	    },
	
	    /*
	      END OF NORMALIZE STYLE
	    */
	
	    /*
	      BEGiNNIG OF CUTSOM GLOBAL STYLE
	     */
	
	    html: {
	      boxSizing: "border-box",
	      "-webkit-text-size-adjust": "100%",
	      "-moz-text-size-adjust": "none",
	      "-ms-text-size-adjust": "100%",
	      fontFamily: _theme2.default.base.fonts.unstyledFamily,
	      lineHeight: "1.15",
	      textSizeAdjust: "100%"
	    },
	    "html.wf-active": {
	      fontFamily: _theme2.default.base.fonts.styledFamily
	    },
	    "*, *:before, *:after": {
	      boxSizing: "inherit"
	    },
	    noscript: {
	      background: "#d00",
	      color: "#fff",
	      position: "absolute",
	      top: "50%",
	      left: "50%",
	      zIndex: 1000,
	      transform: "translate(-50%, -50%)",
	      padding: "1.5rem 2.5rem",
	      fontWeight: 400,
	      borderRadius: "2px",
	      boxShadow: "0 0 10px 52px rgba(255,255,255,.8)"
	    },
	    body: {
	      margin: 0,
	      background: _theme2.default.base.colors.background,
	      //overflow: "hidden",
	      "-webkit-tap-highlight-color": "rgba(0,0,0,.05)"
	    },
	    wrapper: {},
	    main: {
	      position: "relative"
	    },
	    "h1, h2, h3": {
	      fontWeight: 300
	    },
	    a: {
	      background: "transparent",
	      textDecorationSkip: "objects",
	      fontWeight: "bold",
	      textDecoration: "none",
	      transition: "0.3s"
	    },
	    "input:-webkit-autofill": {
	      "-webkit-box-shadow": "0 0 0 50px white inset"
	    },
	    ":not(pre) > code[class*='language-']": {
	      background: "#eee",
	      color: "#666",
	      textShadow: "none",
	      padding: "1px 5px",
	      borderRadius: "2px"
	    }
	  }
	};
	module.exports = exports["default"];

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _AsyncComponent = __webpack_require__(339);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AsyncComponent).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = asyncComponent;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function asyncComponent(getComponent, loadingComponent) {
	  var AsyncComponent = function (_React$Component) {
	    _inherits(AsyncComponent, _React$Component);
	
	    function AsyncComponent() {
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, AsyncComponent);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = { Component: null }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    AsyncComponent.prototype.componentDidMount = function componentDidMount() {
	      var _this2 = this;
	
	      if (!this.state.Component) {
	        getComponent().then(function (Component) {
	          _this2.setState({ Component: Component });
	        });
	      }
	    };
	
	    AsyncComponent.prototype.render = function render() {
	      var Component = this.state.Component;
	
	      if (Component) {
	        return _react2.default.createElement(Component, this.props);
	      }
	      return loadingComponent ? loadingComponent : _react2.default.createElement(
	        "div",
	        null,
	        "Loading..."
	      );
	    };
	
	    return AsyncComponent;
	  }(_react2.default.Component);
	
	  return AsyncComponent;
	}
	module.exports = exports["default"];

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Loading = __webpack_require__(341);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Loading).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _CircularProgress = __webpack_require__(342);
	
	var _CircularProgress2 = _interopRequireDefault(_CircularProgress);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    loading: {
	      display: "flex",
	      background: function background(props) {
	        return props.overrides && props.overrides.background ? props.overrides.background : theme.base.colors.background;
	      },
	      position: "absolute",
	      left: function left(props) {
	        return props.overrides && props.overrides.left ? props.overrides.left : 0;
	      },
	      right: function right(props) {
	        return props.overrides && props.overrides.right ? props.overrides.right : 0;
	      },
	      top: "0",
	      width: function width(props) {
	        return props.overrides && props.overrides.width ? props.overrides.width : "100%";
	      },
	      height: function height(props) {
	        return props.overrides && props.overrides.height ? props.overrides.height : "100%";
	      },
	      flexDirection: "column",
	      justifyContent: "center",
	      alignItems: "center",
	      "&::after": {
	        content: function content(props) {
	          return props.afterLeft || props.afterRight ? "\"\"" : "";
	        },
	        position: "absolute",
	        right: function right(props) {
	          return props.afterRight ? 0 : "";
	        },
	        left: function left(props) {
	          return props.afterLeft ? 0 : "";
	        },
	        top: theme.base.sizes.linesMargin,
	        bottom: theme.base.sizes.linesMargin,
	        width: 0,
	        borderRight: "1px solid " + theme.base.colors.lines
	      }
	    },
	    progress: {}
	  };
	};
	
	var Loading = function Loading(props) {
	  var classes = props.classes,
	      progressSize = props.progressSize;
	
	
	  return _react2.default.createElement(
	    "div",
	    { className: classes.loading },
	    _react2.default.createElement(_CircularProgress2.default, { className: classes.progress, size: progressSize ? progressSize : 30 })
	  );
	};
	
	Loading.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  progressSize: _propTypes2.default.number,
	  overrides: _propTypes2.default.object
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Loading);
	module.exports = exports["default"];

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _CircularProgress.default;
	  }
	});
	
	var _CircularProgress = _interopRequireDefault(__webpack_require__(343));

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _helpers = __webpack_require__(345);
	
	var SIZE = 44;
	
	function getRelativeValue(value, min, max) {
	  var clampedValue = Math.min(Math.max(min, value), max);
	  return (clampedValue - min) / (max - min);
	}
	
	function easeOut(t) {
	  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294
	
	  t = (t -= 1) * t * t + 1;
	  return t;
	}
	
	function easeIn(t) {
	  return t * t;
	}
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline-block',
	      lineHeight: 1 // Keep the progress centered
	
	    },
	    static: {
	      transition: theme.transitions.create('transform')
	    },
	    indeterminate: {
	      animation: 'mui-progress-circular-rotate 1.4s linear infinite'
	    },
	    colorPrimary: {
	      color: theme.palette.primary.main
	    },
	    colorSecondary: {
	      color: theme.palette.secondary.main
	    },
	    svg: {},
	    circle: {
	      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.
	      // strokeLinecap: 'butt',
	
	    },
	    circleStatic: {
	      transition: theme.transitions.create('stroke-dashoffset')
	    },
	    circleIndeterminate: {
	      animation: 'mui-progress-circular-dash 1.4s ease-in-out infinite',
	      // Some default value that looks fine waiting for the animation to kicks in.
	      strokeDasharray: '80px, 200px',
	      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.
	
	    },
	    '@keyframes mui-progress-circular-rotate': {
	      '100%': {
	        transform: 'rotate(360deg)'
	      }
	    },
	    '@keyframes mui-progress-circular-dash': {
	      '0%': {
	        strokeDasharray: '1px, 200px',
	        strokeDashoffset: '0px'
	      },
	      '50%': {
	        strokeDasharray: '100px, 200px',
	        strokeDashoffset: '-15px'
	      },
	      '100%': {
	        strokeDasharray: '100px, 200px',
	        strokeDashoffset: '-120px'
	      }
	    }
	  };
	};
	/**
	 * ## ARIA
	 *
	 * If the progress bar is describing the loading progress of a particular region of a page,
	 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
	 * attribute to `true` on that region until it has finished loading.
	 */
	
	
	exports.styles = styles;
	
	function CircularProgress(props) {
	  var _classNames, _classNames2;
	
	  var classes = props.classes,
	      className = props.className,
	      color = props.color,
	      size = props.size,
	      style = props.style,
	      thickness = props.thickness,
	      value = props.value,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "color", "size", "style", "thickness", "value", "variant"]);
	  var circleStyle = {};
	  var rootStyle = {};
	  var rootProps = {};
	
	  if (variant === 'determinate' || variant === 'static') {
	    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
	    circleStyle.strokeDasharray = circumference.toFixed(3);
	    rootProps['aria-valuenow'] = Math.round(value);
	
	    if (variant === 'static') {
	      circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
	      rootStyle.transform = 'rotate(-90deg)';
	    } else {
	      circleStyle.strokeDashoffset = "".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), "px");
	      rootStyle.transform = "rotate(".concat((easeOut(value / 70) * 270).toFixed(3), "deg)");
	    }
	  }
	
	  return _react.default.createElement("div", (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'inherit'), (0, _defineProperty2.default)(_classNames, classes.indeterminate, variant === 'indeterminate'), (0, _defineProperty2.default)(_classNames, classes.static, variant === 'static'), _classNames), className),
	    style: (0, _objectSpread2.default)({
	      width: size,
	      height: size
	    }, rootStyle, style),
	    role: "progressbar"
	  }, rootProps, other), _react.default.createElement("svg", {
	    className: classes.svg,
	    viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE)
	  }, _react.default.createElement("circle", {
	    className: (0, _classnames.default)(classes.circle, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.circleIndeterminate, variant === 'indeterminate'), (0, _defineProperty2.default)(_classNames2, classes.circleStatic, variant === 'static'), _classNames2)),
	    style: circleStyle,
	    cx: SIZE,
	    cy: SIZE,
	    r: (SIZE - thickness) / 2,
	    fill: "none",
	    strokeWidth: thickness
	  })));
	}
	
	CircularProgress.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   */
	  color: _propTypes.default.oneOf(['primary', 'secondary', 'inherit']),
	
	  /**
	   * The size of the circle.
	   */
	  size: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * The thickness of the circle.
	   */
	  thickness: _propTypes.default.number,
	
	  /**
	   * The value of the progress indicator for the determinate and static variants.
	   * Value between 0 and 100.
	   */
	  value: _propTypes.default.number,
	
	  /**
	   * The variant to use.
	   * Use indeterminate when there is no progress value.
	   */
	  variant: _propTypes.default.oneOf(['determinate', 'indeterminate', 'static'])
	} : {};
	CircularProgress.defaultProps = {
	  color: 'primary',
	  size: 40,
	  thickness: 3.6,
	  value: 0,
	  variant: 'indeterminate'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiCircularProgress',
	  flip: false
	})(CircularProgress);
	
	exports.default = _default;

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.capitalize = capitalize;
	exports.contains = contains;
	exports.findIndex = findIndex;
	exports.find = find;
	exports.createChainedFunction = createChainedFunction;
	
	var _typeof2 = _interopRequireDefault(__webpack_require__(301));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	//  weak
	function capitalize(string) {
	  if (false) {
	    throw new Error('Material-UI: capitalize(string) expects a string argument.');
	  }
	
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}
	
	function contains(obj, pred) {
	  return Object.keys(pred).every(function (key) {
	    return obj.hasOwnProperty(key) && obj[key] === pred[key];
	  });
	}
	
	function findIndex(arr, pred) {
	  var predType = (0, _typeof2.default)(pred);
	
	  for (var i = 0; i < arr.length; i += 1) {
	    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {
	      return i;
	    }
	
	    if (predType === 'object' && contains(arr[i], pred)) {
	      return i;
	    }
	
	    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {
	      return arr.indexOf(pred);
	    }
	  }
	
	  return -1;
	}
	
	function find(arr, pred) {
	  var index = findIndex(arr, pred);
	  return index > -1 ? arr[index] : undefined;
	}
	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	
	
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  return funcs.reduce(function (acc, func) {
	    if (func == null) {
	      return acc;
	    }
	
	     false ? (0, _warning.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;
	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      acc.apply(this, args);
	      func.apply(this, args);
	    };
	  }, function () {});
	}

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Navigator = __webpack_require__(347);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Navigator).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(245);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactLazyload = __webpack_require__(348);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _List = __webpack_require__(363);
	
	var _List2 = _interopRequireDefault(_List);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _navigator;
	
	  return {
	    navigator: (_navigator = {
	      transform: "translate3d(0, 0, 0)",
	      willChange: "left, top, bottom, width",
	      background: theme.navigator.colors.background,
	      position: "absolute",
	      top: 0,
	      left: 0,
	      height: "100vh",
	      transitionTimingFunction: "ease",
	      transition: "left .9s",
	      width: "100%"
	    }, _navigator["@media (max-width: " + (theme.mediaQueryTresholds.L - 1) + "px)"] = {
	      "&.is-aside": {
	        left: "-100%"
	      },
	      "&.is-featured": {
	        left: 0
	      }
	    }, _navigator["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      "&.is-featured": {
	        transition: "left .9s",
	        width: "calc(100vw - " + theme.info.sizes.width + "px - " + theme.bars.sizes.actionsBar + "px)",
	        left: theme.info.sizes.width + "px",
	        top: 0
	      },
	      "&.is-aside": {
	        transition: "none, bottom 0.5s",
	        left: 0,
	        width: theme.info.sizes.width - 1 + "px",
	        zIndex: 1,
	        top: "auto",
	        "&.closed": {
	          bottom: "calc(-100% + 100px + " + theme.navigator.sizes.closedHeight + "px)",
	          height: "calc(100% - 100px)"
	        },
	        "&.open": {
	          bottom: 0,
	          height: "calc(100% - 100px)"
	        },
	        "&::after": {
	          content: "\"\"",
	          position: "absolute",
	          top: 0,
	          left: theme.base.sizes.linesMargin,
	          right: theme.base.sizes.linesMargin,
	          height: 0,
	          borderTop: "1px solid " + theme.base.colors.lines
	        }
	      },
	      "&.moving-aside": {
	        transition: "left 0.9s",
	        left: "calc(-100vw + " + (2 * theme.info.sizes.width + 60) + "px)",
	        width: "calc(100vw - " + theme.info.sizes.width + "px - 60px)",
	        top: 0
	      },
	      "&.resizing-aside": {
	        transition: "none",
	        width: theme.info.sizes.width - 1 + "px",
	        top: "auto",
	        left: 0,
	        "&.closed": {
	          bottom: "calc(-100% + 100px)",
	          height: "calc(100% - 100px)"
	        },
	        "&.open": {
	          bottom: "calc(-100% + 100px)",
	          height: "calc(100% - 100px)"
	        }
	      },
	      "&.moving-featured": {
	        transition: "bottom .3s",
	
	        bottom: "-100%",
	        top: "auto",
	        left: 0,
	        zIndex: 1,
	        width: theme.info.sizes.width - 1 + "px"
	      },
	      "&.resizing-featured": {
	        transition: "none",
	        top: 0,
	        bottom: "auto",
	        left: "calc(-100vw + " + (2 * theme.info.sizes.width + 60) + "px)",
	        width: "calc(100vw - " + theme.info.sizes.width + "px - 60px)"
	      }
	    }, _navigator)
	  };
	};
	
	var Navigator = function (_React$Component) {
	  _inherits(Navigator, _React$Component);
	
	  function Navigator() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Navigator);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.linkOnClick = _shared.moveNavigatorAside.bind(_this), _this.expandOnClick = function (e) {
	      _this.props.setNavigatorShape("open");
	      setTimeout(_reactLazyload.forceCheck, 600);
	    }, _this.removefilterOnClick = function (e) {
	      _this.props.setCategoryFilter("all posts");
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Navigator.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        posts = _props.posts,
	        navigatorPosition = _props.navigatorPosition,
	        navigatorShape = _props.navigatorShape,
	        categoryFilter = _props.categoryFilter;
	
	
	    return _react2.default.createElement(
	      "nav",
	      {
	        className: classes.navigator + " " + (navigatorPosition ? navigatorPosition : "") + " " + (navigatorShape ? navigatorShape : "") + " "
	      },
	      this.props.posts.length && _react2.default.createElement(_List2.default, {
	        posts: posts,
	        navigatorPosition: navigatorPosition,
	        navigatorShape: navigatorShape,
	        linkOnClick: this.linkOnClick,
	        expandOnClick: this.expandOnClick,
	        categoryFilter: categoryFilter,
	        removeFilter: this.removefilterOnClick
	      })
	    );
	  };
	
	  return Navigator;
	}(_react2.default.Component);
	
	Navigator.propTypes = {
	  posts: _propTypes2.default.array.isRequired,
	  classes: _propTypes2.default.object.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  navigatorShape: _propTypes2.default.string.isRequired,
	  setNavigatorPosition: _propTypes2.default.func.isRequired,
	  setNavigatorShape: _propTypes2.default.func.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired,
	  categoryFilter: _propTypes2.default.string.isRequired,
	  setCategoryFilter: _propTypes2.default.func.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    navigatorShape: state.navigatorShape,
	    isWideScreen: state.isWideScreen,
	    categoryFilter: state.categoryFilter
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition,
	  setNavigatorShape: _store.setNavigatorShape,
	  setCategoryFilter: _store.setCategoryFilter
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactJss2.default)(styles)(Navigator));
	module.exports = exports["default"];

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.forceCheck = exports.lazyload = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(349);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _event = __webpack_require__(357);
	
	var _scrollParent = __webpack_require__(358);
	
	var _scrollParent2 = _interopRequireDefault(_scrollParent);
	
	var _debounce = __webpack_require__(359);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	var _throttle = __webpack_require__(360);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _decorator = __webpack_require__(361);
	
	var _decorator2 = _interopRequireDefault(_decorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */
	
	
	var defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };
	var LISTEN_FLAG = 'data-lazyload-listened';
	var listeners = [];
	var pending = [];
	
	// try to handle passive events
	var passiveEventSupported = false;
	try {
	  var opts = Object.defineProperty({}, 'passive', {
	    get: function get() {
	      passiveEventSupported = true;
	    }
	  });
	  window.addEventListener('test', null, opts);
	} catch (e) {}
	// if they are supported, setup the optional params
	// IMPORTANT: FALSE doubles as the default CAPTURE value!
	var passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;
	
	/**
	 * Check if `component` is visible in overflow container `parent`
	 * @param  {node} component React component
	 * @param  {node} parent    component's scroll parent
	 * @return {bool}
	 */
	var checkOverflowVisible = function checkOverflowVisible(component, parent) {
	  var node = _reactDom2.default.findDOMNode(component);
	
	  var parentTop = void 0;
	  var parentHeight = void 0;
	
	  try {
	    var _parent$getBoundingCl = parent.getBoundingClientRect();
	
	    parentTop = _parent$getBoundingCl.top;
	    parentHeight = _parent$getBoundingCl.height;
	  } catch (e) {
	    parentTop = defaultBoundingClientRect.top;
	    parentHeight = defaultBoundingClientRect.height;
	  }
	
	  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;
	
	  // calculate top and height of the intersection of the element's scrollParent and viewport
	  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport
	  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height
	
	  // check whether the element is visible in the intersection
	  var top = void 0;
	  var height = void 0;
	
	  try {
	    var _node$getBoundingClie = node.getBoundingClientRect();
	
	    top = _node$getBoundingClie.top;
	    height = _node$getBoundingClie.height;
	  } catch (e) {
	    top = defaultBoundingClientRect.top;
	    height = defaultBoundingClientRect.height;
	  }
	
	  var offsetTop = top - intersectionTop; // element's top relative to intersection
	
	  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API
	
	  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0;
	};
	
	/**
	 * Check if `component` is visible in document
	 * @param  {node} component React component
	 * @return {bool}
	 */
	var checkNormalVisible = function checkNormalVisible(component) {
	  var node = _reactDom2.default.findDOMNode(component);
	
	  // If this element is hidden by css rules somehow, it's definitely invisible
	  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;
	
	  var top = void 0;
	  var elementHeight = void 0;
	
	  try {
	    var _node$getBoundingClie2 = node.getBoundingClientRect();
	
	    top = _node$getBoundingClie2.top;
	    elementHeight = _node$getBoundingClie2.height;
	  } catch (e) {
	    top = defaultBoundingClientRect.top;
	    elementHeight = defaultBoundingClientRect.height;
	  }
	
	  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;
	
	  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API
	
	  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;
	};
	
	/**
	 * Detect if element is visible in viewport, if so, set `visible` state to true.
	 * If `once` prop is provided true, remove component as listener after checkVisible
	 *
	 * @param  {React} component   React component that respond to scroll and resize
	 */
	var checkVisible = function checkVisible(component) {
	  var node = _reactDom2.default.findDOMNode(component);
	  if (!node) {
	    return;
	  }
	
	  var parent = (0, _scrollParent2.default)(node);
	  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;
	  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);
	  if (visible) {
	    // Avoid extra render if previously is visible
	    if (!component.visible) {
	      if (component.props.once) {
	        pending.push(component);
	      }
	
	      component.visible = true;
	      component.forceUpdate();
	    }
	  } else if (!(component.props.once && component.visible)) {
	    component.visible = false;
	    if (component.props.unmountIfInvisible) {
	      component.forceUpdate();
	    }
	  }
	};
	
	var purgePending = function purgePending() {
	  pending.forEach(function (component) {
	    var index = listeners.indexOf(component);
	    if (index !== -1) {
	      listeners.splice(index, 1);
	    }
	  });
	
	  pending = [];
	};
	
	var lazyLoadHandler = function lazyLoadHandler() {
	  for (var i = 0; i < listeners.length; ++i) {
	    var listener = listeners[i];
	    checkVisible(listener);
	  }
	  // Remove `once` component in listeners
	  purgePending();
	};
	
	// Depending on component's props
	var delayType = void 0;
	var finalLazyLoadHandler = null;
	
	var LazyLoad = function (_Component) {
	  _inherits(LazyLoad, _Component);
	
	  function LazyLoad(props) {
	    _classCallCheck(this, LazyLoad);
	
	    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));
	
	    _this.visible = false;
	    return _this;
	  }
	
	  _createClass(LazyLoad, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (typeof process !== 'undefined' && ("production") !== 'production') {
	        if (_react2.default.Children.count(this.props.children) > 1) {
	          console.warn('[react-lazyload] Only one child is allowed to be passed to `LazyLoad`.');
	        }
	
	        if (this.props.wheel) {
	          // eslint-disable-line
	          console.warn('[react-lazyload] Props `wheel` is not supported anymore, try set `overflow` for lazy loading in overflow containers.');
	        }
	
	        // Warn the user if placeholder and height is not specified and the rendered height is 0
	        if (!this.props.placeholder && this.props.height === undefined && _reactDom2.default.findDOMNode(this).offsetHeight === 0) {
	          console.warn('[react-lazyload] Please add `height` props to <LazyLoad> for better performance.');
	        }
	      }
	
	      // It's unlikely to change delay type on the fly, this is mainly
	      // designed for tests
	      var needResetFinalLazyLoadHandler = false;
	      if (this.props.debounce !== undefined && delayType === 'throttle') {
	        console.warn('[react-lazyload] Previous delay function is `throttle`, now switching to `debounce`, try setting them unanimously');
	        needResetFinalLazyLoadHandler = true;
	      } else if (delayType === 'debounce' && this.props.debounce === undefined) {
	        console.warn('[react-lazyload] Previous delay function is `debounce`, now switching to `throttle`, try setting them unanimously');
	        needResetFinalLazyLoadHandler = true;
	      }
	
	      if (needResetFinalLazyLoadHandler) {
	        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        finalLazyLoadHandler = null;
	      }
	
	      if (!finalLazyLoadHandler) {
	        if (this.props.debounce !== undefined) {
	          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);
	          delayType = 'debounce';
	        } else if (this.props.throttle !== undefined) {
	          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);
	          delayType = 'throttle';
	        } else {
	          finalLazyLoadHandler = lazyLoadHandler;
	        }
	      }
	
	      if (this.props.overflow) {
	        var parent = (0, _scrollParent2.default)(_reactDom2.default.findDOMNode(this));
	        if (parent && typeof parent.getAttribute === 'function') {
	          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);
	          if (listenerCount === 1) {
	            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);
	          }
	          parent.setAttribute(LISTEN_FLAG, listenerCount);
	        }
	      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {
	        var _props = this.props,
	            scroll = _props.scroll,
	            resize = _props.resize;
	
	
	        if (scroll) {
	          (0, _event.on)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	        }
	
	        if (resize) {
	          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        }
	      }
	
	      listeners.push(this);
	      checkVisible(this);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate() {
	      return this.visible;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.props.overflow) {
	        var parent = (0, _scrollParent2.default)(_reactDom2.default.findDOMNode(this));
	        if (parent && typeof parent.getAttribute === 'function') {
	          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;
	          if (listenerCount === 0) {
	            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);
	            parent.removeAttribute(LISTEN_FLAG);
	          } else {
	            parent.setAttribute(LISTEN_FLAG, listenerCount);
	          }
	        }
	      }
	
	      var index = listeners.indexOf(this);
	      if (index !== -1) {
	        listeners.splice(index, 1);
	      }
	
	      if (listeners.length === 0) {
	        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);
	        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.visible ? this.props.children : this.props.placeholder ? this.props.placeholder : _react2.default.createElement('div', { style: { height: this.props.height }, className: 'lazyload-placeholder' });
	    }
	  }]);
	
	  return LazyLoad;
	}(_react.Component);
	
	LazyLoad.propTypes = {
	  once: _propTypes2.default.bool,
	  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
	  overflow: _propTypes2.default.bool,
	  resize: _propTypes2.default.bool,
	  scroll: _propTypes2.default.bool,
	  children: _propTypes2.default.node,
	  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),
	  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),
	  placeholder: _propTypes2.default.node,
	  unmountIfInvisible: _propTypes2.default.bool
	};
	
	LazyLoad.defaultProps = {
	  once: false,
	  offset: 0,
	  overflow: false,
	  resize: false,
	  scroll: true,
	  unmountIfInvisible: false
	};
	
	var lazyload = exports.lazyload = _decorator2.default;
	exports.default = LazyLoad;
	exports.forceCheck = lazyLoadHandler;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (false) {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}
	
	if (true) {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(350);
	} else {
	  module.exports = require('./cjs/react-dom.development.js');
	}


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.4.1
	 * react-dom.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(4),ba=__webpack_require__(1),m=__webpack_require__(351),p=__webpack_require__(3),v=__webpack_require__(6),da=__webpack_require__(352),ea=__webpack_require__(353),fa=__webpack_require__(354),ha=__webpack_require__(5);
	function A(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);aa(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}ba?void 0:A("227");
	function ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}
	var B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=
	B._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A("198")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};
	function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A("96",a);if(!oa[c]){b.extractEvents?void 0:A("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A("99",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A("98",d,a)}}}}
	function qa(a,b,c){ra[a]?A("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A("101"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A("102",c):void 0,ma[c]=d,b=!0)}b&&na()}
	var va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
	function Aa(a,b){null==b?A("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;
	function Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};
	function Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?A("231",b,typeof c):void 0;
	return c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A("95"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C="__reactInternalInstance$"+La,Ma="__reactEventHandlers$"+La;
	function Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A("33")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};
	function F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}
	function Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}
	function Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],"bubbled",a);for(a=c.length;0<a--;)Va(c[a],"captured",b)}
	var $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
	var bb={animationend:ab("Animation","AnimationEnd"),animationiteration:ab("Animation","AnimationIteration"),animationstart:ab("Animation","AnimationStart"),transitionend:ab("Transition","TransitionEnd")},cb={},db={};m.canUseDOM&&(db=document.createElement("div").style,"AnimationEvent"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),"TransitionEvent"in window||delete bb.transitionend.transition);
	function eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb("animationend"),gb=eb("animationiteration"),hb=eb("animationstart"),ib=eb("transitionend"),jb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kb=null;
	function lb(){!kb&&m.canUseDOM&&(kb="textContent"in document.documentElement?"textContent":"innerText");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return"value"in G._root?G._root.value:G._root[lb()]}
	var ob="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	function H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}
	p(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,
	destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);
	function rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&"CompositionEvent"in window,xb=null;m.canUseDOM&&"documentMode"in document&&(xb=document.documentMode);
	var yb=m.canUseDOM&&"TextEvent"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cb=!1;
	function Db(a,b){switch(a){case "keyup":return-1!==vb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Eb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case "compositionend":return Eb(b);case "keypress":if(32!==b.which)return null;Cb=!0;return Ab;case "textInput":return a=b.data,a===Ab&&Cb?null:a;default:return null}}
	function Hb(a,b){if(Fb)return"compositionend"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return zb?null:b.data;default:return null}}
	var Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case "compositionstart":e=Bb.compositionStart;break b;case "compositionend":e=Bb.compositionEnd;break b;case "compositionupdate":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=
	f:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&"function"===typeof Jb.restoreControlledState?void 0:A("194");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}
	function Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}
	var Xb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Xb[a.type]:"textarea"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}
	function $b(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;a="on"+a;b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function bc(a){var b=ac(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=ac(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}
	var ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc="function"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for("react.element"):60103,hc=fc?Symbol.for("react.portal"):60106,ic=fc?Symbol.for("react.fragment"):60107,jc=fc?Symbol.for("react.strict_mode"):60108,kc=fc?Symbol.for("react.profiler"):60114,lc=fc?Symbol.for("react.provider"):60109,mc=fc?Symbol.for("react.context"):60110,pc=fc?Symbol.for("react.async_mode"):60111,qc=fc?Symbol.for("react.forward_ref"):60112,rc=fc?Symbol.for("react.timeout"):
	60113,sc="function"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||"undefined"===typeof a)return null;a=sc&&a[sc]||a["@@iterator"];return"function"===typeof a?a:null}
	function uc(a){var b=a.type;if("function"===typeof b)return b.displayName||b.name;if("string"===typeof b)return b;switch(b){case pc:return"AsyncMode";case mc:return"Context.Consumer";case ic:return"ReactFragment";case hc:return"ReactPortal";case kc:return"Profiler("+a.pendingProps.id+")";case lc:return"Context.Provider";case jc:return"StrictMode";case rc:return"Timeout"}if("object"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||"",""!==a?"ForwardRef("+
	a+")":"ForwardRef"}return null}function vc(a){var b="";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e="\n    in "+(e||"Unknown")+(c?" (at "+c.fileName.replace(/^.*[\\\/]/,"")+":"+c.lineNumber+")":f?" (created by "+f+")":"");break a;default:e=""}b+=e;a=a.return}while(a);return b}
	var wc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}
	function Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||"undefined"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}
	function I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){J[a]=new I(a,0,!1,a,null)});
	[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});
	"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});["capture","download"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});
	["cols","rows","size","span"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Dc,
	Ec);J[b]=new I(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});J.tabIndex=new I("tabIndex",1,!1,"tabindex",null);
	function Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	function Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,"checked",b,!1)}
	function Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if("number"===b.type){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);b.hasOwnProperty("value")?Lc(a,b.type,c):b.hasOwnProperty("defaultValue")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Mc(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){b=""+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==c&&(a.name=c)}function Lc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}
	function Ic(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}var Nc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type="change";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}
	function Tc(a,b){if("change"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b("input")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent("onpropertychange",Wc),Qc=Pc=null)}function Wc(a){"value"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){"focus"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent("onpropertychange",Wc)):"blur"===a&&Vc()}function Yc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Sc(Qc)}
	function Zc(a,b){if("click"===a)return Sc(b)}function $c(a,b){if("input"===a||"change"===a)return Sc(b)}
	var ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Lc(e,"number",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:"altKey",
	Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}
	var fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},
	mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||
	e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if("mouseout"===a||"mouseover"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n="mouse";else if("pointerout"===a||"pointerover"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n="pointer";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+"leave";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+"enter";c.target=e;c.relatedTarget=a;Za(h,
	c,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A("188"):void 0}
	function ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
	void 0:A("189")}}c.alternate!==d?A("190"):void 0}3!==c.tag?A("188"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	function nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});
	function rd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var sd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},td={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=rd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?td[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return"keypress"===
	a.type?rd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?rd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[["abort","abort"],[fb,"animationEnd"],[gb,"animationIteration"],[hb,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
	["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
	["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ib,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}
	[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],
	["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});
	var Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case "keypress":if(0===rd(c))return null;case "keydown":case "keyup":a=ud;break;case "blur":case "focus":a=qd;break;case "click":if(2===c.button)return null;case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=fd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
	vd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case "scroll":a=bd;break;case "wheel":a=yd;break;case "copy":case "cut":case "paste":a=pd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,
	Fd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}
	function Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||"number"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}
	var Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd="_reactListenersID"+(""+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
	function Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
	var Vd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Xd=null,Yd=null,Zd=null,$d=!1;
	function ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;"selectionStart"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type="select",a.target=Xd,Ya(a),a)}
	var be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case "focus":if(Yb(e)||"true"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case "blur":Zd=Yd=Xd=null;break;case "mousedown":$d=!0;break;case "contextmenu":case "mouseup":return $d=!1,ae(c,d);case "selectionchange":if(Vd)break;
	case "keydown":case "keyup":return ae(c,d)}return null}};Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});
	var ce="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if("object"===typeof performance&&"function"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;
	if(m.canUseDOM){var ke="function"===typeof ce?ce:function(){A("276")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,"*"))}},te="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===
	me||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,"*"))};ie=function(a,b){var c=-1;null!=b&&"number"===typeof b.timeout&&(c=ge()+
	b.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},
	didTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b="";ba.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}
	function ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A("91"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
	function De(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function Ge(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function He(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Ge(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var Ie=void 0,Je=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||"innerHTML"in a)a.innerHTML=b;else{Ie=Ie||document.createElement("div");Ie.innerHTML="<svg>"+b+"</svg>";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
	var Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
	stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=["Webkit","ms","Moz","O"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});
	function Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:A("61")),null!=b.style&&"object"!==typeof b.style?A("62",c()):void 0)}
	function Qe(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var Re=v.thatReturns("");
	function Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Md("scroll",a);break;case "focus":case "blur":Md("focus",a);Md("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":$b(e,!0)&&Md(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}
	function Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?"script"===a?(a=c.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
	function Ve(a,b,c,d){var e=Qe(b,c);switch(b){case "iframe":case "object":K("load",a);var f=c;break;case "video":case "audio":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case "source":K("error",a);f=c;break;case "img":case "image":case "link":K("error",a);K("load",a);f=c;break;case "form":K("reset",a);K("submit",a);f=c;break;case "details":K("toggle",a);f=c;break;case "input":Hc(a,c);f=Gc(a,c);K("invalid",a);Se(d,"onChange");break;case "option":f=ye(a,c);break;case "select":Ae(a,c);f=p({},c,{value:void 0});
	K("invalid",a);Se(d,"onChange");break;case "textarea":Ce(a,c);f=Be(a,c);K("invalid",a);Se(d,"onChange");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?Ne(a,k,Re):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&Ke(a,k):"number"===typeof k&&Ke(a,""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,
	h):null!=k&&Fc(a,h,k,e))}switch(b){case "input":cc(a);Mc(a,c,!1);break;case "textarea":cc(a);Ee(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=v)}}
	function We(a,b,c,d,e){var f=null;switch(b){case "input":c=Gc(a,c);d=Gc(a,d);f=[];break;case "option":c=ye(a,c);d=ye(a,d);f=[];break;case "select":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case "textarea":c=Be(a,c);d=Be(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if("style"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||
	(g={}),g[b]="")}else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if("style"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]="");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),
	g=k;else"dangerouslySetInnerHTML"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,""+k)):"children"===a?h===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(a,""+k):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push("style",g);return f}
	function Xe(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?Ne(a,h,Re):"dangerouslySetInnerHTML"===g?Je(a,h):"children"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case "input":Kc(a,e);break;case "textarea":De(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?
	ze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:"",!1))}}
	function Ye(a,b,c,d,e){switch(b){case "iframe":case "object":K("load",a);break;case "video":case "audio":for(d=0;d<jb.length;d++)K(jb[d],a);break;case "source":K("error",a);break;case "img":case "image":case "link":K("error",a);K("load",a);break;case "form":K("reset",a);K("submit",a);break;case "details":K("toggle",a);break;case "input":Hc(a,c);K("invalid",a);Se(e,"onChange");break;case "select":Ae(a,c);K("invalid",a);Se(e,"onChange");break;case "textarea":Ce(a,c),K("invalid",a),Se(e,"onChange")}Pe(b,
	c,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];"children"===f?"string"===typeof g?a.textContent!==g&&(d=["children",g]):"number"===typeof g&&a.textContent!==""+g&&(d=["children",""+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case "input":cc(a);Mc(a,c,!0);break;case "textarea":cc(a);Ee(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}
	var $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Kc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;
	c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A("90");dc(d);Kc(d,e)}}}break;case "textarea":De(a,c);break;case "select":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
	function df(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}
	function M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}
	function rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}
	function uf(a,b,c){nf.current!==ha?A("168"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A("108",uc(a)||"Unknown",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}
	function xf(a,b){var c=a.stateNode;c?void 0:A("169");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}
	function yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
	function zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
	function Af(a,b,c){var d=a.type,e=a.key;a=a.props;if("function"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if("string"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch("object"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A("130",null==d?
	d:typeof d,"")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
	function Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}
	function If(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){"function"===typeof Ff&&Ff(a)}function Kf(a){"function"===typeof Gf&&Gf(a)}var Lf=!1;
	function Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
	function Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}
	function Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}
	function Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}
	function Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}
	function Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===
	g&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}
	function Vf(a,b){"function"!==typeof a?A("191",a):void 0;a.call(b)}
	function Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}
	function Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A("174"):void 0;return a}
	function ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}
	var pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==
	b&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return"function"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}
	function rg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}
	function sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;"function"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);"function"===typeof c.getDerivedStateFromProps||"function"===typeof d.getSnapshotBeforeUpdate||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||(c=d.state,"function"===typeof d.componentWillMount&&
	d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));"function"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;
	function ug(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A("110"):void 0,d=c.stateNode);d?void 0:A("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?A("148"):void 0;c._owner?void 0:A("254",a)}return a}
	function vg(a,b){"textarea"!==a.type&&A("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
	function wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
	Df(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Cf(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=
	a,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);
	if("object"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,
	t);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);"function"!==typeof u?A("150"):void 0;h=u.call(h);null==h?A("151"):void 0;for(var t=u=null,n=g,x=
	g=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===
	t?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n="object"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,
	a.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=
	a,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A("152",h.displayName||h.name||"Component")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
	function Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}
	function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}
	function Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}
	function Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}
	function Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=
	e.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}
	function Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h="function"===typeof d._calculateChangedBits?d._calculateChangedBits(k,
	h):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A("153"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
	function Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A("155"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,"function"===
	typeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==
	g.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?("function"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||("function"===typeof d.componentWillMount&&d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),"function"===typeof d.componentDidMount&&
	(b.effectTag|=4)):("function"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):("function"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?("function"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||"function"!==typeof d.UNSAFE_componentWillUpdate&&"function"!==typeof d.componentWillUpdate||("function"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),"function"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),"function"===typeof d.componentDidUpdate&&
	(b.effectTag|=4),"function"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||
	f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,
	b.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,
	null;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=
	b.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=
	R(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A("156")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};
	function Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?
	A("166"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=
	a}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if("string"!==typeof c)return null===b.stateNode?A("166"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A("167");
	default:A("156")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}
	function $g(a){"function"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}
	function ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A("161")}c.effectTag&16&&(Ke(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;
	if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===
	e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
	function ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
	(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
	function dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A("163")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}
	function gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&"function"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:""})});return c}
	function ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&"function"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}
	function jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;
	function vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}
	function wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&
	(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}
	function xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}
	function yh(a,b,c){ph?A("243"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A("271"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A("262"):
	void 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}
	function Zg(a,b){var c;a:{ph&&!th?A("263"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromCatch||"function"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}
	function Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}
	function og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A("185")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}
	function Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}
	function Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}
	function Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A("244"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;
	c=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A("253"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}
	function Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A("245"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}
	function ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A("177"):void 0;d=c.pendingCommitExpirationTime;0===d?A("261"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if("selectionStart"in
	f)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&
	++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,
	D);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A("163")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A("178"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,"");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&("function"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,
	U);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A("178"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),"selectionStart"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),
	y=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,
	top:l.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;
	ca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;
	default:A("163")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}"function"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A("178"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;"function"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}
	function fh(a){null===X?A("246"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A("246"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A("187"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}
	function ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}
	function gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A("170");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A("171")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}
	function hi(a){var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?A("188"):A("268",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}
	function ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}
	var li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};
	function ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}
	oi.prototype.render=function(a){this._defer?void 0:A("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	oi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
	null,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	pi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?A("191",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};
	qi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};
	qi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;
	function si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}
	function ti(a,b,c,d,e){ri(c)?void 0:A("200");var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if("function"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}
	function ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A("200");return ni(a,b,null,c)}
	var vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A("38"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A("40");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,
	arguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:"16.4.1",rendererPackageName:"react-dom"});
	var Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;


/***/ }),
/* 351 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ }),
/* 352 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ }),
/* 353 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(355);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(356);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ }),
/* 356 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ }),
/* 357 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.on = on;
	exports.off = off;
	function on(el, eventName, callback, opts) {
	  opts = opts || false;
	  if (el.addEventListener) {
	    el.addEventListener(eventName, callback, opts);
	  } else if (el.attachEvent) {
	    el.attachEvent("on" + eventName, function (e) {
	      callback.call(el, e || window.event);
	    });
	  }
	}
	
	function off(el, eventName, callback, opts) {
	  opts = opts || false;
	  if (el.removeEventListener) {
	    el.removeEventListener(eventName, callback, opts);
	  } else if (el.detachEvent) {
	    el.detachEvent("on" + eventName, callback);
	  }
	}

/***/ }),
/* 358 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	/**
	 * @fileOverview Find scroll parent
	 */
	
	exports.default = function (node) {
	  if (!node) {
	    return document.documentElement;
	  }
	
	  var excludeStaticParent = node.style.position === 'absolute';
	  var overflowRegex = /(scroll|auto)/;
	  var parent = node;
	
	  while (parent) {
	    if (!parent.parentNode) {
	      return node.ownerDocument || document.documentElement;
	    }
	
	    var style = window.getComputedStyle(parent);
	    var position = style.position;
	    var overflow = style.overflow;
	    var overflowX = style['overflow-x'];
	    var overflowY = style['overflow-y'];
	
	    if (position === 'static' && excludeStaticParent) {
	      parent = parent.parentNode;
	      continue;
	    }
	
	    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {
	      return parent;
	    }
	
	    parent = parent.parentNode;
	  }
	
	  return node.ownerDocument || node.documentElement || document.documentElement;
	};

/***/ }),
/* 359 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = debounce;
	function debounce(func, wait, immediate) {
	  var timeout = void 0;
	  var args = void 0;
	  var context = void 0;
	  var timestamp = void 0;
	  var result = void 0;
	
	  var later = function later() {
	    var last = +new Date() - timestamp;
	
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        if (!timeout) {
	          context = null;
	          args = null;
	        }
	      }
	    }
	  };
	
	  return function debounced() {
	    context = this;
	    args = arguments;
	    timestamp = +new Date();
	
	    var callNow = immediate && !timeout;
	    if (!timeout) {
	      timeout = setTimeout(later, wait);
	    }
	
	    if (callNow) {
	      result = func.apply(context, args);
	      context = null;
	      args = null;
	    }
	
	    return result;
	  };
	}

/***/ }),
/* 360 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = throttle;
	/*eslint-disable */
	function throttle(fn, threshhold, scope) {
	  threshhold || (threshhold = 250);
	  var last, deferTimer;
	  return function () {
	    var context = scope || this;
	
	    var now = +new Date(),
	        args = arguments;
	    if (last && now < last + threshhold) {
	      // hold on to it
	      clearTimeout(deferTimer);
	      deferTimer = setTimeout(function () {
	        last = now;
	        fn.apply(context, args);
	      }, threshhold);
	    } else {
	      last = now;
	      fn.apply(context, args);
	    }
	  };
	}

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(348);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDisplayName = function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	};
	
	exports.default = function () {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return function lazyload(WrappedComponent) {
	    return function (_Component) {
	      _inherits(LazyLoadDecorated, _Component);
	
	      function LazyLoadDecorated() {
	        _classCallCheck(this, LazyLoadDecorated);
	
	        var _this = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));
	
	        _this.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);
	        return _this;
	      }
	
	      _createClass(LazyLoadDecorated, [{
	        key: 'render',
	        value: function render() {
	          return _react2.default.createElement(
	            _index2.default,
	            options,
	            _react2.default.createElement(WrappedComponent, this.props)
	          );
	        }
	      }]);
	
	      return LazyLoadDecorated;
	    }(_react.Component);
	  };
	};

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.featureNavigator = featureNavigator;
	exports.moveNavigatorAside = moveNavigatorAside;
	
	var _reactLazyload = __webpack_require__(348);
	
	// import { navigateTo } from 'gatsby-link';
	
	function featureNavigator(e) {
	  var _this = this;
	
	  e && e.preventDefault();
	
	  if (this.props.navigatorPosition === "is-aside") {
	    if (this.props.isWideScreen) {
	      this.props.setNavigatorPosition("moving-featured");
	
	      setTimeout(function () {
	        _this.props.setNavigatorPosition("resizing-featured");
	        setTimeout(function () {
	          _this.props.setNavigatorPosition("is-featured");
	          _this.props.setNavigatorShape("open");
	
	          // uncomment following lines if you want to count featuring Navigator as a visit
	          // to index page ('/'), you have to also uncomment import { navigateTo }...
	          /*
	          setTimeout(() => {
	            navigateTo("/");
	          }, 1000);
	          */
	        });
	      }, 300);
	    } else {
	      setTimeout(function () {
	        _this.props.setNavigatorPosition("is-featured");
	      }, 0);
	    }
	  }
	}
	
	function moveNavigatorAside(e) {
	  var _this2 = this;
	
	  var target = e ? e.currentTarget : null;
	  var dataShape = target ? target.getAttribute("data-shape") : null;
	  var navigatorShape = dataShape ? dataShape : "open";
	
	  if (this.props.navigatorPosition === "is-featured") {
	    if (this.props.isWideScreen) {
	      this.props.setNavigatorPosition("moving-aside");
	
	      setTimeout(function () {
	        if (typeof window !== "undefined") {
	          if (window.location.pathname !== "/") {
	            _this2.props.setNavigatorPosition("resizing-aside");
	            _this2.props.setNavigatorShape(navigatorShape);
	            setTimeout(function () {
	              _this2.props.setNavigatorPosition("is-aside");
	              setTimeout(_reactLazyload.forceCheck, 600);
	            });
	          }
	        }
	      }, 1000);
	    } else {
	      setTimeout(function () {
	        _this2.props.setNavigatorPosition("is-aside");
	      }, 100);
	    }
	  }
	}

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactLazyload = __webpack_require__(348);
	
	var _ListHeader = __webpack_require__(364);
	
	var _ListHeader2 = _interopRequireDefault(_ListHeader);
	
	var _SpringScrollbars = __webpack_require__(394);
	
	var _SpringScrollbars2 = _interopRequireDefault(_SpringScrollbars);
	
	var _ListItem = __webpack_require__(414);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _inner;
	
	  return {
	    posts: {
	      position: "absolute",
	      left: 0,
	      top: 0,
	      bottom: 0,
	      width: "100%"
	    },
	    inner: (_inner = {
	      padding: "calc(" + theme.bars.sizes.infoBar + "px + 1.3rem) 1.3rem calc(" + theme.bars.sizes.actionsBar + "px + 1.3rem) 1.3rem"
	    }, _inner["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "calc(" + theme.bars.sizes.infoBar + "px + 2rem) 2rem calc(" + theme.bars.sizes.actionsBar + "px + 2rem) 2rem"
	    }, _inner["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "2rem  calc(1rem + 17px) calc(2rem + 17px) 2rem",
	      left: theme.info.sizes.width + "px",
	      ".moving-featured &, .is-aside &": {
	        padding: "1rem .5rem 1rem .5rem"
	      }
	    }, _inner),
	    list: {
	      listStyle: "none",
	      margin: 0,
	      paddingBottom: "20px",
	      ".is-aside.closed &, .moving-featured.closed &": {
	        display: "none"
	      }
	    }
	  };
	};
	
	var List = function (_React$Component) {
	  _inherits(List, _React$Component);
	
	  function List() {
	    _classCallCheck(this, List);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  List.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
	    if (prevProps.categoryFilter !== this.props.categoryFilter) {
	      setTimeout(_reactLazyload.forceCheck, 300);
	    }
	  };
	
	  List.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        posts = _props.posts,
	        linkOnClick = _props.linkOnClick,
	        expandOnClick = _props.expandOnClick,
	        categoryFilter = _props.categoryFilter,
	        navigatorShape = _props.navigatorShape,
	        removeFilter = _props.removeFilter;
	
	
	    return _react2.default.createElement(
	      "div",
	      { className: classes.posts },
	      _react2.default.createElement(
	        _SpringScrollbars2.default,
	        { forceCheckOnScroll: true, isNavigator: true },
	        _react2.default.createElement(
	          "div",
	          { className: classes.inner },
	          _react2.default.createElement(_ListHeader2.default, {
	            expandOnClick: expandOnClick,
	            categoryFilter: categoryFilter,
	            navigatorShape: navigatorShape,
	            removeFilter: removeFilter
	          }),
	          _react2.default.createElement(
	            "ul",
	            { className: classes.list },
	            posts && posts.map(function (post, i) {
	              return _react2.default.createElement(_ListItem2.default, {
	                key: i,
	                post: post,
	                linkOnClick: linkOnClick,
	                categoryFilter: categoryFilter
	              });
	            })
	          )
	        )
	      )
	    );
	  };
	
	  return List;
	}(_react2.default.Component);
	
	List.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  posts: _propTypes2.default.array.isRequired,
	  linkOnClick: _propTypes2.default.func.isRequired,
	  expandOnClick: _propTypes2.default.func.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  navigatorShape: _propTypes2.default.string.isRequired,
	  categoryFilter: _propTypes2.default.string.isRequired,
	  removeFilter: _propTypes2.default.func.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(List);
	module.exports = exports["default"];

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _IconButton = __webpack_require__(365);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _Close = __webpack_require__(384);
	
	var _Close2 = _interopRequireDefault(_Close);
	
	var _ExpandLess = __webpack_require__(393);
	
	var _ExpandLess2 = _interopRequireDefault(_ExpandLess);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _filter;
	
	  return {
	    closed: {
	      display: "none",
	      ".is-aside.closed &, .moving-featured.closed &": {
	        display: "flex",
	        flexDirection: "row",
	        justifyContent: "space-between",
	        alignItems: "center",
	        position: "absolute",
	        top: 0,
	        left: 0,
	        width: "100%",
	        margin: 0,
	        height: theme.navigator.sizes.closedHeight + "px",
	        padding: "0 30px 0 40px"
	      },
	      "& h3": {
	        fontSize: "1.1em",
	        color: theme.navigator.colors.postsHeader,
	        fontWeight: 600,
	        margin: "-.2em 0 0 0",
	        textTransform: "uppercase",
	        "& small": {
	          fontSize: ".6em",
	          display: "block",
	          margin: "0 0 .1em",
	          fontWeight: 300,
	          letterSpacing: ".2em"
	        }
	      }
	    },
	    expand: {
	      color: theme.navigator.colors.postsHeader
	    },
	    filter: (_filter = {
	      margin: "0 calc(-.5rem + " + theme.base.sizes.linesMargin + ") 1em calc(-.5rem + " + theme.base.sizes.linesMargin + ")",
	      position: "relative",
	      fontSize: "1.2em",
	      lineHeight: 1,
	      color: theme.base.colors.accent,
	      borderBottom: "1px solid " + theme.base.colors.lines,
	      padding: "0 1em 1em",
	      fontWeight: 300,
	      "& strong": {
	        fontWeight: 600,
	        display: "block"
	      },
	      "& small": {
	        display: "block",
	        margin: "0 0 .3em 0"
	      }
	    }, _filter["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      margin: "0 0 1em 0",
	      padding: "0 1em 1.5em",
	      ".is-aside &": {
	        padding: "0 0 1em .5em",
	        margin: "0 calc(-.5rem + " + theme.base.sizes.linesMargin + ") 1em calc(-.5rem + " + theme.base.sizes.linesMargin + ")"
	      }
	    }, _filter),
	    clear: {
	      position: "absolute",
	      top: 0,
	      right: 0
	    }
	  };
	};
	
	var ListHeader = function ListHeader(props) {
	  var classes = props.classes,
	      expandOnClick = props.expandOnClick,
	      categoryFilter = props.categoryFilter,
	      navigatorShape = props.navigatorShape,
	      removeFilter = props.removeFilter;
	
	
	  return _react2.default.createElement(
	    "header",
	    null,
	    navigatorShape === "closed" && _react2.default.createElement(
	      "div",
	      { className: classes.closed },
	      _react2.default.createElement(
	        "h3",
	        null,
	        "List of posts"
	      ),
	      _react2.default.createElement(
	        _IconButton2.default,
	        {
	          "aria-label": "Expand the list",
	          className: classes.expand,
	          onClick: expandOnClick,
	          title: "Expand the list"
	        },
	        _react2.default.createElement(_ExpandLess2.default, null)
	      )
	    ),
	    navigatorShape === "open" && categoryFilter !== "all posts" && _react2.default.createElement(
	      "div",
	      { className: classes.filter },
	      _react2.default.createElement(
	        "small",
	        null,
	        "Active category filter:"
	      ),
	      " ",
	      _react2.default.createElement(
	        "strong",
	        null,
	        categoryFilter
	      ),
	      _react2.default.createElement(
	        _IconButton2.default,
	        {
	          "aria-label": "Remove filtering",
	          className: classes.clear,
	          onClick: removeFilter,
	          title: "Clear filtering"
	        },
	        _react2.default.createElement(_Close2.default, null)
	      )
	    )
	  );
	};
	
	ListHeader.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  expandOnClick: _propTypes2.default.func.isRequired,
	  categoryFilter: _propTypes2.default.string.isRequired,
	  navigatorShape: _propTypes2.default.string.isRequired,
	  removeFilter: _propTypes2.default.func.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(ListHeader);
	module.exports = exports["default"];

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _IconButton.default;
	  }
	});
	
	var _IconButton = _interopRequireDefault(__webpack_require__(366));

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _colorManipulator = __webpack_require__(288);
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(367));
	
	var _helpers = __webpack_require__(345);
	
	// @inheritedComponent ButtonBase
	var styles = function styles(theme) {
	  return {
	    root: {
	      textAlign: 'center',
	      flex: '0 0 auto',
	      fontSize: theme.typography.pxToRem(24),
	      width: 48,
	      height: 48,
	      padding: 0,
	      borderRadius: '50%',
	      color: theme.palette.action.active,
	      transition: theme.transitions.create('background-color', {
	        duration: theme.transitions.duration.shortest
	      }),
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.action.active, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        },
	        '&$disabled': {
	          backgroundColor: 'transparent'
	        }
	      },
	      '&$disabled': {
	        color: theme.palette.action.disabled
	      }
	    },
	    colorInherit: {
	      color: 'inherit'
	    },
	    colorPrimary: {
	      color: theme.palette.primary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    colorSecondary: {
	      color: theme.palette.secondary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    disabled: {},
	    label: {
	      width: '100%',
	      display: 'flex',
	      alignItems: 'inherit',
	      justifyContent: 'inherit'
	    }
	  };
	};
	/**
	 * Refer to the [Icons](/style/icons) section of the documentation
	 * regarding the available icon options.
	 */
	
	
	exports.styles = styles;
	
	function IconButton(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      color = props.color,
	      disabled = props.disabled,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "disabled"]);
	  return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'default'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), className),
	    centerRipple: true,
	    focusRipple: true,
	    disabled: disabled
	  }, other), _react.default.createElement("span", {
	    className: classes.label
	  }, children));
	}
	
	IconButton.propTypes =  false ? {
	  /**
	   * The icon element.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   */
	  color: _propTypes.default.oneOf(['default', 'inherit', 'primary', 'secondary']),
	
	  /**
	   * If `true`, the button will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the ripple will be disabled.
	   */
	  disableRipple: _propTypes.default.bool
	} : {};
	IconButton.defaultProps = {
	  color: 'default',
	  disabled: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiIconButton'
	})(IconButton);
	
	exports.default = _default;

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _ButtonBase.default;
	  }
	});
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(368));

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(302));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _keycode = _interopRequireDefault(__webpack_require__(369));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(370));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _focusVisible = __webpack_require__(372);
	
	var _TouchRipple = _interopRequireDefault(__webpack_require__(373));
	
	var _createRippleHandler = _interopRequireDefault(__webpack_require__(383));
	
	var styles = {
	  root: {
	    display: 'inline-flex',
	    alignItems: 'center',
	    justifyContent: 'center',
	    position: 'relative',
	    // Remove grey highlight
	    WebkitTapHighlightColor: 'transparent',
	    backgroundColor: 'transparent',
	    // Reset default value
	    // We disable the focus ring for mouse, touch and keyboard users.
	    outline: 'none',
	    border: 0,
	    margin: 0,
	    // Remove the margin in Safari
	    borderRadius: 0,
	    padding: 0,
	    // Remove the padding in Firefox
	    cursor: 'pointer',
	    userSelect: 'none',
	    verticalAlign: 'middle',
	    '-moz-appearance': 'none',
	    // Reset
	    '-webkit-appearance': 'none',
	    // Reset
	    textDecoration: 'none',
	    // So we take precedent over the style of a native <a /> element.
	    color: 'inherit',
	    '&::-moz-focus-inner': {
	      borderStyle: 'none' // Remove Firefox dotted outline.
	
	    },
	    '&$disabled': {
	      pointerEvents: 'none',
	      // Disable link interactions
	      cursor: 'default'
	    }
	  },
	  disabled: {},
	  focusVisible: {}
	};
	/* istanbul ignore if */
	
	exports.styles = styles;
	
	if (false) {
	  throw new Error('Material-UI: react@16.3.0 or greater is required.');
	}
	/**
	 * `ButtonBase` contains as few styles as possible.
	 * It aims to be a simple building block for creating a button.
	 * It contains a load of style reset and some focus/ripple logic.
	 */
	
	
	var ButtonBase =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(ButtonBase, _React$Component);
	
	  function ButtonBase() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, ButtonBase);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = ButtonBase.__proto__ || Object.getPrototypeOf(ButtonBase)).call.apply(_ref, [this].concat(args))), _this.ripple = null, _this.keyDown = false, _this.button = null, _this.focusVisibleTimeout = null, _this.focusVisibleCheckTime = 50, _this.focusVisibleMaxCheckTimes = 5, _this.handleMouseDown = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'MouseDown', 'start', function () {
	      clearTimeout(_this.focusVisibleTimeout);
	
	      if (_this.state.focusVisible) {
	        _this.setState({
	          focusVisible: false
	        });
	      }
	    }), _this.handleMouseUp = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'MouseUp', 'stop'), _this.handleMouseLeave = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'MouseLeave', 'stop', function (event) {
	      if (_this.state.focusVisible) {
	        event.preventDefault();
	      }
	    }), _this.handleTouchStart = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'TouchStart', 'start'), _this.handleTouchEnd = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'TouchEnd', 'stop'), _this.handleTouchMove = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'TouchMove', 'stop'), _this.handleBlur = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)(_this), 'Blur', 'stop', function () {
	      clearTimeout(_this.focusVisibleTimeout);
	
	      if (_this.state.focusVisible) {
	        _this.setState({
	          focusVisible: false
	        });
	      }
	    }), _this.state = {}, _this.onRippleRef = function (node) {
	      _this.ripple = node;
	    }, _this.onFocusVisibleHandler = function (event) {
	      _this.keyDown = false;
	
	      _this.setState({
	        focusVisible: true
	      });
	
	      if (_this.props.onFocusVisible) {
	        _this.props.onFocusVisible(event);
	      }
	    }, _this.handleKeyDown = function (event) {
	      var _this$props = _this.props,
	          component = _this$props.component,
	          focusRipple = _this$props.focusRipple,
	          onKeyDown = _this$props.onKeyDown,
	          onClick = _this$props.onClick;
	      var key = (0, _keycode.default)(event); // Check if key is already down to avoid repeats being counted as multiple activations
	
	      if (focusRipple && !_this.keyDown && _this.state.focusVisible && _this.ripple && key === 'space') {
	        _this.keyDown = true;
	        event.persist();
	
	        _this.ripple.stop(event, function () {
	          _this.ripple.start(event);
	        });
	      }
	
	      if (onKeyDown) {
	        onKeyDown(event);
	      } // Keyboard accessibility for non interactive elements
	
	
	      if (event.target === event.currentTarget && component && component !== 'button' && (key === 'space' || key === 'enter') && !(_this.button.tagName === 'A' && _this.button.href)) {
	        event.preventDefault();
	
	        if (onClick) {
	          onClick(event);
	        }
	      }
	    }, _this.handleKeyUp = function (event) {
	      if (_this.props.focusRipple && (0, _keycode.default)(event) === 'space' && _this.ripple && _this.state.focusVisible) {
	        _this.keyDown = false;
	        event.persist();
	
	        _this.ripple.stop(event, function () {
	          _this.ripple.pulsate(event);
	        });
	      }
	
	      if (_this.props.onKeyUp) {
	        _this.props.onKeyUp(event);
	      }
	    }, _this.handleFocus = function (event) {
	      if (_this.props.disabled) {
	        return;
	      } // Fix for https://github.com/facebook/react/issues/7769
	
	
	      if (!_this.button) {
	        _this.button = event.currentTarget;
	      }
	
	      event.persist();
	      (0, _focusVisible.detectFocusVisible)((0, _assertThisInitialized2.default)(_this), _this.button, function () {
	        _this.onFocusVisibleHandler(event);
	      });
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(ButtonBase, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      this.button = _reactDom.default.findDOMNode(this);
	      (0, _focusVisible.listenForFocusKeys)((0, _ownerWindow.default)(this.button));
	
	      if (this.props.action) {
	        this.props.action({
	          focusVisible: function focusVisible() {
	            _this2.setState({
	              focusVisible: true
	            });
	
	            _this2.button.focus();
	          }
	        });
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.props.focusRipple && !this.props.disableRipple && !prevState.focusVisible && this.state.focusVisible) {
	        this.ripple.pulsate();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.button = null;
	      clearTimeout(this.focusVisibleTimeout);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _props = this.props,
	          action = _props.action,
	          buttonRef = _props.buttonRef,
	          centerRipple = _props.centerRipple,
	          children = _props.children,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          component = _props.component,
	          disabled = _props.disabled,
	          disableRipple = _props.disableRipple,
	          disableTouchRipple = _props.disableTouchRipple,
	          focusRipple = _props.focusRipple,
	          focusVisibleClassName = _props.focusVisibleClassName,
	          onBlur = _props.onBlur,
	          onFocus = _props.onFocus,
	          onFocusVisible = _props.onFocusVisible,
	          onKeyDown = _props.onKeyDown,
	          onKeyUp = _props.onKeyUp,
	          onMouseDown = _props.onMouseDown,
	          onMouseLeave = _props.onMouseLeave,
	          onMouseUp = _props.onMouseUp,
	          onTouchEnd = _props.onTouchEnd,
	          onTouchMove = _props.onTouchMove,
	          onTouchStart = _props.onTouchStart,
	          tabIndex = _props.tabIndex,
	          TouchRippleProps = _props.TouchRippleProps,
	          type = _props.type,
	          other = (0, _objectWithoutProperties2.default)(_props, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "type"]);
	      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.focusVisible, this.state.focusVisible), (0, _defineProperty2.default)(_classNames, focusVisibleClassName, this.state.focusVisible), _classNames), classNameProp);
	      var buttonProps = {};
	      var ComponentProp = component;
	
	      if (ComponentProp === 'button' && other.href) {
	        ComponentProp = 'a';
	      }
	
	      if (ComponentProp === 'button') {
	        buttonProps.type = type || 'button';
	        buttonProps.disabled = disabled;
	      } else {
	        buttonProps.role = 'button';
	      }
	
	      return _react.default.createElement(ComponentProp, (0, _extends2.default)({
	        onBlur: this.handleBlur,
	        onFocus: this.handleFocus,
	        onKeyDown: this.handleKeyDown,
	        onKeyUp: this.handleKeyUp,
	        onMouseDown: this.handleMouseDown,
	        onMouseLeave: this.handleMouseLeave,
	        onMouseUp: this.handleMouseUp,
	        onTouchEnd: this.handleTouchEnd,
	        onTouchMove: this.handleTouchMove,
	        onTouchStart: this.handleTouchStart,
	        tabIndex: disabled ? '-1' : tabIndex,
	        className: className,
	        ref: buttonRef
	      }, buttonProps, other), children, !disableRipple && !disabled ? _react.default.createElement(_TouchRipple.default, (0, _extends2.default)({
	        innerRef: this.onRippleRef,
	        center: centerRipple
	      }, TouchRippleProps)) : null);
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(nextProps, prevState) {
	      if (typeof prevState.focusVisible === 'undefined') {
	        return {
	          focusVisible: false,
	          lastDisabled: nextProps.disabled
	        };
	      } // The blur won't fire when the disabled state is set on a focused input.
	      // We need to book keep the focused state manually.
	
	
	      if (!prevState.prevState && nextProps.disabled && prevState.focusVisible) {
	        return {
	          focusVisible: false,
	          lastDisabled: nextProps.disabled
	        };
	      }
	
	      return {
	        lastDisabled: nextProps.disabled
	      };
	    }
	  }]);
	  return ButtonBase;
	}(_react.default.Component);
	
	ButtonBase.propTypes =  false ? {
	  /**
	   * Callback fired when the component mounts.
	   * This is useful when you want to trigger an action programmatically.
	   * It currently only supports `focusVisible()` action.
	   *
	   * @param {object} actions This object contains all possible actions
	   * that can be triggered programmatically.
	   */
	  action: _propTypes.default.func,
	
	  /**
	   * Use that property to pass a ref callback to the native button component.
	   */
	  buttonRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the ripples will be centered.
	   * They won't start at the cursor interaction position.
	   */
	  centerRipple: _propTypes.default.bool,
	
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the base button will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the ripple effect will be disabled.
	   */
	  disableRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the touch ripple effect will be disabled.
	   */
	  disableTouchRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the base button will have a keyboard focus ripple.
	   * `disableRipple` must also be `false`.
	   */
	  focusRipple: _propTypes.default.bool,
	
	  /**
	   * This property can help a person know which element has the keyboard focus.
	   * The class name will be applied when the element gain the focus throught a keyboard interaction.
	   * It's a polyfill for the [CSS :focus-visible feature](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
	   * The rational for using this feature [is explain here](https://github.com/WICG/focus-visible/blob/master/explainer.md).
	   */
	  focusVisibleClassName: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onClick: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is focused with a keyboard.
	   * We trigger a `onFocus` callback too.
	   */
	  onFocusVisible: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyUp: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseLeave: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onMouseUp: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchEnd: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchMove: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onTouchStart: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  role: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
	
	  /**
	   * Properties applied to the `TouchRipple` element.
	   */
	  TouchRippleProps: _propTypes.default.object,
	
	  /**
	   * Used to control the button's purpose.
	   * This property passes the value to the `type` attribute of the native button component.
	   * Valid property values include `button`, `submit`, and `reset`.
	   */
	  type: _propTypes.default.string
	} : {};
	ButtonBase.defaultProps = {
	  centerRipple: false,
	  component: 'button',
	  disableRipple: false,
	  disableTouchRipple: false,
	  focusRipple: false,
	  tabIndex: '0',
	  type: 'button'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiButtonBase'
	})(ButtonBase);
	
	exports.default = _default;

/***/ }),
/* 369 */
/***/ (function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes
	
	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */
	
	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }
	
	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]
	
	  // Everything else (cast to string)
	  var search = String(searchInput)
	
	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey
	
	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey
	
	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)
	
	  return undefined
	}
	
	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */
	
	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}
	
	// Helper aliases
	
	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}
	
	
	/*!
	 * Programatically add the following
	 */
	
	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32
	
	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i
	
	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111
	
	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96
	
	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */
	
	var names = exports.names = exports.title = {} // title for backward compat
	
	// Create reverse mapping
	for (i in codes) names[codes[i]] = i
	
	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	function ownerWindow(node) {
	  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
	  var doc = (0, _ownerDocument.default)(node);
	  return doc.defaultView || doc.parentView || fallback;
	}
	
	var _default = ownerWindow;
	exports.default = _default;

/***/ }),
/* 371 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}
	
	var _default = ownerDocument;
	exports.default = _default;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.detectFocusVisible = detectFocusVisible;
	exports.listenForFocusKeys = listenForFocusKeys;
	
	var _keycode = _interopRequireDefault(__webpack_require__(369));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	//  weak
	var internal = {
	  focusKeyPressed: false,
	  keyUpEventTimeout: -1
	};
	
	function detectFocusVisible(instance, element, callback) {
	  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
	   false ? (0, _warning.default)(instance.focusVisibleCheckTime, 'Material-UI: missing instance.focusVisibleCheckTime.') : void 0;
	   false ? (0, _warning.default)(instance.focusVisibleMaxCheckTimes, 'Material-UI: missing instance.focusVisibleMaxCheckTimes.') : void 0;
	  instance.focusVisibleTimeout = setTimeout(function () {
	    var doc = (0, _ownerDocument.default)(element);
	
	    if (internal.focusKeyPressed && (doc.activeElement === element || element.contains(doc.activeElement))) {
	      callback();
	    } else if (attempt < instance.focusVisibleMaxCheckTimes) {
	      detectFocusVisible(instance, element, callback, attempt + 1);
	    }
	  }, instance.focusVisibleCheckTime);
	}
	
	var FOCUS_KEYS = ['tab', 'enter', 'space', 'esc', 'up', 'down', 'left', 'right'];
	
	function isFocusKey(event) {
	  return FOCUS_KEYS.indexOf((0, _keycode.default)(event)) > -1;
	}
	
	var handleKeyUpEvent = function handleKeyUpEvent(event) {
	  if (isFocusKey(event)) {
	    internal.focusKeyPressed = true; // Let's consider that the user is using a keyboard during a window frame of 1s.
	
	    clearTimeout(internal.keyUpEventTimeout);
	    internal.keyUpEventTimeout = setTimeout(function () {
	      internal.focusKeyPressed = false;
	    }, 1e3);
	  }
	};
	
	function listenForFocusKeys(win) {
	  // The event listener will only be added once per window.
	  // Duplicate event listeners will be ignored by addEventListener.
	  // Also, this logic is client side only, we don't need a teardown.
	  win.addEventListener('keyup', handleKeyUpEvent);
	}

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = exports.DELAY_RIPPLE = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(374));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(302));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _TransitionGroup = _interopRequireDefault(__webpack_require__(378));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Ripple = _interopRequireDefault(__webpack_require__(380));
	
	var DURATION = 550;
	var DELAY_RIPPLE = 80;
	exports.DELAY_RIPPLE = DELAY_RIPPLE;
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      display: 'block',
	      position: 'absolute',
	      overflow: 'hidden',
	      borderRadius: 'inherit',
	      width: '100%',
	      height: '100%',
	      left: 0,
	      top: 0,
	      pointerEvents: 'none',
	      zIndex: 0
	    },
	    ripple: {
	      width: 50,
	      height: 50,
	      left: 0,
	      top: 0,
	      opacity: 0,
	      position: 'absolute'
	    },
	    rippleVisible: {
	      opacity: 0.3,
	      transform: 'scale(1)',
	      animation: "mui-ripple-enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
	    },
	    ripplePulsate: {
	      animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
	    },
	    child: {
	      opacity: 1,
	      display: 'block',
	      width: '100%',
	      height: '100%',
	      borderRadius: '50%',
	      backgroundColor: 'currentColor'
	    },
	    childLeaving: {
	      opacity: 0,
	      animation: "mui-ripple-exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
	    },
	    childPulsate: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      animation: "mui-ripple-pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
	    },
	    '@keyframes mui-ripple-enter': {
	      '0%': {
	        transform: 'scale(0)',
	        opacity: 0.1
	      },
	      '100%': {
	        transform: 'scale(1)',
	        opacity: 0.3
	      }
	    },
	    '@keyframes mui-ripple-exit': {
	      '0%': {
	        opacity: 1
	      },
	      '100%': {
	        opacity: 0
	      }
	    },
	    '@keyframes mui-ripple-pulsate': {
	      '0%': {
	        transform: 'scale(1)'
	      },
	      '50%': {
	        transform: 'scale(0.92)'
	      },
	      '100%': {
	        transform: 'scale(1)'
	      }
	    }
	  };
	};
	
	exports.styles = styles;
	
	var TouchRipple =
	/*#__PURE__*/
	function (_React$PureComponent) {
	  (0, _inherits2.default)(TouchRipple, _React$PureComponent);
	
	  function TouchRipple() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, TouchRipple);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = TouchRipple.__proto__ || Object.getPrototypeOf(TouchRipple)).call.apply(_ref, [this].concat(args))), _this.ignoringMouseDown = false, _this.startTimer = null, _this.startTimerCommit = null, _this.state = {
	      // eslint-disable-next-line react/no-unused-state
	      nextKey: 0,
	      ripples: []
	    }, _this.pulsate = function () {
	      _this.start({}, {
	        pulsate: true
	      });
	    }, _this.start = function () {
	      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var cb = arguments.length > 2 ? arguments[2] : undefined;
	      var _options$pulsate = options.pulsate,
	          pulsate = _options$pulsate === void 0 ? false : _options$pulsate,
	          _options$center = options.center,
	          center = _options$center === void 0 ? _this.props.center || options.pulsate : _options$center,
	          _options$fakeElement = options.fakeElement,
	          fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
	
	      if (event.type === 'mousedown' && _this.ignoringMouseDown) {
	        _this.ignoringMouseDown = false;
	        return;
	      }
	
	      if (event.type === 'touchstart') {
	        _this.ignoringMouseDown = true;
	      }
	
	      var element = fakeElement ? null : _reactDom.default.findDOMNode((0, _assertThisInitialized2.default)(_this));
	      var rect = element ? element.getBoundingClientRect() : {
	        width: 0,
	        height: 0,
	        left: 0,
	        top: 0
	      }; // Get the size of the ripple
	
	      var rippleX;
	      var rippleY;
	      var rippleSize;
	
	      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
	        rippleX = Math.round(rect.width / 2);
	        rippleY = Math.round(rect.height / 2);
	      } else {
	        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
	        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
	        rippleX = Math.round(clientX - rect.left);
	        rippleY = Math.round(clientY - rect.top);
	      }
	
	      if (center) {
	        rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.
	
	        if (rippleSize % 2 === 0) {
	          rippleSize += 1;
	        }
	      } else {
	        var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
	        var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
	        rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
	      } // Touche devices
	
	
	      if (event.touches) {
	        // Prepare the ripple effect.
	        _this.startTimerCommit = function () {
	          _this.startCommit({
	            pulsate: pulsate,
	            rippleX: rippleX,
	            rippleY: rippleY,
	            rippleSize: rippleSize,
	            cb: cb
	          });
	        }; // Deplay the execution of the ripple effect.
	
	
	        _this.startTimer = setTimeout(function () {
	          if (_this.startTimerCommit) {
	            _this.startTimerCommit();
	
	            _this.startTimerCommit = null;
	          }
	        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
	      } else {
	        _this.startCommit({
	          pulsate: pulsate,
	          rippleX: rippleX,
	          rippleY: rippleY,
	          rippleSize: rippleSize,
	          cb: cb
	        });
	      }
	    }, _this.startCommit = function (params) {
	      var pulsate = params.pulsate,
	          rippleX = params.rippleX,
	          rippleY = params.rippleY,
	          rippleSize = params.rippleSize,
	          cb = params.cb;
	
	      _this.setState(function (state) {
	        return {
	          nextKey: state.nextKey + 1,
	          ripples: (0, _toConsumableArray2.default)(state.ripples).concat([_react.default.createElement(_Ripple.default, {
	            key: state.nextKey,
	            classes: _this.props.classes,
	            timeout: {
	              exit: DURATION,
	              enter: DURATION
	            },
	            pulsate: pulsate,
	            rippleX: rippleX,
	            rippleY: rippleY,
	            rippleSize: rippleSize
	          })])
	        };
	      }, cb);
	    }, _this.stop = function (event, cb) {
	      clearTimeout(_this.startTimer);
	      var ripples = _this.state.ripples; // The touch interaction occures to quickly.
	      // We still want to show ripple effect.
	
	      if (event.type === 'touchend' && _this.startTimerCommit) {
	        event.persist();
	
	        _this.startTimerCommit();
	
	        _this.startTimerCommit = null;
	        _this.startTimer = setTimeout(function () {
	          _this.stop(event, cb);
	        }, 0);
	        return;
	      }
	
	      _this.startTimerCommit = null;
	
	      if (ripples && ripples.length) {
	        _this.setState({
	          ripples: ripples.slice(1)
	        }, cb);
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(TouchRipple, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.startTimer);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          center = _props.center,
	          classes = _props.classes,
	          className = _props.className,
	          other = (0, _objectWithoutProperties2.default)(_props, ["center", "classes", "className"]);
	      return _react.default.createElement(_TransitionGroup.default, (0, _extends2.default)({
	        component: "span",
	        enter: true,
	        exit: true,
	        className: (0, _classnames.default)(classes.root, className)
	      }, other), this.state.ripples);
	    }
	  }]);
	  return TouchRipple;
	}(_react.default.PureComponent);
	
	TouchRipple.propTypes =  false ? {
	  /**
	   * If `true`, the ripple starts at the center of the component
	   * rather than at the point of interaction.
	   */
	  center: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string
	} : {};
	TouchRipple.defaultProps = {
	  center: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  flip: false,
	  name: 'MuiTouchRipple'
	})(TouchRipple);
	
	exports.default = _default;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayWithoutHoles = __webpack_require__(375);
	
	var iterableToArray = __webpack_require__(376);
	
	var nonIterableSpread = __webpack_require__(377);
	
	function _toConsumableArray(arr) {
	  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
	}
	
	module.exports = _toConsumableArray;

/***/ }),
/* 375 */
/***/ (function(module, exports) {

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  }
	}
	
	module.exports = _arrayWithoutHoles;

/***/ }),
/* 376 */
/***/ (function(module, exports) {

	function _iterableToArray(iter) {
	  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
	}
	
	module.exports = _iterableToArray;

/***/ }),
/* 377 */
/***/ (function(module, exports) {

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance");
	}
	
	module.exports = _nonIterableSpread;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ChildMapping = __webpack_require__(379);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var values = Object.values || function (obj) {
	  return Object.keys(obj).map(function (k) {
	    return obj[k];
	  });
	};
	
	var propTypes = {
	  /**
	   * `<TransitionGroup>` renders a `<div>` by default. You can change this
	   * behavior by providing a `component` prop.
	   */
	  component: _propTypes2.default.any,
	  /**
	   * A set of `<Transition>` components, that are toggled `in` and out as they
	   * leave. the `<TransitionGroup>` will inject specific transition props, so
	   * remember to spread them through if you are wrapping the `<Transition>` as
	   * with our `<Fade>` example.
	   */
	  children: _propTypes2.default.node,
	
	  /**
	   * A convenience prop that enables or disabled appear animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  appear: _propTypes2.default.bool,
	  /**
	   * A convenience prop that enables or disabled enter animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  enter: _propTypes2.default.bool,
	  /**
	    * A convenience prop that enables or disabled exit animations
	    * for all children. Note that specifying this will override any defaults set
	    * on individual children Transitions.
	    */
	  exit: _propTypes2.default.bool,
	
	  /**
	   * You may need to apply reactive updates to a child as it is exiting.
	   * This is generally done by using `cloneElement` however in the case of an exiting
	   * child the element has already been removed and not accessible to the consumer.
	   *
	   * If you do need to update a child as it leaves you can provide a `childFactory`
	   * to wrap every child, even the ones that are leaving.
	   *
	   * @type Function(child: ReactElement) -> ReactElement
	   */
	  childFactory: _propTypes2.default.func
	};
	
	var defaultProps = {
	  component: 'div',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	};
	
	/**
	 * The `<TransitionGroup>` component manages a set of `<Transition>` components
	 * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a
	 * state machine for managing the mounting and unmounting of components over
	 * time.
	 *
	 * Consider the example below using the `Fade` CSS transition from before.
	 * As items are removed or added to the TodoList the `in` prop is toggled
	 * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`
	 * component in a `<TransitionGroup>`, not just css.
	 *
	 * ```jsx
	 * import TransitionGroup from 'react-transition-group/TransitionGroup';
	 *
	 * class TodoList extends React.Component {
	 *   constructor(props) {
	 *     super(props)
	 *     this.state = {items: ['hello', 'world', 'click', 'me']}
	 *   }
	 *   handleAdd() {
	 *     const newItems = this.state.items.concat([
	 *       prompt('Enter some text')
	 *     ]);
	 *     this.setState({ items: newItems });
	 *   }
	 *   handleRemove(i) {
	 *     let newItems = this.state.items.slice();
	 *     newItems.splice(i, 1);
	 *     this.setState({items: newItems});
	 *   }
	 *   render() {
	 *     return (
	 *       <div>
	 *         <button onClick={() => this.handleAdd()}>Add Item</button>
	 *         <TransitionGroup>
	 *           {this.state.items.map((item, i) => (
	 *             <FadeTransition key={item}>
	 *               <div>
	 *                 {item}{' '}
	 *                 <button onClick={() => this.handleRemove(i)}>
	 *                   remove
	 *                 </button>
	 *               </div>
	 *             </FadeTransition>
	 *           ))}
	 *         </TransitionGroup>
	 *       </div>
	 *     );
	 *   }
	 * }
	 * ```
	 *
	 * Note that `<TransitionGroup>`  does not define any animation behavior!
	 * Exactly _how_ a list item animates is up to the individual `<Transition>`
	 * components. This means you can mix and match animations across different
	 * list items.
	 */
	
	var TransitionGroup = function (_React$Component) {
	  _inherits(TransitionGroup, _React$Component);
	
	  function TransitionGroup(props, context) {
	    _classCallCheck(this, TransitionGroup);
	
	    // Initial children should all be entering, dependent on appear
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));
	
	    _this.handleExited = function (key, node, originalHandler) {
	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);
	
	      if (key in currentChildMapping) return;
	
	      if (originalHandler) originalHandler(node);
	
	      _this.setState(function (state) {
	        var children = _extends({}, state.children);
	
	        delete children[key];
	        return { children: children };
	      });
	    };
	
	    _this.state = {
	      children: (0, _ChildMapping.getChildMapping)(props.children, function (child) {
	        var onExited = function onExited(node) {
	          _this.handleExited(child.key, node, child.props.onExited);
	        };
	
	        return (0, _react.cloneElement)(child, {
	          onExited: onExited,
	          in: true,
	          appear: _this.getProp(child, 'appear'),
	          enter: _this.getProp(child, 'enter'),
	          exit: _this.getProp(child, 'exit')
	        });
	      })
	    };
	    return _this;
	  }
	
	  TransitionGroup.prototype.getChildContext = function getChildContext() {
	    return {
	      transitionGroup: { isMounting: !this.appeared }
	    };
	  };
	  // use child config unless explictly set by the Group
	
	
	  TransitionGroup.prototype.getProp = function getProp(child, prop) {
	    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;
	
	    return props[prop] != null ? props[prop] : child.props[prop];
	  };
	
	  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    this.appeared = true;
	  };
	
	  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this2 = this;
	
	    var prevChildMapping = this.state.children;
	    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
	
	    var children = (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);
	
	    Object.keys(children).forEach(function (key) {
	      var child = children[key];
	
	      if (!(0, _react.isValidElement)(child)) return;
	
	      var onExited = function onExited(node) {
	        _this2.handleExited(child.key, node, child.props.onExited);
	      };
	
	      var hasPrev = key in prevChildMapping;
	      var hasNext = key in nextChildMapping;
	
	      var prevChild = prevChildMapping[key];
	      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;
	
	      // item is new (entering)
	      if (hasNext && (!hasPrev || isLeaving)) {
	        // console.log('entering', key)
	        children[key] = (0, _react.cloneElement)(child, {
	          onExited: onExited,
	          in: true,
	          exit: _this2.getProp(child, 'exit', nextProps),
	          enter: _this2.getProp(child, 'enter', nextProps)
	        });
	      }
	      // item is old (exiting)
	      else if (!hasNext && hasPrev && !isLeaving) {
	          // console.log('leaving', key)
	          children[key] = (0, _react.cloneElement)(child, { in: false });
	        }
	        // item hasn't changed transition states
	        // copy over the last transition props;
	        else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
	            // console.log('unchanged', key)
	            children[key] = (0, _react.cloneElement)(child, {
	              onExited: onExited,
	              in: prevChild.props.in,
	              exit: _this2.getProp(child, 'exit', nextProps),
	              enter: _this2.getProp(child, 'enter', nextProps)
	            });
	          }
	    });
	
	    this.setState({ children: children });
	  };
	
	  TransitionGroup.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.component,
	        childFactory = _props.childFactory,
	        props = _objectWithoutProperties(_props, ['component', 'childFactory']);
	
	    var children = this.state.children;
	
	
	    delete props.appear;
	    delete props.enter;
	    delete props.exit;
	
	    return _react2.default.createElement(
	      Component,
	      props,
	      values(children).map(childFactory)
	    );
	  };
	
	  return TransitionGroup;
	}(_react2.default.Component);
	
	TransitionGroup.childContextTypes = {
	  transitionGroup: _propTypes2.default.object.isRequired
	};
	
	
	TransitionGroup.propTypes =  false ? propTypes : {};
	TransitionGroup.defaultProps = defaultProps;
	
	exports.default = TransitionGroup;
	module.exports = exports['default'];

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.getChildMapping = getChildMapping;
	exports.mergeChildMappings = mergeChildMappings;
	
	var _react = __webpack_require__(1);
	
	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children, mapFn) {
	  var mapper = function mapper(child) {
	    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
	  };
	
	  var result = Object.create(null);
	  if (children) _react.Children.map(children, function (c) {
	    return c;
	  }).forEach(function (child) {
	    // run the map function here instead so that the key is the computed one
	    result[child.key] = mapper(child);
	  });
	  return result;
	}
	
	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */
	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};
	
	  function getValueForKey(key) {
	    return key in next ? next[key] : prev[key];
	  }
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextKeysPending = Object.create(null);
	
	  var pendingKeys = [];
	  for (var prevKey in prev) {
	    if (prevKey in next) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }
	
	  var i = void 0;
	  var childMapping = {};
	  for (var nextKey in next) {
	    if (nextKeysPending[nextKey]) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	    childMapping[nextKey] = getValueForKey(nextKey);
	  }
	
	  // Finally, add the keys which didn't appear before any key in `next`
	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }
	
	  return childMapping;
	}

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _Transition = _interopRequireDefault(__webpack_require__(381));
	
	/**
	 * @ignore - internal component.
	 */
	var Ripple =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Ripple, _React$Component);
	
	  function Ripple() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Ripple);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Ripple.__proto__ || Object.getPrototypeOf(Ripple)).call.apply(_ref, [this].concat(args))), _this.state = {
	      visible: false,
	      leaving: false
	    }, _this.handleEnter = function () {
	      _this.setState({
	        visible: true
	      });
	    }, _this.handleExit = function () {
	      _this.setState({
	        leaving: true
	      });
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Ripple, [{
	    key: "render",
	    value: function render() {
	      var _classNames, _classNames2;
	
	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          pulsate = _props.pulsate,
	          rippleX = _props.rippleX,
	          rippleY = _props.rippleY,
	          rippleSize = _props.rippleSize,
	          other = (0, _objectWithoutProperties2.default)(_props, ["classes", "className", "pulsate", "rippleX", "rippleY", "rippleSize"]);
	      var _state = this.state,
	          visible = _state.visible,
	          leaving = _state.leaving;
	      var rippleClassName = (0, _classnames.default)(classes.ripple, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.rippleVisible, visible), (0, _defineProperty2.default)(_classNames, classes.ripplePulsate, pulsate), _classNames), classNameProp);
	      var rippleStyles = {
	        width: rippleSize,
	        height: rippleSize,
	        top: -(rippleSize / 2) + rippleY,
	        left: -(rippleSize / 2) + rippleX
	      };
	      var childClassName = (0, _classnames.default)(classes.child, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.childLeaving, leaving), (0, _defineProperty2.default)(_classNames2, classes.childPulsate, pulsate), _classNames2));
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        onEnter: this.handleEnter,
	        onExit: this.handleExit
	      }, other), _react.default.createElement("span", {
	        className: rippleClassName,
	        style: rippleStyles
	      }, _react.default.createElement("span", {
	        className: childClassName
	      })));
	    }
	  }]);
	  return Ripple;
	}(_react.default.Component);
	
	Ripple.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
	   */
	  pulsate: _propTypes.default.bool,
	
	  /**
	   * Diameter of the ripple.
	   */
	  rippleSize: _propTypes.default.number,
	
	  /**
	   * Horizontal position of the ripple center.
	   */
	  rippleX: _propTypes.default.number,
	
	  /**
	   * Vertical position of the ripple center.
	   */
	  rippleY: _propTypes.default.number
	} : {};
	Ripple.defaultProps = {
	  pulsate: false
	};
	var _default = Ripple;
	exports.default = _default;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;
	
	var _propTypes = __webpack_require__(17);
	
	var PropTypes = _interopRequireWildcard(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(349);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _PropTypes = __webpack_require__(382);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UNMOUNTED = exports.UNMOUNTED = 'unmounted';
	var EXITED = exports.EXITED = 'exited';
	var ENTERING = exports.ENTERING = 'entering';
	var ENTERED = exports.ENTERED = 'entered';
	var EXITING = exports.EXITING = 'exiting';
	
	/**
	 * The Transition component lets you describe a transition from one component
	 * state to another _over time_ with a simple declarative API. Most commonly
	 * it's used to animate the mounting and unmounting of a component, but can also
	 * be used to describe in-place transition states as well.
	 *
	 * By default the `Transition` component does not alter the behavior of the
	 * component it renders, it only tracks "enter" and "exit" states for the components.
	 * It's up to you to give meaning and effect to those states. For example we can
	 * add styles to a component when it enters or exits:
	 *
	 * ```jsx
	 * import Transition from 'react-transition-group/Transition';
	 *
	 * const duration = 300;
	 *
	 * const defaultStyle = {
	 *   transition: `opacity ${duration}ms ease-in-out`,
	 *   opacity: 0,
	 * }
	 *
	 * const transitionStyles = {
	 *   entering: { opacity: 0 },
	 *   entered:  { opacity: 1 },
	 * };
	 *
	 * const Fade = ({ in: inProp }) => (
	 *   <Transition in={inProp} timeout={duration}>
	 *     {(state) => (
	 *       <div style={{
	 *         ...defaultStyle,
	 *         ...transitionStyles[state]
	 *       }}>
	 *         I'm A fade Transition!
	 *       </div>
	 *     )}
	 *   </Transition>
	 * );
	 * ```
	 *
	 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
	 * What it does do is track transition states over time so you can update the
	 * component (such as by adding styles or classes) when it changes states.
	 *
	 * There are 4 main states a Transition can be in:
	 *  - `ENTERING`
	 *  - `ENTERED`
	 *  - `EXITING`
	 *  - `EXITED`
	 *
	 * Transition state is toggled via the `in` prop. When `true` the component begins the
	 * "Enter" stage. During this stage, the component will shift from its current transition state,
	 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
	 * it's complete. Let's take the following example:
	 *
	 * ```jsx
	 * state= { in: false };
	 *
	 * toggleEnterState = () => {
	 *   this.setState({ in: true });
	 * }
	 *
	 * render() {
	 *   return (
	 *     <div>
	 *       <Transition in={this.state.in} timeout={500} />
	 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
	 *     </div>
	 *   );
	 * }
	 * ```
	 *
	 * When the button is clicked the component will shift to the `'entering'` state and
	 * stay there for 500ms (the value of `timeout`) when finally switches to `'entered'`.
	 *
	 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
	 */
	
	var Transition = function (_React$Component) {
	  _inherits(Transition, _React$Component);
	
	  function Transition(props, context) {
	    _classCallCheck(this, Transition);
	
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));
	
	    var parentGroup = context.transitionGroup;
	    // In the context of a TransitionGroup all enters are really appears
	    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
	
	    var initialStatus = void 0;
	    _this.nextStatus = null;
	
	    if (props.in) {
	      if (appear) {
	        initialStatus = EXITED;
	        _this.nextStatus = ENTERING;
	      } else {
	        initialStatus = ENTERED;
	      }
	    } else {
	      if (props.unmountOnExit || props.mountOnEnter) {
	        initialStatus = UNMOUNTED;
	      } else {
	        initialStatus = EXITED;
	      }
	    }
	
	    _this.state = { status: initialStatus };
	
	    _this.nextCallback = null;
	    return _this;
	  }
	
	  Transition.prototype.getChildContext = function getChildContext() {
	    return { transitionGroup: null }; // allows for nested Transitions
	  };
	
	  Transition.prototype.componentDidMount = function componentDidMount() {
	    this.updateStatus(true);
	  };
	
	  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _ref = this.pendingState || this.state,
	        status = _ref.status;
	
	    if (nextProps.in) {
	      if (status === UNMOUNTED) {
	        this.setState({ status: EXITED });
	      }
	      if (status !== ENTERING && status !== ENTERED) {
	        this.nextStatus = ENTERING;
	      }
	    } else {
	      if (status === ENTERING || status === ENTERED) {
	        this.nextStatus = EXITING;
	      }
	    }
	  };
	
	  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.updateStatus();
	  };
	
	  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.cancelNextCallback();
	  };
	
	  Transition.prototype.getTimeouts = function getTimeouts() {
	    var timeout = this.props.timeout;
	
	    var exit = void 0,
	        enter = void 0,
	        appear = void 0;
	
	    exit = enter = appear = timeout;
	
	    if (timeout != null && typeof timeout !== 'number') {
	      exit = timeout.exit;
	      enter = timeout.enter;
	      appear = timeout.appear;
	    }
	    return { exit: exit, enter: enter, appear: appear };
	  };
	
	  Transition.prototype.updateStatus = function updateStatus() {
	    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	    var nextStatus = this.nextStatus;
	
	    if (nextStatus !== null) {
	      this.nextStatus = null;
	      // nextStatus will always be ENTERING or EXITING.
	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);
	
	      if (nextStatus === ENTERING) {
	        this.performEnter(node, mounting);
	      } else {
	        this.performExit(node);
	      }
	    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
	      this.setState({ status: UNMOUNTED });
	    }
	  };
	
	  Transition.prototype.performEnter = function performEnter(node, mounting) {
	    var _this2 = this;
	
	    var enter = this.props.enter;
	
	    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
	
	    var timeouts = this.getTimeouts();
	
	    // no enter animation skip right to ENTERED
	    // if we are mounting and running this it means appear _must_ be set
	    if (!mounting && !enter) {
	      this.safeSetState({ status: ENTERED }, function () {
	        _this2.props.onEntered(node);
	      });
	      return;
	    }
	
	    this.props.onEnter(node, appearing);
	
	    this.safeSetState({ status: ENTERING }, function () {
	      _this2.props.onEntering(node, appearing);
	
	      // FIXME: appear timeout?
	      _this2.onTransitionEnd(node, timeouts.enter, function () {
	        _this2.safeSetState({ status: ENTERED }, function () {
	          _this2.props.onEntered(node, appearing);
	        });
	      });
	    });
	  };
	
	  Transition.prototype.performExit = function performExit(node) {
	    var _this3 = this;
	
	    var exit = this.props.exit;
	
	    var timeouts = this.getTimeouts();
	
	    // no exit animation skip right to EXITED
	    if (!exit) {
	      this.safeSetState({ status: EXITED }, function () {
	        _this3.props.onExited(node);
	      });
	      return;
	    }
	    this.props.onExit(node);
	
	    this.safeSetState({ status: EXITING }, function () {
	      _this3.props.onExiting(node);
	
	      _this3.onTransitionEnd(node, timeouts.exit, function () {
	        _this3.safeSetState({ status: EXITED }, function () {
	          _this3.props.onExited(node);
	        });
	      });
	    });
	  };
	
	  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
	    if (this.nextCallback !== null) {
	      this.nextCallback.cancel();
	      this.nextCallback = null;
	    }
	  };
	
	  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
	    var _this4 = this;
	
	    // We need to track pending updates for instances where a cWRP fires quickly
	    // after cDM and before the state flushes, which would double trigger a
	    // transition
	    this.pendingState = nextState;
	
	    // This shouldn't be necessary, but there are weird race conditions with
	    // setState callbacks and unmounting in testing, so always make sure that
	    // we can cancel any pending setState callbacks after we unmount.
	    callback = this.setNextCallback(callback);
	    this.setState(nextState, function () {
	      _this4.pendingState = null;
	      callback();
	    });
	  };
	
	  Transition.prototype.setNextCallback = function setNextCallback(callback) {
	    var _this5 = this;
	
	    var active = true;
	
	    this.nextCallback = function (event) {
	      if (active) {
	        active = false;
	        _this5.nextCallback = null;
	
	        callback(event);
	      }
	    };
	
	    this.nextCallback.cancel = function () {
	      active = false;
	    };
	
	    return this.nextCallback;
	  };
	
	  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
	    this.setNextCallback(handler);
	
	    if (node) {
	      if (this.props.addEndListener) {
	        this.props.addEndListener(node, this.nextCallback);
	      }
	      if (timeout != null) {
	        setTimeout(this.nextCallback, timeout);
	      }
	    } else {
	      setTimeout(this.nextCallback, 0);
	    }
	  };
	
	  Transition.prototype.render = function render() {
	    var status = this.state.status;
	    if (status === UNMOUNTED) {
	      return null;
	    }
	
	    var _props = this.props,
	        children = _props.children,
	        childProps = _objectWithoutProperties(_props, ['children']);
	    // filter props for Transtition
	
	
	    delete childProps.in;
	    delete childProps.mountOnEnter;
	    delete childProps.unmountOnExit;
	    delete childProps.appear;
	    delete childProps.enter;
	    delete childProps.exit;
	    delete childProps.timeout;
	    delete childProps.addEndListener;
	    delete childProps.onEnter;
	    delete childProps.onEntering;
	    delete childProps.onEntered;
	    delete childProps.onExit;
	    delete childProps.onExiting;
	    delete childProps.onExited;
	
	    if (typeof children === 'function') {
	      return children(status, childProps);
	    }
	
	    var child = _react2.default.Children.only(children);
	    return _react2.default.cloneElement(child, childProps);
	  };
	
	  return Transition;
	}(_react2.default.Component);
	
	Transition.contextTypes = {
	  transitionGroup: PropTypes.object
	};
	Transition.childContextTypes = {
	  transitionGroup: function transitionGroup() {}
	};
	
	
	Transition.propTypes =  false ? {
	  /**
	   * A `function` child can be used instead of a React element.
	   * This function is called with the current transition status
	   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can used
	   * to apply context specific props to a component.
	   *
	   * ```jsx
	   * <Transition timeout={150}>
	   *   {(status) => (
	   *     <MyComponent className={`fade fade-${status}`} />
	   *   )}
	   * </Transition>
	   * ```
	   */
	  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,
	
	  /**
	   * Show the component; triggers the enter or exit states
	   */
	  in: PropTypes.bool,
	
	  /**
	   * By default the child component is mounted immediately along with
	   * the parent `Transition` component. If you want to "lazy mount" the component on the
	   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
	   * mounted, even on "exited", unless you also specify `unmountOnExit`.
	   */
	  mountOnEnter: PropTypes.bool,
	
	  /**
	   * By default the child component stays mounted after it reaches the `'exited'` state.
	   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
	   */
	  unmountOnExit: PropTypes.bool,
	
	  /**
	   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
	   * If you want to transition on the first mount set `appear` to `true`, and the
	   * component will transition in as soon as the `<Transition>` mounts.
	   *
	   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
	   */
	  appear: PropTypes.bool,
	
	  /**
	   * Enable or disable enter transitions.
	   */
	  enter: PropTypes.bool,
	
	  /**
	   * Enable or disable exit transitions.
	   */
	  exit: PropTypes.bool,
	
	  /**
	   * The duration of the transition, in milliseconds.
	   * Required unless `addEventListener` is provided
	   *
	   * You may specify a single timeout for all transitions like: `timeout={500}`,
	   * or individually like:
	   *
	   * ```jsx
	   * timeout={{
	   *  enter: 300,
	   *  exit: 500,
	   * }}
	   * ```
	   *
	   * @type {number | { enter?: number, exit?: number }}
	   */
	  timeout: function timeout(props) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    var pt = _PropTypes.timeoutsShape;
	    if (!props.addEndListener) pt = pt.isRequired;
	    return pt.apply(undefined, [props].concat(args));
	  },
	
	  /**
	   * Add a custom transition end trigger. Called with the transitioning
	   * DOM node and a `done` callback. Allows for more fine grained transition end
	   * logic. **Note:** Timeouts are still used as a fallback if provided.
	   *
	   * ```jsx
	   * addEndListener={(node, done) => {
	   *   // use the css transitionend event to mark the finish of a transition
	   *   node.addEventListener('transitionend', done, false);
	   * }}
	   * ```
	   */
	  addEndListener: PropTypes.func,
	
	  /**
	   * Callback fired before the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEnter: PropTypes.func,
	
	  /**
	   * Callback fired after the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool)
	   */
	  onEntering: PropTypes.func,
	
	  /**
	   * Callback fired after the "entered" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEntered: PropTypes.func,
	
	  /**
	   * Callback fired before the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExit: PropTypes.func,
	
	  /**
	   * Callback fired after the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExiting: PropTypes.func,
	
	  /**
	   * Callback fired after the "exited" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExited: PropTypes.func
	} : {};
	
	// Name the function so it is clearer in the documentation
	function noop() {}
	
	Transition.defaultProps = {
	  in: false,
	  mountOnEnter: false,
	  unmountOnExit: false,
	  appear: false,
	  enter: true,
	  exit: true,
	
	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,
	
	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};
	
	Transition.UNMOUNTED = 0;
	Transition.EXITED = 1;
	Transition.ENTERING = 2;
	Transition.ENTERED = 3;
	Transition.EXITING = 4;
	
	exports.default = Transition;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.classNamesShape = exports.timeoutsShape = undefined;
	exports.transitionTimeout = transitionTimeout;
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function transitionTimeout(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;
	
	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
	
	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	      }
	    }
	
	    return null;
	  };
	}
	
	var timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({
	  enter: _propTypes2.default.number,
	  exit: _propTypes2.default.number
	}).isRequired]);
	
	var classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
	  enter: _propTypes2.default.string,
	  exit: _propTypes2.default.string,
	  active: _propTypes2.default.string
	}), _propTypes2.default.shape({
	  enter: _propTypes2.default.string,
	  enterActive: _propTypes2.default.string,
	  exit: _propTypes2.default.string,
	  exitActive: _propTypes2.default.string
	})]);

/***/ }),
/* 383 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	function createRippleHandler(instance, eventName, action, cb) {
	  return function handleEvent(event) {
	    if (cb) {
	      cb.call(instance, event);
	    }
	
	    var ignore = false;
	
	    if (event.defaultPrevented) {
	      ignore = true;
	    }
	
	    if (instance.props.disableTouchRipple && eventName !== 'Blur') {
	      ignore = true;
	    }
	
	    if (!ignore && instance.ripple) {
	      instance.ripple[action](event);
	    }
	
	    if (typeof instance.props["on".concat(eventName)] === 'function') {
	      instance.props["on".concat(eventName)](event);
	    }
	
	    return true;
	  };
	}
	
	var _default = createRippleHandler;
	exports.default = _default;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
	})), 'Close');
	
	exports.default = _default;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _pure = _interopRequireDefault(__webpack_require__(386));
	
	var _SvgIcon = _interopRequireDefault(__webpack_require__(391));
	
	function createSvgIcon(path, displayName) {
	  var Icon = function Icon(props) {
	    return _react.default.createElement(_SvgIcon.default, props, path);
	  };
	
	  Icon.displayName = displayName;
	  Icon = (0, _pure.default)(Icon);
	  Icon.muiName = 'SvgIcon';
	  return Icon;
	}
	
	;
	var _default = createSvgIcon;
	exports.default = _default;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _shouldUpdate = __webpack_require__(387);
	
	var _shouldUpdate2 = _interopRequireDefault(_shouldUpdate);
	
	var _shallowEqual = __webpack_require__(390);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _setDisplayName = __webpack_require__(388);
	
	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);
	
	var _wrapDisplayName = __webpack_require__(311);
	
	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var pure = function pure(BaseComponent) {
	  var hoc = (0, _shouldUpdate2.default)(function (props, nextProps) {
	    return !(0, _shallowEqual2.default)(props, nextProps);
	  });
	
	  if (false) {
	    return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
	  }
	
	  return hoc(BaseComponent);
	};
	
	exports.default = pure;

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(117);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(118);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(153);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _setDisplayName = __webpack_require__(388);
	
	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);
	
	var _wrapDisplayName = __webpack_require__(311);
	
	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var shouldUpdate = function shouldUpdate(test) {
	  return function (BaseComponent) {
	    var factory = (0, _react.createFactory)(BaseComponent);
	
	    var ShouldUpdate = function (_Component) {
	      (0, _inherits3.default)(ShouldUpdate, _Component);
	
	      function ShouldUpdate() {
	        (0, _classCallCheck3.default)(this, ShouldUpdate);
	        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	      }
	
	      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return test(this.props, nextProps);
	      };
	
	      ShouldUpdate.prototype.render = function render() {
	        return factory(this.props);
	      };
	
	      return ShouldUpdate;
	    }(_react.Component);
	
	    if (false) {
	      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
	    }
	    return ShouldUpdate;
	  };
	};
	
	exports.default = shouldUpdate;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _setStatic = __webpack_require__(389);
	
	var _setStatic2 = _interopRequireDefault(_setStatic);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var setDisplayName = function setDisplayName(displayName) {
	  return (0, _setStatic2.default)('displayName', displayName);
	};
	
	exports.default = setDisplayName;

/***/ }),
/* 389 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var setStatic = function setStatic(key, value) {
	  return function (BaseComponent) {
	    /* eslint-disable no-param-reassign */
	    BaseComponent[key] = value;
	    /* eslint-enable no-param-reassign */
	    return BaseComponent;
	  };
	};
	
	exports.default = setStatic;

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _shallowEqual = __webpack_require__(353);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _shallowEqual2.default;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _SvgIcon.default;
	  }
	});
	
	var _SvgIcon = _interopRequireDefault(__webpack_require__(392));

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _helpers = __webpack_require__(345);
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      userSelect: 'none',
	      width: '1em',
	      height: '1em',
	      display: 'inline-block',
	      fill: 'currentColor',
	      flexShrink: 0,
	      fontSize: 24,
	      transition: theme.transitions.create('fill', {
	        duration: theme.transitions.duration.shorter
	      })
	    },
	    colorPrimary: {
	      color: theme.palette.primary.main
	    },
	    colorSecondary: {
	      color: theme.palette.secondary.main
	    },
	    colorAction: {
	      color: theme.palette.action.active
	    },
	    colorError: {
	      color: theme.palette.error.main
	    },
	    colorDisabled: {
	      color: theme.palette.action.disabled
	    },
	    fontSizeInherit: {
	      fontSize: 'inherit'
	    }
	  };
	};
	
	exports.styles = styles;
	
	function SvgIcon(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      Component = props.component,
	      fontSize = props.fontSize,
	      nativeColor = props.nativeColor,
	      titleAccess = props.titleAccess,
	      viewBox = props.viewBox,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "component", "fontSize", "nativeColor", "titleAccess", "viewBox"]);
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["fontSize".concat((0, _helpers.capitalize)(fontSize))], fontSize !== 'default'), (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'inherit'), _classNames), classNameProp);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className,
	    focusable: "false",
	    viewBox: viewBox,
	    color: nativeColor,
	    "aria-hidden": titleAccess ? 'false' : 'true'
	  }, other), children, titleAccess ? _react.default.createElement("title", null, titleAccess) : null);
	}
	
	SvgIcon.propTypes =  false ? {
	  /**
	   * Node passed into the SVG element.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   * You can use the `nativeColor` property to apply a color attribute to the SVG element.
	   */
	  color: _propTypes.default.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
	   */
	  fontSize: _propTypes.default.oneOf(['inherit', 'default']),
	
	  /**
	   * Applies a color attribute to the SVG element.
	   */
	  nativeColor: _propTypes.default.string,
	
	  /**
	   * Provides a human-readable title for the element that contains it.
	   * https://www.w3.org/TR/SVG-access/#Equivalent
	   */
	  titleAccess: _propTypes.default.string,
	
	  /**
	   * Allows you to redefine what the coordinates without units mean inside an SVG element.
	   * For example, if the SVG element is 500 (width) by 200 (height),
	   * and you pass viewBox="0 0 50 20",
	   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
	   * to bottom right (50,20) and each unit will be worth 10px.
	   */
	  viewBox: _propTypes.default.string
	} : {};
	SvgIcon.defaultProps = {
	  color: 'inherit',
	  component: 'svg',
	  fontSize: 'default',
	  viewBox: '0 0 24 24'
	};
	SvgIcon.muiName = 'SvgIcon';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiSvgIcon'
	})(SvgIcon);
	
	exports.default = _default;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
	})), 'ExpandLess');
	
	exports.default = _default;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _SpringScrollbars = __webpack_require__(395);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SpringScrollbars).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCustomScrollbars = __webpack_require__(396);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _rebound = __webpack_require__(413);
	
	var _reactLazyload = __webpack_require__(348);
	
	var _reactRedux = __webpack_require__(245);
	
	var _store = __webpack_require__(326);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SpringScrollbars = function (_Component) {
	  _inherits(SpringScrollbars, _Component);
	
	  function SpringScrollbars(props) {
	    _classCallCheck(this, SpringScrollbars);
	
	    for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      rest[_key - 1] = arguments[_key];
	    }
	
	    var _this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this, props].concat(rest)));
	
	    _this.handleSpringUpdate = _this.handleSpringUpdate.bind(_this);
	    return _this;
	  }
	
	  SpringScrollbars.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
	    if (this.props.isNavigator && this.props.navigatorPosition !== "is-featured") {
	      return;
	    }
	
	    if (this.props.scrollToTop && this.props.scrollToTop !== prevProps.scrollToTop) {
	      this.scrollTop(0);
	      this.props.setScrollToTop(false);
	    }
	  };
	
	  SpringScrollbars.prototype.componentDidMount = function componentDidMount() {
	    this.springSystem = new _rebound.SpringSystem();
	    this.spring = this.springSystem.createSpring();
	    this.spring.addListener({ onSpringUpdate: this.handleSpringUpdate });
	  };
	
	  SpringScrollbars.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.springSystem.deregisterSpring(this.spring);
	    this.springSystem.removeAllListeners();
	    this.springSystem = undefined;
	    this.spring.destroy();
	    this.spring = undefined;
	  };
	
	  SpringScrollbars.prototype.getScrollTop = function getScrollTop() {
	    return this.scrollbars.getScrollTop();
	  };
	
	  SpringScrollbars.prototype.getScrollHeight = function getScrollHeight() {
	    return this.scrollbars.getScrollHeight();
	  };
	
	  SpringScrollbars.prototype.getHeight = function getHeight() {
	    return this.scrollbars.getHeight();
	  };
	
	  SpringScrollbars.prototype.scrollTop = function scrollTop(top) {
	    var scrollTop = this.scrollbars.getScrollTop();
	    var scrollHeight = this.scrollbars.getScrollHeight();
	    var val = _rebound.MathUtil.mapValueInRange(top, 0, scrollHeight, scrollHeight * 0.01, scrollHeight * 0.99);
	    this.spring.setCurrentValue(scrollTop).setAtRest();
	    this.spring.setEndValue(val);
	  };
	
	  SpringScrollbars.prototype.handleSpringUpdate = function handleSpringUpdate(spring) {
	    var _this2 = this;
	
	    window.requestAnimationFrame(function () {
	      var val = spring.getCurrentValue();
	      _this2.scrollbars.scrollTop(val);
	    });
	  };
	
	  SpringScrollbars.prototype.render = function render() {
	    var _this3 = this;
	
	    var _props = this.props,
	        children = _props.children,
	        forceCheckOnScroll = _props.forceCheckOnScroll;
	
	
	    return _react2.default.createElement(
	      _reactCustomScrollbars.Scrollbars,
	      {
	        autoHide: true,
	        universal: true,
	        onScroll: forceCheckOnScroll && _reactLazyload.forceCheck,
	        ref: function ref(comp) {
	          _this3.scrollbars = comp;
	        }
	      },
	      children
	    );
	  };
	
	  return SpringScrollbars;
	}(_react.Component);
	
	SpringScrollbars.propTypes = {
	  children: _propTypes2.default.node.isRequired,
	  scrollToTop: _propTypes2.default.bool.isRequired,
	  setScrollToTop: _propTypes2.default.func.isRequired,
	  forceCheckOnScroll: _propTypes2.default.bool,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  isNavigator: _propTypes2.default.bool
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    scrollToTop: state.scrollToTop,
	    navigatorPosition: state.navigatorPosition
	  };
	};
	
	var mapDispatchToProps = {
	  setScrollToTop: _store.setScrollToTop
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SpringScrollbars);
	module.exports = exports["default"];

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Scrollbars = undefined;
	
	var _Scrollbars = __webpack_require__(397);
	
	var _Scrollbars2 = _interopRequireDefault(_Scrollbars);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	exports["default"] = _Scrollbars2["default"];
	exports.Scrollbars = _Scrollbars2["default"];

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _raf2 = __webpack_require__(398);
	
	var _raf3 = _interopRequireDefault(_raf2);
	
	var _domCss = __webpack_require__(400);
	
	var _domCss2 = _interopRequireDefault(_domCss);
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isString = __webpack_require__(406);
	
	var _isString2 = _interopRequireDefault(_isString);
	
	var _getScrollbarWidth = __webpack_require__(407);
	
	var _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);
	
	var _returnFalse = __webpack_require__(408);
	
	var _returnFalse2 = _interopRequireDefault(_returnFalse);
	
	var _getInnerWidth = __webpack_require__(409);
	
	var _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);
	
	var _getInnerHeight = __webpack_require__(410);
	
	var _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);
	
	var _styles = __webpack_require__(411);
	
	var _defaultRenderElements = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Scrollbars = function (_Component) {
	    _inherits(Scrollbars, _Component);
	
	    function Scrollbars(props) {
	        var _ref;
	
	        _classCallCheck(this, Scrollbars);
	
	        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            rest[_key - 1] = arguments[_key];
	        }
	
	        var _this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this, props].concat(rest)));
	
	        _this.getScrollLeft = _this.getScrollLeft.bind(_this);
	        _this.getScrollTop = _this.getScrollTop.bind(_this);
	        _this.getScrollWidth = _this.getScrollWidth.bind(_this);
	        _this.getScrollHeight = _this.getScrollHeight.bind(_this);
	        _this.getClientWidth = _this.getClientWidth.bind(_this);
	        _this.getClientHeight = _this.getClientHeight.bind(_this);
	        _this.getValues = _this.getValues.bind(_this);
	        _this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(_this);
	        _this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(_this);
	        _this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(_this);
	        _this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(_this);
	
	        _this.scrollLeft = _this.scrollLeft.bind(_this);
	        _this.scrollTop = _this.scrollTop.bind(_this);
	        _this.scrollToLeft = _this.scrollToLeft.bind(_this);
	        _this.scrollToTop = _this.scrollToTop.bind(_this);
	        _this.scrollToRight = _this.scrollToRight.bind(_this);
	        _this.scrollToBottom = _this.scrollToBottom.bind(_this);
	
	        _this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(_this);
	        _this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(_this);
	        _this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(_this);
	        _this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(_this);
	        _this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(_this);
	        _this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(_this);
	        _this.handleWindowResize = _this.handleWindowResize.bind(_this);
	        _this.handleScroll = _this.handleScroll.bind(_this);
	        _this.handleDrag = _this.handleDrag.bind(_this);
	        _this.handleDragEnd = _this.handleDragEnd.bind(_this);
	
	        _this.state = {
	            didMountUniversal: false
	        };
	        return _this;
	    }
	
	    _createClass(Scrollbars, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.addListeners();
	            this.update();
	            this.componentDidMountUniversal();
	        }
	    }, {
	        key: 'componentDidMountUniversal',
	        value: function componentDidMountUniversal() {
	            // eslint-disable-line react/sort-comp
	            var universal = this.props.universal;
	
	            if (!universal) return;
	            this.setState({ didMountUniversal: true });
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.update();
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.removeListeners();
	            (0, _raf2.cancel)(this.requestFrame);
	            clearTimeout(this.hideTracksTimeout);
	            clearInterval(this.detectScrollingInterval);
	        }
	    }, {
	        key: 'getScrollLeft',
	        value: function getScrollLeft() {
	            if (!this.view) return 0;
	            return this.view.scrollLeft;
	        }
	    }, {
	        key: 'getScrollTop',
	        value: function getScrollTop() {
	            if (!this.view) return 0;
	            return this.view.scrollTop;
	        }
	    }, {
	        key: 'getScrollWidth',
	        value: function getScrollWidth() {
	            if (!this.view) return 0;
	            return this.view.scrollWidth;
	        }
	    }, {
	        key: 'getScrollHeight',
	        value: function getScrollHeight() {
	            if (!this.view) return 0;
	            return this.view.scrollHeight;
	        }
	    }, {
	        key: 'getClientWidth',
	        value: function getClientWidth() {
	            if (!this.view) return 0;
	            return this.view.clientWidth;
	        }
	    }, {
	        key: 'getClientHeight',
	        value: function getClientHeight() {
	            if (!this.view) return 0;
	            return this.view.clientHeight;
	        }
	    }, {
	        key: 'getValues',
	        value: function getValues() {
	            var _ref2 = this.view || {},
	                _ref2$scrollLeft = _ref2.scrollLeft,
	                scrollLeft = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,
	                _ref2$scrollTop = _ref2.scrollTop,
	                scrollTop = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,
	                _ref2$scrollWidth = _ref2.scrollWidth,
	                scrollWidth = _ref2$scrollWidth === undefined ? 0 : _ref2$scrollWidth,
	                _ref2$scrollHeight = _ref2.scrollHeight,
	                scrollHeight = _ref2$scrollHeight === undefined ? 0 : _ref2$scrollHeight,
	                _ref2$clientWidth = _ref2.clientWidth,
	                clientWidth = _ref2$clientWidth === undefined ? 0 : _ref2$clientWidth,
	                _ref2$clientHeight = _ref2.clientHeight,
	                clientHeight = _ref2$clientHeight === undefined ? 0 : _ref2$clientHeight;
	
	            return {
	                left: scrollLeft / (scrollWidth - clientWidth) || 0,
	                top: scrollTop / (scrollHeight - clientHeight) || 0,
	                scrollLeft: scrollLeft,
	                scrollTop: scrollTop,
	                scrollWidth: scrollWidth,
	                scrollHeight: scrollHeight,
	                clientWidth: clientWidth,
	                clientHeight: clientHeight
	            };
	        }
	    }, {
	        key: 'getThumbHorizontalWidth',
	        value: function getThumbHorizontalWidth() {
	            var _props = this.props,
	                thumbSize = _props.thumbSize,
	                thumbMinSize = _props.thumbMinSize;
	            var _view = this.view,
	                scrollWidth = _view.scrollWidth,
	                clientWidth = _view.clientWidth;
	
	            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	            var width = Math.ceil(clientWidth / scrollWidth * trackWidth);
	            if (trackWidth === width) return 0;
	            if (thumbSize) return thumbSize;
	            return Math.max(width, thumbMinSize);
	        }
	    }, {
	        key: 'getThumbVerticalHeight',
	        value: function getThumbVerticalHeight() {
	            var _props2 = this.props,
	                thumbSize = _props2.thumbSize,
	                thumbMinSize = _props2.thumbMinSize;
	            var _view2 = this.view,
	                scrollHeight = _view2.scrollHeight,
	                clientHeight = _view2.clientHeight;
	
	            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	            var height = Math.ceil(clientHeight / scrollHeight * trackHeight);
	            if (trackHeight === height) return 0;
	            if (thumbSize) return thumbSize;
	            return Math.max(height, thumbMinSize);
	        }
	    }, {
	        key: 'getScrollLeftForOffset',
	        value: function getScrollLeftForOffset(offset) {
	            var _view3 = this.view,
	                scrollWidth = _view3.scrollWidth,
	                clientWidth = _view3.clientWidth;
	
	            var trackWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	            var thumbWidth = this.getThumbHorizontalWidth();
	            return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);
	        }
	    }, {
	        key: 'getScrollTopForOffset',
	        value: function getScrollTopForOffset(offset) {
	            var _view4 = this.view,
	                scrollHeight = _view4.scrollHeight,
	                clientHeight = _view4.clientHeight;
	
	            var trackHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	            var thumbHeight = this.getThumbVerticalHeight();
	            return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);
	        }
	    }, {
	        key: 'scrollLeft',
	        value: function scrollLeft() {
	            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	
	            if (!this.view) return;
	            this.view.scrollLeft = left;
	        }
	    }, {
	        key: 'scrollTop',
	        value: function scrollTop() {
	            var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	
	            if (!this.view) return;
	            this.view.scrollTop = top;
	        }
	    }, {
	        key: 'scrollToLeft',
	        value: function scrollToLeft() {
	            if (!this.view) return;
	            this.view.scrollLeft = 0;
	        }
	    }, {
	        key: 'scrollToTop',
	        value: function scrollToTop() {
	            if (!this.view) return;
	            this.view.scrollTop = 0;
	        }
	    }, {
	        key: 'scrollToRight',
	        value: function scrollToRight() {
	            if (!this.view) return;
	            this.view.scrollLeft = this.view.scrollWidth;
	        }
	    }, {
	        key: 'scrollToBottom',
	        value: function scrollToBottom() {
	            if (!this.view) return;
	            this.view.scrollTop = this.view.scrollHeight;
	        }
	    }, {
	        key: 'addListeners',
	        value: function addListeners() {
	            /* istanbul ignore if */
	            if (typeof document === 'undefined' || !this.view) return;
	            var view = this.view,
	                trackHorizontal = this.trackHorizontal,
	                trackVertical = this.trackVertical,
	                thumbHorizontal = this.thumbHorizontal,
	                thumbVertical = this.thumbVertical;
	
	            view.addEventListener('scroll', this.handleScroll);
	            if (!(0, _getScrollbarWidth2["default"])()) return;
	            trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	            trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);
	            thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	            thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);
	            window.addEventListener('resize', this.handleWindowResize);
	        }
	    }, {
	        key: 'removeListeners',
	        value: function removeListeners() {
	            /* istanbul ignore if */
	            if (typeof document === 'undefined' || !this.view) return;
	            var view = this.view,
	                trackHorizontal = this.trackHorizontal,
	                trackVertical = this.trackVertical,
	                thumbHorizontal = this.thumbHorizontal,
	                thumbVertical = this.thumbVertical;
	
	            view.removeEventListener('scroll', this.handleScroll);
	            if (!(0, _getScrollbarWidth2["default"])()) return;
	            trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	            trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	            trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	            trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);
	            thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	            thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);
	            window.removeEventListener('resize', this.handleWindowResize);
	            // Possibly setup by `handleDragStart`
	            this.teardownDragging();
	        }
	    }, {
	        key: 'handleScroll',
	        value: function handleScroll(event) {
	            var _this2 = this;
	
	            var _props3 = this.props,
	                onScroll = _props3.onScroll,
	                onScrollFrame = _props3.onScrollFrame;
	
	            if (onScroll) onScroll(event);
	            this.update(function (values) {
	                var scrollLeft = values.scrollLeft,
	                    scrollTop = values.scrollTop;
	
	                _this2.viewScrollLeft = scrollLeft;
	                _this2.viewScrollTop = scrollTop;
	                if (onScrollFrame) onScrollFrame(values);
	            });
	            this.detectScrolling();
	        }
	    }, {
	        key: 'handleScrollStart',
	        value: function handleScrollStart() {
	            var onScrollStart = this.props.onScrollStart;
	
	            if (onScrollStart) onScrollStart();
	            this.handleScrollStartAutoHide();
	        }
	    }, {
	        key: 'handleScrollStartAutoHide',
	        value: function handleScrollStartAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.showTracks();
	        }
	    }, {
	        key: 'handleScrollStop',
	        value: function handleScrollStop() {
	            var onScrollStop = this.props.onScrollStop;
	
	            if (onScrollStop) onScrollStop();
	            this.handleScrollStopAutoHide();
	        }
	    }, {
	        key: 'handleScrollStopAutoHide',
	        value: function handleScrollStopAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'handleWindowResize',
	        value: function handleWindowResize() {
	            this.update();
	        }
	    }, {
	        key: 'handleHorizontalTrackMouseDown',
	        value: function handleHorizontalTrackMouseDown(event) {
	            event.preventDefault();
	            var target = event.target,
	                clientX = event.clientX;
	
	            var _target$getBoundingCl = target.getBoundingClientRect(),
	                targetLeft = _target$getBoundingCl.left;
	
	            var thumbWidth = this.getThumbHorizontalWidth();
	            var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;
	            this.view.scrollLeft = this.getScrollLeftForOffset(offset);
	        }
	    }, {
	        key: 'handleVerticalTrackMouseDown',
	        value: function handleVerticalTrackMouseDown(event) {
	            event.preventDefault();
	            var target = event.target,
	                clientY = event.clientY;
	
	            var _target$getBoundingCl2 = target.getBoundingClientRect(),
	                targetTop = _target$getBoundingCl2.top;
	
	            var thumbHeight = this.getThumbVerticalHeight();
	            var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;
	            this.view.scrollTop = this.getScrollTopForOffset(offset);
	        }
	    }, {
	        key: 'handleHorizontalThumbMouseDown',
	        value: function handleHorizontalThumbMouseDown(event) {
	            event.preventDefault();
	            this.handleDragStart(event);
	            var target = event.target,
	                clientX = event.clientX;
	            var offsetWidth = target.offsetWidth;
	
	            var _target$getBoundingCl3 = target.getBoundingClientRect(),
	                left = _target$getBoundingCl3.left;
	
	            this.prevPageX = offsetWidth - (clientX - left);
	        }
	    }, {
	        key: 'handleVerticalThumbMouseDown',
	        value: function handleVerticalThumbMouseDown(event) {
	            event.preventDefault();
	            this.handleDragStart(event);
	            var target = event.target,
	                clientY = event.clientY;
	            var offsetHeight = target.offsetHeight;
	
	            var _target$getBoundingCl4 = target.getBoundingClientRect(),
	                top = _target$getBoundingCl4.top;
	
	            this.prevPageY = offsetHeight - (clientY - top);
	        }
	    }, {
	        key: 'setupDragging',
	        value: function setupDragging() {
	            (0, _domCss2["default"])(document.body, _styles.disableSelectStyle);
	            document.addEventListener('mousemove', this.handleDrag);
	            document.addEventListener('mouseup', this.handleDragEnd);
	            document.onselectstart = _returnFalse2["default"];
	        }
	    }, {
	        key: 'teardownDragging',
	        value: function teardownDragging() {
	            (0, _domCss2["default"])(document.body, _styles.disableSelectStyleReset);
	            document.removeEventListener('mousemove', this.handleDrag);
	            document.removeEventListener('mouseup', this.handleDragEnd);
	            document.onselectstart = undefined;
	        }
	    }, {
	        key: 'handleDragStart',
	        value: function handleDragStart(event) {
	            this.dragging = true;
	            event.stopImmediatePropagation();
	            this.setupDragging();
	        }
	    }, {
	        key: 'handleDrag',
	        value: function handleDrag(event) {
	            if (this.prevPageX) {
	                var clientX = event.clientX;
	
	                var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),
	                    trackLeft = _trackHorizontal$getB.left;
	
	                var thumbWidth = this.getThumbHorizontalWidth();
	                var clickPosition = thumbWidth - this.prevPageX;
	                var offset = -trackLeft + clientX - clickPosition;
	                this.view.scrollLeft = this.getScrollLeftForOffset(offset);
	            }
	            if (this.prevPageY) {
	                var clientY = event.clientY;
	
	                var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),
	                    trackTop = _trackVertical$getBou.top;
	
	                var thumbHeight = this.getThumbVerticalHeight();
	                var _clickPosition = thumbHeight - this.prevPageY;
	                var _offset = -trackTop + clientY - _clickPosition;
	                this.view.scrollTop = this.getScrollTopForOffset(_offset);
	            }
	            return false;
	        }
	    }, {
	        key: 'handleDragEnd',
	        value: function handleDragEnd() {
	            this.dragging = false;
	            this.prevPageX = this.prevPageY = 0;
	            this.teardownDragging();
	            this.handleDragEndAutoHide();
	        }
	    }, {
	        key: 'handleDragEndAutoHide',
	        value: function handleDragEndAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'handleTrackMouseEnter',
	        value: function handleTrackMouseEnter() {
	            this.trackMouseOver = true;
	            this.handleTrackMouseEnterAutoHide();
	        }
	    }, {
	        key: 'handleTrackMouseEnterAutoHide',
	        value: function handleTrackMouseEnterAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.showTracks();
	        }
	    }, {
	        key: 'handleTrackMouseLeave',
	        value: function handleTrackMouseLeave() {
	            this.trackMouseOver = false;
	            this.handleTrackMouseLeaveAutoHide();
	        }
	    }, {
	        key: 'handleTrackMouseLeaveAutoHide',
	        value: function handleTrackMouseLeaveAutoHide() {
	            var autoHide = this.props.autoHide;
	
	            if (!autoHide) return;
	            this.hideTracks();
	        }
	    }, {
	        key: 'showTracks',
	        value: function showTracks() {
	            clearTimeout(this.hideTracksTimeout);
	            (0, _domCss2["default"])(this.trackHorizontal, { opacity: 1 });
	            (0, _domCss2["default"])(this.trackVertical, { opacity: 1 });
	        }
	    }, {
	        key: 'hideTracks',
	        value: function hideTracks() {
	            var _this3 = this;
	
	            if (this.dragging) return;
	            if (this.scrolling) return;
	            if (this.trackMouseOver) return;
	            var autoHideTimeout = this.props.autoHideTimeout;
	
	            clearTimeout(this.hideTracksTimeout);
	            this.hideTracksTimeout = setTimeout(function () {
	                (0, _domCss2["default"])(_this3.trackHorizontal, { opacity: 0 });
	                (0, _domCss2["default"])(_this3.trackVertical, { opacity: 0 });
	            }, autoHideTimeout);
	        }
	    }, {
	        key: 'detectScrolling',
	        value: function detectScrolling() {
	            var _this4 = this;
	
	            if (this.scrolling) return;
	            this.scrolling = true;
	            this.handleScrollStart();
	            this.detectScrollingInterval = setInterval(function () {
	                if (_this4.lastViewScrollLeft === _this4.viewScrollLeft && _this4.lastViewScrollTop === _this4.viewScrollTop) {
	                    clearInterval(_this4.detectScrollingInterval);
	                    _this4.scrolling = false;
	                    _this4.handleScrollStop();
	                }
	                _this4.lastViewScrollLeft = _this4.viewScrollLeft;
	                _this4.lastViewScrollTop = _this4.viewScrollTop;
	            }, 100);
	        }
	    }, {
	        key: 'raf',
	        value: function raf(callback) {
	            var _this5 = this;
	
	            if (this.requestFrame) _raf3["default"].cancel(this.requestFrame);
	            this.requestFrame = (0, _raf3["default"])(function () {
	                _this5.requestFrame = undefined;
	                callback();
	            });
	        }
	    }, {
	        key: 'update',
	        value: function update(callback) {
	            var _this6 = this;
	
	            this.raf(function () {
	                return _this6._update(callback);
	            });
	        }
	    }, {
	        key: '_update',
	        value: function _update(callback) {
	            var _props4 = this.props,
	                onUpdate = _props4.onUpdate,
	                hideTracksWhenNotNeeded = _props4.hideTracksWhenNotNeeded;
	
	            var values = this.getValues();
	            if ((0, _getScrollbarWidth2["default"])()) {
	                var scrollLeft = values.scrollLeft,
	                    clientWidth = values.clientWidth,
	                    scrollWidth = values.scrollWidth;
	
	                var trackHorizontalWidth = (0, _getInnerWidth2["default"])(this.trackHorizontal);
	                var thumbHorizontalWidth = this.getThumbHorizontalWidth();
	                var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);
	                var thumbHorizontalStyle = {
	                    width: thumbHorizontalWidth,
	                    transform: 'translateX(' + thumbHorizontalX + 'px)'
	                };
	                var scrollTop = values.scrollTop,
	                    clientHeight = values.clientHeight,
	                    scrollHeight = values.scrollHeight;
	
	                var trackVerticalHeight = (0, _getInnerHeight2["default"])(this.trackVertical);
	                var thumbVerticalHeight = this.getThumbVerticalHeight();
	                var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);
	                var thumbVerticalStyle = {
	                    height: thumbVerticalHeight,
	                    transform: 'translateY(' + thumbVerticalY + 'px)'
	                };
	                if (hideTracksWhenNotNeeded) {
	                    var trackHorizontalStyle = {
	                        visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'
	                    };
	                    var trackVerticalStyle = {
	                        visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'
	                    };
	                    (0, _domCss2["default"])(this.trackHorizontal, trackHorizontalStyle);
	                    (0, _domCss2["default"])(this.trackVertical, trackVerticalStyle);
	                }
	                (0, _domCss2["default"])(this.thumbHorizontal, thumbHorizontalStyle);
	                (0, _domCss2["default"])(this.thumbVertical, thumbVerticalStyle);
	            }
	            if (onUpdate) onUpdate(values);
	            if (typeof callback !== 'function') return;
	            callback(values);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this7 = this;
	
	            var scrollbarWidth = (0, _getScrollbarWidth2["default"])();
	            /* eslint-disable no-unused-vars */
	
	            var _props5 = this.props,
	                onScroll = _props5.onScroll,
	                onScrollFrame = _props5.onScrollFrame,
	                onScrollStart = _props5.onScrollStart,
	                onScrollStop = _props5.onScrollStop,
	                onUpdate = _props5.onUpdate,
	                renderView = _props5.renderView,
	                renderTrackHorizontal = _props5.renderTrackHorizontal,
	                renderTrackVertical = _props5.renderTrackVertical,
	                renderThumbHorizontal = _props5.renderThumbHorizontal,
	                renderThumbVertical = _props5.renderThumbVertical,
	                tagName = _props5.tagName,
	                hideTracksWhenNotNeeded = _props5.hideTracksWhenNotNeeded,
	                autoHide = _props5.autoHide,
	                autoHideTimeout = _props5.autoHideTimeout,
	                autoHideDuration = _props5.autoHideDuration,
	                thumbSize = _props5.thumbSize,
	                thumbMinSize = _props5.thumbMinSize,
	                universal = _props5.universal,
	                autoHeight = _props5.autoHeight,
	                autoHeightMin = _props5.autoHeightMin,
	                autoHeightMax = _props5.autoHeightMax,
	                style = _props5.style,
	                children = _props5.children,
	                props = _objectWithoutProperties(_props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);
	            /* eslint-enable no-unused-vars */
	
	            var didMountUniversal = this.state.didMountUniversal;
	
	
	            var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {
	                minHeight: autoHeightMin,
	                maxHeight: autoHeightMax
	            }), style);
	
	            var viewStyle = _extends({}, _styles.viewStyleDefault, {
	                // Hide scrollbars by setting a negative margin
	                marginRight: scrollbarWidth ? -scrollbarWidth : 0,
	                marginBottom: scrollbarWidth ? -scrollbarWidth : 0
	            }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {
	                // Add scrollbarWidth to autoHeight in order to compensate negative margins
	                minHeight: (0, _isString2["default"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + scrollbarWidth + 'px)' : autoHeightMin + scrollbarWidth,
	                maxHeight: (0, _isString2["default"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + scrollbarWidth + 'px)' : autoHeightMax + scrollbarWidth
	            }), autoHeight && universal && !didMountUniversal && {
	                minHeight: autoHeightMin,
	                maxHeight: autoHeightMax
	            }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);
	
	            var trackAutoHeightStyle = {
	                transition: 'opacity ' + autoHideDuration + 'ms',
	                opacity: 0
	            };
	
	            var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
	                display: 'none'
	            });
	
	            var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {
	                display: 'none'
	            });
	
	            return (0, _react.createElement)(tagName, _extends({}, props, { style: containerStyle, ref: function ref(_ref3) {
	                    _this7.container = _ref3;
	                } }), [(0, _react.cloneElement)(renderView({ style: viewStyle }), { key: 'view', ref: function ref(_ref4) {
	                    _this7.view = _ref4;
	                } }, children), (0, _react.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { key: 'trackHorizontal', ref: function ref(_ref5) {
	                    _this7.trackHorizontal = _ref5;
	                } }, (0, _react.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: function ref(_ref6) {
	                    _this7.thumbHorizontal = _ref6;
	                } })), (0, _react.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { key: 'trackVertical', ref: function ref(_ref7) {
	                    _this7.trackVertical = _ref7;
	                } }, (0, _react.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: function ref(_ref8) {
	                    _this7.thumbVertical = _ref8;
	                } }))]);
	        }
	    }]);
	
	    return Scrollbars;
	}(_react.Component);
	
	exports["default"] = Scrollbars;
	
	
	Scrollbars.propTypes = {
	    onScroll: _propTypes2["default"].func,
	    onScrollFrame: _propTypes2["default"].func,
	    onScrollStart: _propTypes2["default"].func,
	    onScrollStop: _propTypes2["default"].func,
	    onUpdate: _propTypes2["default"].func,
	    renderView: _propTypes2["default"].func,
	    renderTrackHorizontal: _propTypes2["default"].func,
	    renderTrackVertical: _propTypes2["default"].func,
	    renderThumbHorizontal: _propTypes2["default"].func,
	    renderThumbVertical: _propTypes2["default"].func,
	    tagName: _propTypes2["default"].string,
	    thumbSize: _propTypes2["default"].number,
	    thumbMinSize: _propTypes2["default"].number,
	    hideTracksWhenNotNeeded: _propTypes2["default"].bool,
	    autoHide: _propTypes2["default"].bool,
	    autoHideTimeout: _propTypes2["default"].number,
	    autoHideDuration: _propTypes2["default"].number,
	    autoHeight: _propTypes2["default"].bool,
	    autoHeightMin: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
	    autoHeightMax: _propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].string]),
	    universal: _propTypes2["default"].bool,
	    style: _propTypes2["default"].object,
	    children: _propTypes2["default"].node
	};
	
	Scrollbars.defaultProps = {
	    renderView: _defaultRenderElements.renderViewDefault,
	    renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,
	    renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,
	    renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,
	    renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,
	    tagName: 'div',
	    thumbMinSize: 30,
	    hideTracksWhenNotNeeded: false,
	    autoHide: false,
	    autoHideTimeout: 1000,
	    autoHideDuration: 200,
	    autoHeight: false,
	    autoHeightMin: 0,
	    autoHeightMax: 200,
	    universal: false
	};

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	var now = __webpack_require__(399)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]
	
	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}
	
	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60
	
	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }
	
	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}
	
	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function(object) {
	  if (!object) {
	    object = root;
	  }
	  object.requestAnimationFrame = raf
	  object.cancelAnimationFrame = caf
	}


/***/ }),
/* 399 */
/***/ (function(module, exports) {

	// Generated by CoffeeScript 1.12.2
	(function() {
	  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
	
	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - nodeLoadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    moduleLoadTime = getNanoSeconds();
	    upTime = process.uptime() * 1e9;
	    nodeLoadTime = moduleLoadTime - upTime;
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }
	
	}).call(this);
	
	//# sourceMappingURL=performance-now.js.map


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	var prefix = __webpack_require__(401)
	var toCamelCase = __webpack_require__(402)
	var cache = { 'float': 'cssFloat' }
	var addPxToStyle = __webpack_require__(405)
	
	function style (element, property, value) {
	  var camel = cache[property]
	  if (typeof camel === 'undefined') {
	    camel = detect(property)
	  }
	
	  // may be false if CSS prop is unsupported
	  if (camel) {
	    if (value === undefined) {
	      return element.style[camel]
	    }
	
	    element.style[camel] = addPxToStyle(camel, value)
	  }
	}
	
	function each (element, properties) {
	  for (var k in properties) {
	    if (properties.hasOwnProperty(k)) {
	      style(element, k, properties[k])
	    }
	  }
	}
	
	function detect (cssProp) {
	  var camel = toCamelCase(cssProp)
	  var result = prefix(camel)
	  cache[camel] = cache[cssProp] = cache[result] = result
	  return result
	}
	
	function set () {
	  if (arguments.length === 2) {
	    if (typeof arguments[1] === 'string') {
	      arguments[0].style.cssText = arguments[1]
	    } else {
	      each(arguments[0], arguments[1])
	    }
	  } else {
	    style(arguments[0], arguments[1], arguments[2])
	  }
	}
	
	module.exports = set
	module.exports.set = set
	
	module.exports.get = function (element, properties) {
	  if (Array.isArray(properties)) {
	    return properties.reduce(function (obj, prop) {
	      obj[prop] = style(element, prop || '')
	      return obj
	    }, {})
	  } else {
	    return style(element, properties || '')
	  }
	}


/***/ }),
/* 401 */
/***/ (function(module, exports) {

	var div = null
	var prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]
	
	module.exports = function prefixStyle (prop) {
	  // re-use a dummy div
	  if (!div) {
	    div = document.createElement('div')
	  }
	
	  var style = div.style
	
	  // prop exists without prefix
	  if (prop in style) {
	    return prop
	  }
	
	  // borderRadius -> BorderRadius
	  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)
	
	  // find the vendor-prefixed prop
	  for (var i = prefixes.length; i >= 0; i--) {
	    var name = prefixes[i] + titleCase
	    // e.g. WebkitBorderRadius or webkitBorderRadius
	    if (name in style) {
	      return name
	    }
	  }
	
	  return false
	}


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	
	var space = __webpack_require__(403)
	
	/**
	 * Export.
	 */
	
	module.exports = toCamelCase
	
	/**
	 * Convert a `string` to camel case.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toCamelCase(string) {
	  return space(string).replace(/\s(\w)/g, function (matches, letter) {
	    return letter.toUpperCase()
	  })
	}


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	
	var clean = __webpack_require__(404)
	
	/**
	 * Export.
	 */
	
	module.exports = toSpaceCase
	
	/**
	 * Convert a `string` to space case.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toSpaceCase(string) {
	  return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
	    return match ? ' ' + match : ''
	  }).trim()
	}


/***/ }),
/* 404 */
/***/ (function(module, exports) {

	
	/**
	 * Export.
	 */
	
	module.exports = toNoCase
	
	/**
	 * Test whether a string is camel-case.
	 */
	
	var hasSpace = /\s/
	var hasSeparator = /(_|-|\.|:)/
	var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/
	
	/**
	 * Remove any starting case from a `string`, like camel or snake, but keep
	 * spaces and punctuation that may be important otherwise.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function toNoCase(string) {
	  if (hasSpace.test(string)) return string.toLowerCase()
	  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()
	  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()
	  return string.toLowerCase()
	}
	
	/**
	 * Separator splitter.
	 */
	
	var separatorSplitter = /[\W_]+(.|$)/g
	
	/**
	 * Un-separate a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function unseparate(string) {
	  return string.replace(separatorSplitter, function (m, next) {
	    return next ? ' ' + next : ''
	  })
	}
	
	/**
	 * Camelcase splitter.
	 */
	
	var camelSplitter = /(.)([A-Z]+)/g
	
	/**
	 * Un-camelcase a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */
	
	function uncamelize(string) {
	  return string.replace(camelSplitter, function (m, previous, uppers) {
	    return previous + ' ' + uppers.toLowerCase().split('').join(' ')
	  })
	}


/***/ }),
/* 405 */
/***/ (function(module, exports) {

	/* The following list is defined in React's core */
	var IS_UNITLESS = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	module.exports = function(name, value) {
	  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {
	    return value + 'px';
	  } else {
	    return value;
	  }
	};

/***/ }),
/* 406 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = isString;
	function isString(maybe) {
	    return typeof maybe === 'string';
	}

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getScrollbarWidth;
	
	var _domCss = __webpack_require__(400);
	
	var _domCss2 = _interopRequireDefault(_domCss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var scrollbarWidth = false;
	
	function getScrollbarWidth() {
	    if (scrollbarWidth !== false) return scrollbarWidth;
	    /* istanbul ignore else */
	    if (typeof document !== 'undefined') {
	        var div = document.createElement('div');
	        (0, _domCss2["default"])(div, {
	            width: 100,
	            height: 100,
	            position: 'absolute',
	            top: -9999,
	            overflow: 'scroll',
	            MsOverflowStyle: 'scrollbar'
	        });
	        document.body.appendChild(div);
	        scrollbarWidth = div.offsetWidth - div.clientWidth;
	        document.body.removeChild(div);
	    } else {
	        scrollbarWidth = 0;
	    }
	    return scrollbarWidth || 0;
	}

/***/ }),
/* 408 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = returnFalse;
	function returnFalse() {
	    return false;
	}

/***/ }),
/* 409 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getInnerWidth;
	function getInnerWidth(el) {
	    var clientWidth = el.clientWidth;
	
	    var _getComputedStyle = getComputedStyle(el),
	        paddingLeft = _getComputedStyle.paddingLeft,
	        paddingRight = _getComputedStyle.paddingRight;
	
	    return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);
	}

/***/ }),
/* 410 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports["default"] = getInnerHeight;
	function getInnerHeight(el) {
	    var clientHeight = el.clientHeight;
	
	    var _getComputedStyle = getComputedStyle(el),
	        paddingTop = _getComputedStyle.paddingTop,
	        paddingBottom = _getComputedStyle.paddingBottom;
	
	    return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);
	}

/***/ }),
/* 411 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var containerStyleDefault = exports.containerStyleDefault = {
	    position: 'relative',
	    overflow: 'hidden',
	    width: '100%',
	    height: '100%'
	};
	
	// Overrides containerStyleDefault properties
	var containerStyleAutoHeight = exports.containerStyleAutoHeight = {
	    height: 'auto'
	};
	
	var viewStyleDefault = exports.viewStyleDefault = {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    right: 0,
	    bottom: 0,
	    overflow: 'scroll',
	    WebkitOverflowScrolling: 'touch'
	};
	
	// Overrides viewStyleDefault properties
	var viewStyleAutoHeight = exports.viewStyleAutoHeight = {
	    position: 'relative',
	    top: undefined,
	    left: undefined,
	    right: undefined,
	    bottom: undefined
	};
	
	var viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {
	    overflow: 'hidden',
	    marginRight: 0,
	    marginBottom: 0
	};
	
	var trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {
	    position: 'absolute',
	    height: 6
	};
	
	var trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {
	    position: 'absolute',
	    width: 6
	};
	
	var thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    height: '100%'
	};
	
	var thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    width: '100%'
	};
	
	var disableSelectStyle = exports.disableSelectStyle = {
	    userSelect: 'none'
	};
	
	var disableSelectStyleReset = exports.disableSelectStyleReset = {
	    userSelect: ''
	};

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.renderViewDefault = renderViewDefault;
	exports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;
	exports.renderTrackVerticalDefault = renderTrackVerticalDefault;
	exports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;
	exports.renderThumbVerticalDefault = renderThumbVerticalDefault;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/* eslint-disable react/prop-types */
	
	function renderViewDefault(props) {
	    return _react2["default"].createElement('div', props);
	}
	
	function renderTrackHorizontalDefault(_ref) {
	    var style = _ref.style,
	        props = _objectWithoutProperties(_ref, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        left: 2,
	        borderRadius: 3
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderTrackVerticalDefault(_ref2) {
	    var style = _ref2.style,
	        props = _objectWithoutProperties(_ref2, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        top: 2,
	        borderRadius: 3
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderThumbHorizontalDefault(_ref3) {
	    var style = _ref3.style,
	        props = _objectWithoutProperties(_ref3, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}
	
	function renderThumbVerticalDefault(_ref4) {
	    var style = _ref4.style,
	        props = _objectWithoutProperties(_ref4, ['style']);
	
	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2["default"].createElement('div', _extends({ style: finalStyle }, props));
	}

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2013, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.rebound = factory());
	}(this, (function () { 'use strict';
	
	var _onFrame = void 0;
	if (typeof window !== 'undefined') {
	  _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;
	}
	
	if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {
	  _onFrame = setImmediate;
	}
	
	_onFrame = _onFrame || function (callback) {
	  window.setTimeout(callback, 1000 / 60);
	};
	
	var _onFrame$1 = _onFrame;
	
	/* eslint-disable flowtype/no-weak-types */
	
	var concat = Array.prototype.concat;
	var slice = Array.prototype.slice;
	
	// Bind a function to a context object.
	function bind(func, context) {
	  for (var _len = arguments.length, outerArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    outerArgs[_key - 2] = arguments[_key];
	  }
	
	  return function () {
	    for (var _len2 = arguments.length, innerArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      innerArgs[_key2] = arguments[_key2];
	    }
	
	    func.apply(context, concat.call(outerArgs, slice.call(innerArgs)));
	  };
	}
	
	// Add all the properties in the source to the target.
	function extend(target, source) {
	  for (var key in source) {
	    if (source.hasOwnProperty(key)) {
	      target[key] = source[key];
	    }
	  }
	}
	
	// Cross browser/node timer functions.
	function onFrame(func) {
	  return _onFrame$1(func);
	}
	
	// Lop off the first occurence of the reference in the Array.
	function removeFirst(array, item) {
	  var idx = array.indexOf(item);
	  idx !== -1 && array.splice(idx, 1);
	}
	
	var colorCache = {};
	/**
	 * Converts a hex-formatted color string to its rgb-formatted equivalent. Handy
	 * when performing color tweening animations
	 * @public
	 * @param colorString A hex-formatted color string
	 * @return An rgb-formatted color string
	 */
	function hexToRGB(colorString) {
	  if (colorCache[colorString]) {
	    return colorCache[colorString];
	  }
	  var normalizedColor = colorString.replace('#', '');
	  if (normalizedColor.length === 3) {
	    normalizedColor = normalizedColor[0] + normalizedColor[0] + normalizedColor[1] + normalizedColor[1] + normalizedColor[2] + normalizedColor[2];
	  }
	  var parts = normalizedColor.match(/.{2}/g);
	  if (!parts || parts.length < 3) {
	    throw new Error('Expected a color string of format #rrggbb');
	  }
	
	  var ret = {
	    r: parseInt(parts[0], 16),
	    g: parseInt(parts[1], 16),
	    b: parseInt(parts[2], 16)
	  };
	
	  colorCache[colorString] = ret;
	  return ret;
	}
	
	/**
	 * Converts a rgb-formatted color string to its hex-formatted equivalent. Handy
	 * when performing color tweening animations
	 * @public
	 * @param colorString An rgb-formatted color string
	 * @return A hex-formatted color string
	 */
	function rgbToHex(rNum, gNum, bNum) {
	  var r = rNum.toString(16);
	  var g = gNum.toString(16);
	  var b = bNum.toString(16);
	  r = r.length < 2 ? '0' + r : r;
	  g = g.length < 2 ? '0' + g : g;
	  b = b.length < 2 ? '0' + b : b;
	  return '#' + r + g + b;
	}
	
	var util = Object.freeze({
		bind: bind,
		extend: extend,
		onFrame: onFrame,
		removeFirst: removeFirst,
		hexToRGB: hexToRGB,
		rgbToHex: rgbToHex
	});
	
	/**
	 * This helper function does a linear interpolation of a value from
	 * one range to another. This can be very useful for converting the
	 * motion of a Spring to a range of UI property values. For example a
	 * spring moving from position 0 to 1 could be interpolated to move a
	 * view from pixel 300 to 350 and scale it from 0.5 to 1. The current
	 * position of the `Spring` just needs to be run through this method
	 * taking its input range in the _from_ parameters with the property
	 * animation range in the _to_ parameters.
	 * @public
	 */
	function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {
	  var fromRangeSize = fromHigh - fromLow;
	  var toRangeSize = toHigh - toLow;
	  var valueScale = (value - fromLow) / fromRangeSize;
	  return toLow + valueScale * toRangeSize;
	}
	
	/**
	 * Interpolate two hex colors in a 0 - 1 range or optionally provide a
	 * custom range with fromLow,fromHight. The output will be in hex by default
	 * unless asRGB is true in which case it will be returned as an rgb string.
	 *
	 * @public
	 * @param asRGB Whether to return an rgb-style string
	 * @return A string in hex color format unless asRGB is true, in which case a string in rgb format
	 */
	function interpolateColor(val, startColorStr, endColorStr) {
	  var fromLow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	  var fromHigh = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
	  var asRGB = arguments[5];
	
	  var startColor = hexToRGB(startColorStr);
	  var endColor = hexToRGB(endColorStr);
	  var r = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));
	  var g = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));
	  var b = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));
	  if (asRGB) {
	    return 'rgb(' + r + ',' + g + ',' + b + ')';
	  } else {
	    return rgbToHex(r, g, b);
	  }
	}
	
	function degreesToRadians(deg) {
	  return deg * Math.PI / 180;
	}
	
	function radiansToDegrees(rad) {
	  return rad * 180 / Math.PI;
	}
	
	var MathUtil = Object.freeze({
		mapValueInRange: mapValueInRange,
		interpolateColor: interpolateColor,
		degreesToRadians: degreesToRadians,
		radiansToDegrees: radiansToDegrees
	});
	
	// Math for converting from
	// [Origami](http://facebook.github.io/origami/) to
	// [Rebound](http://facebook.github.io/rebound).
	// You mostly don't need to worry about this, just use
	// SpringConfig.fromOrigamiTensionAndFriction(v, v);
	
	function tensionFromOrigamiValue(oValue) {
	  return (oValue - 30.0) * 3.62 + 194.0;
	}
	
	function origamiValueFromTension(tension) {
	  return (tension - 194.0) / 3.62 + 30.0;
	}
	
	function frictionFromOrigamiValue(oValue) {
	  return (oValue - 8.0) * 3.0 + 25.0;
	}
	
	function origamiFromFriction(friction) {
	  return (friction - 25.0) / 3.0 + 8.0;
	}
	
	var OrigamiValueConverter = Object.freeze({
		tensionFromOrigamiValue: tensionFromOrigamiValue,
		origamiValueFromTension: origamiValueFromTension,
		frictionFromOrigamiValue: frictionFromOrigamiValue,
		origamiFromFriction: origamiFromFriction
	});
	
	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	
	
	
	
	
	
	
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	/**
	 * Plays each frame of the SpringSystem on animation
	 * timing loop. This is the default type of looper for a new spring system
	 * as it is the most common when developing UI.
	 * @public
	 */
	/**
	 *  Copyright (c) 2013, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var AnimationLooper = function () {
	  function AnimationLooper() {
	    classCallCheck(this, AnimationLooper);
	    this.springSystem = null;
	  }
	
	  AnimationLooper.prototype.run = function run() {
	    var springSystem = getSpringSystem.call(this);
	
	    onFrame(function () {
	      springSystem.loop(Date.now());
	    });
	  };
	
	  return AnimationLooper;
	}();
	
	/**
	 * Resolves the SpringSystem to a resting state in a
	 * tight and blocking loop. This is useful for synchronously generating
	 * pre-recorded animations that can then be played on a timing loop later.
	 * Sometimes this lead to better performance to pre-record a single spring
	 * curve and use it to drive many animations; however, it can make dynamic
	 * response to user input a bit trickier to implement.
	 * @public
	 */
	var SimulationLooper = function () {
	  function SimulationLooper(timestep) {
	    classCallCheck(this, SimulationLooper);
	    this.springSystem = null;
	    this.time = 0;
	    this.running = false;
	
	    this.timestep = timestep || 16.667;
	  }
	
	  SimulationLooper.prototype.run = function run() {
	    var springSystem = getSpringSystem.call(this);
	
	    if (this.running) {
	      return;
	    }
	    this.running = true;
	    while (!springSystem.getIsIdle()) {
	      springSystem.loop(this.time += this.timestep);
	    }
	    this.running = false;
	  };
	
	  return SimulationLooper;
	}();
	
	/**
	 * Resolves the SpringSystem one step at a
	 * time controlled by an outside loop. This is useful for testing and
	 * verifying the behavior of a SpringSystem or if you want to control your own
	 * timing loop for some reason e.g. slowing down or speeding up the
	 * simulation.
	 * @public
	 */
	var SteppingSimulationLooper = function () {
	  function SteppingSimulationLooper() {
	    classCallCheck(this, SteppingSimulationLooper);
	    this.springSystem = null;
	    this.time = 0;
	    this.running = false;
	  }
	
	  SteppingSimulationLooper.prototype.run = function run() {}
	  // this.run is NOOP'd here to allow control from the outside using
	  // this.step.
	
	
	  // Perform one step toward resolving the SpringSystem.
	  ;
	
	  SteppingSimulationLooper.prototype.step = function step(timestep) {
	    var springSystem = getSpringSystem.call(this);
	    springSystem.loop(this.time += timestep);
	  };
	
	  return SteppingSimulationLooper;
	}();
	
	function getSpringSystem() {
	  if (this.springSystem == null) {
	    throw new Error('cannot run looper without a springSystem');
	  }
	  return this.springSystem;
	}
	
	
	
	var Loopers = Object.freeze({
		AnimationLooper: AnimationLooper,
		SimulationLooper: SimulationLooper,
		SteppingSimulationLooper: SteppingSimulationLooper
	});
	
	/**
	 * Provides math for converting from Origami PopAnimation
	 * config values to regular Origami tension and friction values. If you are
	 * trying to replicate prototypes made with PopAnimation patches in Origami,
	 * then you should create your springs with
	 * SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math
	 * internally to create a spring to match the provided PopAnimation
	 * configuration from Origami.
	 */
	var BouncyConversion = function () {
	  function BouncyConversion(bounciness, speed) {
	    classCallCheck(this, BouncyConversion);
	
	    this.bounciness = bounciness;
	    this.speed = speed;
	
	    var b = this.normalize(bounciness / 1.7, 0, 20.0);
	    b = this.projectNormal(b, 0.0, 0.8);
	    var s = this.normalize(speed / 1.7, 0, 20.0);
	
	    this.bouncyTension = this.projectNormal(s, 0.5, 200);
	    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);
	  }
	
	  BouncyConversion.prototype.normalize = function normalize(value, startValue, endValue) {
	    return (value - startValue) / (endValue - startValue);
	  };
	
	  BouncyConversion.prototype.projectNormal = function projectNormal(n, start, end) {
	    return start + n * (end - start);
	  };
	
	  BouncyConversion.prototype.linearInterpolation = function linearInterpolation(t, start, end) {
	    return t * end + (1.0 - t) * start;
	  };
	
	  BouncyConversion.prototype.quadraticOutInterpolation = function quadraticOutInterpolation(t, start, end) {
	    return this.linearInterpolation(2 * t - t * t, start, end);
	  };
	
	  BouncyConversion.prototype.b3Friction1 = function b3Friction1(x) {
	    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
	  };
	
	  BouncyConversion.prototype.b3Friction2 = function b3Friction2(x) {
	    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
	  };
	
	  BouncyConversion.prototype.b3Friction3 = function b3Friction3(x) {
	    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
	  };
	
	  BouncyConversion.prototype.b3Nobounce = function b3Nobounce(tension) {
	    var friction = 0;
	    if (tension <= 18) {
	      friction = this.b3Friction1(tension);
	    } else if (tension > 18 && tension <= 44) {
	      friction = this.b3Friction2(tension);
	    } else {
	      friction = this.b3Friction3(tension);
	    }
	    return friction;
	  };
	
	  return BouncyConversion;
	}();
	
	/**
	 * Maintains a set of tension and friction constants
	 * for a Spring. You can use fromOrigamiTensionAndFriction to convert
	 * values from the [Origami](http://facebook.github.io/origami/)
	 * design tool directly to Rebound spring constants.
	 * @public
	 */
	
	var SpringConfig = function () {
	
	  /**
	   * Convert an origami Spring tension and friction to Rebound spring
	   * constants. If you are prototyping a design with Origami, this
	   * makes it easy to make your springs behave exactly the same in
	   * Rebound.
	   * @public
	   */
	  SpringConfig.fromOrigamiTensionAndFriction = function fromOrigamiTensionAndFriction(tension, friction) {
	    return new SpringConfig(tensionFromOrigamiValue(tension), frictionFromOrigamiValue(friction));
	  };
	
	  /**
	   * Convert an origami PopAnimation Spring bounciness and speed to Rebound
	   * spring constants. If you are using PopAnimation patches in Origami, this
	   * utility will provide springs that match your prototype.
	   * @public
	   */
	
	
	  SpringConfig.fromBouncinessAndSpeed = function fromBouncinessAndSpeed(bounciness, speed) {
	    var bouncyConversion = new BouncyConversion(bounciness, speed);
	    return SpringConfig.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);
	  };
	
	  /**
	   * Create a SpringConfig with no tension or a coasting spring with some
	   * amount of Friction so that it does not coast infininitely.
	   * @public
	   */
	
	
	  SpringConfig.coastingConfigWithOrigamiFriction = function coastingConfigWithOrigamiFriction(friction) {
	    return new SpringConfig(0, frictionFromOrigamiValue(friction));
	  };
	
	  function SpringConfig(tension, friction) {
	    classCallCheck(this, SpringConfig);
	
	    this.tension = tension;
	    this.friction = friction;
	  }
	
	  return SpringConfig;
	}();
	
	SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);
	
	/**
	 * Consists of a position and velocity. A Spring uses
	 * this internally to keep track of its current and prior position and
	 * velocity values.
	 */
	var PhysicsState = function PhysicsState() {
	  classCallCheck(this, PhysicsState);
	  this.position = 0;
	  this.velocity = 0;
	};
	
	/**
	 * Provides a model of a classical spring acting to
	 * resolve a body to equilibrium. Springs have configurable
	 * tension which is a force multipler on the displacement of the
	 * spring from its rest point or `endValue` as defined by [Hooke's
	 * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have
	 * configurable friction, which ensures that they do not oscillate
	 * infinitely. When a Spring is displaced by updating it's resting
	 * or `currentValue`, the SpringSystems that contain that Spring
	 * will automatically start looping to solve for equilibrium. As each
	 * timestep passes, `SpringListener` objects attached to the Spring
	 * will be notified of the updates providing a way to drive an
	 * animation off of the spring's resolution curve.
	 * @public
	 */
	
	var Spring = function () {
	  function Spring(springSystem) {
	    classCallCheck(this, Spring);
	    this.listeners = [];
	    this._startValue = 0;
	    this._currentState = new PhysicsState();
	    this._displacementFromRestThreshold = 0.001;
	    this._endValue = 0;
	    this._overshootClampingEnabled = false;
	    this._previousState = new PhysicsState();
	    this._restSpeedThreshold = 0.001;
	    this._tempState = new PhysicsState();
	    this._timeAccumulator = 0;
	    this._wasAtRest = true;
	
	    this._id = 's' + Spring._ID++;
	    this._springSystem = springSystem;
	  }
	
	  /**
	   * Remove a Spring from simulation and clear its listeners.
	   * @public
	   */
	
	
	  Spring.prototype.destroy = function destroy() {
	    this.listeners = [];
	    this._springSystem.deregisterSpring(this);
	  };
	
	  /**
	   * Get the id of the spring, which can be used to retrieve it from
	   * the SpringSystems it participates in later.
	   * @public
	   */
	
	
	  Spring.prototype.getId = function getId() {
	    return this._id;
	  };
	
	  /**
	   * Set the configuration values for this Spring. A SpringConfig
	   * contains the tension and friction values used to solve for the
	   * equilibrium of the Spring in the physics loop.
	   * @public
	   */
	
	
	  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {
	    this._springConfig = springConfig;
	    return this;
	  };
	
	  /**
	   * Retrieve the SpringConfig used by this Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getSpringConfig = function getSpringConfig() {
	    return this._springConfig;
	  };
	
	  /**
	   * Set the current position of this Spring. Listeners will be updated
	   * with this value immediately. If the rest or `endValue` is not
	   * updated to match this value, then the spring will be dispalced and
	   * the SpringSystem will start to loop to restore the spring to the
	   * `endValue`.
	   *
	   * A common pattern is to move a Spring around without animation by
	   * calling.
	   *
	   * ```
	   * spring.setCurrentValue(n).setAtRest();
	   * ```
	   *
	   * This moves the Spring to a new position `n`, sets the endValue
	   * to `n`, and removes any velocity from the `Spring`. By doing
	   * this you can allow the `SpringListener` to manage the position
	   * of UI elements attached to the spring even when moving without
	   * animation. For example, when dragging an element you can
	   * update the position of an attached view through a spring
	   * by calling `spring.setCurrentValue(x)`. When
	   * the gesture ends you can update the Springs
	   * velocity and endValue
	   * `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`
	   * to cause it to naturally animate the UI element to the resting
	   * position taking into account existing velocity. The codepaths for
	   * synchronous movement and spring driven animation can
	   * be unified using this technique.
	   * @public
	   */
	
	
	  Spring.prototype.setCurrentValue = function setCurrentValue(currentValue, skipSetAtRest) {
	    this._startValue = currentValue;
	    this._currentState.position = currentValue;
	    if (!skipSetAtRest) {
	      this.setAtRest();
	    }
	    this.notifyPositionUpdated(false, false);
	    return this;
	  };
	
	  /**
	   * Get the position that the most recent animation started at. This
	   * can be useful for determining the number off oscillations that
	   * have occurred.
	   * @public
	   */
	
	
	  Spring.prototype.getStartValue = function getStartValue() {
	    return this._startValue;
	  };
	
	  /**
	   * Retrieve the current value of the Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getCurrentValue = function getCurrentValue() {
	    return this._currentState.position;
	  };
	
	  /**
	   * Get the absolute distance of the Spring from its resting endValue
	   * position.
	   * @public
	   */
	
	
	  Spring.prototype.getCurrentDisplacementDistance = function getCurrentDisplacementDistance() {
	    return this.getDisplacementDistanceForState(this._currentState);
	  };
	
	  /**
	   * Get the absolute distance of the Spring from a given state value
	   */
	
	
	  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {
	    return Math.abs(this._endValue - state.position);
	  };
	
	  /**
	   * Set the endValue or resting position of the spring. If this
	   * value is different than the current value, the SpringSystem will
	   * be notified and will begin running its solver loop to resolve
	   * the Spring to equilibrium. Any listeners that are registered
	   * for onSpringEndStateChange will also be notified of this update
	   * immediately.
	   * @public
	   */
	
	
	  Spring.prototype.setEndValue = function setEndValue(endValue) {
	    if (this._endValue === endValue && this.isAtRest()) {
	      return this;
	    }
	    this._startValue = this.getCurrentValue();
	    this._endValue = endValue;
	    this._springSystem.activateSpring(this.getId());
	    for (var i = 0, len = this.listeners.length; i < len; i++) {
	      var listener = this.listeners[i];
	      var onChange = listener.onSpringEndStateChange;
	      onChange && onChange(this);
	    }
	    return this;
	  };
	
	  /**
	   * Retrieve the endValue or resting position of this spring.
	   * @public
	   */
	
	
	  Spring.prototype.getEndValue = function getEndValue() {
	    return this._endValue;
	  };
	
	  /**
	   * Set the current velocity of the Spring, in pixels per second. As
	   * previously mentioned, this can be useful when you are performing
	   * a direct manipulation gesture. When a UI element is released you
	   * may call setVelocity on its animation Spring so that the Spring
	   * continues with the same velocity as the gesture ended with. The
	   * friction, tension, and displacement of the Spring will then
	   * govern its motion to return to rest on a natural feeling curve.
	   * @public
	   */
	
	
	  Spring.prototype.setVelocity = function setVelocity(velocity) {
	    if (velocity === this._currentState.velocity) {
	      return this;
	    }
	    this._currentState.velocity = velocity;
	    this._springSystem.activateSpring(this.getId());
	    return this;
	  };
	
	  /**
	   * Get the current velocity of the Spring, in pixels per second.
	   * @public
	   */
	
	
	  Spring.prototype.getVelocity = function getVelocity() {
	    return this._currentState.velocity;
	  };
	
	  /**
	   * Set a threshold value for the movement speed of the Spring below
	   * which it will be considered to be not moving or resting.
	   * @public
	   */
	
	
	  Spring.prototype.setRestSpeedThreshold = function setRestSpeedThreshold(restSpeedThreshold) {
	    this._restSpeedThreshold = restSpeedThreshold;
	    return this;
	  };
	
	  /**
	   * Retrieve the rest speed threshold for this Spring.
	   * @public
	   */
	
	
	  Spring.prototype.getRestSpeedThreshold = function getRestSpeedThreshold() {
	    return this._restSpeedThreshold;
	  };
	
	  /**
	   * Set a threshold value for displacement below which the Spring
	   * will be considered to be not displaced i.e. at its resting
	   * `endValue`.
	   * @public
	   */
	
	
	  Spring.prototype.setRestDisplacementThreshold = function setRestDisplacementThreshold(displacementFromRestThreshold) {
	    this._displacementFromRestThreshold = displacementFromRestThreshold;
	  };
	
	  /**
	   * Retrieve the rest displacement threshold for this spring.
	   * @public
	   */
	
	
	  Spring.prototype.getRestDisplacementThreshold = function getRestDisplacementThreshold() {
	    return this._displacementFromRestThreshold;
	  };
	
	  /**
	   * Enable overshoot clamping. This means that the Spring will stop
	   * immediately when it reaches its resting position regardless of
	   * any existing momentum it may have. This can be useful for certain
	   * types of animations that should not oscillate such as a scale
	   * down to 0 or alpha fade.
	   * @public
	   */
	
	
	  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {
	    this._overshootClampingEnabled = enabled;
	    return this;
	  };
	
	  /**
	   * Check if overshoot clamping is enabled for this spring.
	   * @public
	   */
	
	
	  Spring.prototype.isOvershootClampingEnabled = function isOvershootClampingEnabled() {
	    return this._overshootClampingEnabled;
	  };
	
	  /**
	   * Check if the Spring has gone past its end point by comparing
	   * the direction it was moving in when it started to the current
	   * position and end value.
	   * @public
	   */
	
	
	  Spring.prototype.isOvershooting = function isOvershooting() {
	    var start = this._startValue;
	    var end = this._endValue;
	    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);
	  };
	
	  /**
	   * The main solver method for the Spring. It takes
	   * the current time and delta since the last time step and performs
	   * an RK4 integration to get the new position and velocity state
	   * for the Spring based on the tension, friction, velocity, and
	   * displacement of the Spring.
	   * @public
	   */
	
	
	  Spring.prototype.advance = function advance(time, realDeltaTime) {
	    var isAtRest = this.isAtRest();
	
	    if (isAtRest && this._wasAtRest) {
	      return;
	    }
	
	    var adjustedDeltaTime = realDeltaTime;
	    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {
	      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;
	    }
	
	    this._timeAccumulator += adjustedDeltaTime;
	
	    var tension = this._springConfig.tension;
	    var friction = this._springConfig.friction;
	    var position = this._currentState.position;
	    var velocity = this._currentState.velocity;
	    var tempPosition = this._tempState.position;
	    var tempVelocity = this._tempState.velocity;
	    var aVelocity = void 0;
	    var aAcceleration = void 0;
	    var bVelocity = void 0;
	    var bAcceleration = void 0;
	    var cVelocity = void 0;
	    var cAcceleration = void 0;
	    var dVelocity = void 0;
	    var dAcceleration = void 0;
	    var dxdt = void 0;
	    var dvdt = void 0;
	
	    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {
	      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;
	
	      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {
	        this._previousState.position = position;
	        this._previousState.velocity = velocity;
	      }
	
	      aVelocity = velocity;
	      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;
	
	      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      bVelocity = tempVelocity;
	      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
	      cVelocity = tempVelocity;
	      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;
	      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;
	      dVelocity = tempVelocity;
	      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;
	
	      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
	      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);
	
	      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
	      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;
	    }
	
	    this._tempState.position = tempPosition;
	    this._tempState.velocity = tempVelocity;
	
	    this._currentState.position = position;
	    this._currentState.velocity = velocity;
	
	    if (this._timeAccumulator > 0) {
	      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);
	    }
	
	    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {
	      if (this._springConfig.tension > 0) {
	        this._startValue = this._endValue;
	        this._currentState.position = this._endValue;
	      } else {
	        this._endValue = this._currentState.position;
	        this._startValue = this._endValue;
	      }
	      this.setVelocity(0);
	      isAtRest = true;
	    }
	
	    var notifyActivate = false;
	    if (this._wasAtRest) {
	      this._wasAtRest = false;
	      notifyActivate = true;
	    }
	
	    var notifyAtRest = false;
	    if (isAtRest) {
	      this._wasAtRest = true;
	      notifyAtRest = true;
	    }
	
	    this.notifyPositionUpdated(notifyActivate, notifyAtRest);
	  };
	
	  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {
	    for (var i = 0, len = this.listeners.length; i < len; i++) {
	      var listener = this.listeners[i];
	      if (notifyActivate && listener.onSpringActivate) {
	        listener.onSpringActivate(this);
	      }
	
	      if (listener.onSpringUpdate) {
	        listener.onSpringUpdate(this);
	      }
	
	      if (notifyAtRest && listener.onSpringAtRest) {
	        listener.onSpringAtRest(this);
	      }
	    }
	  };
	
	  /**
	   * Check if the SpringSystem should advance. Springs are advanced
	   * a final frame after they reach equilibrium to ensure that the
	   * currentValue is exactly the requested endValue regardless of the
	   * displacement threshold.
	   * @public
	   */
	
	
	  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {
	    return !this.isAtRest() || !this.wasAtRest();
	  };
	
	  Spring.prototype.wasAtRest = function wasAtRest() {
	    return this._wasAtRest;
	  };
	
	  /**
	   * Check if the Spring is atRest meaning that it's currentValue and
	   * endValue are the same and that it has no velocity. The previously
	   * described thresholds for speed and displacement define the bounds
	   * of this equivalence check. If the Spring has 0 tension, then it will
	   * be considered at rest whenever its absolute velocity drops below the
	   * restSpeedThreshold.
	   * @public
	   */
	
	
	  Spring.prototype.isAtRest = function isAtRest() {
	    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);
	  };
	
	  /**
	   * Force the spring to be at rest at its current position. As
	   * described in the documentation for setCurrentValue, this method
	   * makes it easy to do synchronous non-animated updates to ui
	   * elements that are attached to springs via SpringListeners.
	   * @public
	   */
	
	
	  Spring.prototype.setAtRest = function setAtRest() {
	    this._endValue = this._currentState.position;
	    this._tempState.position = this._currentState.position;
	    this._currentState.velocity = 0;
	    return this;
	  };
	
	  Spring.prototype._interpolate = function _interpolate(alpha) {
	    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);
	    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);
	  };
	
	  Spring.prototype.getListeners = function getListeners() {
	    return this.listeners;
	  };
	
	  Spring.prototype.addListener = function addListener(newListener) {
	    this.listeners.push(newListener);
	    return this;
	  };
	
	  Spring.prototype.removeListener = function removeListener(listenerToRemove) {
	    removeFirst(this.listeners, listenerToRemove);
	    return this;
	  };
	
	  Spring.prototype.removeAllListeners = function removeAllListeners() {
	    this.listeners = [];
	    return this;
	  };
	
	  Spring.prototype.currentValueIsApproximately = function currentValueIsApproximately(value) {
	    return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();
	  };
	
	  return Spring;
	}();
	
	Spring._ID = 0;
	Spring.MAX_DELTA_TIME_SEC = 0.064;
	Spring.SOLVER_TIMESTEP_SEC = 0.001;
	
	/**
	 * A set of Springs that all run on the same physics
	 * timing loop. To get started with a Rebound animation, first
	 * create a new SpringSystem and then add springs to it.
	 * @public
	 */
	
	var SpringSystem = function () {
	  function SpringSystem(looper) {
	    classCallCheck(this, SpringSystem);
	    this.listeners = [];
	    this._activeSprings = [];
	    this._idleSpringIndices = [];
	    this._isIdle = true;
	    this._lastTimeMillis = -1;
	    this._springRegistry = {};
	
	    this.looper = looper || new AnimationLooper();
	    this.looper.springSystem = this;
	  }
	
	  /**
	   * A SpringSystem is iterated by a looper. The looper is responsible
	   * for executing each frame as the SpringSystem is resolved to idle.
	   * There are three types of Loopers described below AnimationLooper,
	   * SimulationLooper, and SteppingSimulationLooper. AnimationLooper is
	   * the default as it is the most useful for common UI animations.
	   * @public
	   */
	
	
	  SpringSystem.prototype.setLooper = function setLooper(looper) {
	    this.looper = looper;
	    looper.springSystem = this;
	  };
	
	  /**
	   * Add a new spring to this SpringSystem. This Spring will now be solved for
	   * during the physics iteration loop. By default the spring will use the
	   * default Origami spring config with 40 tension and 7 friction, but you can
	   * also provide your own values here.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {
	    var springConfig = void 0;
	    if (tension === undefined || friction === undefined) {
	      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
	    } else {
	      springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);
	    }
	    return this.createSpringWithConfig(springConfig);
	  };
	
	  /**
	   * Add a spring with a specified bounciness and speed. To replicate Origami
	   * compositions based on PopAnimation patches, use this factory method to
	   * create matching springs.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpringWithBouncinessAndSpeed = function createSpringWithBouncinessAndSpeed(bounciness, speed) {
	    var springConfig = void 0;
	    if (bounciness === undefined || speed === undefined) {
	      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
	    } else {
	      springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);
	    }
	    return this.createSpringWithConfig(springConfig);
	  };
	
	  /**
	   * Add a spring with the provided SpringConfig.
	   * @public
	   */
	
	
	  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {
	    var spring = new Spring(this);
	    this.registerSpring(spring);
	    spring.setSpringConfig(springConfig);
	    return spring;
	  };
	
	  /**
	   * Check if a SpringSystem is idle or active. If all of the Springs in the
	   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,
	   * then this method will return true.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getIsIdle = function getIsIdle() {
	    return this._isIdle;
	  };
	
	  /**
	   * Retrieve a specific Spring from the SpringSystem by id. This
	   * can be useful for inspecting the state of a spring before
	   * or after an integration loop in the SpringSystem executes.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getSpringById = function getSpringById(id) {
	    return this._springRegistry[id];
	  };
	
	  /**
	   * Get a listing of all the springs registered with this
	   * SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.getAllSprings = function getAllSprings() {
	    var vals = [];
	    for (var _id in this._springRegistry) {
	      if (this._springRegistry.hasOwnProperty(_id)) {
	        vals.push(this._springRegistry[_id]);
	      }
	    }
	    return vals;
	  };
	
	  /**
	   * Manually add a spring to this system. This is called automatically
	   * if a Spring is created with SpringSystem#createSpring.
	   *
	   * This method sets the spring up in the registry so that it can be solved
	   * in the solver loop.
	   * @public
	   */
	
	
	  SpringSystem.prototype.registerSpring = function registerSpring(spring) {
	    this._springRegistry[spring.getId()] = spring;
	  };
	
	  /**
	   * Deregister a spring with this SpringSystem. The SpringSystem will
	   * no longer consider this Spring during its integration loop once
	   * this is called. This is normally done automatically for you when
	   * you call Spring#destroy.
	   * @public
	   */
	
	
	  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {
	    removeFirst(this._activeSprings, spring);
	    delete this._springRegistry[spring.getId()];
	  };
	
	  SpringSystem.prototype.advance = function advance(time, deltaTime) {
	    while (this._idleSpringIndices.length > 0) {
	      this._idleSpringIndices.pop();
	    }
	    for (var i = 0, len = this._activeSprings.length; i < len; i++) {
	      var spring = this._activeSprings[i];
	      if (spring.systemShouldAdvance()) {
	        spring.advance(time / 1000.0, deltaTime / 1000.0);
	      } else {
	        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));
	      }
	    }
	    while (this._idleSpringIndices.length > 0) {
	      var idx = this._idleSpringIndices.pop();
	      idx >= 0 && this._activeSprings.splice(idx, 1);
	    }
	  };
	
	  /**
	   * This is the main solver loop called to move the simulation
	   * forward through time. Before each pass in the solver loop
	   * onBeforeIntegrate is called on an any listeners that have
	   * registered themeselves with the SpringSystem. This gives you
	   * an opportunity to apply any constraints or adjustments to
	   * the springs that should be enforced before each iteration
	   * loop. Next the advance method is called to move each Spring in
	   * the systemShouldAdvance forward to the current time. After the
	   * integration step runs in advance, onAfterIntegrate is called
	   * on any listeners that have registered themselves with the
	   * SpringSystem. This gives you an opportunity to run any post
	   * integration constraints or adjustments on the Springs in the
	   * SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.loop = function loop(currentTimeMillis) {
	    var listener = void 0;
	    if (this._lastTimeMillis === -1) {
	      this._lastTimeMillis = currentTimeMillis - 1;
	    }
	    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;
	    this._lastTimeMillis = currentTimeMillis;
	
	    var i = 0;
	    var len = this.listeners.length;
	    for (i = 0; i < len; i++) {
	      listener = this.listeners[i];
	      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);
	    }
	
	    this.advance(currentTimeMillis, ellapsedMillis);
	    if (this._activeSprings.length === 0) {
	      this._isIdle = true;
	      this._lastTimeMillis = -1;
	    }
	
	    for (i = 0; i < len; i++) {
	      listener = this.listeners[i];
	      listener.onAfterIntegrate && listener.onAfterIntegrate(this);
	    }
	
	    if (!this._isIdle) {
	      this.looper.run();
	    }
	  };
	
	  /**
	   * Used to notify the SpringSystem that a Spring has become displaced.
	   * The system responds by starting its solver loop up if it is currently idle.
	   */
	
	
	  SpringSystem.prototype.activateSpring = function activateSpring(springId) {
	    var spring = this._springRegistry[springId];
	    if (this._activeSprings.indexOf(spring) === -1) {
	      this._activeSprings.push(spring);
	    }
	    if (this.getIsIdle()) {
	      this._isIdle = false;
	      this.looper.run();
	    }
	  };
	
	  /**
	   * Add a listener to the SpringSystem to receive before/after integration
	   * notifications allowing Springs to be constrained or adjusted.
	   * @public
	   */
	
	
	  SpringSystem.prototype.addListener = function addListener(listener) {
	    this.listeners.push(listener);
	  };
	
	  /**
	   * Remove a previously added listener on the SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.removeListener = function removeListener(listener) {
	    removeFirst(this.listeners, listener);
	  };
	
	  /**
	   * Remove all previously added listeners on the SpringSystem.
	   * @public
	   */
	
	
	  SpringSystem.prototype.removeAllListeners = function removeAllListeners() {
	    this.listeners = [];
	  };
	
	  return SpringSystem;
	}();
	
	var index = _extends({}, Loopers, {
	  OrigamiValueConverter: OrigamiValueConverter,
	  MathUtil: MathUtil,
	  Spring: Spring,
	  SpringConfig: SpringConfig,
	  SpringSystem: SpringSystem,
	  util: _extends({}, util, MathUtil)
	});
	
	return index;
	
	})));


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactLazyload = __webpack_require__(348);
	
	var _reactLazyload2 = _interopRequireDefault(_reactLazyload);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _listItem, _listItemPointer, _h, _h2, _listItemText;
	
	  return {
	    listItem: (_listItem = {
	      margin: "0 0 .7em 0",
	      transition: "height 1s"
	    }, _listItem["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      margin: "0 0 1.5rem 0"
	    }, _listItem["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      ".moving-featured &, .is-aside &": {
	        margin: "0 0 0 0"
	      }
	    }, _listItem),
	    listLink: {
	      display: "flex",
	      alignContent: "center",
	      alignItems: "center",
	      justifyContent: "flex-start",
	      flexDirection: "row",
	      padding: ".7em 1em .7em 1em",
	      color: theme.navigator.colors.postsListItemLink,
	      "@media (hover: hover)": {
	        "&:hover": {
	          color: theme.navigator.colors.postsListItemLinkHover,
	          "& .pointer": {
	            borderRadius: "65% 75%"
	          }
	        }
	      }
	    },
	    listItemPointer: (_listItemPointer = {
	      position: "relative",
	      flexShrink: 0,
	      overflow: "hidden",
	      borderRadius: "75% 65%",
	      width: "60px",
	      height: "60px",
	      margin: "0",
	      transition: "all .5s",
	      "& img": {
	        width: "100%",
	        height: "100%"
	      }
	    }, _listItemPointer["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      marginRight: ".5em",
	      width: "80px",
	      height: "80px"
	    }, _listItemPointer["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      marginRight: ".8em",
	      width: "90px",
	      height: "90px",
	      transition: "all .3s",
	      transitionTimingFunction: "ease",
	      ".moving-featured &, .is-aside &": {
	        width: "30px",
	        height: "30px"
	      }
	    }, _listItemPointer),
	    listItemText: (_listItemText = {
	      margin: "0 0 0 1.5em",
	      flexGrow: 1,
	      display: "flex",
	      flexDirection: "column",
	      width: "100%",
	      "& h1": (_h = {
	        lineHeight: 1.15,
	        fontWeight: 600,
	        letterSpacing: "-0.04em",
	        margin: 0,
	        fontSize: theme.navigator.sizes.postsListItemH1Font + "em"
	      }, _h["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        fontSize: theme.navigator.sizes.postsListItemH1Font * theme.navigator.sizes.fontIncraseForM + "em"
	      }, _h["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	        fontSize: theme.navigator.sizes.postsListItemH1Font * theme.navigator.sizes.fontIncraseForL + "em",
	        ".moving-featured &, .is-aside &": {
	          fontSize: "1.1em",
	          fontWeight: 400
	        }
	      }, _h),
	      "& h2": (_h2 = {
	        lineHeight: 1.2,
	        display: "block",
	        fontSize: theme.navigator.sizes.postsListItemH2Font + "em",
	        margin: ".3em 0 0 0",
	        fontFamily: "Arial"
	      }, _h2["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        fontSize: theme.navigator.sizes.postsListItemH2Font * theme.navigator.sizes.fontIncraseForM + "em",
	        fontFamily: "Arial"
	      }, _h2["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	        fontSize: theme.navigator.sizes.postsListItemH2Font * theme.navigator.sizes.fontIncraseForL + "em",
	        fontFamily: "Arial",
	        ".moving-featured &, .is-aside &": {
	          display: "none"
	        }
	      }, _h2)
	    }, _listItemText["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      ".moving-featured &, .is-aside &": {
	        margin: "0 0 0 .5em",
	        fontFamily: "Arial"
	      }
	    }, _listItemText)
	  };
	};
	
	var ListItem = function (_React$Component) {
	  _inherits(ListItem, _React$Component);
	
	  function ListItem() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ListItem);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      hidden: false
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ListItem.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
	    if (prevProps.categoryFilter !== this.props.categoryFilter) {
	      var category = this.props.post.node.frontmatter.category;
	      var categoryFilter = this.props.categoryFilter;
	
	      if (categoryFilter === "all posts") {
	        this.setState({ hidden: false });
	      } else if (category !== categoryFilter) {
	        this.setState({ hidden: true });
	      } else if (category === categoryFilter) {
	        this.setState({ hidden: false });
	      }
	    }
	  };
	
	  ListItem.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        post = _props.post,
	        linkOnClick = _props.linkOnClick;
	
	
	    return _react2.default.createElement(
	      "li",
	      {
	        className: classes.listItem + " " + post.node.frontmatter.category,
	        style: { display: "" + (this.state.hidden ? "none" : "block") },
	        key: post.node.fields.slug
	      },
	      _react2.default.createElement(
	        _gatsbyLink2.default,
	        {
	          activeClassName: "active",
	          className: classes.listLink,
	          to: post.node.fields.slug,
	          onClick: linkOnClick
	        },
	        post.node.frontmatter.cover && post.node.frontmatter.cover.children[0] && _react2.default.createElement(
	          "div",
	          { className: classes.listItemPointer + " pointer" },
	          _react2.default.createElement(
	            _reactLazyload2.default,
	            { height: 60, overflow: true, throttle: 300, once: true, offset: 100 },
	            _react2.default.createElement(
	              "picture",
	              null,
	              _react2.default.createElement("source", {
	                type: "image/webp",
	                srcSet: post.node.frontmatter.cover.children[0].resolutions.srcSetWebp
	              }),
	              _react2.default.createElement("source", { srcSet: post.node.frontmatter.cover.children[0].resolutions.srcSet }),
	              _react2.default.createElement("img", { src: post.node.frontmatter.cover.children[0].resolutions.src, alt: "" })
	            )
	          )
	        ),
	        _react2.default.createElement(
	          "div",
	          { className: classes.listItemText },
	          _react2.default.createElement(
	            "h1",
	            null,
	            post.node.frontmatter.title
	          ),
	          post.node.frontmatter.subTitle && _react2.default.createElement(
	            "h2",
	            null,
	            post.node.frontmatter.subTitle
	          )
	        )
	      )
	    );
	  };
	
	  return ListItem;
	}(_react2.default.Component);
	
	ListItem.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  post: _propTypes2.default.object.isRequired,
	  linkOnClick: _propTypes2.default.func.isRequired,
	  categoryFilter: _propTypes2.default.string.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(ListItem);
	module.exports = exports["default"];

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _ActionsBar = __webpack_require__(416);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ActionsBar).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _IconButton = __webpack_require__(365);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	var _reactRedux = __webpack_require__(245);
	
	var _screenfull = __webpack_require__(417);
	
	var _screenfull2 = _interopRequireDefault(_screenfull);
	
	var _Home = __webpack_require__(418);
	
	var _Home2 = _interopRequireDefault(_Home);
	
	var _Search = __webpack_require__(419);
	
	var _Search2 = _interopRequireDefault(_Search);
	
	var _ArrowUpward = __webpack_require__(420);
	
	var _ArrowUpward2 = _interopRequireDefault(_ArrowUpward);
	
	var _Fullscreen = __webpack_require__(421);
	
	var _Fullscreen2 = _interopRequireDefault(_Fullscreen);
	
	var _FullscreenExit = __webpack_require__(422);
	
	var _FullscreenExit2 = _interopRequireDefault(_FullscreenExit);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _FontSetter = __webpack_require__(423);
	
	var _FontSetter2 = _interopRequireDefault(_FontSetter);
	
	var _CategoryFilter = __webpack_require__(444);
	
	var _CategoryFilter2 = _interopRequireDefault(_CategoryFilter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _actionsBar, _group;
	
	  return {
	    actionsBar: (_actionsBar = {
	      position: "absolute",
	      background: theme.bars.colors.background,
	      left: 0,
	      //top: `calc(100vh - ${theme.bars.sizes.actionsBar}px)`,
	      bottom: 0,
	      display: "flex",
	      flexDirection: "row",
	      padding: "0 " + theme.base.sizes.linesMargin,
	      justifyContent: "space-between",
	      height: theme.bars.sizes.actionsBar + "px",
	      width: "100%",
	      "&::before": {
	        content: "\"\"",
	        position: "absolute",
	        left: theme.base.sizes.linesMargin,
	        right: theme.base.sizes.linesMargin,
	        height: 0,
	        top: 0,
	        borderTop: "1px solid " + theme.base.colors.lines
	      }
	    }, _actionsBar["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "0 calc(" + theme.base.sizes.linesMargin + " * 1.5)"
	    }, _actionsBar["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      flexDirection: "column",
	      top: 0,
	      right: 0,
	      left: "auto",
	      height: "100%",
	      padding: theme.base.sizes.linesMargin + " 0",
	      width: theme.bars.sizes.actionsBar + "px",
	      "&::before": {
	        top: theme.base.sizes.linesMargin,
	        bottom: theme.base.sizes.linesMargin,
	        left: 0,
	        right: "auto",
	        width: 0,
	        height: "auto",
	        borderLeft: "1px solid " + theme.base.colors.lines
	      }
	    }, _actionsBar),
	    group: (_group = {
	      display: "flex",
	      flexDirection: "row",
	      alignItems: "center"
	    }, _group["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      flexDirection: "column"
	    }, _group),
	    button: {
	      color: theme.bars.colors.icon
	    }
	  };
	};
	
	var ActionsBar = function (_React$Component) {
	  _inherits(ActionsBar, _React$Component);
	
	  function ActionsBar() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ActionsBar);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      fullscreen: false
	    }, _this.homeOnClick = _shared.featureNavigator.bind(_this), _this.searchOnClick = _shared.moveNavigatorAside.bind(_this), _this.fullscreenOnClick = function () {
	      if (_screenfull2.default.enabled) {
	        _screenfull2.default.toggle();
	      }
	    }, _this.arrowUpOnClick = function () {
	      _this.props.setScrollToTop(true);
	    }, _this.fontSetterOnClick = function (val) {
	      _this.props.setFontSizeIncrease(val);
	
	      if (typeof localStorage !== "undefined") {
	        localStorage.setItem("font-size-increase", val);
	      }
	    }, _this.categoryFilterOnClick = function (val) {
	      _this.props.setCategoryFilter(val);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ActionsBar.prototype.componentDidMount = function componentDidMount() {
	    var _this2 = this;
	
	    if (_screenfull2.default.enabled) {
	      _screenfull2.default.on("change", function () {
	        _this2.setState({
	          fullscreen: _screenfull2.default.isFullscreen
	        });
	      });
	    }
	  };
	
	  ActionsBar.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        navigatorPosition = _props.navigatorPosition,
	        navigatorShape = _props.navigatorShape,
	        isWideScreen = _props.isWideScreen,
	        categories = _props.categories;
	
	
	    return _react2.default.createElement(
	      "div",
	      { className: classes.actionsBar },
	      _react2.default.createElement(
	        "div",
	        { className: classes.group },
	        _react2.default.createElement(
	          _IconButton2.default,
	          {
	            "aria-label": "Back to list",
	            onClick: this.homeOnClick,
	            title: "Back to the list",
	            className: classes.button
	          },
	          _react2.default.createElement(_Home2.default, null)
	        ),
	        (isWideScreen && navigatorShape === "open" || navigatorPosition !== "is-aside") && _react2.default.createElement(_CategoryFilter2.default, { categories: categories, filterCategory: this.categoryFilterOnClick }),
	        _react2.default.createElement(
	          _IconButton2.default,
	          {
	            "aria-label": "Search",
	            onClick: this.searchOnClick,
	            component: _gatsbyLink2.default,
	            "data-shape": "closed",
	            to: "/search/",
	            title: "Search",
	            className: classes.button
	          },
	          _react2.default.createElement(_Search2.default, { className: classes.button })
	        )
	      ),
	      _react2.default.createElement(
	        "div",
	        { className: classes.group },
	        navigatorPosition === "is-aside" && _react2.default.createElement(_FontSetter2.default, { increaseFont: this.fontSetterOnClick }),
	        _screenfull2.default.enabled && _react2.default.createElement(
	          _IconButton2.default,
	          {
	            "aria-label": "Fullscreen",
	            onClick: this.fullscreenOnClick,
	            title: "Fullscreen mode",
	            className: classes.button
	          },
	          this.state.fullscreen ? _react2.default.createElement(_FullscreenExit2.default, null) : _react2.default.createElement(_Fullscreen2.default, null)
	        ),
	        _react2.default.createElement(
	          _IconButton2.default,
	          { "aria-label": "Back to top", onClick: this.arrowUpOnClick, title: "Scroll to top" },
	          _react2.default.createElement(_ArrowUpward2.default, { className: classes.button })
	        )
	      )
	    );
	  };
	
	  return ActionsBar;
	}(_react2.default.Component);
	
	ActionsBar.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  navigatorShape: _propTypes2.default.string.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired,
	  setScrollToTop: _propTypes2.default.func.isRequired,
	  setFontSizeIncrease: _propTypes2.default.func.isRequired,
	  categories: _propTypes2.default.array.isRequired,
	  setCategoryFilter: _propTypes2.default.func.isRequired,
	  categoryFilter: _propTypes2.default.string.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    navigatorShape: state.navigatorShape,
	    isWideScreen: state.isWideScreen,
	    categoryFilter: state.categoryFilter
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition,
	  setNavigatorShape: _store.setNavigatorShape,
	  setScrollToTop: _store.setScrollToTop,
	  setFontSizeIncrease: _store.setFontSizeIncrease,
	  setCategoryFilter: _store.setCategoryFilter
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactJss2.default)(styles)(ActionsBar));
	module.exports = exports["default"];

/***/ }),
/* 417 */
/***/ (function(module, exports) {

	/*!
	* screenfull
	* v3.3.2 - 2017-10-27
	* (c) Sindre Sorhus; MIT License
	*/
	(function () {
		'use strict';
	
		var document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};
		var isCommonjs = typeof module !== 'undefined' && module.exports;
		var keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;
	
		var fn = (function () {
			var val;
	
			var fnMap = [
				[
					'requestFullscreen',
					'exitFullscreen',
					'fullscreenElement',
					'fullscreenEnabled',
					'fullscreenchange',
					'fullscreenerror'
				],
				// New WebKit
				[
					'webkitRequestFullscreen',
					'webkitExitFullscreen',
					'webkitFullscreenElement',
					'webkitFullscreenEnabled',
					'webkitfullscreenchange',
					'webkitfullscreenerror'
	
				],
				// Old WebKit (Safari 5.1)
				[
					'webkitRequestFullScreen',
					'webkitCancelFullScreen',
					'webkitCurrentFullScreenElement',
					'webkitCancelFullScreen',
					'webkitfullscreenchange',
					'webkitfullscreenerror'
	
				],
				[
					'mozRequestFullScreen',
					'mozCancelFullScreen',
					'mozFullScreenElement',
					'mozFullScreenEnabled',
					'mozfullscreenchange',
					'mozfullscreenerror'
				],
				[
					'msRequestFullscreen',
					'msExitFullscreen',
					'msFullscreenElement',
					'msFullscreenEnabled',
					'MSFullscreenChange',
					'MSFullscreenError'
				]
			];
	
			var i = 0;
			var l = fnMap.length;
			var ret = {};
	
			for (; i < l; i++) {
				val = fnMap[i];
				if (val && val[1] in document) {
					for (i = 0; i < val.length; i++) {
						ret[fnMap[0][i]] = val[i];
					}
					return ret;
				}
			}
	
			return false;
		})();
	
		var eventNameMap = {
			change: fn.fullscreenchange,
			error: fn.fullscreenerror
		};
	
		var screenfull = {
			request: function (elem) {
				var request = fn.requestFullscreen;
	
				elem = elem || document.documentElement;
	
				// Work around Safari 5.1 bug: reports support for
				// keyboard in fullscreen even though it doesn't.
				// Browser sniffing, since the alternative with
				// setTimeout is even worse.
				if (/ Version\/5\.1(?:\.\d+)? Safari\//.test(navigator.userAgent)) {
					elem[request]();
				} else {
					elem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);
				}
			},
			exit: function () {
				document[fn.exitFullscreen]();
			},
			toggle: function (elem) {
				if (this.isFullscreen) {
					this.exit();
				} else {
					this.request(elem);
				}
			},
			onchange: function (callback) {
				this.on('change', callback);
			},
			onerror: function (callback) {
				this.on('error', callback);
			},
			on: function (event, callback) {
				var eventName = eventNameMap[event];
				if (eventName) {
					document.addEventListener(eventName, callback, false);
				}
			},
			off: function (event, callback) {
				var eventName = eventNameMap[event];
				if (eventName) {
					document.removeEventListener(eventName, callback, false);
				}
			},
			raw: fn
		};
	
		if (!fn) {
			if (isCommonjs) {
				module.exports = false;
			} else {
				window.screenfull = false;
			}
	
			return;
		}
	
		Object.defineProperties(screenfull, {
			isFullscreen: {
				get: function () {
					return Boolean(document[fn.fullscreenElement]);
				}
			},
			element: {
				enumerable: true,
				get: function () {
					return document[fn.fullscreenElement];
				}
			},
			enabled: {
				enumerable: true,
				get: function () {
					// Coerce to boolean in case of old WebKit
					return Boolean(document[fn.fullscreenEnabled]);
				}
			}
		});
	
		if (isCommonjs) {
			module.exports = screenfull;
		} else {
			window.screenfull = screenfull;
		}
	})();


/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
	})), 'Home');
	
	exports.default = _default;

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
	})), 'Search');
	
	exports.default = _default;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
	})), 'ArrowUpward');
	
	exports.default = _default;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"
	})), 'Fullscreen');
	
	exports.default = _default;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"
	})), 'FullscreenExit');
	
	exports.default = _default;

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPopper = __webpack_require__(424);
	
	var _ClickAwayListener = __webpack_require__(426);
	
	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);
	
	var _Grow = __webpack_require__(429);
	
	var _Grow2 = _interopRequireDefault(_Grow);
	
	var _Paper = __webpack_require__(432);
	
	var _Paper2 = _interopRequireDefault(_Paper);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _MenuItem = __webpack_require__(434);
	
	var _MenuItem2 = _interopRequireDefault(_MenuItem);
	
	var _MenuList = __webpack_require__(439);
	
	var _MenuList2 = _interopRequireDefault(_MenuList);
	
	var _IconButton = __webpack_require__(365);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _FormatSize = __webpack_require__(443);
	
	var _FormatSize2 = _interopRequireDefault(_FormatSize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	//import { MenuItem, MenuList } from "@material-ui/core/Menu";
	
	
	var styles = function styles(theme) {
	  var _fontSizeSetter;
	
	  return {
	    fontSizeSetter: (_fontSizeSetter = {}, _fontSizeSetter["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {}, _fontSizeSetter),
	    open: {
	      color: theme.bars.colors.icon
	    },
	    popperClose: {
	      pointerEvents: "none"
	    }
	  };
	};
	
	var FontSetter = function (_React$Component) {
	  _inherits(FontSetter, _React$Component);
	
	  function FontSetter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, FontSetter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      anchorEl: null,
	      open: false
	    }, _this.handleClick = function () {
	      _this.setState({ open: !_this.state.open });
	    }, _this.handleClose = function () {
	      if (!_this.state.open) {
	        return;
	      }
	
	      _this.timeout = setTimeout(function () {
	        _this.setState({ open: false });
	      });
	    }, _this.handleSetting = function (e) {
	      var val = e.target.innerText.replace("%", "");
	      var factor = +val / 100;
	      _this.props.increaseFont(factor);
	      _this.handleClose();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  FontSetter.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearTimeout(this.timeout);
	  };
	
	  FontSetter.prototype.render = function render() {
	    var _classNames;
	
	    var classes = this.props.classes;
	    var _state = this.state,
	        anchorEl = _state.anchorEl,
	        open = _state.open;
	
	
	    return _react2.default.createElement(
	      "nav",
	      { className: classes.fontSizeSetter },
	      _react2.default.createElement(
	        _reactPopper.Manager,
	        null,
	        _react2.default.createElement(
	          _reactPopper.Target,
	          null,
	          _react2.default.createElement(
	            _IconButton2.default,
	            {
	              "aria-label": "Increase font size",
	              "aria-owns": anchorEl ? "long-menu" : null,
	              "aria-haspopup": "true",
	              onClick: this.handleClick,
	              title: "Change font size",
	              className: classes.open
	            },
	            _react2.default.createElement(_FormatSize2.default, null)
	          )
	        ),
	        _react2.default.createElement(
	          _reactPopper.Popper,
	          {
	            placement: "bottom-end",
	            eventsEnabled: open,
	            className: (0, _classnames2.default)((_classNames = {}, _classNames[classes.popperClose] = !open, _classNames))
	          },
	          _react2.default.createElement(
	            _ClickAwayListener2.default,
	            { onClickAway: this.handleClose },
	            _react2.default.createElement(
	              _Grow2.default,
	              { "in": open, id: "font-menu-list", style: { transformOrigin: "0 0 0" } },
	              _react2.default.createElement(
	                _Paper2.default,
	                null,
	                _react2.default.createElement(
	                  _MenuList2.default,
	                  { role: "menu" },
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    { onClick: this.handleSetting },
	                    "150%"
	                  ),
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    { onClick: this.handleSetting },
	                    "125%"
	                  ),
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    { onClick: this.handleSetting },
	                    "100%"
	                  ),
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    { onClick: this.handleSetting },
	                    "80%"
	                  )
	                )
	              )
	            )
	          )
	        )
	      )
	    );
	  };
	
	  return FontSetter;
	}(_react2.default.Component);
	
	FontSetter.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  increaseFont: _propTypes2.default.func.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(FontSetter);
	module.exports = exports["default"];

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var react = __webpack_require__(1);
	var PropTypes = _interopDefault(__webpack_require__(17));
	var PopperJS = _interopDefault(__webpack_require__(425));
	
	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }
	
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};
	
	var objectWithoutProperties = function (obj, keys) {
	  var target = {};
	
	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }
	
	  return target;
	};
	
	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};
	
	var Manager = function (_Component) {
	  inherits(Manager, _Component);
	
	  function Manager() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    classCallCheck(this, Manager);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(_ref, [this].concat(args))), _this), _this._setTargetNode = function (node) {
	      _this._targetNode = node;
	    }, _this._getTargetNode = function () {
	      return _this._targetNode;
	    }, _temp), possibleConstructorReturn(_this, _ret);
	  }
	
	  createClass(Manager, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        popperManager: {
	          setTargetNode: this._setTargetNode,
	          getTargetNode: this._getTargetNode
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          tag = _props.tag,
	          children = _props.children,
	          restProps = objectWithoutProperties(_props, ['tag', 'children']);
	
	      if (tag !== false) {
	        return react.createElement(tag, restProps, children);
	      } else {
	        return children;
	      }
	    }
	  }]);
	  return Manager;
	}(react.Component);
	
	Manager.childContextTypes = {
	  popperManager: PropTypes.object.isRequired
	};
	Manager.propTypes = {
	  tag: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
	  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])
	};
	Manager.defaultProps = {
	  tag: 'div'
	};
	
	var Target = function Target(props, context) {
	  var _props$component = props.component,
	      component = _props$component === undefined ? 'div' : _props$component,
	      innerRef = props.innerRef,
	      children = props.children,
	      restProps = objectWithoutProperties(props, ['component', 'innerRef', 'children']);
	  var popperManager = context.popperManager;
	
	  var targetRef = function targetRef(node) {
	    popperManager.setTargetNode(node);
	    if (typeof innerRef === 'function') {
	      innerRef(node);
	    }
	  };
	
	  if (typeof children === 'function') {
	    var targetProps = { ref: targetRef };
	    return children({ targetProps: targetProps, restProps: restProps });
	  }
	
	  var componentProps = _extends({}, restProps);
	
	  if (typeof component === 'string') {
	    componentProps.ref = targetRef;
	  } else {
	    componentProps.innerRef = targetRef;
	  }
	
	  return react.createElement(component, componentProps, children);
	};
	
	Target.contextTypes = {
	  popperManager: PropTypes.object.isRequired
	};
	
	Target.propTypes = {
	  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
	  innerRef: PropTypes.func,
	  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])
	};
	
	var placements = PopperJS.placements;
	
	var Popper = function (_Component) {
	  inherits(Popper, _Component);
	
	  function Popper() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    classCallCheck(this, Popper);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._setArrowNode = function (node) {
	      _this._arrowNode = node;
	    }, _this._getTargetNode = function () {
	      if (_this.props.target) {
	        return _this.props.target;
	      } else if (!_this.context.popperManager || !_this.context.popperManager.getTargetNode()) {
	        throw new Error('Target missing. Popper must be given a target from the Popper Manager, or as a prop.');
	      }
	      return _this.context.popperManager.getTargetNode();
	    }, _this._getOffsets = function (data) {
	      return Object.keys(data.offsets).map(function (key) {
	        return data.offsets[key];
	      });
	    }, _this._isDataDirty = function (data) {
	      if (_this.state.data) {
	        return JSON.stringify(_this._getOffsets(_this.state.data)) !== JSON.stringify(_this._getOffsets(data));
	      } else {
	        return true;
	      }
	    }, _this._updateStateModifier = {
	      enabled: true,
	      order: 900,
	      fn: function fn(data) {
	        if (_this._isDataDirty(data)) {
	          _this.setState({ data: data });
	        }
	        return data;
	      }
	    }, _this._getPopperStyle = function () {
	      var data = _this.state.data;
	
	
	      if (!_this._popper || !data) {
	        return {
	          position: 'absolute',
	          pointerEvents: 'none',
	          opacity: 0
	        };
	      }
	
	      return _extends({
	        position: data.offsets.popper.position
	      }, data.styles);
	    }, _this._getPopperPlacement = function () {
	      return _this.state.data ? _this.state.data.placement : undefined;
	    }, _this._getPopperHide = function () {
	      return !!_this.state.data && _this.state.data.hide ? '' : undefined;
	    }, _this._getArrowStyle = function () {
	      if (!_this.state.data || !_this.state.data.offsets.arrow) {
	        return {};
	      } else {
	        var _this$state$data$offs = _this.state.data.offsets.arrow,
	            top = _this$state$data$offs.top,
	            left = _this$state$data$offs.left;
	
	        return { top: top, left: left };
	      }
	    }, _this._handlePopperRef = function (node) {
	      _this._popperNode = node;
	      if (node) {
	        _this._createPopper();
	      } else {
	        _this._destroyPopper();
	      }
	      if (_this.props.innerRef) {
	        _this.props.innerRef(node);
	      }
	    }, _this._scheduleUpdate = function () {
	      _this._popper && _this._popper.scheduleUpdate();
	    }, _temp), possibleConstructorReturn(_this, _ret);
	  }
	
	  createClass(Popper, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        popper: {
	          setArrowNode: this._setArrowNode,
	          getArrowStyle: this._getArrowStyle
	        }
	      };
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(lastProps) {
	      if (lastProps.placement !== this.props.placement || lastProps.eventsEnabled !== this.props.eventsEnabled || lastProps.target !== this.props.target) {
	        this._destroyPopper();
	        this._createPopper();
	      }
	      if (lastProps.children !== this.props.children) {
	        this._scheduleUpdate();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._destroyPopper();
	    }
	  }, {
	    key: '_createPopper',
	    value: function _createPopper() {
	      var _this2 = this;
	
	      var _props = this.props,
	          placement = _props.placement,
	          eventsEnabled = _props.eventsEnabled,
	          positionFixed = _props.positionFixed;
	
	      var modifiers = _extends({}, this.props.modifiers, {
	        applyStyle: { enabled: false },
	        updateState: this._updateStateModifier
	      });
	      if (this._arrowNode) {
	        modifiers.arrow = _extends({}, this.props.modifiers.arrow || {}, {
	          element: this._arrowNode
	        });
	      }
	      this._popper = new PopperJS(this._getTargetNode(), this._popperNode, {
	        placement: placement,
	        positionFixed: positionFixed,
	        eventsEnabled: eventsEnabled,
	        modifiers: modifiers
	      });
	
	      // TODO: look into setTimeout scheduleUpdate call, without it, the popper will not position properly on creation
	      setTimeout(function () {
	        return _this2._scheduleUpdate();
	      });
	    }
	  }, {
	    key: '_destroyPopper',
	    value: function _destroyPopper() {
	      if (this._popper) {
	        this._popper.destroy();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          component = _props2.component,
	          innerRef = _props2.innerRef,
	          placement = _props2.placement,
	          eventsEnabled = _props2.eventsEnabled,
	          positionFixed = _props2.positionFixed,
	          modifiers = _props2.modifiers,
	          children = _props2.children,
	          restProps = objectWithoutProperties(_props2, ['component', 'innerRef', 'placement', 'eventsEnabled', 'positionFixed', 'modifiers', 'children']);
	
	      var popperStyle = this._getPopperStyle();
	      var popperPlacement = this._getPopperPlacement();
	      var popperHide = this._getPopperHide();
	
	      if (typeof children === 'function') {
	        var popperProps = {
	          ref: this._handlePopperRef,
	          style: popperStyle,
	          'data-placement': popperPlacement,
	          'data-x-out-of-boundaries': popperHide
	        };
	        return children({
	          popperProps: popperProps,
	          restProps: restProps,
	          scheduleUpdate: this._scheduleUpdate
	        });
	      }
	
	      var componentProps = _extends({}, restProps, {
	        style: _extends({}, restProps.style, popperStyle),
	        'data-placement': popperPlacement,
	        'data-x-out-of-boundaries': popperHide
	      });
	
	      if (typeof component === 'string') {
	        componentProps.ref = this._handlePopperRef;
	      } else {
	        componentProps.innerRef = this._handlePopperRef;
	      }
	
	      return react.createElement(component, componentProps, children);
	    }
	  }]);
	  return Popper;
	}(react.Component);
	
	Popper.contextTypes = {
	  popperManager: PropTypes.object
	};
	Popper.childContextTypes = {
	  popper: PropTypes.object.isRequired
	};
	Popper.propTypes = {
	  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
	  innerRef: PropTypes.func,
	  placement: PropTypes.oneOf(placements),
	  eventsEnabled: PropTypes.bool,
	  positionFixed: PropTypes.bool,
	  modifiers: PropTypes.object,
	  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
	  target: PropTypes.oneOfType([
	  // the following check is needed for SSR
	  PropTypes.instanceOf(typeof Element !== 'undefined' ? Element : Object), PropTypes.shape({
	    getBoundingClientRect: PropTypes.func.isRequired,
	    clientWidth: PropTypes.number.isRequired,
	    clientHeight: PropTypes.number.isRequired
	  })])
	};
	Popper.defaultProps = {
	  component: 'div',
	  placement: 'bottom',
	  eventsEnabled: true,
	  positionFixed: false,
	  modifiers: {}
	};
	
	var Arrow = function Arrow(props, context) {
	  var _props$component = props.component,
	      component = _props$component === undefined ? 'span' : _props$component,
	      innerRef = props.innerRef,
	      children = props.children,
	      restProps = objectWithoutProperties(props, ['component', 'innerRef', 'children']);
	  var popper = context.popper;
	
	  var arrowRef = function arrowRef(node) {
	    popper.setArrowNode(node);
	    if (typeof innerRef === 'function') {
	      innerRef(node);
	    }
	  };
	  var arrowStyle = popper.getArrowStyle();
	
	  if (typeof children === 'function') {
	    var arrowProps = {
	      ref: arrowRef,
	      style: arrowStyle
	    };
	    return children({ arrowProps: arrowProps, restProps: restProps });
	  }
	
	  var componentProps = _extends({}, restProps, {
	    style: _extends({}, arrowStyle, restProps.style)
	  });
	
	  if (typeof component === 'string') {
	    componentProps.ref = arrowRef;
	  } else {
	    componentProps.innerRef = arrowRef;
	  }
	
	  return react.createElement(component, componentProps, children);
	};
	
	Arrow.contextTypes = {
	  popper: PropTypes.object.isRequired
	};
	
	Arrow.propTypes = {
	  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
	  innerRef: PropTypes.func,
	  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])
	};
	
	exports.Manager = Manager;
	exports.Target = Target;
	exports.Popper = Popper;
	exports.placements = placements;
	exports.Arrow = Arrow;
	//# sourceMappingURL=react-popper.js.map


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	/**!
	 * @fileOverview Kickass library to create and place poppers near their reference elements.
	 * @version 1.14.3
	 * @license
	 * Copyright (c) 2016 Federico Zivolo and contributors
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all
	 * copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 * SOFTWARE.
	 */
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.Popper = factory());
	}(this, (function () { 'use strict';
	
	var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';
	
	var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
	var timeoutDuration = 0;
	for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
	  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
	    timeoutDuration = 1;
	    break;
	  }
	}
	
	function microtaskDebounce(fn) {
	  var called = false;
	  return function () {
	    if (called) {
	      return;
	    }
	    called = true;
	    window.Promise.resolve().then(function () {
	      called = false;
	      fn();
	    });
	  };
	}
	
	function taskDebounce(fn) {
	  var scheduled = false;
	  return function () {
	    if (!scheduled) {
	      scheduled = true;
	      setTimeout(function () {
	        scheduled = false;
	        fn();
	      }, timeoutDuration);
	    }
	  };
	}
	
	var supportsMicroTasks = isBrowser && window.Promise;
	
	/**
	* Create a debounced version of a method, that's asynchronously deferred
	* but called in the minimum time possible.
	*
	* @method
	* @memberof Popper.Utils
	* @argument {Function} fn
	* @returns {Function}
	*/
	var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
	
	/**
	 * Check if the given variable is a function
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Any} functionToCheck - variable to check
	 * @returns {Boolean} answer to: is a function?
	 */
	function isFunction(functionToCheck) {
	  var getType = {};
	  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
	}
	
	/**
	 * Get CSS computed property of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Eement} element
	 * @argument {String} property
	 */
	function getStyleComputedProperty(element, property) {
	  if (element.nodeType !== 1) {
	    return [];
	  }
	  // NOTE: 1 DOM access here
	  var css = getComputedStyle(element, null);
	  return property ? css[property] : css;
	}
	
	/**
	 * Returns the parentNode or the host of the element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} parent
	 */
	function getParentNode(element) {
	  if (element.nodeName === 'HTML') {
	    return element;
	  }
	  return element.parentNode || element.host;
	}
	
	/**
	 * Returns the scrolling parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} scroll parent
	 */
	function getScrollParent(element) {
	  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
	  if (!element) {
	    return document.body;
	  }
	
	  switch (element.nodeName) {
	    case 'HTML':
	    case 'BODY':
	      return element.ownerDocument.body;
	    case '#document':
	      return element.body;
	  }
	
	  // Firefox want us to check `-x` and `-y` variations as well
	
	  var _getStyleComputedProp = getStyleComputedProperty(element),
	      overflow = _getStyleComputedProp.overflow,
	      overflowX = _getStyleComputedProp.overflowX,
	      overflowY = _getStyleComputedProp.overflowY;
	
	  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
	    return element;
	  }
	
	  return getScrollParent(getParentNode(element));
	}
	
	var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
	var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
	
	/**
	 * Determines if the browser is Internet Explorer
	 * @method
	 * @memberof Popper.Utils
	 * @param {Number} version to check
	 * @returns {Boolean} isIE
	 */
	function isIE(version) {
	  if (version === 11) {
	    return isIE11;
	  }
	  if (version === 10) {
	    return isIE10;
	  }
	  return isIE11 || isIE10;
	}
	
	/**
	 * Returns the offset parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} offset parent
	 */
	function getOffsetParent(element) {
	  if (!element) {
	    return document.documentElement;
	  }
	
	  var noOffsetParent = isIE(10) ? document.body : null;
	
	  // NOTE: 1 DOM access here
	  var offsetParent = element.offsetParent;
	  // Skip hidden elements which don't have an offsetParent
	  while (offsetParent === noOffsetParent && element.nextElementSibling) {
	    offsetParent = (element = element.nextElementSibling).offsetParent;
	  }
	
	  var nodeName = offsetParent && offsetParent.nodeName;
	
	  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
	    return element ? element.ownerDocument.documentElement : document.documentElement;
	  }
	
	  // .offsetParent will return the closest TD or TABLE in case
	  // no offsetParent is present, I hate this job...
	  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
	    return getOffsetParent(offsetParent);
	  }
	
	  return offsetParent;
	}
	
	function isOffsetContainer(element) {
	  var nodeName = element.nodeName;
	
	  if (nodeName === 'BODY') {
	    return false;
	  }
	  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
	}
	
	/**
	 * Finds the root node (document, shadowDOM root) of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} node
	 * @returns {Element} root node
	 */
	function getRoot(node) {
	  if (node.parentNode !== null) {
	    return getRoot(node.parentNode);
	  }
	
	  return node;
	}
	
	/**
	 * Finds the offset parent common to the two provided nodes
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element1
	 * @argument {Element} element2
	 * @returns {Element} common offset parent
	 */
	function findCommonOffsetParent(element1, element2) {
	  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
	  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
	    return document.documentElement;
	  }
	
	  // Here we make sure to give as "start" the element that comes first in the DOM
	  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
	  var start = order ? element1 : element2;
	  var end = order ? element2 : element1;
	
	  // Get common ancestor container
	  var range = document.createRange();
	  range.setStart(start, 0);
	  range.setEnd(end, 0);
	  var commonAncestorContainer = range.commonAncestorContainer;
	
	  // Both nodes are inside #document
	
	  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
	    if (isOffsetContainer(commonAncestorContainer)) {
	      return commonAncestorContainer;
	    }
	
	    return getOffsetParent(commonAncestorContainer);
	  }
	
	  // one of the nodes is inside shadowDOM, find which one
	  var element1root = getRoot(element1);
	  if (element1root.host) {
	    return findCommonOffsetParent(element1root.host, element2);
	  } else {
	    return findCommonOffsetParent(element1, getRoot(element2).host);
	  }
	}
	
	/**
	 * Gets the scroll value of the given element in the given side (top and left)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {String} side `top` or `left`
	 * @returns {number} amount of scrolled pixels
	 */
	function getScroll(element) {
	  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
	
	  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
	  var nodeName = element.nodeName;
	
	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    var html = element.ownerDocument.documentElement;
	    var scrollingElement = element.ownerDocument.scrollingElement || html;
	    return scrollingElement[upperSide];
	  }
	
	  return element[upperSide];
	}
	
	/*
	 * Sum or subtract the element scroll values (left and top) from a given rect object
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} rect - Rect object you want to change
	 * @param {HTMLElement} element - The element from the function reads the scroll values
	 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
	 * @return {Object} rect - The modifier rect object
	 */
	function includeScroll(rect, element) {
	  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	  var scrollTop = getScroll(element, 'top');
	  var scrollLeft = getScroll(element, 'left');
	  var modifier = subtract ? -1 : 1;
	  rect.top += scrollTop * modifier;
	  rect.bottom += scrollTop * modifier;
	  rect.left += scrollLeft * modifier;
	  rect.right += scrollLeft * modifier;
	  return rect;
	}
	
	/*
	 * Helper to detect borders of a given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {CSSStyleDeclaration} styles
	 * Result of `getStyleComputedProperty` on the given element
	 * @param {String} axis - `x` or `y`
	 * @return {number} borders - The borders size of the given axis
	 */
	
	function getBordersSize(styles, axis) {
	  var sideA = axis === 'x' ? 'Left' : 'Top';
	  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
	
	  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
	}
	
	function getSize(axis, body, html, computedStyle) {
	  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
	}
	
	function getWindowSizes() {
	  var body = document.body;
	  var html = document.documentElement;
	  var computedStyle = isIE(10) && getComputedStyle(html);
	
	  return {
	    height: getSize('Height', body, html, computedStyle),
	    width: getSize('Width', body, html, computedStyle)
	  };
	}
	
	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();
	
	
	
	
	
	var defineProperty = function (obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	/**
	 * Given element offsets, generate an output similar to getBoundingClientRect
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} offsets
	 * @returns {Object} ClientRect like output
	 */
	function getClientRect(offsets) {
	  return _extends({}, offsets, {
	    right: offsets.left + offsets.width,
	    bottom: offsets.top + offsets.height
	  });
	}
	
	/**
	 * Get bounding client rect of given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} element
	 * @return {Object} client rect
	 */
	function getBoundingClientRect(element) {
	  var rect = {};
	
	  // IE10 10 FIX: Please, don't ask, the element isn't
	  // considered in DOM in some circumstances...
	  // This isn't reproducible in IE10 compatibility mode of IE11
	  try {
	    if (isIE(10)) {
	      rect = element.getBoundingClientRect();
	      var scrollTop = getScroll(element, 'top');
	      var scrollLeft = getScroll(element, 'left');
	      rect.top += scrollTop;
	      rect.left += scrollLeft;
	      rect.bottom += scrollTop;
	      rect.right += scrollLeft;
	    } else {
	      rect = element.getBoundingClientRect();
	    }
	  } catch (e) {}
	
	  var result = {
	    left: rect.left,
	    top: rect.top,
	    width: rect.right - rect.left,
	    height: rect.bottom - rect.top
	  };
	
	  // subtract scrollbar size from sizes
	  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
	  var width = sizes.width || element.clientWidth || result.right - result.left;
	  var height = sizes.height || element.clientHeight || result.bottom - result.top;
	
	  var horizScrollbar = element.offsetWidth - width;
	  var vertScrollbar = element.offsetHeight - height;
	
	  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
	  // we make this check conditional for performance reasons
	  if (horizScrollbar || vertScrollbar) {
	    var styles = getStyleComputedProperty(element);
	    horizScrollbar -= getBordersSize(styles, 'x');
	    vertScrollbar -= getBordersSize(styles, 'y');
	
	    result.width -= horizScrollbar;
	    result.height -= vertScrollbar;
	  }
	
	  return getClientRect(result);
	}
	
	function getOffsetRectRelativeToArbitraryNode(children, parent) {
	  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	  var isIE10 = isIE(10);
	  var isHTML = parent.nodeName === 'HTML';
	  var childrenRect = getBoundingClientRect(children);
	  var parentRect = getBoundingClientRect(parent);
	  var scrollParent = getScrollParent(children);
	
	  var styles = getStyleComputedProperty(parent);
	  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
	  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);
	
	  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
	  if (fixedPosition && parent.nodeName === 'HTML') {
	    parentRect.top = Math.max(parentRect.top, 0);
	    parentRect.left = Math.max(parentRect.left, 0);
	  }
	  var offsets = getClientRect({
	    top: childrenRect.top - parentRect.top - borderTopWidth,
	    left: childrenRect.left - parentRect.left - borderLeftWidth,
	    width: childrenRect.width,
	    height: childrenRect.height
	  });
	  offsets.marginTop = 0;
	  offsets.marginLeft = 0;
	
	  // Subtract margins of documentElement in case it's being used as parent
	  // we do this only on HTML because it's the only element that behaves
	  // differently when margins are applied to it. The margins are included in
	  // the box of the documentElement, in the other cases not.
	  if (!isIE10 && isHTML) {
	    var marginTop = parseFloat(styles.marginTop, 10);
	    var marginLeft = parseFloat(styles.marginLeft, 10);
	
	    offsets.top -= borderTopWidth - marginTop;
	    offsets.bottom -= borderTopWidth - marginTop;
	    offsets.left -= borderLeftWidth - marginLeft;
	    offsets.right -= borderLeftWidth - marginLeft;
	
	    // Attach marginTop and marginLeft because in some circumstances we may need them
	    offsets.marginTop = marginTop;
	    offsets.marginLeft = marginLeft;
	  }
	
	  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
	    offsets = includeScroll(offsets, parent);
	  }
	
	  return offsets;
	}
	
	function getViewportOffsetRectRelativeToArtbitraryNode(element) {
	  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  var html = element.ownerDocument.documentElement;
	  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
	  var width = Math.max(html.clientWidth, window.innerWidth || 0);
	  var height = Math.max(html.clientHeight, window.innerHeight || 0);
	
	  var scrollTop = !excludeScroll ? getScroll(html) : 0;
	  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
	
	  var offset = {
	    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
	    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
	    width: width,
	    height: height
	  };
	
	  return getClientRect(offset);
	}
	
	/**
	 * Check if the given element is fixed or is inside a fixed parent
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {Element} customContainer
	 * @returns {Boolean} answer to "isFixed?"
	 */
	function isFixed(element) {
	  var nodeName = element.nodeName;
	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    return false;
	  }
	  if (getStyleComputedProperty(element, 'position') === 'fixed') {
	    return true;
	  }
	  return isFixed(getParentNode(element));
	}
	
	/**
	 * Finds the first parent of an element that has a transformed property defined
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} first transformed parent or documentElement
	 */
	
	function getFixedPositionOffsetParent(element) {
	  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
	  if (!element || !element.parentElement || isIE()) {
	    return document.documentElement;
	  }
	  var el = element.parentElement;
	  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
	    el = el.parentElement;
	  }
	  return el || document.documentElement;
	}
	
	/**
	 * Computed the boundaries limits and return them
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} popper
	 * @param {HTMLElement} reference
	 * @param {number} padding
	 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
	 * @param {Boolean} fixedPosition - Is in fixed position mode
	 * @returns {Object} Coordinates of the boundaries
	 */
	function getBoundaries(popper, reference, padding, boundariesElement) {
	  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
	
	  // NOTE: 1 DOM access here
	
	  var boundaries = { top: 0, left: 0 };
	  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
	
	  // Handle viewport case
	  if (boundariesElement === 'viewport') {
	    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
	  } else {
	    // Handle other cases based on DOM element used as boundaries
	    var boundariesNode = void 0;
	    if (boundariesElement === 'scrollParent') {
	      boundariesNode = getScrollParent(getParentNode(reference));
	      if (boundariesNode.nodeName === 'BODY') {
	        boundariesNode = popper.ownerDocument.documentElement;
	      }
	    } else if (boundariesElement === 'window') {
	      boundariesNode = popper.ownerDocument.documentElement;
	    } else {
	      boundariesNode = boundariesElement;
	    }
	
	    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
	
	    // In case of HTML, we need a different computation
	    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
	      var _getWindowSizes = getWindowSizes(),
	          height = _getWindowSizes.height,
	          width = _getWindowSizes.width;
	
	      boundaries.top += offsets.top - offsets.marginTop;
	      boundaries.bottom = height + offsets.top;
	      boundaries.left += offsets.left - offsets.marginLeft;
	      boundaries.right = width + offsets.left;
	    } else {
	      // for all the other DOM elements, this one is good
	      boundaries = offsets;
	    }
	  }
	
	  // Add paddings
	  boundaries.left += padding;
	  boundaries.top += padding;
	  boundaries.right -= padding;
	  boundaries.bottom -= padding;
	
	  return boundaries;
	}
	
	function getArea(_ref) {
	  var width = _ref.width,
	      height = _ref.height;
	
	  return width * height;
	}
	
	/**
	 * Utility used to transform the `auto` placement to the placement with more
	 * available space.
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
	  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
	
	  if (placement.indexOf('auto') === -1) {
	    return placement;
	  }
	
	  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
	
	  var rects = {
	    top: {
	      width: boundaries.width,
	      height: refRect.top - boundaries.top
	    },
	    right: {
	      width: boundaries.right - refRect.right,
	      height: boundaries.height
	    },
	    bottom: {
	      width: boundaries.width,
	      height: boundaries.bottom - refRect.bottom
	    },
	    left: {
	      width: refRect.left - boundaries.left,
	      height: boundaries.height
	    }
	  };
	
	  var sortedAreas = Object.keys(rects).map(function (key) {
	    return _extends({
	      key: key
	    }, rects[key], {
	      area: getArea(rects[key])
	    });
	  }).sort(function (a, b) {
	    return b.area - a.area;
	  });
	
	  var filteredAreas = sortedAreas.filter(function (_ref2) {
	    var width = _ref2.width,
	        height = _ref2.height;
	    return width >= popper.clientWidth && height >= popper.clientHeight;
	  });
	
	  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
	
	  var variation = placement.split('-')[1];
	
	  return computedPlacement + (variation ? '-' + variation : '');
	}
	
	/**
	 * Get offsets to the reference element
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} state
	 * @param {Element} popper - the popper element
	 * @param {Element} reference - the reference element (the popper will be relative to this)
	 * @param {Element} fixedPosition - is in fixed position mode
	 * @returns {Object} An object containing the offsets which will be applied to the popper
	 */
	function getReferenceOffsets(state, popper, reference) {
	  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
	
	  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
	  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
	}
	
	/**
	 * Get the outer sizes of the given element (offset size + margins)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Object} object containing width and height properties
	 */
	function getOuterSizes(element) {
	  var styles = getComputedStyle(element);
	  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
	  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
	  var result = {
	    width: element.offsetWidth + y,
	    height: element.offsetHeight + x
	  };
	  return result;
	}
	
	/**
	 * Get the opposite placement of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement
	 * @returns {String} flipped placement
	 */
	function getOppositePlacement(placement) {
	  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash[matched];
	  });
	}
	
	/**
	 * Get offsets to the popper
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} position - CSS position the Popper will get applied
	 * @param {HTMLElement} popper - the popper element
	 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
	 * @param {String} placement - one of the valid placement options
	 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
	 */
	function getPopperOffsets(popper, referenceOffsets, placement) {
	  placement = placement.split('-')[0];
	
	  // Get popper node sizes
	  var popperRect = getOuterSizes(popper);
	
	  // Add position, width and height to our offsets object
	  var popperOffsets = {
	    width: popperRect.width,
	    height: popperRect.height
	  };
	
	  // depending by the popper placement we have to compute its offsets slightly differently
	  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
	  var mainSide = isHoriz ? 'top' : 'left';
	  var secondarySide = isHoriz ? 'left' : 'top';
	  var measurement = isHoriz ? 'height' : 'width';
	  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
	
	  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
	  if (placement === secondarySide) {
	    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
	  } else {
	    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
	  }
	
	  return popperOffsets;
	}
	
	/**
	 * Mimics the `find` method of Array
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function find(arr, check) {
	  // use native find if supported
	  if (Array.prototype.find) {
	    return arr.find(check);
	  }
	
	  // use `filter` to obtain the same behavior of `find`
	  return arr.filter(check)[0];
	}
	
	/**
	 * Return the index of the matching object
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function findIndex(arr, prop, value) {
	  // use native findIndex if supported
	  if (Array.prototype.findIndex) {
	    return arr.findIndex(function (cur) {
	      return cur[prop] === value;
	    });
	  }
	
	  // use `find` + `indexOf` if `findIndex` isn't supported
	  var match = find(arr, function (obj) {
	    return obj[prop] === value;
	  });
	  return arr.indexOf(match);
	}
	
	/**
	 * Loop trough the list of modifiers and run them in order,
	 * each of them will then edit the data object.
	 * @method
	 * @memberof Popper.Utils
	 * @param {dataObject} data
	 * @param {Array} modifiers
	 * @param {String} ends - Optional modifier name used as stopper
	 * @returns {dataObject}
	 */
	function runModifiers(modifiers, data, ends) {
	  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
	
	  modifiersToRun.forEach(function (modifier) {
	    if (modifier['function']) {
	      // eslint-disable-line dot-notation
	      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
	    }
	    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
	    if (modifier.enabled && isFunction(fn)) {
	      // Add properties to offsets to make them a complete clientRect object
	      // we do this before each modifier to make sure the previous one doesn't
	      // mess with these values
	      data.offsets.popper = getClientRect(data.offsets.popper);
	      data.offsets.reference = getClientRect(data.offsets.reference);
	
	      data = fn(data, modifier);
	    }
	  });
	
	  return data;
	}
	
	/**
	 * Updates the position of the popper, computing the new offsets and applying
	 * the new style.<br />
	 * Prefer `scheduleUpdate` over `update` because of performance reasons.
	 * @method
	 * @memberof Popper
	 */
	function update() {
	  // if popper is destroyed, don't perform any further update
	  if (this.state.isDestroyed) {
	    return;
	  }
	
	  var data = {
	    instance: this,
	    styles: {},
	    arrowStyles: {},
	    attributes: {},
	    flipped: false,
	    offsets: {}
	  };
	
	  // compute reference element offsets
	  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
	
	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
	
	  // store the computed placement inside `originalPlacement`
	  data.originalPlacement = data.placement;
	
	  data.positionFixed = this.options.positionFixed;
	
	  // compute the popper offsets
	  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
	
	  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';
	
	  // run the modifiers
	  data = runModifiers(this.modifiers, data);
	
	  // the first `update` will call `onCreate` callback
	  // the other ones will call `onUpdate` callback
	  if (!this.state.isCreated) {
	    this.state.isCreated = true;
	    this.options.onCreate(data);
	  } else {
	    this.options.onUpdate(data);
	  }
	}
	
	/**
	 * Helper used to know if the given modifier is enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @returns {Boolean}
	 */
	function isModifierEnabled(modifiers, modifierName) {
	  return modifiers.some(function (_ref) {
	    var name = _ref.name,
	        enabled = _ref.enabled;
	    return enabled && name === modifierName;
	  });
	}
	
	/**
	 * Get the prefixed supported property name
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} property (camelCase)
	 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
	 */
	function getSupportedPropertyName(property) {
	  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
	  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
	
	  for (var i = 0; i < prefixes.length; i++) {
	    var prefix = prefixes[i];
	    var toCheck = prefix ? '' + prefix + upperProp : property;
	    if (typeof document.body.style[toCheck] !== 'undefined') {
	      return toCheck;
	    }
	  }
	  return null;
	}
	
	/**
	 * Destroy the popper
	 * @method
	 * @memberof Popper
	 */
	function destroy() {
	  this.state.isDestroyed = true;
	
	  // touch DOM only if `applyStyle` modifier is enabled
	  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
	    this.popper.removeAttribute('x-placement');
	    this.popper.style.position = '';
	    this.popper.style.top = '';
	    this.popper.style.left = '';
	    this.popper.style.right = '';
	    this.popper.style.bottom = '';
	    this.popper.style.willChange = '';
	    this.popper.style[getSupportedPropertyName('transform')] = '';
	  }
	
	  this.disableEventListeners();
	
	  // remove the popper if user explicity asked for the deletion on destroy
	  // do not use `remove` because IE11 doesn't support it
	  if (this.options.removeOnDestroy) {
	    this.popper.parentNode.removeChild(this.popper);
	  }
	  return this;
	}
	
	/**
	 * Get the window associated with the element
	 * @argument {Element} element
	 * @returns {Window}
	 */
	function getWindow(element) {
	  var ownerDocument = element.ownerDocument;
	  return ownerDocument ? ownerDocument.defaultView : window;
	}
	
	function attachToScrollParents(scrollParent, event, callback, scrollParents) {
	  var isBody = scrollParent.nodeName === 'BODY';
	  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
	  target.addEventListener(event, callback, { passive: true });
	
	  if (!isBody) {
	    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
	  }
	  scrollParents.push(target);
	}
	
	/**
	 * Setup needed event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function setupEventListeners(reference, options, state, updateBound) {
	  // Resize event listener on window
	  state.updateBound = updateBound;
	  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });
	
	  // Scroll event listener on scroll parents
	  var scrollElement = getScrollParent(reference);
	  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
	  state.scrollElement = scrollElement;
	  state.eventsEnabled = true;
	
	  return state;
	}
	
	/**
	 * It will add resize/scroll events and start recalculating
	 * position of the popper element when they are triggered.
	 * @method
	 * @memberof Popper
	 */
	function enableEventListeners() {
	  if (!this.state.eventsEnabled) {
	    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
	  }
	}
	
	/**
	 * Remove event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function removeEventListeners(reference, state) {
	  // Remove resize event listener on window
	  getWindow(reference).removeEventListener('resize', state.updateBound);
	
	  // Remove scroll event listener on scroll parents
	  state.scrollParents.forEach(function (target) {
	    target.removeEventListener('scroll', state.updateBound);
	  });
	
	  // Reset state
	  state.updateBound = null;
	  state.scrollParents = [];
	  state.scrollElement = null;
	  state.eventsEnabled = false;
	  return state;
	}
	
	/**
	 * It will remove resize/scroll events and won't recalculate popper position
	 * when they are triggered. It also won't trigger onUpdate callback anymore,
	 * unless you call `update` method manually.
	 * @method
	 * @memberof Popper
	 */
	function disableEventListeners() {
	  if (this.state.eventsEnabled) {
	    cancelAnimationFrame(this.scheduleUpdate);
	    this.state = removeEventListeners(this.reference, this.state);
	  }
	}
	
	/**
	 * Tells if a given input is a number
	 * @method
	 * @memberof Popper.Utils
	 * @param {*} input to check
	 * @return {Boolean}
	 */
	function isNumeric(n) {
	  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
	}
	
	/**
	 * Set the style to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the style to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setStyles(element, styles) {
	  Object.keys(styles).forEach(function (prop) {
	    var unit = '';
	    // add unit if the value is numeric and is one of the following
	    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
	      unit = 'px';
	    }
	    element.style[prop] = styles[prop] + unit;
	  });
	}
	
	/**
	 * Set the attributes to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the attributes to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setAttributes(element, attributes) {
	  Object.keys(attributes).forEach(function (prop) {
	    var value = attributes[prop];
	    if (value !== false) {
	      element.setAttribute(prop, attributes[prop]);
	    } else {
	      element.removeAttribute(prop);
	    }
	  });
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} data.styles - List of style properties - values to apply to popper element
	 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The same data object
	 */
	function applyStyle(data) {
	  // any property present in `data.styles` will be applied to the popper,
	  // in this way we can make the 3rd party modifiers add custom styles to it
	  // Be aware, modifiers could override the properties defined in the previous
	  // lines of this modifier!
	  setStyles(data.instance.popper, data.styles);
	
	  // any property present in `data.attributes` will be applied to the popper,
	  // they will be set as HTML attributes of the element
	  setAttributes(data.instance.popper, data.attributes);
	
	  // if arrowElement is defined and arrowStyles has some properties
	  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
	    setStyles(data.arrowElement, data.arrowStyles);
	  }
	
	  return data;
	}
	
	/**
	 * Set the x-placement attribute before everything else because it could be used
	 * to add margins to the popper margins needs to be calculated to get the
	 * correct popper offsets.
	 * @method
	 * @memberof Popper.modifiers
	 * @param {HTMLElement} reference - The reference element used to position the popper
	 * @param {HTMLElement} popper - The HTML element used as popper
	 * @param {Object} options - Popper.js options
	 */
	function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
	  // compute reference element offsets
	  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
	
	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
	
	  popper.setAttribute('x-placement', placement);
	
	  // Apply `position` to popper before anything else because
	  // without the position applied we can't guarantee correct computations
	  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });
	
	  return options;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeStyle(data, options) {
	  var x = options.x,
	      y = options.y;
	  var popper = data.offsets.popper;
	
	  // Remove this legacy support in Popper.js v2
	
	  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'applyStyle';
	  }).gpuAcceleration;
	  if (legacyGpuAccelerationOption !== undefined) {
	    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
	  }
	  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
	
	  var offsetParent = getOffsetParent(data.instance.popper);
	  var offsetParentRect = getBoundingClientRect(offsetParent);
	
	  // Styles
	  var styles = {
	    position: popper.position
	  };
	
	  // Avoid blurry text by using full pixel integers.
	  // For pixel-perfect positioning, top/bottom prefers rounded
	  // values, while left/right prefers floored values.
	  var offsets = {
	    left: Math.floor(popper.left),
	    top: Math.round(popper.top),
	    bottom: Math.round(popper.bottom),
	    right: Math.floor(popper.right)
	  };
	
	  var sideA = x === 'bottom' ? 'top' : 'bottom';
	  var sideB = y === 'right' ? 'left' : 'right';
	
	  // if gpuAcceleration is set to `true` and transform is supported,
	  //  we use `translate3d` to apply the position to the popper we
	  // automatically use the supported prefixed version if needed
	  var prefixedProperty = getSupportedPropertyName('transform');
	
	  // now, let's make a step back and look at this code closely (wtf?)
	  // If the content of the popper grows once it's been positioned, it
	  // may happen that the popper gets misplaced because of the new content
	  // overflowing its reference element
	  // To avoid this problem, we provide two options (x and y), which allow
	  // the consumer to define the offset origin.
	  // If we position a popper on top of a reference element, we can set
	  // `x` to `top` to make the popper grow towards its top instead of
	  // its bottom.
	  var left = void 0,
	      top = void 0;
	  if (sideA === 'bottom') {
	    top = -offsetParentRect.height + offsets.bottom;
	  } else {
	    top = offsets.top;
	  }
	  if (sideB === 'right') {
	    left = -offsetParentRect.width + offsets.right;
	  } else {
	    left = offsets.left;
	  }
	  if (gpuAcceleration && prefixedProperty) {
	    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
	    styles[sideA] = 0;
	    styles[sideB] = 0;
	    styles.willChange = 'transform';
	  } else {
	    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
	    var invertTop = sideA === 'bottom' ? -1 : 1;
	    var invertLeft = sideB === 'right' ? -1 : 1;
	    styles[sideA] = top * invertTop;
	    styles[sideB] = left * invertLeft;
	    styles.willChange = sideA + ', ' + sideB;
	  }
	
	  // Attributes
	  var attributes = {
	    'x-placement': data.placement
	  };
	
	  // Update `data` attributes, styles and arrowStyles
	  data.attributes = _extends({}, attributes, data.attributes);
	  data.styles = _extends({}, styles, data.styles);
	  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
	
	  return data;
	}
	
	/**
	 * Helper used to know if the given modifier depends from another one.<br />
	 * It checks if the needed modifier is listed and enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @param {Array} modifiers - list of modifiers
	 * @param {String} requestingName - name of requesting modifier
	 * @param {String} requestedName - name of requested modifier
	 * @returns {Boolean}
	 */
	function isModifierRequired(modifiers, requestingName, requestedName) {
	  var requesting = find(modifiers, function (_ref) {
	    var name = _ref.name;
	    return name === requestingName;
	  });
	
	  var isRequired = !!requesting && modifiers.some(function (modifier) {
	    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
	  });
	
	  if (!isRequired) {
	    var _requesting = '`' + requestingName + '`';
	    var requested = '`' + requestedName + '`';
	    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
	  }
	  return isRequired;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function arrow(data, options) {
	  var _data$offsets$arrow;
	
	  // arrow depends on keepTogether in order to work
	  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
	    return data;
	  }
	
	  var arrowElement = options.element;
	
	  // if arrowElement is a string, suppose it's a CSS selector
	  if (typeof arrowElement === 'string') {
	    arrowElement = data.instance.popper.querySelector(arrowElement);
	
	    // if arrowElement is not found, don't run the modifier
	    if (!arrowElement) {
	      return data;
	    }
	  } else {
	    // if the arrowElement isn't a query selector we must check that the
	    // provided DOM node is child of its popper node
	    if (!data.instance.popper.contains(arrowElement)) {
	      console.warn('WARNING: `arrow.element` must be child of its popper element!');
	      return data;
	    }
	  }
	
	  var placement = data.placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	
	  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
	
	  var len = isVertical ? 'height' : 'width';
	  var sideCapitalized = isVertical ? 'Top' : 'Left';
	  var side = sideCapitalized.toLowerCase();
	  var altSide = isVertical ? 'left' : 'top';
	  var opSide = isVertical ? 'bottom' : 'right';
	  var arrowElementSize = getOuterSizes(arrowElement)[len];
	
	  //
	  // extends keepTogether behavior making sure the popper and its
	  // reference have enough pixels in conjuction
	  //
	
	  // top/left side
	  if (reference[opSide] - arrowElementSize < popper[side]) {
	    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
	  }
	  // bottom/right side
	  if (reference[side] + arrowElementSize > popper[opSide]) {
	    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
	  }
	  data.offsets.popper = getClientRect(data.offsets.popper);
	
	  // compute center of the popper
	  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
	
	  // Compute the sideValue using the updated popper offsets
	  // take popper margin in account because we don't have this info available
	  var css = getStyleComputedProperty(data.instance.popper);
	  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
	  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
	  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
	
	  // prevent arrowElement from being placed not contiguously to its popper
	  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
	
	  data.arrowElement = arrowElement;
	  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
	
	  return data;
	}
	
	/**
	 * Get the opposite placement variation of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement variation
	 * @returns {String} flipped placement variation
	 */
	function getOppositeVariation(variation) {
	  if (variation === 'end') {
	    return 'start';
	  } else if (variation === 'start') {
	    return 'end';
	  }
	  return variation;
	}
	
	/**
	 * List of accepted placements to use as values of the `placement` option.<br />
	 * Valid placements are:
	 * - `auto`
	 * - `top`
	 * - `right`
	 * - `bottom`
	 * - `left`
	 *
	 * Each placement can have a variation from this list:
	 * - `-start`
	 * - `-end`
	 *
	 * Variations are interpreted easily if you think of them as the left to right
	 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
	 * is right.<br />
	 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
	 *
	 * Some valid examples are:
	 * - `top-end` (on top of reference, right aligned)
	 * - `right-start` (on right of reference, top aligned)
	 * - `bottom` (on bottom, centered)
	 * - `auto-right` (on the side with more space available, alignment depends by placement)
	 *
	 * @static
	 * @type {Array}
	 * @enum {String}
	 * @readonly
	 * @method placements
	 * @memberof Popper
	 */
	var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];
	
	// Get rid of `auto` `auto-start` and `auto-end`
	var validPlacements = placements.slice(3);
	
	/**
	 * Given an initial placement, returns all the subsequent placements
	 * clockwise (or counter-clockwise).
	 *
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement - A valid placement (it accepts variations)
	 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
	 * @returns {Array} placements including their variations
	 */
	function clockwise(placement) {
	  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  var index = validPlacements.indexOf(placement);
	  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
	  return counter ? arr.reverse() : arr;
	}
	
	var BEHAVIORS = {
	  FLIP: 'flip',
	  CLOCKWISE: 'clockwise',
	  COUNTERCLOCKWISE: 'counterclockwise'
	};
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function flip(data, options) {
	  // if `inner` modifier is enabled, we can't use the `flip` modifier
	  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
	    return data;
	  }
	
	  if (data.flipped && data.placement === data.originalPlacement) {
	    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
	    return data;
	  }
	
	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
	
	  var placement = data.placement.split('-')[0];
	  var placementOpposite = getOppositePlacement(placement);
	  var variation = data.placement.split('-')[1] || '';
	
	  var flipOrder = [];
	
	  switch (options.behavior) {
	    case BEHAVIORS.FLIP:
	      flipOrder = [placement, placementOpposite];
	      break;
	    case BEHAVIORS.CLOCKWISE:
	      flipOrder = clockwise(placement);
	      break;
	    case BEHAVIORS.COUNTERCLOCKWISE:
	      flipOrder = clockwise(placement, true);
	      break;
	    default:
	      flipOrder = options.behavior;
	  }
	
	  flipOrder.forEach(function (step, index) {
	    if (placement !== step || flipOrder.length === index + 1) {
	      return data;
	    }
	
	    placement = data.placement.split('-')[0];
	    placementOpposite = getOppositePlacement(placement);
	
	    var popperOffsets = data.offsets.popper;
	    var refOffsets = data.offsets.reference;
	
	    // using floor because the reference offsets may contain decimals we are not going to consider here
	    var floor = Math.floor;
	    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
	
	    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
	    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
	    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
	    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
	
	    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;
	
	    // flip the variation if required
	    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);
	
	    if (overlapsRef || overflowsBoundaries || flippedVariation) {
	      // this boolean to detect any flip loop
	      data.flipped = true;
	
	      if (overlapsRef || overflowsBoundaries) {
	        placement = flipOrder[index + 1];
	      }
	
	      if (flippedVariation) {
	        variation = getOppositeVariation(variation);
	      }
	
	      data.placement = placement + (variation ? '-' + variation : '');
	
	      // this object contains `position`, we want to preserve it along with
	      // any additional property we may add in the future
	      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
	
	      data = runModifiers(data.instance.modifiers, data, 'flip');
	    }
	  });
	  return data;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function keepTogether(data) {
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	
	  var placement = data.placement.split('-')[0];
	  var floor = Math.floor;
	  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	  var side = isVertical ? 'right' : 'bottom';
	  var opSide = isVertical ? 'left' : 'top';
	  var measurement = isVertical ? 'width' : 'height';
	
	  if (popper[side] < floor(reference[opSide])) {
	    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
	  }
	  if (popper[opSide] > floor(reference[side])) {
	    data.offsets.popper[opSide] = floor(reference[side]);
	  }
	
	  return data;
	}
	
	/**
	 * Converts a string containing value + unit into a px value number
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} str - Value + unit string
	 * @argument {String} measurement - `height` or `width`
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @returns {Number|String}
	 * Value in pixels, or original string if no values were extracted
	 */
	function toValue(str, measurement, popperOffsets, referenceOffsets) {
	  // separate value from unit
	  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
	  var value = +split[1];
	  var unit = split[2];
	
	  // If it's not a number it's an operator, I guess
	  if (!value) {
	    return str;
	  }
	
	  if (unit.indexOf('%') === 0) {
	    var element = void 0;
	    switch (unit) {
	      case '%p':
	        element = popperOffsets;
	        break;
	      case '%':
	      case '%r':
	      default:
	        element = referenceOffsets;
	    }
	
	    var rect = getClientRect(element);
	    return rect[measurement] / 100 * value;
	  } else if (unit === 'vh' || unit === 'vw') {
	    // if is a vh or vw, we calculate the size based on the viewport
	    var size = void 0;
	    if (unit === 'vh') {
	      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
	    } else {
	      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	    }
	    return size / 100 * value;
	  } else {
	    // if is an explicit pixel unit, we get rid of the unit and keep the value
	    // if is an implicit unit, it's px, and we return just the value
	    return value;
	  }
	}
	
	/**
	 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} offset
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @argument {String} basePlacement
	 * @returns {Array} a two cells array with x and y offsets in numbers
	 */
	function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
	  var offsets = [0, 0];
	
	  // Use height if placement is left or right and index is 0 otherwise use width
	  // in this way the first offset will use an axis and the second one
	  // will use the other one
	  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;
	
	  // Split the offset string to obtain a list of values and operands
	  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
	  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
	    return frag.trim();
	  });
	
	  // Detect if the offset string contains a pair of values or a single one
	  // they could be separated by comma or space
	  var divider = fragments.indexOf(find(fragments, function (frag) {
	    return frag.search(/,|\s/) !== -1;
	  }));
	
	  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
	    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
	  }
	
	  // If divider is found, we divide the list of values and operands to divide
	  // them by ofset X and Y.
	  var splitRegex = /\s*,\s*|\s+/;
	  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
	
	  // Convert the values with units to absolute pixels to allow our computations
	  ops = ops.map(function (op, index) {
	    // Most of the units rely on the orientation of the popper
	    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
	    var mergeWithPrevious = false;
	    return op
	    // This aggregates any `+` or `-` sign that aren't considered operators
	    // e.g.: 10 + +5 => [10, +, +5]
	    .reduce(function (a, b) {
	      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
	        a[a.length - 1] = b;
	        mergeWithPrevious = true;
	        return a;
	      } else if (mergeWithPrevious) {
	        a[a.length - 1] += b;
	        mergeWithPrevious = false;
	        return a;
	      } else {
	        return a.concat(b);
	      }
	    }, [])
	    // Here we convert the string values into number values (in px)
	    .map(function (str) {
	      return toValue(str, measurement, popperOffsets, referenceOffsets);
	    });
	  });
	
	  // Loop trough the offsets arrays and execute the operations
	  ops.forEach(function (op, index) {
	    op.forEach(function (frag, index2) {
	      if (isNumeric(frag)) {
	        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
	      }
	    });
	  });
	  return offsets;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @argument {Number|String} options.offset=0
	 * The offset value as described in the modifier description
	 * @returns {Object} The data object, properly modified
	 */
	function offset(data, _ref) {
	  var offset = _ref.offset;
	  var placement = data.placement,
	      _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	
	  var basePlacement = placement.split('-')[0];
	
	  var offsets = void 0;
	  if (isNumeric(+offset)) {
	    offsets = [+offset, 0];
	  } else {
	    offsets = parseOffset(offset, popper, reference, basePlacement);
	  }
	
	  if (basePlacement === 'left') {
	    popper.top += offsets[0];
	    popper.left -= offsets[1];
	  } else if (basePlacement === 'right') {
	    popper.top += offsets[0];
	    popper.left += offsets[1];
	  } else if (basePlacement === 'top') {
	    popper.left += offsets[0];
	    popper.top -= offsets[1];
	  } else if (basePlacement === 'bottom') {
	    popper.left += offsets[0];
	    popper.top += offsets[1];
	  }
	
	  data.popper = popper;
	  return data;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function preventOverflow(data, options) {
	  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
	
	  // If offsetParent is the reference element, we really want to
	  // go one step up and use the next offsetParent as reference to
	  // avoid to make this modifier completely useless and look like broken
	  if (data.instance.reference === boundariesElement) {
	    boundariesElement = getOffsetParent(boundariesElement);
	  }
	
	  // NOTE: DOM access here
	  // resets the popper's position so that the document size can be calculated excluding
	  // the size of the popper element itself
	  var transformProp = getSupportedPropertyName('transform');
	  var popperStyles = data.instance.popper.style; // assignment to help minification
	  var top = popperStyles.top,
	      left = popperStyles.left,
	      transform = popperStyles[transformProp];
	
	  popperStyles.top = '';
	  popperStyles.left = '';
	  popperStyles[transformProp] = '';
	
	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
	
	  // NOTE: DOM access here
	  // restores the original style properties after the offsets have been computed
	  popperStyles.top = top;
	  popperStyles.left = left;
	  popperStyles[transformProp] = transform;
	
	  options.boundaries = boundaries;
	
	  var order = options.priority;
	  var popper = data.offsets.popper;
	
	  var check = {
	    primary: function primary(placement) {
	      var value = popper[placement];
	      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
	        value = Math.max(popper[placement], boundaries[placement]);
	      }
	      return defineProperty({}, placement, value);
	    },
	    secondary: function secondary(placement) {
	      var mainSide = placement === 'right' ? 'left' : 'top';
	      var value = popper[mainSide];
	      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
	        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
	      }
	      return defineProperty({}, mainSide, value);
	    }
	  };
	
	  order.forEach(function (placement) {
	    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
	    popper = _extends({}, popper, check[side](placement));
	  });
	
	  data.offsets.popper = popper;
	
	  return data;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function shift(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var shiftvariation = placement.split('-')[1];
	
	  // if shift shiftvariation is specified, run the modifier
	  if (shiftvariation) {
	    var _data$offsets = data.offsets,
	        reference = _data$offsets.reference,
	        popper = _data$offsets.popper;
	
	    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
	    var side = isVertical ? 'left' : 'top';
	    var measurement = isVertical ? 'width' : 'height';
	
	    var shiftOffsets = {
	      start: defineProperty({}, side, reference[side]),
	      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
	    };
	
	    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
	  }
	
	  return data;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function hide(data) {
	  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
	    return data;
	  }
	
	  var refRect = data.offsets.reference;
	  var bound = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'preventOverflow';
	  }).boundaries;
	
	  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === true) {
	      return data;
	    }
	
	    data.hide = true;
	    data.attributes['x-out-of-boundaries'] = '';
	  } else {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === false) {
	      return data;
	    }
	
	    data.hide = false;
	    data.attributes['x-out-of-boundaries'] = false;
	  }
	
	  return data;
	}
	
	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function inner(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	
	  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
	
	  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
	
	  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
	
	  data.placement = getOppositePlacement(placement);
	  data.offsets.popper = getClientRect(popper);
	
	  return data;
	}
	
	/**
	 * Modifier function, each modifier can have a function of this type assigned
	 * to its `fn` property.<br />
	 * These functions will be called on each update, this means that you must
	 * make sure they are performant enough to avoid performance bottlenecks.
	 *
	 * @function ModifierFn
	 * @argument {dataObject} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {dataObject} The data object, properly modified
	 */
	
	/**
	 * Modifiers are plugins used to alter the behavior of your poppers.<br />
	 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
	 * needed by the library.
	 *
	 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
	 * All the other properties are configurations that could be tweaked.
	 * @namespace modifiers
	 */
	var modifiers = {
	  /**
	   * Modifier used to shift the popper on the start or end of its reference
	   * element.<br />
	   * It will read the variation of the `placement` property.<br />
	   * It can be one either `-end` or `-start`.
	   * @memberof modifiers
	   * @inner
	   */
	  shift: {
	    /** @prop {number} order=100 - Index used to define the order of execution */
	    order: 100,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: shift
	  },
	
	  /**
	   * The `offset` modifier can shift your popper on both its axis.
	   *
	   * It accepts the following units:
	   * - `px` or unitless, interpreted as pixels
	   * - `%` or `%r`, percentage relative to the length of the reference element
	   * - `%p`, percentage relative to the length of the popper element
	   * - `vw`, CSS viewport width unit
	   * - `vh`, CSS viewport height unit
	   *
	   * For length is intended the main axis relative to the placement of the popper.<br />
	   * This means that if the placement is `top` or `bottom`, the length will be the
	   * `width`. In case of `left` or `right`, it will be the height.
	   *
	   * You can provide a single value (as `Number` or `String`), or a pair of values
	   * as `String` divided by a comma or one (or more) white spaces.<br />
	   * The latter is a deprecated method because it leads to confusion and will be
	   * removed in v2.<br />
	   * Additionally, it accepts additions and subtractions between different units.
	   * Note that multiplications and divisions aren't supported.
	   *
	   * Valid examples are:
	   * ```
	   * 10
	   * '10%'
	   * '10, 10'
	   * '10%, 10'
	   * '10 + 10%'
	   * '10 - 5vh + 3%'
	   * '-10px + 5vh, 5px - 6%'
	   * ```
	   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
	   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
	   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  offset: {
	    /** @prop {number} order=200 - Index used to define the order of execution */
	    order: 200,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: offset,
	    /** @prop {Number|String} offset=0
	     * The offset value as described in the modifier description
	     */
	    offset: 0
	  },
	
	  /**
	   * Modifier used to prevent the popper from being positioned outside the boundary.
	   *
	   * An scenario exists where the reference itself is not within the boundaries.<br />
	   * We can say it has "escaped the boundaries" — or just "escaped".<br />
	   * In this case we need to decide whether the popper should either:
	   *
	   * - detach from the reference and remain "trapped" in the boundaries, or
	   * - if it should ignore the boundary and "escape with its reference"
	   *
	   * When `escapeWithReference` is set to`true` and reference is completely
	   * outside its boundaries, the popper will overflow (or completely leave)
	   * the boundaries in order to remain attached to the edge of the reference.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  preventOverflow: {
	    /** @prop {number} order=300 - Index used to define the order of execution */
	    order: 300,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: preventOverflow,
	    /**
	     * @prop {Array} [priority=['left','right','top','bottom']]
	     * Popper will try to prevent overflow following these priorities by default,
	     * then, it could overflow on the left and on top of the `boundariesElement`
	     */
	    priority: ['left', 'right', 'top', 'bottom'],
	    /**
	     * @prop {number} padding=5
	     * Amount of pixel used to define a minimum distance between the boundaries
	     * and the popper this makes sure the popper has always a little padding
	     * between the edges of its container
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='scrollParent'
	     * Boundaries used by the modifier, can be `scrollParent`, `window`,
	     * `viewport` or any DOM element.
	     */
	    boundariesElement: 'scrollParent'
	  },
	
	  /**
	   * Modifier used to make sure the reference and its popper stay near eachothers
	   * without leaving any gap between the two. Expecially useful when the arrow is
	   * enabled and you want to assure it to point to its reference element.
	   * It cares only about the first axis, you can still have poppers with margin
	   * between the popper and its reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  keepTogether: {
	    /** @prop {number} order=400 - Index used to define the order of execution */
	    order: 400,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: keepTogether
	  },
	
	  /**
	   * This modifier is used to move the `arrowElement` of the popper to make
	   * sure it is positioned between the reference element and its popper element.
	   * It will read the outer size of the `arrowElement` node to detect how many
	   * pixels of conjuction are needed.
	   *
	   * It has no effect if no `arrowElement` is provided.
	   * @memberof modifiers
	   * @inner
	   */
	  arrow: {
	    /** @prop {number} order=500 - Index used to define the order of execution */
	    order: 500,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: arrow,
	    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
	    element: '[x-arrow]'
	  },
	
	  /**
	   * Modifier used to flip the popper's placement when it starts to overlap its
	   * reference element.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   *
	   * **NOTE:** this modifier will interrupt the current update cycle and will
	   * restart it if it detects the need to flip the placement.
	   * @memberof modifiers
	   * @inner
	   */
	  flip: {
	    /** @prop {number} order=600 - Index used to define the order of execution */
	    order: 600,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: flip,
	    /**
	     * @prop {String|Array} behavior='flip'
	     * The behavior used to change the popper's placement. It can be one of
	     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
	     * placements (with optional variations).
	     */
	    behavior: 'flip',
	    /**
	     * @prop {number} padding=5
	     * The popper will flip if it hits the edges of the `boundariesElement`
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='viewport'
	     * The element which will define the boundaries of the popper position,
	     * the popper will never be placed outside of the defined boundaries
	     * (except if keepTogether is enabled)
	     */
	    boundariesElement: 'viewport'
	  },
	
	  /**
	   * Modifier used to make the popper flow toward the inner of the reference element.
	   * By default, when this modifier is disabled, the popper will be placed outside
	   * the reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  inner: {
	    /** @prop {number} order=700 - Index used to define the order of execution */
	    order: 700,
	    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
	    enabled: false,
	    /** @prop {ModifierFn} */
	    fn: inner
	  },
	
	  /**
	   * Modifier used to hide the popper when its reference element is outside of the
	   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
	   * be used to hide with a CSS selector the popper when its reference is
	   * out of boundaries.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   * @memberof modifiers
	   * @inner
	   */
	  hide: {
	    /** @prop {number} order=800 - Index used to define the order of execution */
	    order: 800,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: hide
	  },
	
	  /**
	   * Computes the style that will be applied to the popper element to gets
	   * properly positioned.
	   *
	   * Note that this modifier will not touch the DOM, it just prepares the styles
	   * so that `applyStyle` modifier can apply it. This separation is useful
	   * in case you need to replace `applyStyle` with a custom implementation.
	   *
	   * This modifier has `850` as `order` value to maintain backward compatibility
	   * with previous versions of Popper.js. Expect the modifiers ordering method
	   * to change in future major versions of the library.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  computeStyle: {
	    /** @prop {number} order=850 - Index used to define the order of execution */
	    order: 850,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: computeStyle,
	    /**
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: true,
	    /**
	     * @prop {string} [x='bottom']
	     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
	     * Change this if your popper should grow in a direction different from `bottom`
	     */
	    x: 'bottom',
	    /**
	     * @prop {string} [x='left']
	     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
	     * Change this if your popper should grow in a direction different from `right`
	     */
	    y: 'right'
	  },
	
	  /**
	   * Applies the computed styles to the popper element.
	   *
	   * All the DOM manipulations are limited to this modifier. This is useful in case
	   * you want to integrate Popper.js inside a framework or view library and you
	   * want to delegate all the DOM manipulations to it.
	   *
	   * Note that if you disable this modifier, you must make sure the popper element
	   * has its position set to `absolute` before Popper.js can do its work!
	   *
	   * Just disable this modifier and define you own to achieve the desired effect.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  applyStyle: {
	    /** @prop {number} order=900 - Index used to define the order of execution */
	    order: 900,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: applyStyle,
	    /** @prop {Function} */
	    onLoad: applyStyleOnLoad,
	    /**
	     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: undefined
	  }
	};
	
	/**
	 * The `dataObject` is an object containing all the informations used by Popper.js
	 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
	 * @name dataObject
	 * @property {Object} data.instance The Popper.js instance
	 * @property {String} data.placement Placement applied to popper
	 * @property {String} data.originalPlacement Placement originally defined on init
	 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
	 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
	 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
	 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.boundaries Offsets of the popper boundaries
	 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
	 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
	 */
	
	/**
	 * Default options provided to Popper.js constructor.<br />
	 * These can be overriden using the `options` argument of Popper.js.<br />
	 * To override an option, simply pass as 3rd argument an object with the same
	 * structure of this object, example:
	 * ```
	 * new Popper(ref, pop, {
	 *   modifiers: {
	 *     preventOverflow: { enabled: false }
	 *   }
	 * })
	 * ```
	 * @type {Object}
	 * @static
	 * @memberof Popper
	 */
	var Defaults = {
	  /**
	   * Popper's placement
	   * @prop {Popper.placements} placement='bottom'
	   */
	  placement: 'bottom',
	
	  /**
	   * Set this to true if you want popper to position it self in 'fixed' mode
	   * @prop {Boolean} positionFixed=false
	   */
	  positionFixed: false,
	
	  /**
	   * Whether events (resize, scroll) are initially enabled
	   * @prop {Boolean} eventsEnabled=true
	   */
	  eventsEnabled: true,
	
	  /**
	   * Set to true if you want to automatically remove the popper when
	   * you call the `destroy` method.
	   * @prop {Boolean} removeOnDestroy=false
	   */
	  removeOnDestroy: false,
	
	  /**
	   * Callback called when the popper is created.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onCreate}
	   */
	  onCreate: function onCreate() {},
	
	  /**
	   * Callback called when the popper is updated, this callback is not called
	   * on the initialization/creation of the popper, but only on subsequent
	   * updates.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onUpdate}
	   */
	  onUpdate: function onUpdate() {},
	
	  /**
	   * List of modifiers used to modify the offsets before they are applied to the popper.
	   * They provide most of the functionalities of Popper.js
	   * @prop {modifiers}
	   */
	  modifiers: modifiers
	};
	
	/**
	 * @callback onCreate
	 * @param {dataObject} data
	 */
	
	/**
	 * @callback onUpdate
	 * @param {dataObject} data
	 */
	
	// Utils
	// Methods
	var Popper = function () {
	  /**
	   * Create a new Popper.js instance
	   * @class Popper
	   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
	   * @param {HTMLElement} popper - The HTML element used as popper.
	   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
	   * @return {Object} instance - The generated Popper.js instance
	   */
	  function Popper(reference, popper) {
	    var _this = this;
	
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	    classCallCheck(this, Popper);
	
	    this.scheduleUpdate = function () {
	      return requestAnimationFrame(_this.update);
	    };
	
	    // make update() debounced, so that it only runs at most once-per-tick
	    this.update = debounce(this.update.bind(this));
	
	    // with {} we create a new object with the options inside it
	    this.options = _extends({}, Popper.Defaults, options);
	
	    // init state
	    this.state = {
	      isDestroyed: false,
	      isCreated: false,
	      scrollParents: []
	    };
	
	    // get reference and popper elements (allow jQuery wrappers)
	    this.reference = reference && reference.jquery ? reference[0] : reference;
	    this.popper = popper && popper.jquery ? popper[0] : popper;
	
	    // Deep merge modifiers options
	    this.options.modifiers = {};
	    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
	      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
	    });
	
	    // Refactoring modifiers' list (Object => Array)
	    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
	      return _extends({
	        name: name
	      }, _this.options.modifiers[name]);
	    })
	    // sort the modifiers by order
	    .sort(function (a, b) {
	      return a.order - b.order;
	    });
	
	    // modifiers have the ability to execute arbitrary code when Popper.js get inited
	    // such code is executed in the same order of its modifier
	    // they could add new properties to their options configuration
	    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
	    this.modifiers.forEach(function (modifierOptions) {
	      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
	        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
	      }
	    });
	
	    // fire the first update to position the popper in the right place
	    this.update();
	
	    var eventsEnabled = this.options.eventsEnabled;
	    if (eventsEnabled) {
	      // setup event listeners, they will take care of update the position in specific situations
	      this.enableEventListeners();
	    }
	
	    this.state.eventsEnabled = eventsEnabled;
	  }
	
	  // We can't use class properties because they don't get listed in the
	  // class prototype and break stuff like Sinon stubs
	
	
	  createClass(Popper, [{
	    key: 'update',
	    value: function update$$1() {
	      return update.call(this);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy$$1() {
	      return destroy.call(this);
	    }
	  }, {
	    key: 'enableEventListeners',
	    value: function enableEventListeners$$1() {
	      return enableEventListeners.call(this);
	    }
	  }, {
	    key: 'disableEventListeners',
	    value: function disableEventListeners$$1() {
	      return disableEventListeners.call(this);
	    }
	
	    /**
	     * Schedule an update, it will run on the next UI update available
	     * @method scheduleUpdate
	     * @memberof Popper
	     */
	
	
	    /**
	     * Collection of utilities useful when writing custom modifiers.
	     * Starting from version 1.7, this method is available only if you
	     * include `popper-utils.js` before `popper.js`.
	     *
	     * **DEPRECATION**: This way to access PopperUtils is deprecated
	     * and will be removed in v2! Use the PopperUtils module directly instead.
	     * Due to the high instability of the methods contained in Utils, we can't
	     * guarantee them to follow semver. Use them at your own risk!
	     * @static
	     * @private
	     * @type {Object}
	     * @deprecated since version 1.8
	     * @member Utils
	     * @memberof Popper
	     */
	
	  }]);
	  return Popper;
	}();
	
	/**
	 * The `referenceObject` is an object that provides an interface compatible with Popper.js
	 * and lets you use it as replacement of a real DOM node.<br />
	 * You can use this method to position a popper relatively to a set of coordinates
	 * in case you don't have a DOM node to use as reference.
	 *
	 * ```
	 * new Popper(referenceObject, popperNode);
	 * ```
	 *
	 * NB: This feature isn't supported in Internet Explorer 10
	 * @name referenceObject
	 * @property {Function} data.getBoundingClientRect
	 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
	 * @property {number} data.clientWidth
	 * An ES6 getter that will return the width of the virtual reference element.
	 * @property {number} data.clientHeight
	 * An ES6 getter that will return the height of the virtual reference element.
	 */
	
	
	Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
	Popper.placements = placements;
	Popper.Defaults = Defaults;
	
	return Popper;
	
	})));
	//# sourceMappingURL=popper.js.map


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _ClickAwayListener.default;
	  }
	});
	
	var _ClickAwayListener = _interopRequireDefault(__webpack_require__(427));

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactEventListener = _interopRequireDefault(__webpack_require__(428));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	// @inheritedComponent EventListener
	
	/**
	 * Listen for click events that occur somewhere in the document, outside of the element itself.
	 * For instance, if you need to hide a menu when people click anywhere else on your page.
	 */
	var ClickAwayListener =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(ClickAwayListener, _React$Component);
	
	  function ClickAwayListener() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, ClickAwayListener);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = ClickAwayListener.__proto__ || Object.getPrototypeOf(ClickAwayListener)).call.apply(_ref, [this].concat(args))), _this.node = null, _this.mounted = null, _this.handleClickAway = function (event) {
	      // Ignore events that have been `event.preventDefault()` marked.
	      if (event.defaultPrevented) {
	        return;
	      } // IE11 support, which trigger the handleClickAway even after the unbind
	
	
	      if (!_this.mounted) {
	        return;
	      } // The child might render null.
	
	
	      if (!_this.node) {
	        return;
	      }
	
	      var doc = (0, _ownerDocument.default)(_this.node);
	
	      if (doc.documentElement && doc.documentElement.contains(event.target) && !_this.node.contains(event.target)) {
	        _this.props.onClickAway(event);
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(ClickAwayListener, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      // Finds the first child when a component returns a fragment.
	      // https://github.com/facebook/react/blob/036ae3c6e2f056adffc31dfb78d1b6f0c63272f0/packages/react-dom/src/__tests__/ReactDOMFiber-test.js#L105
	      this.node = _reactDom.default.findDOMNode(this);
	      this.mounted = true;
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mounted = false;
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          mouseEvent = _props.mouseEvent,
	          touchEvent = _props.touchEvent,
	          onClickAway = _props.onClickAway,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "mouseEvent", "touchEvent", "onClickAway"]);
	      var listenerProps = {};
	
	      if (mouseEvent !== false) {
	        listenerProps[mouseEvent] = this.handleClickAway;
	      }
	
	      if (touchEvent !== false) {
	        listenerProps[touchEvent] = this.handleClickAway;
	      }
	
	      return _react.default.createElement(_reactEventListener.default, (0, _extends2.default)({
	        target: "document"
	      }, listenerProps, other), children);
	    }
	  }]);
	  return ClickAwayListener;
	}(_react.default.Component);
	
	ClickAwayListener.propTypes =  false ? {
	  /**
	   * The wrapped element.
	   */
	  children: _propTypes.default.element.isRequired,
	
	  /**
	   * The mouse event to listen to. You can disable the listener by providing `false`.
	   */
	  mouseEvent: _propTypes.default.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),
	
	  /**
	   * Callback fired when a "click away" event is detected.
	   */
	  onClickAway: _propTypes.default.func.isRequired,
	
	  /**
	   * The touch event to listen to. You can disable the listener by providing `false`.
	   */
	  touchEvent: _propTypes.default.oneOf(['onTouchStart', 'onTouchEnd', false])
	} : {};
	ClickAwayListener.defaultProps = {
	  mouseEvent: 'onMouseUp',
	  touchEvent: 'onTouchEnd'
	};
	var _default = ClickAwayListener;
	exports.default = _default;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var _classCallCheck = _interopDefault(__webpack_require__(298));
	var _createClass = _interopDefault(__webpack_require__(299));
	var _possibleConstructorReturn = _interopDefault(__webpack_require__(300));
	var _inherits = _interopDefault(__webpack_require__(303));
	var _typeof = _interopDefault(__webpack_require__(301));
	var _objectWithoutProperties = _interopDefault(__webpack_require__(278));
	var _objectSpread = _interopDefault(__webpack_require__(276));
	var React = _interopDefault(__webpack_require__(1));
	var PropTypes = _interopDefault(__webpack_require__(17));
	var warning = _interopDefault(__webpack_require__(16));
	
	function defineProperty(object, property, attr) {
	  return Object.defineProperty(object, property, attr);
	} // Passive options
	// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js
	
	
	var passiveOption = function () {
	  var cache = null;
	  return function () {
	    if (cache !== null) {
	      return cache;
	    }
	
	    var supportsPassiveOption = false;
	
	    try {
	      window.addEventListener('test', null, defineProperty({}, 'passive', {
	        get: function get() {
	          supportsPassiveOption = true;
	        }
	      }));
	    } catch (err) {//
	    }
	
	    cache = supportsPassiveOption;
	    return supportsPassiveOption;
	  }();
	}();
	
	var defaultEventOptions = {
	  capture: false,
	  passive: false
	};
	
	function mergeDefaultEventOptions(options) {
	  return _objectSpread({}, defaultEventOptions, options);
	}
	
	function getEventListenerArgs(eventName, callback, options) {
	  var args = [eventName, callback];
	  args.push(passiveOption ? options : options.capture);
	  return args;
	}
	
	function on(target, eventName, callback, options) {
	  // eslint-disable-next-line prefer-spread
	  target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	}
	
	function off(target, eventName, callback, options) {
	  // eslint-disable-next-line prefer-spread
	  target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	}
	
	function forEachListener(props, iteratee) {
	  var children = props.children,
	      target = props.target,
	      eventProps = _objectWithoutProperties(props, ["children", "target"]);
	
	  Object.keys(eventProps).forEach(function (name) {
	    if (name.substring(0, 2) !== 'on') {
	      return;
	    }
	
	    var prop = eventProps[name];
	
	    var type = _typeof(prop);
	
	    var isObject = type === 'object';
	    var isFunction = type === 'function';
	
	    if (!isObject && !isFunction) {
	      return;
	    }
	
	    var capture = name.substr(-7).toLowerCase() === 'capture';
	    var eventName = name.substring(2).toLowerCase();
	    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;
	
	    if (isObject) {
	      iteratee(eventName, prop.handler, prop.options);
	    } else {
	      iteratee(eventName, prop, mergeDefaultEventOptions({
	        capture: capture
	      }));
	    }
	  });
	}
	
	function withOptions(handler, options) {
	   false ? warning(options, 'react-event-listener: should be specified options in withOptions.') : void 0;
	  return {
	    handler: handler,
	    options: mergeDefaultEventOptions(options)
	  };
	}
	
	var EventListener =
	/*#__PURE__*/
	function (_React$PureComponent) {
	  _inherits(EventListener, _React$PureComponent);
	
	  function EventListener() {
	    _classCallCheck(this, EventListener);
	
	    return _possibleConstructorReturn(this, (EventListener.__proto__ || Object.getPrototypeOf(EventListener)).apply(this, arguments));
	  }
	
	  _createClass(EventListener, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.applyListeners(on);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      this.applyListeners(off, prevProps);
	      this.applyListeners(on);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.applyListeners(off);
	    }
	  }, {
	    key: "applyListeners",
	    value: function applyListeners(onOrOff) {
	      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
	      var target = props.target;
	
	      if (target) {
	        var element = target;
	
	        if (typeof target === 'string') {
	          element = window[target];
	        }
	
	        forEachListener(props, onOrOff.bind(null, element));
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children || null;
	    }
	  }]);
	
	  return EventListener;
	}(React.PureComponent);
	
	EventListener.propTypes =  false ? {
	  /**
	   * You can provide a single child too.
	   */
	  children: PropTypes.node,
	
	  /**
	   * The DOM target to listen to.
	   */
	  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired
	} : {};
	
	exports.withOptions = withOptions;
	exports.default = EventListener;


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Grow.default;
	  }
	});
	
	var _Grow = _interopRequireDefault(__webpack_require__(430));

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _Transition = _interopRequireDefault(__webpack_require__(381));
	
	var _withTheme = _interopRequireDefault(__webpack_require__(315));
	
	var _utils = __webpack_require__(431);
	
	// @inheritedComponent Transition
	function getScale(value) {
	  return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
	}
	
	var styles = {
	  entering: {
	    opacity: 1,
	    transform: getScale(1)
	  },
	  entered: {
	    opacity: 1,
	    transform: getScale(1)
	  }
	};
	/**
	 * The Grow transition is used by the [Tooltip](/demos/tooltips) and
	 * [Popover](/utils/popover) components.
	 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
	 */
	
	var Grow =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Grow, _React$Component);
	
	  function Grow() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Grow);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Grow.__proto__ || Object.getPrototypeOf(Grow)).call.apply(_ref, [this].concat(args))), _this.autoTimeout = null, _this.timer = null, _this.handleEnter = function (node) {
	      var _this$props = _this.props,
	          theme = _this$props.theme,
	          timeout = _this$props.timeout;
	      (0, _utils.reflow)(node); // So the animation always start from the start.
	
	      var _getTransitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'enter'
	      }),
	          transitionDuration = _getTransitionProps.duration,
	          delay = _getTransitionProps.delay;
	
	      var duration = 0;
	
	      if (timeout === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
	        _this.autoTimeout = duration;
	      } else {
	        duration = transitionDuration;
	      }
	
	      node.style.transition = [theme.transitions.create('opacity', {
	        duration: duration,
	        delay: delay
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666,
	        delay: delay
	      })].join(',');
	
	      if (_this.props.onEnter) {
	        _this.props.onEnter(node);
	      }
	    }, _this.handleExit = function (node) {
	      var _this$props2 = _this.props,
	          theme = _this$props2.theme,
	          timeout = _this$props2.timeout;
	      var duration = 0;
	
	      var _getTransitionProps2 = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'exit'
	      }),
	          transitionDuration = _getTransitionProps2.duration,
	          delay = _getTransitionProps2.delay;
	
	      if (timeout === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
	        _this.autoTimeout = duration;
	      } else {
	        duration = transitionDuration;
	      }
	
	      node.style.transition = [theme.transitions.create('opacity', {
	        duration: duration,
	        delay: delay
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666,
	        delay: delay || duration * 0.333
	      })].join(',');
	      node.style.opacity = '0';
	      node.style.transform = getScale(0.75);
	
	      if (_this.props.onExit) {
	        _this.props.onExit(node);
	      }
	    }, _this.addEndListener = function (_, next) {
	      if (_this.props.timeout === 'auto') {
	        _this.timer = setTimeout(next, _this.autoTimeout || 0);
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Grow, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.timer);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          onEnter = _props.onEnter,
	          onExit = _props.onExit,
	          styleProp = _props.style,
	          theme = _props.theme,
	          timeout = _props.timeout,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "onEnter", "onExit", "style", "theme", "timeout"]);
	      var style = (0, _objectSpread2.default)({}, styleProp, _react.default.isValidElement(children) ? children.props.style : {});
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        appear: true,
	        onEnter: this.handleEnter,
	        onExit: this.handleExit,
	        addEndListener: this.addEndListener,
	        timeout: timeout === 'auto' ? null : timeout
	      }, other), function (state, childProps) {
	        return _react.default.cloneElement(children, (0, _objectSpread2.default)({
	          style: (0, _objectSpread2.default)({
	            opacity: 0,
	            transform: getScale(0.75)
	          }, styles[state], style)
	        }, childProps));
	      });
	    }
	  }]);
	  return Grow;
	}(_react.default.Component);
	
	Grow.propTypes =  false ? {
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
	
	  /**
	   * If `true`, show the component; triggers the enter or exit animation.
	   */
	  in: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   *
	   * Set to 'auto' to automatically calculate transition time based on height.
	   */
	  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])])
	} : {};
	Grow.defaultProps = {
	  timeout: 'auto'
	};
	Grow.muiSupportAuto = true;
	
	var _default = (0, _withTheme.default)()(Grow);
	
	exports.default = _default;

/***/ }),
/* 431 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTransitionProps = getTransitionProps;
	exports.reflow = void 0;
	
	var reflow = function reflow(node) {
	  return node.scrollTop;
	};
	
	exports.reflow = reflow;
	
	function getTransitionProps(props, options) {
	  var timeout = props.timeout,
	      _props$style = props.style,
	      style = _props$style === void 0 ? {} : _props$style;
	  return {
	    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode],
	    delay: style.transitionDelay
	  };
	}

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Paper.default;
	  }
	});
	
	var _Paper = _interopRequireDefault(__webpack_require__(433));

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var styles = function styles(theme) {
	  var elevations = {};
	  theme.shadows.forEach(function (shadow, index) {
	    elevations["elevation".concat(index)] = {
	      boxShadow: shadow
	    };
	  });
	  return (0, _objectSpread2.default)({
	    root: {
	      backgroundColor: theme.palette.background.paper
	    },
	    rounded: {
	      borderRadius: theme.shape.borderRadius
	    }
	  }, elevations);
	};
	
	exports.styles = styles;
	
	function Paper(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      square = props.square,
	      elevation = props.elevation,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "component", "square", "elevation"]);
	   false ? (0, _warning.default)(elevation >= 0 && elevation < 25, "Material-UI: this elevation `".concat(elevation, "` is not implemented.")) : void 0;
	  var className = (0, _classnames.default)(classes.root, classes["elevation".concat(elevation)], (0, _defineProperty2.default)({}, classes.rounded, !square), classNameProp);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className
	  }, other));
	}
	
	Paper.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Shadow depth, corresponds to `dp` in the spec.
	   * It's accepting values between 0 and 24 inclusive.
	   */
	  elevation: _propTypes.default.number,
	
	  /**
	   * If `true`, rounded corners are disabled.
	   */
	  square: _propTypes.default.bool
	} : {};
	Paper.defaultProps = {
	  component: 'div',
	  elevation: 2,
	  square: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiPaper'
	})(Paper);
	
	exports.default = _default;

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _MenuItem.default;
	  }
	});
	
	var _MenuItem = _interopRequireDefault(__webpack_require__(435));

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _ListItem = _interopRequireDefault(__webpack_require__(436));
	
	// @inheritedComponent ListItem
	var styles = function styles(theme) {
	  return {
	    root: (0, _objectSpread2.default)({}, theme.typography.subheading, {
	      height: 24,
	      boxSizing: 'content-box',
	      width: 'auto',
	      overflow: 'hidden',
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap',
	      paddingLeft: 16,
	      paddingRight: 16,
	      '&$selected': {
	        backgroundColor: theme.palette.action.selected
	      }
	    }),
	    selected: {}
	  };
	};
	
	exports.styles = styles;
	
	function MenuItem(props) {
	  var classes = props.classes,
	      className = props.className,
	      component = props.component,
	      selected = props.selected,
	      role = props.role,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "component", "selected", "role"]);
	  return _react.default.createElement(_ListItem.default, (0, _extends2.default)({
	    button: true,
	    role: role,
	    tabIndex: -1,
	    className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.selected, selected), className),
	    component: component
	  }, other));
	}
	
	MenuItem.propTypes =  false ? {
	  /**
	   * Menu item contents.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * @ignore
	   */
	  role: _propTypes.default.string,
	
	  /**
	   * Use to apply selected styling.
	   */
	  selected: _propTypes.default.bool
	} : {};
	MenuItem.defaultProps = {
	  component: 'li',
	  role: 'menuitem',
	  selected: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiMenuItem'
	})(MenuItem);
	
	exports.default = _default;

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _ListItem.default;
	  }
	});
	
	var _ListItem = _interopRequireDefault(__webpack_require__(437));

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(367));
	
	var _reactHelpers = __webpack_require__(438);
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      display: 'flex',
	      justifyContent: 'flex-start',
	      alignItems: 'center',
	      position: 'relative',
	      textDecoration: 'none',
	      width: '100%',
	      boxSizing: 'border-box',
	      textAlign: 'left'
	    },
	    container: {
	      position: 'relative'
	    },
	    focusVisible: {
	      backgroundColor: theme.palette.action.hover
	    },
	    default: {
	      paddingTop: 12,
	      paddingBottom: 12
	    },
	    dense: {
	      paddingTop: 8,
	      paddingBottom: 8
	    },
	    disabled: {
	      opacity: 0.5
	    },
	    divider: {
	      borderBottom: "1px solid ".concat(theme.palette.divider),
	      backgroundClip: 'padding-box'
	    },
	    gutters: theme.mixins.gutters(),
	    button: {
	      transition: theme.transitions.create('background-color', {
	        duration: theme.transitions.duration.shortest
	      }),
	      '&:hover': {
	        textDecoration: 'none',
	        backgroundColor: theme.palette.action.hover,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    secondaryAction: {
	      // Add some space to avoid collision as `ListItemSecondaryAction`
	      // is absolutely positionned.
	      paddingRight: 32
	    }
	  };
	};
	
	exports.styles = styles;
	
	var ListItem =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(ListItem, _React$Component);
	
	  function ListItem() {
	    (0, _classCallCheck2.default)(this, ListItem);
	    return (0, _possibleConstructorReturn2.default)(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(ListItem, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        dense: this.props.dense || this.context.dense || false
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _props = this.props,
	          button = _props.button,
	          childrenProp = _props.children,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          componentProp = _props.component,
	          ContainerComponent = _props.ContainerComponent,
	          _props$ContainerProps = _props.ContainerProps;
	      _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;
	      var ContainerClassName = _props$ContainerProps.className,
	          ContainerProps = (0, _objectWithoutProperties2.default)(_props$ContainerProps, ["className"]),
	          dense = _props.dense,
	          disabled = _props.disabled,
	          disableGutters = _props.disableGutters,
	          divider = _props.divider,
	          focusVisibleClassName = _props.focusVisibleClassName,
	          other = (0, _objectWithoutProperties2.default)(_props, ["button", "children", "classes", "className", "component", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "divider", "focusVisibleClassName"]);
	      var isDense = dense || this.context.dense || false;
	
	      var children = _react.default.Children.toArray(childrenProp);
	
	      var hasAvatar = children.some(function (value) {
	        return (0, _reactHelpers.isMuiElement)(value, ['ListItemAvatar']);
	      });
	      var hasSecondaryAction = children.length && (0, _reactHelpers.isMuiElement)(children[children.length - 1], ['ListItemSecondaryAction']);
	      var className = (0, _classnames.default)(classes.root, isDense || hasAvatar ? classes.dense : classes.default, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.gutters, !disableGutters), (0, _defineProperty2.default)(_classNames, classes.divider, divider), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.button, button), (0, _defineProperty2.default)(_classNames, classes.secondaryAction, hasSecondaryAction), _classNames), classNameProp);
	      var componentProps = (0, _objectSpread2.default)({
	        className: className,
	        disabled: disabled
	      }, other);
	      var Component = componentProp || 'li';
	
	      if (button) {
	        componentProps.component = componentProp || 'div';
	        componentProps.focusVisibleClassName = (0, _classnames.default)(classes.focusVisible, focusVisibleClassName);
	        Component = _ButtonBase.default;
	      }
	
	      if (hasSecondaryAction) {
	        // Use div by default.
	        Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.
	
	        if (ContainerComponent === 'li') {
	          if (Component === 'li') {
	            Component = 'div';
	          } else if (componentProps.component === 'li') {
	            componentProps.component = 'div';
	          }
	        }
	
	        return _react.default.createElement(ContainerComponent, (0, _extends2.default)({
	          className: (0, _classnames.default)(classes.container, ContainerClassName)
	        }, ContainerProps), _react.default.createElement(Component, componentProps, children), children.pop());
	      }
	
	      return _react.default.createElement(Component, componentProps, children);
	    }
	  }]);
	  return ListItem;
	}(_react.default.Component);
	
	ListItem.propTypes =  false ? {
	  /**
	   * If `true`, the list item will be a button (using `ButtonBase`).
	   */
	  button: _propTypes.default.bool,
	
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The container component used when a `ListItemSecondaryAction` is rendered.
	   */
	  ContainerComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Properties applied to the container element when the component
	   * is used to display a `ListItemSecondaryAction`.
	   */
	  ContainerProps: _propTypes.default.object,
	
	  /**
	   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
	   */
	  dense: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the left and right padding is removed.
	   */
	  disableGutters: _propTypes.default.bool,
	
	  /**
	   * If `true`, a 1px light border is added to the bottom of the list item.
	   */
	  divider: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  focusVisibleClassName: _propTypes.default.string
	} : {};
	ListItem.defaultProps = {
	  button: false,
	  ContainerComponent: 'li',
	  dense: false,
	  disabled: false,
	  disableGutters: false,
	  divider: false
	};
	ListItem.contextTypes = {
	  dense: _propTypes.default.bool
	};
	ListItem.childContextTypes = {
	  dense: _propTypes.default.bool
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiListItem'
	})(ListItem);
	
	exports.default = _default;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.cloneElementWithClassName = cloneElementWithClassName;
	exports.cloneChildrenWithClassName = cloneChildrenWithClassName;
	exports.isMuiElement = isMuiElement;
	exports.isMuiComponent = isMuiComponent;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	/* eslint-disable import/prefer-default-export */
	function cloneElementWithClassName(child, className) {
	  return _react.default.cloneElement(child, {
	    className: (0, _classnames.default)(child.props.className, className)
	  });
	}
	
	function cloneChildrenWithClassName(children, className) {
	  return _react.default.Children.map(children, function (child) {
	    return _react.default.isValidElement(child) && cloneElementWithClassName(child, className);
	  });
	}
	
	function isMuiElement(element, muiNames) {
	  return _react.default.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
	}
	
	function isMuiComponent(element, muiNames) {
	  return muiNames.indexOf(element.muiName) !== -1;
	}

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _MenuList.default;
	  }
	});
	
	var _MenuList = _interopRequireDefault(__webpack_require__(440));

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _keycode = _interopRequireDefault(__webpack_require__(369));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _List = _interopRequireDefault(__webpack_require__(441));
	
	// @inheritedComponent List
	var MenuList =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(MenuList, _React$Component);
	
	  function MenuList() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, MenuList);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = MenuList.__proto__ || Object.getPrototypeOf(MenuList)).call.apply(_ref, [this].concat(args))), _this.list = null, _this.selectedItem = null, _this.blurTimer = null, _this.state = {
	      currentTabIndex: null
	    }, _this.handleBlur = function (event) {
	      _this.blurTimer = setTimeout(function () {
	        if (_this.list) {
	          var list = _reactDom.default.findDOMNode(_this.list);
	
	          var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	
	          if (!list.contains(currentFocus)) {
	            _this.resetTabIndex();
	          }
	        }
	      }, 30);
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleKeyDown = function (event) {
	      var list = _reactDom.default.findDOMNode(_this.list);
	
	      var key = (0, _keycode.default)(event);
	      var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	
	      if ((key === 'up' || key === 'down') && (!currentFocus || currentFocus && !list.contains(currentFocus))) {
	        if (_this.selectedItem) {
	          _reactDom.default.findDOMNode(_this.selectedItem).focus();
	        } else {
	          list.firstChild.focus();
	        }
	      } else if (key === 'down') {
	        event.preventDefault();
	
	        if (currentFocus.nextElementSibling) {
	          currentFocus.nextElementSibling.focus();
	        }
	      } else if (key === 'up') {
	        event.preventDefault();
	
	        if (currentFocus.previousElementSibling) {
	          currentFocus.previousElementSibling.focus();
	        }
	      }
	
	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(event, key);
	      }
	    }, _this.handleItemFocus = function (event) {
	      var list = _reactDom.default.findDOMNode(_this.list);
	
	      if (list) {
	        for (var i = 0; i < list.children.length; i += 1) {
	          if (list.children[i] === event.currentTarget) {
	            _this.setTabIndex(i);
	
	            break;
	          }
	        }
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(MenuList, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.resetTabIndex();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.blurTimer);
	    }
	  }, {
	    key: "setTabIndex",
	    value: function setTabIndex(index) {
	      this.setState({
	        currentTabIndex: index
	      });
	    }
	  }, {
	    key: "focus",
	    value: function focus() {
	      var currentTabIndex = this.state.currentTabIndex;
	
	      var list = _reactDom.default.findDOMNode(this.list);
	
	      if (!list || !list.children || !list.firstChild) {
	        return;
	      }
	
	      if (currentTabIndex && currentTabIndex >= 0) {
	        list.children[currentTabIndex].focus();
	      } else {
	        list.firstChild.focus();
	      }
	    }
	  }, {
	    key: "resetTabIndex",
	    value: function resetTabIndex() {
	      var list = _reactDom.default.findDOMNode(this.list);
	
	      var currentFocus = (0, _ownerDocument.default)(list).activeElement;
	      var items = [];
	
	      for (var i = 0; i < list.children.length; i += 1) {
	        items.push(list.children[i]);
	      }
	
	      var currentFocusIndex = items.indexOf(currentFocus);
	
	      if (currentFocusIndex !== -1) {
	        return this.setTabIndex(currentFocusIndex);
	      }
	
	      if (this.selectedItem) {
	        return this.setTabIndex(items.indexOf(_reactDom.default.findDOMNode(this.selectedItem)));
	      }
	
	      return this.setTabIndex(0);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          onBlur = _props.onBlur,
	          onKeyDown = _props.onKeyDown,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "className", "onBlur", "onKeyDown"]);
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        role: "menu",
	        ref: function ref(node) {
	          _this2.list = node;
	        },
	        className: className,
	        onKeyDown: this.handleKeyDown,
	        onBlur: this.handleBlur
	      }, other), _react.default.Children.map(children, function (child, index) {
	        if (!_react.default.isValidElement(child)) {
	          return null;
	        }
	
	         false ? (0, _warning.default)(child.type !== _react.default.Fragment, ["Material-UI: the MenuList component doesn't accept a Fragment as a child.", 'Consider providing an array instead.'].join('\n')) : void 0;
	        return _react.default.cloneElement(child, {
	          tabIndex: index === _this2.state.currentTabIndex ? 0 : -1,
	          ref: child.props.selected ? function (node) {
	            _this2.selectedItem = node;
	          } : undefined,
	          onFocus: _this2.handleItemFocus
	        });
	      }));
	    }
	  }]);
	  return MenuList;
	}(_react.default.Component);
	
	MenuList.propTypes =  false ? {
	  /**
	   * MenuList contents, normally `MenuItem`s.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func
	} : {};
	var _default = MenuList;
	exports.default = _default;

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _List.default;
	  }
	});
	
	var _List = _interopRequireDefault(__webpack_require__(442));

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var styles = {
	  root: {
	    listStyle: 'none',
	    margin: 0,
	    padding: 0,
	    position: 'relative'
	  },
	  padding: {
	    paddingTop: 8,
	    paddingBottom: 8
	  },
	  dense: {
	    paddingTop: 4,
	    paddingBottom: 4
	  },
	  subheader: {
	    paddingTop: 0
	  }
	};
	exports.styles = styles;
	
	var List =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(List, _React$Component);
	
	  function List() {
	    (0, _classCallCheck2.default)(this, List);
	    return (0, _possibleConstructorReturn2.default)(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(List, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        dense: this.props.dense
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _props = this.props,
	          children = _props.children,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          Component = _props.component,
	          dense = _props.dense,
	          disablePadding = _props.disablePadding,
	          subheader = _props.subheader,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "classes", "className", "component", "dense", "disablePadding", "subheader"]);
	      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.dense, dense && !disablePadding), (0, _defineProperty2.default)(_classNames, classes.padding, !disablePadding), (0, _defineProperty2.default)(_classNames, classes.subheader, subheader), _classNames), classNameProp);
	      return _react.default.createElement(Component, (0, _extends2.default)({
	        className: className
	      }, other), subheader, children);
	    }
	  }]);
	  return List;
	}(_react.default.Component);
	
	List.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for
	   * the list and list items. The property is available to descendant components as the
	   * `dense` context.
	   */
	  dense: _propTypes.default.bool,
	
	  /**
	   * If `true`, vertical padding will be removed from the list.
	   */
	  disablePadding: _propTypes.default.bool,
	
	  /**
	   * The content of the subheader, normally `ListSubheader`.
	   */
	  subheader: _propTypes.default.node
	} : {};
	List.defaultProps = {
	  component: 'ul',
	  dense: false,
	  disablePadding: false
	};
	List.childContextTypes = {
	  dense: _propTypes.default.bool
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiList'
	})(List);
	
	exports.default = _default;

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z"
	})), 'FormatSize');
	
	exports.default = _default;

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _MenuItem = __webpack_require__(434);
	
	var _MenuItem2 = _interopRequireDefault(_MenuItem);
	
	var _MenuList = __webpack_require__(439);
	
	var _MenuList2 = _interopRequireDefault(_MenuList);
	
	var _IconButton = __webpack_require__(365);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _reactPopper = __webpack_require__(424);
	
	var _ClickAwayListener = __webpack_require__(426);
	
	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);
	
	var _Grow = __webpack_require__(429);
	
	var _Grow2 = _interopRequireDefault(_Grow);
	
	var _Paper = __webpack_require__(432);
	
	var _Paper2 = _interopRequireDefault(_Paper);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _FilterList = __webpack_require__(445);
	
	var _FilterList2 = _interopRequireDefault(_FilterList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _fontSizeSetter;
	
	  return {
	    fontSizeSetter: (_fontSizeSetter = {}, _fontSizeSetter["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {}, _fontSizeSetter),
	    open: {
	      color: theme.bars.colors.icon
	    },
	    popperClose: {
	      pointerEvents: "none"
	    },
	    popper: {
	      zIndex: 1
	    }
	  };
	};
	
	var CategoryFilter = function (_React$Component) {
	  _inherits(CategoryFilter, _React$Component);
	
	  function CategoryFilter() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, CategoryFilter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      open: false
	    }, _this.handleClick = function () {
	      _this.setState({ open: !_this.state.open });
	    }, _this.handleClose = function () {
	      if (!_this.state.open) {
	        return;
	      }
	
	      _this.timeout = setTimeout(function () {
	        _this.setState({ open: false });
	      });
	    }, _this.handleFiltering = function (e) {
	      var category = e.target.innerText.trim();
	      _this.props.filterCategory(category);
	      _this.handleClose();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  CategoryFilter.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearTimeout(this.timeout);
	  };
	
	  CategoryFilter.prototype.render = function render() {
	    var _classNames,
	        _this2 = this;
	
	    var _props = this.props,
	        classes = _props.classes,
	        categories = _props.categories;
	    var open = this.state.open;
	
	
	    return _react2.default.createElement(
	      "nav",
	      { className: classes.fontSizeSetter },
	      _react2.default.createElement(
	        _reactPopper.Manager,
	        null,
	        _react2.default.createElement(
	          _reactPopper.Target,
	          null,
	          _react2.default.createElement(
	            _IconButton2.default,
	            {
	              "aria-label": "Filter by category",
	              "aria-haspopup": "true",
	              onClick: this.handleClick,
	              title: "Filter the list by category",
	              className: classes.open
	            },
	            _react2.default.createElement(_FilterList2.default, null)
	          )
	        ),
	        _react2.default.createElement(
	          _reactPopper.Popper,
	          {
	            placement: "bottom-end",
	            eventsEnabled: open,
	            className: (0, _classnames2.default)((_classNames = {}, _classNames[classes.popperClose] = !open, _classNames)) + " " + classes.popper
	          },
	          _react2.default.createElement(
	            _ClickAwayListener2.default,
	            { onClickAway: this.handleClose },
	            _react2.default.createElement(
	              _Grow2.default,
	              { "in": open, id: "cat-menu-list", style: { transformOrigin: "0 0 0" } },
	              _react2.default.createElement(
	                _Paper2.default,
	                null,
	                _react2.default.createElement(
	                  _MenuList2.default,
	                  { role: "menu" },
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    { key: "all", onClick: this.handleFiltering },
	                    "all posts"
	                  ),
	                  categories.map(function (category) {
	                    return _react2.default.createElement(
	                      _MenuItem2.default,
	                      { key: category, onClick: _this2.handleFiltering },
	                      category
	                    );
	                  })
	                )
	              )
	            )
	          )
	        )
	      )
	    );
	  };
	
	  return CategoryFilter;
	}(_react2.default.Component);
	
	CategoryFilter.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  categories: _propTypes2.default.array.isRequired,
	  filterCategory: _propTypes2.default.func.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(CategoryFilter);
	module.exports = exports["default"];

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
	})), 'FilterList');
	
	exports.default = _default;

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _InfoBar = __webpack_require__(447);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_InfoBar).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Avatar = __webpack_require__(448);
	
	var _Avatar2 = _interopRequireDefault(_Avatar);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	var _reactRedux = __webpack_require__(245);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _config = __webpack_require__(450);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _avatar = __webpack_require__(451);
	
	var _avatar2 = _interopRequireDefault(_avatar);
	
	var _TopMenu = __webpack_require__(452);
	
	var _TopMenu2 = _interopRequireDefault(_TopMenu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _infoBar;
	
	  return {
	    infoBar: (_infoBar = {
	      position: "absolute",
	      background: theme.bars.colors.background,
	      top: 0,
	      left: 0,
	      width: "100%",
	      height: theme.bars.sizes.infoBar + "px",
	      "&::before": {
	        content: "\"\"",
	        position: "absolute",
	        left: theme.base.sizes.linesMargin,
	        right: theme.base.sizes.linesMargin,
	        height: 0,
	        bottom: 0,
	        borderTop: "1px solid " + theme.base.colors.lines
	      }
	    }, _infoBar["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      display: "none"
	    }, _infoBar),
	    title: {
	      float: "left",
	      margin: "10px 20px 0 15px",
	      color: theme.bars.colors.text,
	      "& small": {
	        display: "block",
	        fontSize: ".65em",
	        margin: "2px 0 0 0"
	      }
	    },
	    avatarLink: {
	      display: "block",
	      float: "left",
	      margin: "13px 0 0 30px"
	    },
	    avatar: {
	      width: "36px",
	      borderRadius: "65% 75%",
	      border: "1px solid #ddd",
	      height: "36px"
	    }
	  };
	};
	
	var InfoBar = function (_React$Component) {
	  _inherits(InfoBar, _React$Component);
	
	  function InfoBar() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, InfoBar);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.homeLinkOnClick = _shared.featureNavigator.bind(_this), _this.pageLinkOnClick = _shared.moveNavigatorAside.bind(_this), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  InfoBar.prototype.render = function render() {
	    var _props = this.props,
	        classes = _props.classes,
	        pages = _props.pages;
	
	
	    return _react2.default.createElement(
	      "aside",
	      { className: classes.infoBar },
	      _react2.default.createElement(
	        _gatsbyLink2.default,
	        { to: "/", className: classes.avatarLink, onClick: this.homeLinkOnClick },
	        _react2.default.createElement(_Avatar2.default, { alt: _config2.default.infoTitle, src: _avatar2.default, className: classes.avatar })
	      ),
	      _react2.default.createElement(
	        "h3",
	        { className: classes.title },
	        _config2.default.infoTitle,
	        _react2.default.createElement(
	          "small",
	          null,
	          _config2.default.infoTitleNote
	        )
	      ),
	      _react2.default.createElement(_TopMenu2.default, {
	        pages: pages,
	        homeLinkOnClick: this.homeLinkOnClick,
	        pageLinkOnClick: this.pageLinkOnClick
	      })
	    );
	  };
	
	  return InfoBar;
	}(_react2.default.Component);
	
	InfoBar.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  pages: _propTypes2.default.array.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    navigatorShape: state.navigatorShape
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactJss2.default)(styles)(InfoBar));
	module.exports = exports["default"];

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Avatar.default;
	  }
	});
	
	var _Avatar = _interopRequireDefault(__webpack_require__(449));

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      position: 'relative',
	      display: 'flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      flexShrink: 0,
	      width: 40,
	      height: 40,
	      fontFamily: theme.typography.fontFamily,
	      fontSize: theme.typography.pxToRem(20),
	      borderRadius: '50%',
	      overflow: 'hidden',
	      userSelect: 'none'
	    },
	    colorDefault: {
	      color: theme.palette.background.default,
	      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
	    },
	    img: {
	      width: '100%',
	      height: '100%',
	      textAlign: 'center',
	      // Handle non-square image. The property isn't supported by IE11.
	      objectFit: 'cover'
	    }
	  };
	};
	
	exports.styles = styles;
	
	function Avatar(props) {
	  var alt = props.alt,
	      childrenProp = props.children,
	      childrenClassNameProp = props.childrenClassName,
	      classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      imgProps = props.imgProps,
	      sizes = props.sizes,
	      src = props.src,
	      srcSet = props.srcSet,
	      other = (0, _objectWithoutProperties2.default)(props, ["alt", "children", "childrenClassName", "classes", "className", "component", "imgProps", "sizes", "src", "srcSet"]);
	  var className = (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.colorDefault, childrenProp && !src && !srcSet), classNameProp);
	  var children = null;
	
	  if (childrenProp) {
	    if (childrenClassNameProp && typeof childrenProp !== 'string' && _react.default.isValidElement(childrenProp)) {
	      var childrenClassName = (0, _classnames.default)(childrenClassNameProp, childrenProp.props.className);
	      children = _react.default.cloneElement(childrenProp, {
	        className: childrenClassName
	      });
	    } else {
	      children = childrenProp;
	    }
	  } else if (src || srcSet) {
	    children = _react.default.createElement("img", (0, _extends2.default)({
	      alt: alt,
	      src: src,
	      srcSet: srcSet,
	      sizes: sizes,
	      className: classes.img
	    }, imgProps));
	  }
	
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className
	  }, other), children);
	}
	
	Avatar.propTypes =  false ? {
	  /**
	   * Used in combination with `src` or `srcSet` to
	   * provide an alt attribute for the rendered `img` element.
	   */
	  alt: _propTypes.default.string,
	
	  /**
	   * Used to render icon or text elements inside the Avatar.
	   * `src` and `alt` props will not be used and no `img` will
	   * be rendered by default.
	   *
	   * This can be an element, or just a string.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   * The className of the child element.
	   * Used by Chip and ListItemIcon to style the Avatar icon.
	   */
	  childrenClassName: _propTypes.default.string,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `img` element when the component
	   * is used to display an image.
	   */
	  imgProps: _propTypes.default.object,
	
	  /**
	   * The `sizes` attribute for the `img` element.
	   */
	  sizes: _propTypes.default.string,
	
	  /**
	   * The `src` attribute for the `img` element.
	   */
	  src: _propTypes.default.string,
	
	  /**
	   * The `srcSet` attribute for the `img` element.
	   */
	  srcSet: _propTypes.default.string
	} : {};
	Avatar.defaultProps = {
	  component: 'div'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiAvatar'
	})(Avatar);
	
	exports.default = _default;

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var colors = __webpack_require__(325);
	
	module.exports = {
	  siteTitle: "PyData Delhi Blog | Official blog for PyData Delhi", // <title>
	  shortSiteTitle: "PyData Delhi", // <title> ending for posts and pages
	  siteDescription: "PyData Delhi 2019.",
	  siteUrl: "https://piyush.tech",
	  pathPrefix: "/pydata",
	  siteImage: "../../src/images/jpg/avatar.jpg",
	  siteLanguage: "en",
	  // author
	  authorName: "PyData Delhi",
	  authorTwitterAccount: "PyDataDelhi",
	  // info
	  infoTitle: "piyush aggarwal",
	  infoTitleNote: "hullo",
	  // manifest.json
	  manifestName: "piyush ka blog",
	  manifestShortName: "piyush.blog", // max 12 characters
	  manifestStartUrl: "/",
	  manifestBackgroundColor: colors.background,
	  manifestThemeColor: colors.background,
	  manifestDisplay: "standalone",
	  // contact
	  contactEmail: "pydatadelhi@gmail.com",
	  // social
	  authorSocialLinks: [{ name: "github", url: "https://github.com/pydatadelhi" }, { name: "twitter", url: "https://twitter.com/PyDataDelhi" }, { name: "linkedin", url: "https://www.linkedin.com/company/pydatadelhi/" }]
	};

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "static/avatar.af847138.jpg";

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _ClickAwayListener = __webpack_require__(426);
	
	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);
	
	var _Grow = __webpack_require__(429);
	
	var _Grow2 = _interopRequireDefault(_Grow);
	
	var _IconButton = __webpack_require__(365);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _MenuItem = __webpack_require__(434);
	
	var _MenuItem2 = _interopRequireDefault(_MenuItem);
	
	var _MenuList = __webpack_require__(439);
	
	var _MenuList2 = _interopRequireDefault(_MenuList);
	
	var _Paper = __webpack_require__(432);
	
	var _Paper2 = _interopRequireDefault(_Paper);
	
	var _MoreVert = __webpack_require__(453);
	
	var _MoreVert2 = _interopRequireDefault(_MoreVert);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactPopper = __webpack_require__(424);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = function styles(theme) {
	  var _topMenu;
	
	  return {
	    topMenu: (_topMenu = {
	      float: "right",
	      margin: "5px 10px 0 0"
	    }, _topMenu['@media (min-width: ' + theme.mediaQueryTresholds.M + 'px)'] = {}, _topMenu),
	    open: {
	      color: theme.bars.colors.icon
	    },
	    popperClose: {
	      pointerEvents: "none"
	    }
	  };
	};
	
	var TopMenu = function (_React$Component) {
	  _inherits(TopMenu, _React$Component);
	
	  function TopMenu() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, TopMenu);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      anchorEl: null,
	      open: false
	    }, _this.handleClick = function () {
	      _this.setState({ open: !_this.state.open });
	    }, _this.handleClose = function () {
	      if (!_this.state.open) {
	        return;
	      }
	
	      _this.timeout = setTimeout(function () {
	        _this.setState({ open: false });
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  TopMenu.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearTimeout(this.timeout);
	  };
	
	  TopMenu.prototype.render = function render() {
	    var _classNames,
	        _this2 = this;
	
	    var _props = this.props,
	        classes = _props.classes,
	        pages = _props.pages;
	    var _state = this.state,
	        anchorEl = _state.anchorEl,
	        open = _state.open;
	
	
	    return _react2.default.createElement(
	      'nav',
	      { className: classes.topMenu },
	      _react2.default.createElement(
	        _reactPopper.Manager,
	        null,
	        _react2.default.createElement(
	          _reactPopper.Target,
	          null,
	          _react2.default.createElement(
	            _IconButton2.default,
	            {
	              'aria-label': 'More',
	              'aria-owns': anchorEl ? "long-menu" : null,
	              'aria-haspopup': 'true',
	              onClick: this.handleClick,
	              className: classes.open
	            },
	            _react2.default.createElement(_MoreVert2.default, null)
	          )
	        ),
	        _react2.default.createElement(
	          _reactPopper.Popper,
	          {
	            placement: 'bottom-end',
	            eventsEnabled: open,
	            className: (0, _classnames2.default)((_classNames = {}, _classNames[classes.popperClose] = !open, _classNames))
	          },
	          _react2.default.createElement(
	            _ClickAwayListener2.default,
	            { onClickAway: this.handleClose },
	            _react2.default.createElement(
	              _Grow2.default,
	              { 'in': open, id: 'menu-list', style: { transformOrigin: "0 0 0" } },
	              _react2.default.createElement(
	                _Paper2.default,
	                null,
	                _react2.default.createElement(
	                  _MenuList2.default,
	                  { role: 'menu' },
	                  _react2.default.createElement(
	                    _MenuItem2.default,
	                    {
	                      onClick: function onClick(e) {
	                        _this2.props.homeLinkOnClick(e);
	                        _this2.handleClose();
	                      }
	                    },
	                    'home'
	                  ),
	                  pages.map(function (page, i) {
	                    var _page$node = page.node,
	                        fields = _page$node.fields,
	                        frontmatter = _page$node.frontmatter;
	
	
	                    return _react2.default.createElement(
	                      _gatsbyLink2.default,
	                      { key: fields.slug, to: fields.slug, style: { display: "block" } },
	                      _react2.default.createElement(
	                        _MenuItem2.default,
	                        {
	                          onClick: function onClick(e) {
	                            _this2.props.pageLinkOnClick(e);
	                            _this2.handleClose();
	                          }
	                        },
	                        frontmatter.menuTitle ? frontmatter.menuTitle : frontmatter.title
	                      )
	                    );
	                  }),
	                  _react2.default.createElement(
	                    _gatsbyLink2.default,
	                    { to: '/contact/', style: { display: "block" } },
	                    _react2.default.createElement(
	                      _MenuItem2.default,
	                      {
	                        onClick: function onClick(e) {
	                          _this2.props.pageLinkOnClick(e);
	                          _this2.handleClose();
	                        }
	                      },
	                      'Contact'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        )
	      )
	    );
	  };
	
	  return TopMenu;
	}(_react2.default.Component);
	
	TopMenu.propTypes = {
	  pages: _propTypes2.default.array.isRequired,
	  classes: _propTypes2.default.object.isRequired,
	  pageLinkOnClick: _propTypes2.default.func.isRequired,
	  homeLinkOnClick: _propTypes2.default.func.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(TopMenu);
	module.exports = exports['default'];

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _createSvgIcon = _interopRequireDefault(__webpack_require__(385));
	
	var _default = (0, _createSvgIcon.default)(_react.default.createElement("g", null, _react.default.createElement("path", {
	  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
	})), 'MoreVert');
	
	exports.default = _default;

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _LayoutWrapper = __webpack_require__(455);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LayoutWrapper).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    wrapper: {
	      padding: "1px",
	      position: "absolute",
	      top: 0,
	      left: 0,
	      bottom: 0,
	      right: 0,
	      overflow: "hidden",
	      "@media print": {
	        position: "relative",
	        overflow: "visible"
	      }
	    }
	  };
	};
	
	var LayoutWrapper = function LayoutWrapper(props) {
	  var classes = props.classes,
	      children = props.children;
	
	
	  return _react2.default.createElement(
	    "div",
	    { className: classes.wrapper },
	    children
	  );
	};
	
	LayoutWrapper.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	
	exports.default = (0, _reactJss2.default)(styles)(LayoutWrapper);
	module.exports = exports["default"];

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.isWideScreen = isWideScreen;
	exports.timeoutThrottlerHandler = timeoutThrottlerHandler;
	
	var _theme = __webpack_require__(316);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isWideScreen() {
	  if (typeof window !== "undefined") {
	    var windowWidth = window.innerWidth;
	    var mediaQueryL = _theme2.default.mediaQueryTresholds.L;
	
	    return windowWidth >= mediaQueryL;
	  }
	}
	
	function timeoutThrottlerHandler(timeouts, name, delay, handler) {
	  if (!timeouts[name]) {
	    timeouts[name] = setTimeout(function () {
	      timeouts[name] = null;
	      handler();
	    }, delay);
	  }
	}

/***/ }),
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(480);
	module.exports = __webpack_require__(483).Array.find;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(481);
	var $find = __webpack_require__(499)(5);
	var KEY = 'find';
	var forced = true;
	// Shouldn't skip holes
	if (KEY in []) Array(1)[KEY](function () { forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn /* , that = undefined */) {
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(511)(KEY);


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(482);
	var core = __webpack_require__(483);
	var hide = __webpack_require__(484);
	var redefine = __webpack_require__(494);
	var ctx = __webpack_require__(497);
	var PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
	  var key, own, out, exp;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if (target) redefine(target, key, out, type & $export.U);
	    // export
	    if (exports[key] != out) hide(exports, key, exp);
	    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 482 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 483 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.3' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(485);
	var createDesc = __webpack_require__(493);
	module.exports = __webpack_require__(489) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(486);
	var IE8_DOM_DEFINE = __webpack_require__(488);
	var toPrimitive = __webpack_require__(492);
	var dP = Object.defineProperty;
	
	exports.f = __webpack_require__(489) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(487);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 487 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(489) && !__webpack_require__(490)(function () {
	  return Object.defineProperty(__webpack_require__(491)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(490)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 490 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(487);
	var document = __webpack_require__(482).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(487);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 493 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(482);
	var hide = __webpack_require__(484);
	var has = __webpack_require__(495);
	var SRC = __webpack_require__(496)('src');
	var TO_STRING = 'toString';
	var $toString = Function[TO_STRING];
	var TPL = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(483).inspectSource = function (it) {
	  return $toString.call(it);
	};
	
	(module.exports = function (O, key, val, safe) {
	  var isFunction = typeof val == 'function';
	  if (isFunction) has(val, 'name') || hide(val, 'name', key);
	  if (O[key] === val) return;
	  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if (O === global) {
	    O[key] = val;
	  } else if (!safe) {
	    delete O[key];
	    hide(O, key, val);
	  } else if (O[key]) {
	    O[key] = val;
	  } else {
	    hide(O, key, val);
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString() {
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});


/***/ }),
/* 495 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 496 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(498);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 498 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx = __webpack_require__(497);
	var IObject = __webpack_require__(500);
	var toObject = __webpack_require__(502);
	var toLength = __webpack_require__(504);
	var asc = __webpack_require__(506);
	module.exports = function (TYPE, $create) {
	  var IS_MAP = TYPE == 1;
	  var IS_FILTER = TYPE == 2;
	  var IS_SOME = TYPE == 3;
	  var IS_EVERY = TYPE == 4;
	  var IS_FIND_INDEX = TYPE == 6;
	  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
	  var create = $create || asc;
	  return function ($this, callbackfn, that) {
	    var O = toObject($this);
	    var self = IObject(O);
	    var f = ctx(callbackfn, that, 3);
	    var length = toLength(self.length);
	    var index = 0;
	    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
	    var val, res;
	    for (;length > index; index++) if (NO_HOLES || index in self) {
	      val = self[index];
	      res = f(val, index, O);
	      if (TYPE) {
	        if (IS_MAP) result[index] = res;   // map
	        else if (res) switch (TYPE) {
	          case 3: return true;             // some
	          case 5: return val;              // find
	          case 6: return index;            // findIndex
	          case 2: result.push(val);        // filter
	        } else if (IS_EVERY) return false; // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(501);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 501 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(503);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 503 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(505);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 505 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(507);
	
	module.exports = function (original, length) {
	  return new (speciesConstructor(original))(length);
	};


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(487);
	var isArray = __webpack_require__(508);
	var SPECIES = __webpack_require__(509)('species');
	
	module.exports = function (original) {
	  var C;
	  if (isArray(original)) {
	    C = original.constructor;
	    // cross-realm fallback
	    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
	    if (isObject(C)) {
	      C = C[SPECIES];
	      if (C === null) C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(501);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(510)('wks');
	var uid = __webpack_require__(496);
	var Symbol = __webpack_require__(482).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(482);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(509)('unscopables');
	var ArrayProto = Array.prototype;
	if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(484)(ArrayProto, UNSCOPABLES, {});
	module.exports = function (key) {
	  ArrayProto[UNSCOPABLES][key] = true;
	};


/***/ }),
/* 512 */
/***/ (function(module, exports) {

	module.exports = {"data":{"posts":{"edges":[{"node":{"excerpt":"PROLOGUE I have seen some of my college mates bag internships to work at hot technologies like Deep Learning, Android, at places like DRDO…","fields":{"slug":"/hello_gsoc/","prefix":"2019-05-13"},"frontmatter":{"title":"hello GSoC","subTitle":"current track: LSD - Thunderclouds","category":"life","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-31cc70883855e15b9cd876c47f839ea2-6d4e8.png","srcSet":"/static/cover-31cc70883855e15b9cd876c47f839ea2-6d4e8.png 1x,\n/static/cover-31cc70883855e15b9cd876c47f839ea2-ded4e.png 1.5x,\n/static/cover-31cc70883855e15b9cd876c47f839ea2-59342.png 2x","srcWebp":"/static/cover-31cc70883855e15b9cd876c47f839ea2-9a16c.webp","srcSetWebp":"/static/cover-31cc70883855e15b9cd876c47f839ea2-9a16c.webp 1x,\n/static/cover-31cc70883855e15b9cd876c47f839ea2-c1dac.webp 1.5x,\n/static/cover-31cc70883855e15b9cd876c47f839ea2-cd83a.webp 2x"}}]}}}},{"node":{"excerpt":"INTRODUCTION A common question for anyone stepping foot into the world of FOSS contributions is- How to start? This post aims to be the post…","fields":{"slug":"/the_git_flow/","prefix":"2019-04-10"},"frontmatter":{"title":"the git flow","subTitle":"let's talk collaboration!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-297bb6da05150ac184f477b46d22f74e-6d4e8.png","srcSet":"/static/cover-297bb6da05150ac184f477b46d22f74e-6d4e8.png 1x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-ded4e.png 1.5x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-59342.png 2x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-92edc.png 3x","srcWebp":"/static/cover-297bb6da05150ac184f477b46d22f74e-9a16c.webp","srcSetWebp":"/static/cover-297bb6da05150ac184f477b46d22f74e-9a16c.webp 1x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-c1dac.webp 1.5x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-cd83a.webp 2x,\n/static/cover-297bb6da05150ac184f477b46d22f74e-abaa1.webp 3x"}}]}}}},{"node":{"excerpt":"INTRODUCTION I am an Arch Linux user by day, but recently I needed constant access to Windows 10 OS to develop  KDE Connect  - an awesome…","fields":{"slug":"/muli_booting/","prefix":"2019-02-03"},"frontmatter":{"title":"multi-booting","subTitle":"at its best","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-b5b7c48ac3ab6350523e06503d5113f6-6d4e8.png","srcSet":"/static/cover-b5b7c48ac3ab6350523e06503d5113f6-6d4e8.png 1x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-ded4e.png 1.5x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-59342.png 2x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-92edc.png 3x","srcWebp":"/static/cover-b5b7c48ac3ab6350523e06503d5113f6-9a16c.webp","srcSetWebp":"/static/cover-b5b7c48ac3ab6350523e06503d5113f6-9a16c.webp 1x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-c1dac.webp 1.5x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-cd83a.webp 2x,\n/static/cover-b5b7c48ac3ab6350523e06503d5113f6-abaa1.webp 3x"}}]}}}},{"node":{"excerpt":"pre-DevSprint reading material:- Overview of pandas Contributing Guidelines Git Workflow Guidelines rebase merge code handling Docstrings…","fields":{"slug":"/contributing_to_pandas/","prefix":"2019-01-29"},"frontmatter":{"title":"contributing to pandas","subTitle":"A comprehensive guide","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-9e3e1.jpg","srcSet":"/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-9e3e1.jpg 1x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-670ee.jpg 1.5x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-e72f0.jpg 2x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-a0b5c.jpg 3x","srcWebp":"/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-dc95d.webp","srcSetWebp":"/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-dc95d.webp 1x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-23c19.webp 1.5x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-312b2.webp 2x,\n/static/cover-a6fe5cd47e8261904a294bcdeef82ae1-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"INTRODUCTION When I started using this static blog, little did I know of all the trackers that came with the supporting resources used in a…","fields":{"slug":"/breaking_free/","prefix":"2019-01-26"},"frontmatter":{"title":"breaking free","subTitle":"no more trackers","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-6d4e8.png","srcSet":"/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-6d4e8.png 1x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-ded4e.png 1.5x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-59342.png 2x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-92edc.png 3x","srcWebp":"/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-9a16c.webp","srcSetWebp":"/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-9a16c.webp 1x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-c1dac.webp 1.5x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-cd83a.webp 2x,\n/static/cover-9bbbd470fab6708732b9a87c5a8cff3f-abaa1.webp 3x"}}]}}}},{"node":{"excerpt":"INTRODUCTION This post is dedicated to Arcanist, a command-line interface to Phabricator.\nPhabricator is a set of tools that help  KDE…","fields":{"slug":"/arcanist/","prefix":"2019-01-14"},"frontmatter":{"title":"arcanist","subTitle":"a CLI to Phabricator","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-6d4e8.png","srcSet":"/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-6d4e8.png 1x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-ded4e.png 1.5x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-59342.png 2x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-92edc.png 3x","srcWebp":"/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-9a16c.webp","srcSetWebp":"/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-9a16c.webp 1x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-c1dac.webp 1.5x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-cd83a.webp 2x,\n/static/cover-51cb6cdfac9c7d4e8d7cc089838f10ce-abaa1.webp 3x"}}]}}}},{"node":{"excerpt":"— THE ABCs OF UNIX","fields":{"slug":"/abc_of_unix/","prefix":"2019-01-11"},"frontmatter":{"title":"abc of unix","subTitle":"Learn alphabet the right way!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/Unix-e87325ae57d528519aca61d2a90898f8-6d4e8.png","srcSet":"/static/Unix-e87325ae57d528519aca61d2a90898f8-6d4e8.png 1x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-ded4e.png 1.5x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-59342.png 2x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-92edc.png 3x","srcWebp":"/static/Unix-e87325ae57d528519aca61d2a90898f8-9a16c.webp","srcSetWebp":"/static/Unix-e87325ae57d528519aca61d2a90898f8-9a16c.webp 1x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-c1dac.webp 1.5x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-cd83a.webp 2x,\n/static/Unix-e87325ae57d528519aca61d2a90898f8-abaa1.webp 3x"}}]}}}},{"node":{"excerpt":"PROBLEM Not clear, but looks like misconfigured packages after multiple installations, uninstallations and re-installations of packages and…","fields":{"slug":"/recovering_arch_from_hell/","prefix":"2019-01-09"},"frontmatter":{"title":"recovering arch from hell","subTitle":"Keep playing around with those packages!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/arch-883766e41cd8922a799fde936a7a4e7d-9e3e1.jpg","srcSet":"/static/arch-883766e41cd8922a799fde936a7a4e7d-9e3e1.jpg 1x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-670ee.jpg 1.5x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-e72f0.jpg 2x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-a0b5c.jpg 3x","srcWebp":"/static/arch-883766e41cd8922a799fde936a7a4e7d-dc95d.webp","srcSetWebp":"/static/arch-883766e41cd8922a799fde936a7a4e7d-dc95d.webp 1x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-23c19.webp 1.5x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-312b2.webp 2x,\n/static/arch-883766e41cd8922a799fde936a7a4e7d-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"\nHi Greg! \nI saw your Github profile had this starter for a personal blog, so I thought Why not!? After days of scouring the internet, I…","fields":{"slug":"/a_better_blog/","prefix":"2018-12-20"},"frontmatter":{"title":"a better blog","subTitle":"And I'm sure Greg would be proud.","category":"life","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-9e3e1.jpg","srcSet":"/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-9e3e1.jpg 1x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-670ee.jpg 1.5x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-e72f0.jpg 2x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-a0b5c.jpg 3x","srcWebp":"/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-dc95d.webp","srcSetWebp":"/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-dc95d.webp 1x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-23c19.webp 1.5x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-312b2.webp 2x,\n/static/photo-1490474418585-ba9bad8fd0ea-cover-1b0e3b65008965142a63adb983e4a904-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"PROLOGUE While setting up Dev environment on my CAIRO-STATION (desktop computer at my home), I realized I could not install Linux on that…","fields":{"slug":"/blurred_lines/","prefix":"2018-09-03"},"frontmatter":{"title":"Blurred Lines","subTitle":"Linux? Windows? I say, everything at once!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-1de38b65c79d21f82041b9a9d7121e8c-9e3e1.jpg","srcSet":"/static/cover-1de38b65c79d21f82041b9a9d7121e8c-9e3e1.jpg 1x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-670ee.jpg 1.5x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-e72f0.jpg 2x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-a0b5c.jpg 3x","srcWebp":"/static/cover-1de38b65c79d21f82041b9a9d7121e8c-dc95d.webp","srcSetWebp":"/static/cover-1de38b65c79d21f82041b9a9d7121e8c-dc95d.webp 1x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-23c19.webp 1.5x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-312b2.webp 2x,\n/static/cover-1de38b65c79d21f82041b9a9d7121e8c-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"Simplicity is the ultimate sophistication.   -Leonardo da Vinci After eons of self-doubt and mixed opinion, I finally decided to get Arch…","fields":{"slug":"/arch/","prefix":"2018-07-23"},"frontmatter":{"title":"Arch","subTitle":"Zero to One","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-5bd5a9091666956a85c91dcd83a9ee04-9e3e1.jpg","srcSet":"/static/cover-5bd5a9091666956a85c91dcd83a9ee04-9e3e1.jpg 1x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-670ee.jpg 1.5x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-e72f0.jpg 2x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-a0b5c.jpg 3x","srcWebp":"/static/cover-5bd5a9091666956a85c91dcd83a9ee04-dc95d.webp","srcSetWebp":"/static/cover-5bd5a9091666956a85c91dcd83a9ee04-dc95d.webp 1x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-23c19.webp 1.5x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-312b2.webp 2x,\n/static/cover-5bd5a9091666956a85c91dcd83a9ee04-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"Blockchain is a vast,  global distributed ledger  or database running on millions of devices and open to anyone, where not just information…","fields":{"slug":"/my_testimony_about_blockchain_p1/","prefix":"2018-07-17"},"frontmatter":{"title":"My Testimony about Blockchain - Part 1","subTitle":"from Genesis block to blockchain and everything in between!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-9e3e1.jpg","srcSet":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-9e3e1.jpg 1x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-670ee.jpg 1.5x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-e72f0.jpg 2x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-a0b5c.jpg 3x","srcWebp":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-dc95d.webp","srcSetWebp":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-dc95d.webp 1x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-23c19.webp 1.5x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-312b2.webp 2x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"They’ll what ? They’ll fork off of the network. A byproduct of distributed consensus, forks happen anytime two miners find a block at nearly…","fields":{"slug":"/my_testimony_about_blockchain_p2/","prefix":"2018-07-17"},"frontmatter":{"title":"My Testimony about Blockchain - Part 2","subTitle":"from Genesis block to blockchain and everything in between!","category":"tech","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-9e3e1.jpg","srcSet":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-9e3e1.jpg 1x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-670ee.jpg 1.5x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-e72f0.jpg 2x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-a0b5c.jpg 3x","srcWebp":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-dc95d.webp","srcSetWebp":"/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-dc95d.webp 1x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-23c19.webp 1.5x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-312b2.webp 2x,\n/static/cover-0a42be4ad5d5b398e3ac890bbc3f6baf-aa8fc.webp 3x"}}]}}}},{"node":{"excerpt":"This is the first post that comes with the blog by default. Let’s see. I made a blog. Let’s try our best to make it useful, yeah ? I don’t…","fields":{"slug":"/its_a_blog/","prefix":"2018-07-10"},"frontmatter":{"title":"It's a blog !","subTitle":"This is the default post that comes with the blog.","category":"life","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/front-9be379da23d924d12b11e3f8fb265d50-6d4e8.png","srcSet":"/static/front-9be379da23d924d12b11e3f8fb265d50-6d4e8.png 1x","srcWebp":"/static/front-9be379da23d924d12b11e3f8fb265d50-9a16c.webp","srcSetWebp":"/static/front-9be379da23d924d12b11e3f8fb265d50-9a16c.webp 1x"}}]}}}},{"node":{"excerpt":"Skimming through your seniors’ profile does some good at times! “The programmers of tomorrow are the wizards of the future !” – Gabe, Co…","fields":{"slug":"/a_real_life_hogwarts/","prefix":"2018-07-10"},"frontmatter":{"title":"A real life Hogwarts","subTitle":"It came to me accidentally, to be honest!","category":"life","cover":{"children":[{"__typename":"ImageSharp","resolutions":{"width":90,"height":90,"src":"/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-9e3e1.jpg","srcSet":"/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-9e3e1.jpg 1x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-670ee.jpg 1.5x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-e72f0.jpg 2x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-a0b5c.jpg 3x","srcWebp":"/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-dc95d.webp","srcSetWebp":"/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-dc95d.webp 1x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-23c19.webp 1.5x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-312b2.webp 2x,\n/static/cover-e2ebe10f8eb5e1129a014986b85b3b6b-aa8fc.webp 3x"}}]}}}}]},"pages":{"edges":[{"node":{"fields":{"slug":"/about/","prefix":"1"},"frontmatter":{"title":"about piyush | brute4s99","menuTitle":"about"}}},{"node":{"fields":{"slug":"/links/","prefix":"2"},"frontmatter":{"title":"catch me here","menuTitle":"links"}}}]},"parts":{"edges":[{"node":{"html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>","frontmatter":{"title":"author"}}},{"node":{"html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>","frontmatter":{"title":"footnote"}}},{"node":{"html":"<p align='center'> \nThis is my blog. <br>\nAny suggestions are welcome.\n<br></p>","frontmatter":{"title":"info"}}}]}},"layoutContext":{}}

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(117);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(118);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(153);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AppShell = function (_React$Component) {
	  (0, _inherits3.default)(AppShell, _React$Component);
	
	  function AppShell() {
	    (0, _classCallCheck3.default)(this, AppShell);
	    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
	  }
	
	  AppShell.prototype.render = function render() {
	    return _react2.default.createElement("div", null);
	  };
	
	  return AppShell;
	}(_react2.default.Component);
	
	exports.default = AppShell;

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.postQuery = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Main = __webpack_require__(515);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	var _reactRedux = __webpack_require__(245);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _Post = __webpack_require__(517);
	
	var _Post2 = _interopRequireDefault(_Post);
	
	var _Footer = __webpack_require__(526);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _Seo = __webpack_require__(529);
	
	var _Seo2 = _interopRequireDefault(_Seo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	__webpack_require__(479);
	__webpack_require__(531);
	
	var PostTemplate = function (_React$Component) {
	  _inherits(PostTemplate, _React$Component);
	
	  function PostTemplate() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, PostTemplate);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.moveNavigatorAside = _shared.moveNavigatorAside.bind(_this), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  PostTemplate.prototype.componentDidMount = function componentDidMount() {
	    if (this.props.navigatorPosition === "is-featured") {
	      this.moveNavigatorAside();
	    }
	  };
	
	  PostTemplate.prototype.render = function render() {
	    var _props = this.props,
	        data = _props.data,
	        pathContext = _props.pathContext;
	
	    var facebook = (((data || {}).site || {}).siteMetadata || {}).facebook;
	
	    return _react2.default.createElement(
	      _Main2.default,
	      null,
	      _react2.default.createElement(_Post2.default, { post: data.post, slug: pathContext.slug, author: data.author, facebook: facebook }),
	      _react2.default.createElement(_Footer2.default, { footnote: data.footnote }),
	      _react2.default.createElement(_Seo2.default, { data: data.post, facebook: facebook })
	    );
	  };
	
	  return PostTemplate;
	}(_react2.default.Component);
	
	PostTemplate.propTypes = {
	  data: _propTypes2.default.object.isRequired,
	  pathContext: _propTypes2.default.object.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  setNavigatorPosition: _propTypes2.default.func.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    isWideScreen: state.isWideScreen
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition,
	  setNavigatorShape: _store.setNavigatorShape
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PostTemplate);
	
	//eslint-disable-next-line no-undef
	
	var postQuery = exports.postQuery = "** extracted graphql fragment **";

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Main = __webpack_require__(516);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Main).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _SpringScrollbars = __webpack_require__(394);
	
	var _SpringScrollbars2 = _interopRequireDefault(_SpringScrollbars);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _main, _article;
	
	  return {
	    main: (_main = {
	      position: "absolute",
	      top: 0,
	      left: 0,
	      bottom: 0,
	      width: "100%",
	      animationName: "main-entry",
	      animationDuration: ".5s"
	    }, _main["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      width: "calc(100vw - " + theme.info.sizes.width + "px - " + theme.bars.sizes.actionsBar + "px)",
	      left: theme.info.sizes.width + "px"
	    }, _main["@media print"] = {
	      position: "relative",
	      "& > div": {
	        overflow: "visible!important"
	      },
	      "& > div > div": {
	        position: "relative!important"
	      }
	    }, _main),
	    article: (_article = {
	      maxWidth: theme.main.sizes.maxWidth,
	      margin: "0 auto",
	      padding: "calc(1.5rem + " + theme.info.sizes.height + "px) 1.8rem 1.5rem 1.5rem",
	      "& strong, & b": {
	        letterSpacing: "-.02em",
	        fontWeight: 600
	      },
	      "& a": {
	        fontWeight: 600,
	        letterSpacing: "-.02em",
	        textShadow: "\n         2px  2px " + theme.main.colors.background + ",\n        -2px  2px " + theme.main.colors.background + ",\n        -2px -2px " + theme.main.colors.background + ",\n        -2px  2px " + theme.main.colors.background + ",\n        -2px  0   " + theme.main.colors.background + ",\n         2px  0   " + theme.main.colors.background + "\n      ",
	        display: "inline-block",
	        textDecoration: "none",
	        transition: "0.3s",
	        "&:hover": {
	          color: theme.base.colors.linkHover
	        }
	      }
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "calc(2.5rem + " + theme.info.sizes.height + "px) 3.5rem 2.5rem"
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "3.5rem"
	    }, _article),
	    "@keyframes main-entry": {
	      "0%": {
	        opacity: 0,
	        transform: "translateY(20px)"
	      },
	      "100%": {
	        opacity: 1,
	        transform: "translateY(0)"
	      }
	    }
	  };
	};
	
	var Main = function Main(props) {
	  var classes = props.classes,
	      children = props.children;
	
	
	  return _react2.default.createElement(
	    "main",
	    { className: classes.main },
	    _react2.default.createElement(
	      _SpringScrollbars2.default,
	      null,
	      children
	    )
	  );
	};
	
	Main.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.any.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Main);
	module.exports = exports["default"];

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Post = __webpack_require__(518);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Post).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Article = __webpack_require__(519);
	
	var _Article2 = _interopRequireDefault(_Article);
	
	var _PostHeader = __webpack_require__(520);
	
	var _PostHeader2 = _interopRequireDefault(_PostHeader);
	
	var _Content = __webpack_require__(521);
	
	var _Content2 = _interopRequireDefault(_Content);
	
	var _PostFooter = __webpack_require__(522);
	
	var _PostFooter2 = _interopRequireDefault(_PostFooter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Post = function Post(props) {
	  var post = props.post,
	      author = props.author,
	      slug = props.slug;
	
	  var frontmatter = (post || {}).frontmatter;
	  var title = ((post || {}).frontmatter || {}).title;
	  var subTitle = ((post || {}).frontmatter || {}).subTitle;
	  var date = ((post || {}).fields || {}).prefix;
	  var html = (post || {}).html;
	  var htmlAst = (post || {}).htmlAst;
	
	  //console.log(htmlAst);
	
	  return _react2.default.createElement(
	    _Article2.default,
	    null,
	    _react2.default.createElement(_PostHeader2.default, { title: title, subTitle: subTitle, date: date }),
	    _react2.default.createElement(_Content2.default, { html: html }),
	    _react2.default.createElement(_PostFooter2.default, { author: author, post: post, slug: slug })
	  );
	};
	
	Post.propTypes = {
	  post: _propTypes2.default.object.isRequired,
	  author: _propTypes2.default.object.isRequired,
	  slug: _propTypes2.default.string.isRequired
	};
	
	exports.default = Post;
	module.exports = exports["default"];

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _article;
	
	  return {
	    article: (_article = {
	      background: theme.main.colors.background,
	      maxWidth: theme.main.sizes.articleMaxWidth,
	      margin: "0 auto",
	      padding: "calc(" + theme.bars.sizes.infoBar + "px + 1.5rem) 1.5rem  1.5rem 1.5rem",
	      "& strong, & b": {
	        letterSpacing: "-.02em"
	      },
	      "& a": {
	        fontWeight: "bold",
	        letterSpacing: "-.02em",
	        textDecoration: "underline",
	        transition: "0.3s",
	        "&:hover": {
	          color: theme.base.colors.linkHover
	        }
	      }
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "calc(2.5rem + " + theme.bars.sizes.infoBar + "px) 3.5rem 2.5rem"
	    }, _article["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "3.5rem"
	    }, _article)
	  };
	};
	
	var Article = function Article(props) {
	  var children = props.children,
	      classes = props.classes;
	
	
	  return _react2.default.createElement(
	    "article",
	    { className: classes.article },
	    children
	  );
	};
	
	Article.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Article);
	module.exports = exports["default"];

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _title, _subTitle;
	
	  return {
	    header: {
	      margin: "0 0 3em"
	    },
	    title: (_title = {
	      color: theme.main.colors.title,
	      fontSize: theme.main.fonts.title.size + "em",
	      letterSpacing: "-0.04em",
	      fontWeight: theme.main.fonts.title.weight,
	      lineHeight: theme.main.fonts.title.lineHeight,
	      margin: "0 0 0.4em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeM + "em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeL + "em",
	      letterSpacing: "-0.05em"
	    }, _title),
	    subTitle: (_subTitle = {
	      color: theme.main.colors.subTitle,
	      fontSize: theme.main.fonts.subTitle.size + "em",
	      lineHeight: theme.main.fonts.subTitle.lineHeight,
	      fontWeight: theme.main.fonts.subTitle.weight
	    }, _subTitle["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.subTitle.sizeM + "em"
	    }, _subTitle["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.subTitle.sizeL + "em"
	    }, _subTitle),
	    meta: {
	      fontSize: theme.main.fonts.meta.size + "em",
	      fontWeight: theme.main.fonts.meta.weight,
	      color: theme.main.colors.meta
	    }
	  };
	};
	
	var PostHeader = function PostHeader(props) {
	  var classes = props.classes,
	      title = props.title,
	      subTitle = props.subTitle,
	      date = props.date;
	
	
	  function myDate(dateString) {
	    var dateObj = new Date(dateString).toUTCString();
	    var dateToShow = dateObj.split(" ").slice(0, 4).join(" ");
	
	    return dateToShow;
	  }
	
	  return _react2.default.createElement(
	    "header",
	    { className: classes.header },
	    _react2.default.createElement(
	      "h1",
	      { className: classes.title },
	      title
	    ),
	    _react2.default.createElement(
	      "h2",
	      { className: classes.subTitle },
	      subTitle
	    ),
	    _react2.default.createElement(
	      "div",
	      { className: classes.meta },
	      myDate(date)
	    )
	  );
	};
	
	PostHeader.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  title: _propTypes2.default.string.isRequired,
	  subTitle: _propTypes2.default.string,
	  date: _propTypes2.default.string.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(PostHeader);
	module.exports = exports["default"];

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactRedux = __webpack_require__(245);
	
	var _store = __webpack_require__(326);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _gatsbyRespImage, _ul, _content;
	
	  return {
	    content: (_content = {
	      color: theme.main.colors.content,
	      fontSize: function fontSize(props) {
	        return "calc(" + theme.main.fonts.content.size + "em * " + props.fontSizeIncrease + ")";
	      },
	      lineHeight: theme.main.fonts.content.lineHeight,
	      "& a": {
	        color: theme.base.colors.link
	      },
	      "& .gatsby-highlight": {
	        margin: "2em 0"
	      },
	      "& .gatsby-resp-iframe-wrapper": {
	        margin: "2em 0"
	      },
	      "& .gatsby-resp-image-link": (_gatsbyRespImage = {
	        margin: "2em -1.5rem",
	        border: "none"
	      }, _gatsbyRespImage["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        margin: "2.5em -3.5rem"
	      }, _gatsbyRespImage),
	      "& h2, & h3": {
	        color: theme.main.colors.contentHeading,
	        fontSize: theme.main.fonts.contentHeading.h2Size + "em",
	        fontWeight: theme.main.fonts.contentHeading.weight,
	        lineHeight: theme.main.fonts.contentHeading.lineHeight,
	        margin: "2em 0 1em",
	        letterSpacing: "-0.02em"
	      },
	      "& h3": {
	        fontSize: theme.main.fonts.contentHeading.h3Size + "em"
	      },
	      "& p": {
	        margin: "0 0 1.5em 0",
	        fontWeight: 400
	      },
	      "& ul": (_ul = {
	        listStyle: "circle",
	        padding: "0 0 0 1.3em"
	      }, _ul["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	        padding: "0 0 0 2em"
	      }, _ul),
	      "& li": {
	        margin: "0 0 .5em 0"
	      },
	      "& blockquote": {
	        border: "5px solid " + theme.main.colors.blockquoteFrame,
	        fontStyle: "italic",
	        margin: "2.5em 0",
	        padding: "1em 1.1em 1em 1.3em",
	        position: "relative",
	        "& p": {
	          margin: 0
	        },
	        "&::before, &::after": {
	          background: theme.main.colors.background,
	          content: "\"\"",
	          height: "5px",
	          left: "50%",
	          marginLeft: "-47%",
	          position: "absolute",
	          top: "-5px",
	          width: "94%"
	        },
	        "&::after": {
	          top: "auto",
	          bottom: "-5px"
	        }
	      }
	    }, _content["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.content.sizeM + "em"
	    }, _content["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.content.sizeL + "em"
	    }, _content)
	  };
	};
	
	var Content = function Content(props) {
	  var classes = props.classes,
	      html = props.html,
	      children = props.children;
	
	
	  if (html) {
	    return _react2.default.createElement("div", { className: classes.content, dangerouslySetInnerHTML: { __html: html } });
	  } else {
	    return _react2.default.createElement(
	      "div",
	      { className: classes.content },
	      children
	    );
	  }
	};
	
	Content.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  html: _propTypes2.default.string,
	  children: _propTypes2.default.node,
	  setFontSizeIncrease: _propTypes2.default.func.isRequired,
	  fontSizeIncrease: _propTypes2.default.number.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    fontSizeIncrease: state.fontSizeIncrease
	  };
	};
	
	var mapDispatchToProps = {
	  setFontSizeIncrease: _store.setFontSizeIncrease
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactJss2.default)(styles)(Content));
	module.exports = exports["default"];

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _AsyncComponent = __webpack_require__(338);
	
	var _AsyncComponent2 = _interopRequireDefault(_AsyncComponent);
	
	var _PostAuthor = __webpack_require__(523);
	
	var _PostAuthor2 = _interopRequireDefault(_PostAuthor);
	
	var _PostComments = __webpack_require__(524);
	
	var _PostComments2 = _interopRequireDefault(_PostComments);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	__webpack_require__(479);
	
	var styles = function styles(theme) {
	  return {
	    footer: {
	      color: theme.main.colors.footer,
	      fontSize: theme.main.fonts.footer.size + "em",
	      lineHeight: theme.main.fonts.footer.lineHeight,
	      "& p": {
	        margin: 0
	      }
	    }
	  };
	};
	
	var PostShare = (0, _AsyncComponent2.default)(function () {
	  return new Promise(function (resolve) {
	    __webpack_require__.e/* nsure */(2, function (require) {
	      resolve(__webpack_require__(525));
	    });
	  }).then(function (module) {
	    return module;
	  }).catch(function (error) {});
	});
	
	var PostFooter = function PostFooter(_ref) {
	  var classes = _ref.classes,
	      author = _ref.author,
	      post = _ref.post,
	      slug = _ref.slug;
	
	  return _react2.default.createElement(
	    "footer",
	    { className: classes.footer },
	    _react2.default.createElement(PostShare, { post: post, slug: slug }),
	    _react2.default.createElement(_PostAuthor2.default, { author: author }),
	    _react2.default.createElement(_PostComments2.default, { post: post, slug: slug })
	  );
	};
	
	PostFooter.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  author: _propTypes2.default.object.isRequired,
	  post: _propTypes2.default.object.isRequired,
	  slug: _propTypes2.default.string.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(PostFooter);
	module.exports = exports["default"];

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _Avatar = __webpack_require__(448);
	
	var _Avatar2 = _interopRequireDefault(_Avatar);
	
	var _config = __webpack_require__(450);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _avatar2 = __webpack_require__(451);
	
	var _avatar3 = _interopRequireDefault(_avatar2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _author, _avatar;
	
	  return {
	    author: (_author = {
	      margin: "3em 0 0",
	      padding: "3em 0 0",
	      borderTop: "1px solid #ddd",
	      display: "flex",
	      flexDirection: "column",
	      alignItems: "center",
	      "& a": {
	        color: theme.base.colors.link
	      }
	    }, _author["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      flexDirection: "row",
	      justifyContent: "center"
	    }, _author),
	    avatar: (_avatar = {
	      margin: "0 1em 1em",
	      borderRadius: "75% 65%",
	      width: "60px",
	      height: "60px",
	      border: "1px solid #ddd",
	      flexShrink: 0
	    }, _avatar["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      margin: "0 1em 0"
	    }, _avatar),
	    box: {
	      display: "flex",
	      flexDirction: "column",
	      minHeight: "50px",
	      alignItems: "center"
	    }
	  };
	};
	
	var PostAuthor = function PostAuthor(props) {
	  var classes = props.classes,
	      author = props.author;
	
	
	  return _react2.default.createElement(
	    "div",
	    { className: classes.author },
	    _react2.default.createElement(_Avatar2.default, { src: _avatar3.default, className: classes.avatar, alt: _config2.default.authorName }),
	    _react2.default.createElement("div", { className: classes.box, dangerouslySetInnerHTML: { __html: author.html } })
	  );
	};
	
	PostAuthor.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  author: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(PostAuthor);
	module.exports = exports["default"];

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _config = __webpack_require__(450);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	__webpack_require__(479);
	
	var styles = function styles(theme) {
	  return {
	    postComments: {
	      margin: "3em 0 0",
	      padding: "3em 0 0",
	      borderTop: "1px solid #ddd"
	    }
	  };
	};
	
	var PostComments = function PostComments(props) {
	  var classes = props.classes,
	      slug = props.slug;
	
	
	  return _react2.default.createElement("div", { id: "post-comments", className: classes.postComments });
	};
	
	PostComments.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  post: _propTypes2.default.object.isRequired,
	  slug: _propTypes2.default.string.isRequired,
	  theme: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(PostComments);
	module.exports = exports["default"];

/***/ }),
/* 525 */,
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Footer = __webpack_require__(527);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Footer).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _Footnote = __webpack_require__(528);
	
	var _Footnote2 = _interopRequireDefault(_Footnote);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _footer;
	
	  return {
	    footer: (_footer = {
	      color: theme.main.colors.footer,
	      padding: "1.5rem 1.5rem  calc(" + theme.bars.sizes.actionsBar + "px + 1.5rem) 1.5rem",
	      "& p": {
	        margin: 0
	      }
	    }, _footer["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      padding: "2rem 2.5rem  calc(" + theme.bars.sizes.actionsBar + "px + 2rem) 2.5rem"
	    }, _footer["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      padding: "2rem 3rem 2rem 3rem"
	    }, _footer)
	  };
	};
	
	var Footer = function Footer(props) {
	  var classes = props.classes,
	      footnote = props.footnote;
	  var html = footnote.html;
	
	
	  return _react2.default.createElement(
	    "footer",
	    { className: classes.footer },
	    _react2.default.createElement(_Footnote2.default, { content: html })
	  );
	};
	
	Footer.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  footnote: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Footer);
	module.exports = exports["default"];

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    container: {
	      fontSize: theme.footer.fonts.footnote.size + "em",
	      lineHeight: theme.footer.fonts.footnote.lineHeight,
	      color: theme.footer.colors.text,
	      "& a": {
	        color: theme.footer.colors.link,
	        fontWeight: "normal",
	        textShadow: "none"
	      },
	      "& a:hover": {
	        color: theme.footer.colors.linkHover
	      },
	      "& ul": {
	        listStyle: "none",
	        margin: 0,
	        padding: 0,
	        textAlign: "center"
	      },
	      "& li": {
	        display: "inline-block",
	        margin: "0 .3em"
	      }
	    }
	  };
	};
	
	var Footnote = function Footnote(_ref) {
	  var classes = _ref.classes,
	      content = _ref.content;
	
	  return _react2.default.createElement("div", { className: classes.container, dangerouslySetInnerHTML: { __html: content } });
	};
	
	Footnote.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  content: _propTypes2.default.string.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Footnote);
	module.exports = exports["default"];

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Seo = __webpack_require__(530);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Seo).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactHelmet = __webpack_require__(59);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _config = __webpack_require__(450);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Seo = function Seo(props) {
	  var data = props.data;
	
	  var postTitle = ((data || {}).frontmatter || {}).title;
	  var postDescription = ((data || {}).frontmatter || {}).description;
	  var postCover = ((data || {}).frontmatter || {}).cover;
	  var postSlug = ((data || {}).fields || {}).slug;
	
	  var title = postTitle ? postTitle + " - " + _config2.default.shortSiteTitle : _config2.default.siteTitle;
	  var description = postDescription ? postDescription : _config2.default.siteDescription;
	  var image = postCover ? postCover.childImageSharp.resize.src : _config2.default.siteImage;
	  var url = _config2.default.siteUrl + _config2.default.pathPrefix + postSlug;
	
	  return _react2.default.createElement(
	    _reactHelmet2.default,
	    {
	      htmlAttributes: {
	        lang: _config2.default.siteLanguage,
	        prefix: "og: http://ogp.me/ns#"
	      }
	    },
	    _react2.default.createElement(
	      "title",
	      null,
	      title
	    ),
	    _react2.default.createElement("meta", { name: "description", content: description }),
	    _react2.default.createElement("meta", { property: "og:url", content: url }),
	    _react2.default.createElement("meta", { property: "og:title", content: title }),
	    _react2.default.createElement("meta", { property: "og:description", content: description }),
	    _react2.default.createElement("meta", { property: "og:image", content: image }),
	    _react2.default.createElement("meta", { property: "og:type", content: "website" })
	  );
	};
	
	Seo.propTypes = {
	  data: _propTypes2.default.object
	};
	
	exports.default = Seo;
	module.exports = exports["default"];

/***/ }),
/* 531 */
/***/ (function(module, exports) {

	// empty (null-loader)

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.pageQuery = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactRedux = __webpack_require__(245);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _Main = __webpack_require__(515);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	var _Page = __webpack_require__(533);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _Footer = __webpack_require__(526);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _Seo = __webpack_require__(529);
	
	var _Seo2 = _interopRequireDefault(_Seo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PageTemplate = function (_React$Component) {
	  _inherits(PageTemplate, _React$Component);
	
	  function PageTemplate() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, PageTemplate);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.moveNavigatorAside = _shared.moveNavigatorAside.bind(_this), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  PageTemplate.prototype.componentDidMount = function componentDidMount() {
	    if (this.props.navigatorPosition === "is-featured") {
	      this.moveNavigatorAside();
	    }
	  };
	
	  PageTemplate.prototype.render = function render() {
	    var data = this.props.data;
	
	    var facebook = (((data || {}).site || {}).siteMetadata || {}).facebook;
	
	    return _react2.default.createElement(
	      _Main2.default,
	      null,
	      _react2.default.createElement(_Page2.default, { page: data.page }),
	      _react2.default.createElement(_Footer2.default, { footnote: data.footnote }),
	      _react2.default.createElement(_Seo2.default, { data: data.post, facebook: facebook })
	    );
	  };
	
	  return PageTemplate;
	}(_react2.default.Component);
	
	PageTemplate.propTypes = {
	  data: _propTypes2.default.object.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  setNavigatorPosition: _propTypes2.default.func.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    isWideScreen: state.isWideScreen
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition,
	  setNavigatorShape: _store.setNavigatorShape
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PageTemplate);
	
	//eslint-disable-next-line no-undef
	
	var pageQuery = exports.pageQuery = "** extracted graphql fragment **";

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Page = __webpack_require__(534);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Page).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Article = __webpack_require__(519);
	
	var _Article2 = _interopRequireDefault(_Article);
	
	var _PageHeader = __webpack_require__(535);
	
	var _PageHeader2 = _interopRequireDefault(_PageHeader);
	
	var _Content = __webpack_require__(521);
	
	var _Content2 = _interopRequireDefault(_Content);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Page = function Page(props) {
	  var page = props.page;
	
	  var html = (page || {}).html;
	
	  return _react2.default.createElement(
	    _Article2.default,
	    null,
	    _react2.default.createElement(_PageHeader2.default, page.frontmatter),
	    _react2.default.createElement(_Content2.default, { html: html })
	  );
	};
	
	Page.propTypes = {
	  page: _propTypes2.default.object.isRequired
	};
	
	exports.default = Page;
	module.exports = exports["default"];

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _algoliaFull = __webpack_require__(536);
	
	var _algoliaFull2 = _interopRequireDefault(_algoliaFull);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _title, _mark;
	
	  return {
	    header: {
	      margin: "0 0 3em",
	      display: "flex",
	      flexDirection: "row",
	      justifyContent: "flex-start",
	      alignContent: "center"
	    },
	    title: (_title = {
	      color: theme.main.colors.title,
	      fontSize: theme.main.fonts.title.size + "em",
	      letterSpacing: "-0.04em",
	      fontWeight: theme.main.fonts.title.weight,
	      lineHeight: theme.main.fonts.title.lineHeight,
	      margin: "0 0 0.4em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeM + "em"
	    }, _title["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      fontSize: theme.main.fonts.title.sizeL + "em",
	      letterSpacing: "-0.05em"
	    }, _title),
	    mark: (_mark = {
	      width: "130px",
	      display: "block",
	      margin: "0 0 0 10px"
	    }, _mark["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      width: "170px"
	    }, _mark["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	      width: "190px"
	    }, _mark)
	  };
	};
	
	var Header = function Header(props) {
	  var classes = props.classes,
	      title = props.title,
	      algolia = props.algolia;
	
	
	  return _react2.default.createElement(
	    "header",
	    { className: classes.header },
	    _react2.default.createElement(
	      "h1",
	      { className: classes.title },
	      title
	    ),
	    algolia && _react2.default.createElement(
	      "a",
	      {
	        className: classes.mark,
	        href: "https://www.algolia.com",
	        rel: "noopener noreferrer",
	        target: "_blank"
	      },
	      _react2.default.createElement(_algoliaFull2.default, null)
	    )
	  );
	};
	
	Header.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  title: _propTypes2.default.string.isRequired,
	  algolia: _propTypes2.default.bool
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Header);
	module.exports = exports["default"];

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	var React = __webpack_require__(1);
	
	function AlgoliaIcon (props) {
	    return React.createElement("svg",props,[React.createElement("linearGradient",{"id":"a","x1":"428.258","x2":"434.145","y1":"404.15","y2":"409.85","gradientUnits":"userSpaceOnUse","gradientTransform":"matrix(94.045 0 0 -94.072 -40381.527 38479.52)","key":0},[React.createElement("stop",{"offset":"0","stopColor":"#00aeff","key":0}),React.createElement("stop",{"offset":"1","stopColor":"#3369e7","key":1})]),React.createElement("path",{"fill":"url(#a)","d":"M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z","key":1}),React.createElement("path",{"fill":"#FFF","d":"M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z","key":2}),React.createElement("path",{"fill":"#182359","d":"M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z","key":3})]);
	}
	
	AlgoliaIcon.displayName = "AlgoliaIcon";
	
	AlgoliaIcon.defaultProps = {"viewBox":"0 0 1366 362"};
	
	module.exports = AlgoliaIcon;
	
	AlgoliaIcon.default = AlgoliaIcon;


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _reactObfuscate = __webpack_require__(538);
	
	var _reactObfuscate2 = _interopRequireDefault(_reactObfuscate);
	
	var _Main = __webpack_require__(515);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	var _Article = __webpack_require__(519);
	
	var _Article2 = _interopRequireDefault(_Article);
	
	var _PageHeader = __webpack_require__(535);
	
	var _PageHeader2 = _interopRequireDefault(_PageHeader);
	
	var _Content = __webpack_require__(521);
	
	var _Content2 = _interopRequireDefault(_Content);
	
	var _ContactForm = __webpack_require__(539);
	
	var _ContactForm2 = _interopRequireDefault(_ContactForm);
	
	var _config = __webpack_require__(450);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {};
	};
	
	var Contact = function Contact() {
	  return _react2.default.createElement(
	    _Main2.default,
	    null,
	    _react2.default.createElement(
	      _Article2.default,
	      null,
	      _react2.default.createElement(_PageHeader2.default, { title: "contact" }),
	      _react2.default.createElement(
	        _Content2.default,
	        null,
	        "Feel free to contact me by email: ",
	        _react2.default.createElement(_reactObfuscate2.default, { email: _config2.default.contactEmail }),
	        " or use the form below."
	      ),
	      _react2.default.createElement(_ContactForm2.default, null)
	    )
	  );
	};
	
	Contact.propTypes = {
	  classes: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Contact);
	module.exports = exports["default"];

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var combineHeaders = function combineHeaders() {
	  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  return Object.keys(params).map(function (key) {
	    return key + '=' + encodeURIComponent(params[key]);
	  }).join('&');
	};
	
	var createContactLink = function createContactLink(tel, sms, facetime, email, headers) {
	  var link = void 0;
	  if (email) {
	    link = 'mailto:' + email;
	    if (headers) {
	      link += '?' + combineHeaders(headers);
	    }
	  } else if (tel) {
	    link = 'tel:' + tel;
	  } else if (sms) {
	    link = 'sms:' + sms;
	  } else if (facetime) {
	    link = 'facetime:' + facetime;
	  }
	  return link;
	};
	
	var Obfuscate = function (_Component) {
	  _inherits(Obfuscate, _Component);
	
	  function Obfuscate(props) {
	    _classCallCheck(this, Obfuscate);
	
	    var _this = _possibleConstructorReturn(this, (Obfuscate.__proto__ || Object.getPrototypeOf(Obfuscate)).call(this, props));
	
	    _this.state = {
	      humanInteraction: false
	    };
	    return _this;
	  }
	
	  _createClass(Obfuscate, [{
	    key: 'render',
	    value: function render() {
	      return this.props.obfuscate ? this.renderObfuscatedLink() : this.renderLink();
	    }
	  }, {
	    key: 'renderLink',
	    value: function renderLink() {
	      var _props = this.props,
	          tel = _props.tel,
	          sms = _props.sms,
	          facetime = _props.facetime,
	          email = _props.email,
	          obfuscate = _props.obfuscate,
	          headers = _props.headers,
	          children = _props.children,
	          others = _objectWithoutProperties(_props, ['tel', 'sms', 'facetime', 'email', 'obfuscate', 'headers', 'children']);
	
	      return _react2.default.createElement(
	        'a',
	        _extends({
	          href: createContactLink(tel, sms, facetime, email, headers)
	        }, others),
	        children || tel || sms || facetime || email
	      );
	    }
	  }, {
	    key: 'reverse',
	    value: function reverse(s) {
	      return s.split('').reverse().join('');
	    }
	  }, {
	    key: 'renderObfuscatedLink',
	    value: function renderObfuscatedLink() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          tel = _props2.tel,
	          sms = _props2.sms,
	          facetime = _props2.facetime,
	          email = _props2.email,
	          obfuscate = _props2.obfuscate,
	          headers = _props2.headers,
	          children = _props2.children,
	          style = _props2.style,
	          linkText = _props2.linkText,
	          others = _objectWithoutProperties(_props2, ['tel', 'sms', 'facetime', 'email', 'obfuscate', 'headers', 'children', 'style', 'linkText']);
	
	      var obsStyle = this.state.humanInteraction === true || children ? _extends({}, style || {}, {
	        unicodeBidi: 'bidi-override',
	        direction: 'ltr'
	      }) : _extends({}, style || {}, {
	        unicodeBidi: 'bidi-override',
	        direction: 'rtl'
	      });
	
	      var link = function link(state) {
	        return _this2.state.humanInteraction === true ? children || tel || sms || facetime || email : children || _this2.reverse(tel || sms || facetime || email).replace('(', ')').replace(')', '(');
	      };
	
	      return _react2.default.createElement(
	        'a',
	        _extends({
	          onClick: this.handleClick.bind(this),
	          onFocus: this.handleCopiability.bind(this),
	          onMouseOver: this.handleCopiability.bind(this),
	          onContextMenu: this.handleCopiability.bind(this),
	          href: linkText || 'obfuscated'
	        }, others, {
	          style: obsStyle
	        }),
	        link()
	      );
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(event) {
	      event.preventDefault();
	      var _props3 = this.props,
	          tel = _props3.tel,
	          sms = _props3.sms,
	          facetime = _props3.facetime,
	          email = _props3.email,
	          headers = _props3.headers;
	
	      window.location.href = createContactLink(tel, sms, facetime, email, headers);
	    }
	  }, {
	    key: 'handleCopiability',
	    value: function handleCopiability() {
	      this.setState(function (state) {
	        return _extends({}, state, {
	          humanInteraction: true
	        });
	      });
	    }
	  }]);
	
	  return Obfuscate;
	}(_react.Component);
	
	Obfuscate.propTypes = {
	  children: _propTypes.node,
	  tel: _propTypes.string,
	  sms: _propTypes.string,
	  facetime: _propTypes.string,
	  email: _propTypes.string,
	  headers: _propTypes.object,
	  obfuscate: _propTypes.bool,
	  style: _propTypes.object,
	  linkText: _propTypes.string
	};
	
	Obfuscate.defaultProps = {
	  obfuscate: true
	};
	
	exports.default = Obfuscate;

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _ContactForm = __webpack_require__(540);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ContactForm).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _Button = __webpack_require__(541);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _reactMaterialUiFormValidator = __webpack_require__(543);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function encode(data) {
	  return Object.keys(data).map(function (key) {
	    return encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);
	  }).join("&");
	}
	
	var styles = function styles(theme) {
	  var _singleLineInput;
	
	  return {
	    submit: {
	      margin: "3em 0"
	      //width: "100%"
	    },
	    multilineInput: {
	      lineHeight: 1.4,
	      fontSize: "1.2em"
	    },
	    singleLineInput: (_singleLineInput = {
	      lineHeight: 1.4,
	      fontSize: "1.2em"
	    }, _singleLineInput["@media (min-width: " + theme.mediaQueryTresholds.M + "px)"] = {
	      width: "47%",
	      marginLeft: "3%",
	      "&:first-child": {
	        marginRight: "3%",
	        marginLeft: 0
	      }
	    }, _singleLineInput),
	    submitError: {
	      background: "red",
	      color: "white"
	    }
	  };
	};
	
	var ContactForm = function (_React$Component) {
	  _inherits(ContactForm, _React$Component);
	
	  function ContactForm() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ContactForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      name: "",
	      email: "",
	      message: "",
	      From: "My Blog"
	    }, _this.handleChange = function (event) {
	      var _this$setState;
	
	      var target = event.target;
	      var value = target.value;
	      var name = target.name;
	
	      _this.setState((_this$setState = {}, _this$setState[name] = value, _this$setState));
	    }, _this.handleNetworkError = function (e) {
	      _this.setState({ submitError: "There was a network error." });
	    }, _this.handleSubmit = function (e) {
	      fetch("https://script.google.com/macros/s/AKfycby_hOCPRAwMDXfct2NFD15ifNYpl-2ZFZh6lLsk/exec", {
	        method: "POST",
	        action: "https://script.google.com/macros/s/AKfycby_hOCPRAwMDXfct2NFD15ifNYpl-2ZFZh6lLsk/exec",
	        headers: { "Content-Type": "application/x-www-form-urlencoded" },
	        body: encode(_extends({}, _this.state))
	      }).then(function () {
	        console.log("Form submission success");
	        (0, _gatsbyLink.navigateTo)("/success");
	      }).catch(function (error) {
	        console.error("Form submission error:", error);
	        _this.handleNetworkError();
	      });
	
	      e.preventDefault();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ContactForm.prototype.render = function render() {
	    var _this2 = this;
	
	    var classes = this.props.classes;
	    var _state = this.state,
	        email = _state.email,
	        name = _state.name,
	        message = _state.message,
	        submitError = _state.submitError;
	
	
	    return _react2.default.createElement(
	      _reactMaterialUiFormValidator.ValidatorForm,
	      {
	        onSubmit: this.handleSubmit,
	        onError: function onError(errors) {
	          return console.log(errors);
	        },
	        method: "post",
	        id: "gform",
	        name: "contactform",
	        ref: function ref(f) {
	          return _this2.form = f;
	        }
	        // action="https://script.google.com/macros/s/AKfycby_hOCPRAwMDXfct2NFD15ifNYpl-2ZFZh6lLsk/exec"
	      },
	      submitError && _react2.default.createElement(
	        "p",
	        { className: classes.submitError },
	        submitError
	      ),
	      _react2.default.createElement(_reactMaterialUiFormValidator.TextValidator, {
	        id: "name",
	        name: "name",
	        label: "Name",
	        value: name,
	        onChange: this.handleChange,
	        validators: ["required"],
	        errorMessages: ["this field is required"],
	        fullWidth: true,
	        margin: "normal",
	        className: classes.singleLineInput
	      }),
	      _react2.default.createElement(_reactMaterialUiFormValidator.TextValidator, {
	        id: "email",
	        name: "email",
	        label: "E-mail",
	        value: email,
	        onChange: this.handleChange,
	        validators: ["required", "isEmail"],
	        errorMessages: ["this field is required", "email is not valid"],
	        fullWidth: true,
	        margin: "normal",
	        className: classes.singleLineInput
	      }),
	      _react2.default.createElement(_reactMaterialUiFormValidator.TextValidator, {
	        id: "message",
	        name: "message",
	        label: "Message",
	        value: message,
	        onChange: this.handleChange,
	        validators: ["required"],
	        errorMessages: ["this field is required"],
	        multiline: true,
	        fullWidth: true,
	        margin: "normal",
	        className: classes.multilineInput
	      }),
	      _react2.default.createElement("input", { name: "bot-field", style: { display: "none" } }),
	      _react2.default.createElement(
	        _Button2.default,
	        {
	          variant: "raised",
	          color: "primary",
	          size: "large",
	          type: "submit",
	          className: classes.submit
	        },
	        "Send"
	      )
	    );
	  };
	
	  return ContactForm;
	}(_react2.default.Component);
	
	ContactForm.propTypes = {
	  classes: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(ContactForm);
	module.exports = exports["default"];

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Button.default;
	  }
	});
	
	var _Button = _interopRequireDefault(__webpack_require__(542));

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _colorManipulator = __webpack_require__(288);
	
	var _ButtonBase = _interopRequireDefault(__webpack_require__(367));
	
	var _helpers = __webpack_require__(345);
	
	// @inheritedComponent ButtonBase
	var styles = function styles(theme) {
	  return {
	    root: (0, _objectSpread2.default)({}, theme.typography.button, {
	      lineHeight: '1.4em',
	      // Improve readability for multiline button.
	      boxSizing: 'border-box',
	      minWidth: 64,
	      minHeight: 36,
	      padding: '8px 16px',
	      borderRadius: theme.shape.borderRadius,
	      color: theme.palette.text.primary,
	      transition: theme.transitions.create(['background-color', 'box-shadow'], {
	        duration: theme.transitions.duration.short
	      }),
	      '&:hover': {
	        textDecoration: 'none',
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.text.primary, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        },
	        '&$disabled': {
	          backgroundColor: 'transparent'
	        }
	      },
	      '&$disabled': {
	        color: theme.palette.action.disabled
	      }
	    }),
	    label: {
	      display: 'inherit',
	      alignItems: 'inherit',
	      justifyContent: 'inherit'
	    },
	    text: {},
	    textPrimary: {
	      color: theme.palette.primary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    textSecondary: {
	      color: theme.palette.secondary.main,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    flat: {},
	    // legacy
	    flatPrimary: {},
	    // legacy
	    flatSecondary: {},
	    // legacy
	    outlined: {
	      border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
	    },
	    contained: {
	      color: theme.palette.getContrastText(theme.palette.grey[300]),
	      backgroundColor: theme.palette.grey[300],
	      boxShadow: theme.shadows[2],
	      '&$focusVisible': {
	        boxShadow: theme.shadows[6]
	      },
	      '&:active': {
	        boxShadow: theme.shadows[8]
	      },
	      '&$disabled': {
	        color: theme.palette.action.disabled,
	        boxShadow: theme.shadows[0],
	        backgroundColor: theme.palette.action.disabledBackground
	      },
	      '&:hover': {
	        backgroundColor: theme.palette.grey.A100,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.grey[300]
	        },
	        '&$disabled': {
	          backgroundColor: theme.palette.action.disabledBackground
	        }
	      }
	    },
	    containedPrimary: {
	      color: theme.palette.primary.contrastText,
	      backgroundColor: theme.palette.primary.main,
	      '&:hover': {
	        backgroundColor: theme.palette.primary.dark,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.primary.main
	        }
	      }
	    },
	    containedSecondary: {
	      color: theme.palette.secondary.contrastText,
	      backgroundColor: theme.palette.secondary.main,
	      '&:hover': {
	        backgroundColor: theme.palette.secondary.dark,
	        // Reset on touch devices, it doesn't add specificity
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.secondary.main
	        }
	      }
	    },
	    raised: {},
	    // legacy
	    raisedPrimary: {},
	    // legacy
	    raisedSecondary: {},
	    // legacy
	    fab: {
	      borderRadius: '50%',
	      padding: 0,
	      minWidth: 0,
	      width: 56,
	      height: 56,
	      boxShadow: theme.shadows[6],
	      '&:active': {
	        boxShadow: theme.shadows[12]
	      }
	    },
	    extendedFab: {
	      borderRadius: 48 / 2,
	      padding: '0 16px',
	      width: 'auto',
	      minWidth: 48,
	      height: 48
	    },
	    focusVisible: {},
	    disabled: {},
	    colorInherit: {
	      color: 'inherit'
	    },
	    mini: {
	      width: 40,
	      height: 40
	    },
	    sizeSmall: {
	      padding: '7px 8px',
	      minWidth: 64,
	      minHeight: 32,
	      fontSize: theme.typography.pxToRem(13)
	    },
	    sizeLarge: {
	      padding: '8px 24px',
	      minWidth: 112,
	      minHeight: 40,
	      fontSize: theme.typography.pxToRem(15)
	    },
	    fullWidth: {
	      width: '100%'
	    }
	  };
	};
	
	exports.styles = styles;
	
	function Button(props) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      disabled = props.disabled,
	      disableFocusRipple = props.disableFocusRipple,
	      fullWidth = props.fullWidth,
	      focusVisibleClassName = props.focusVisibleClassName,
	      mini = props.mini,
	      size = props.size,
	      variant = props.variant,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "focusVisibleClassName", "mini", "size", "variant"]);
	  var fab = variant === 'fab' || variant === 'extendedFab';
	  var contained = variant === 'contained' || variant === 'raised';
	  var text = variant === 'text' || variant === 'flat' || variant === 'outlined';
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.fab, fab), (0, _defineProperty2.default)(_classNames, classes.mini, fab && mini), (0, _defineProperty2.default)(_classNames, classes.extendedFab, variant === 'extendedFab'), (0, _defineProperty2.default)(_classNames, classes.text, text), (0, _defineProperty2.default)(_classNames, classes.textPrimary, text && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.textSecondary, text && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.flat, variant === 'text' || variant === 'flat'), (0, _defineProperty2.default)(_classNames, classes.flatPrimary, (variant === 'text' || variant === 'flat') && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.flatSecondary, (variant === 'text' || variant === 'flat') && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.contained, contained || fab), (0, _defineProperty2.default)(_classNames, classes.containedPrimary, (contained || fab) && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.containedSecondary, (contained || fab) && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.raised, contained || fab), (0, _defineProperty2.default)(_classNames, classes.raisedPrimary, (contained || fab) && color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.raisedSecondary, (contained || fab) && color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes.outlined, variant === 'outlined'), (0, _defineProperty2.default)(_classNames, classes["size".concat((0, _helpers.capitalize)(size))], size !== 'medium'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty2.default)(_classNames, classes.colorInherit, color === 'inherit'), _classNames), classNameProp);
	  return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({
	    className: className,
	    disabled: disabled,
	    focusRipple: !disableFocusRipple,
	    focusVisibleClassName: (0, _classnames.default)(classes.focusVisible, focusVisibleClassName)
	  }, other), _react.default.createElement("span", {
	    className: classes.label
	  }, children));
	}
	
	Button.propTypes =  false ? {
	  /**
	   * The content of the button.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The color of the component. It supports those theme colors that make sense for this component.
	   */
	  color: _propTypes.default.oneOf(['default', 'inherit', 'primary', 'secondary']),
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the button will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the  keyboard focus ripple will be disabled.
	   * `disableRipple` must also be true.
	   */
	  disableFocusRipple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the ripple effect will be disabled.
	   */
	  disableRipple: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  focusVisibleClassName: _propTypes.default.string,
	
	  /**
	   * If `true`, the button will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The URL to link to when the button is clicked.
	   * If defined, an `a` element will be used as the root node.
	   */
	  href: _propTypes.default.string,
	
	  /**
	   * If `true`, and `variant` is `'fab'`, will use mini floating action button styling.
	   */
	  mini: _propTypes.default.bool,
	
	  /**
	   * The size of the button.
	   * `small` is equivalent to the dense button styling.
	   */
	  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
	
	  /**
	   * @ignore
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The variant to use.
	   */
	  variant: _propTypes.default.oneOf(['text', 'flat', 'outlined', 'contained', 'raised', 'fab', 'extendedFab'])
	} : {};
	Button.defaultProps = {
	  color: 'default',
	  component: 'button',
	  disabled: false,
	  disableFocusRipple: false,
	  fullWidth: false,
	  mini: false,
	  size: 'medium',
	  type: 'button',
	  variant: 'text'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiButton'
	})(Button);
	
	exports.default = _default;

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _reactFormValidatorCore = __webpack_require__(544);
	
	var _SelectValidator = __webpack_require__(550);
	
	var _SelectValidator2 = _interopRequireDefault(_SelectValidator);
	
	var _TextValidator = __webpack_require__(599);
	
	var _TextValidator2 = _interopRequireDefault(_TextValidator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.SelectValidator = _SelectValidator2.default;
	exports.TextValidator = _TextValidator2.default;
	exports.ValidatorComponent = _reactFormValidatorCore.ValidatorComponent;
	exports.ValidatorForm = _reactFormValidatorCore.ValidatorForm;

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _ValidatorComponent = __webpack_require__(545);
	
	var _ValidatorComponent2 = _interopRequireDefault(_ValidatorComponent);
	
	var _ValidatorForm = __webpack_require__(547);
	
	var _ValidatorForm2 = _interopRequireDefault(_ValidatorForm);
	
	var _ValidationRules = __webpack_require__(548);
	
	var _ValidationRules2 = _interopRequireDefault(_ValidationRules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.ValidatorComponent = _ValidatorComponent2.default;
	exports.ValidatorForm = _ValidatorForm2.default;
	exports.ValidationRules = _ValidationRules2.default;

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactLifecyclesCompat = __webpack_require__(546);
	
	var _ValidatorForm = __webpack_require__(547);
	
	var _ValidatorForm2 = _interopRequireDefault(_ValidatorForm);
	
	var _utils = __webpack_require__(549);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */
	
	/* eslint-enable */
	
	
	var ValidatorComponent = function (_React$Component) {
	    _inherits(ValidatorComponent, _React$Component);
	
	    function ValidatorComponent() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, ValidatorComponent);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ValidatorComponent.__proto__ || Object.getPrototypeOf(ValidatorComponent)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	            isValid: true,
	            value: _this.props.value,
	            errorMessages: _this.props.errorMessages,
	            validators: _this.props.validators
	        }, _this.getErrorMessage = function () {
	            var errorMessages = _this.state.errorMessages;
	
	            var type = typeof errorMessages === 'undefined' ? 'undefined' : _typeof(errorMessages);
	
	            if (type === 'string') {
	                return errorMessages;
	            } else if (type === 'object') {
	                if (_this.invalid.length > 0) {
	                    return errorMessages[_this.invalid[0]];
	                }
	            }
	            // eslint-disable-next-line
	            console.log('unknown errorMessages type', errorMessages);
	            return true;
	        }, _this.instantValidate = true, _this.invalid = [], _this.configure = function () {
	            if (!_this.props.name) {
	                throw new Error('Form field requires a name property when used');
	            }
	            _this.context.form.attachToForm(_this);
	            _this.instantValidate = _this.context.form.instantValidate;
	            _this.debounceTime = _this.context.form.debounceTime;
	            _this.validateDebounced = (0, _utils.debounce)(_this.validate, _this.debounceTime);
	        }, _this.validate = function (value) {
	            var includeRequired = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	            var dryRun = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	            _this.invalid = [];
	            var result = [];
	            var valid = true;
	            _this.state.validators.map(function (validator, i) {
	                var obj = {};
	                obj[i] = _ValidatorForm2.default.getValidator(validator, value, includeRequired);
	                return result.push(obj);
	            });
	            result.map(function (item) {
	                return Object.keys(item).map(function (key) {
	                    if (!item[key]) {
	                        valid = false;
	                        _this.invalid.push(key);
	                    }
	                    return key;
	                });
	            });
	
	            if (!dryRun) {
	                _this.setState({ isValid: valid }, function () {
	                    _this.props.validatorListener(_this.state.isValid);
	                });
	            }
	        }, _this.isValid = function () {
	            return _this.state.isValid;
	        }, _this.makeInvalid = function () {
	            _this.setState({ isValid: false });
	        }, _this.makeValid = function () {
	            _this.setState({ isValid: true });
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(ValidatorComponent, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.configure();
	        }
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {
	            return this.state !== nextState || this.props !== nextProps;
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	            if (this.instantValidate && this.props.value !== prevState.value) {
	                this.validateDebounced(this.props.value, this.props.withRequiredValidator);
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.context.form.detachFromForm(this);
	        }
	    }], [{
	        key: 'getDerivedStateFromProps',
	        value: function getDerivedStateFromProps(nextProps, prevState) {
	            if (nextProps.validators && nextProps.errorMessages && (prevState.validators !== nextProps.validators || prevState.errorMessages !== nextProps.errorMessages)) {
	                return {
	                    value: nextProps.value,
	                    validators: nextProps.validators,
	                    errorMessages: nextProps.errorMessages
	                };
	            }
	
	            return {
	                value: nextProps.value
	            };
	        }
	    }]);
	
	    return ValidatorComponent;
	}(_react2.default.Component);
	
	ValidatorComponent.contextTypes = {
	    form: _propTypes2.default.object
	};
	
	ValidatorComponent.propTypes = {
	    errorMessages: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.string]),
	    validators: _propTypes2.default.array,
	    name: _propTypes2.default.string,
	    value: _propTypes2.default.any,
	    validatorListener: _propTypes2.default.func,
	    withRequiredValidator: _propTypes2.default.bool
	};
	
	ValidatorComponent.defaultProps = {
	    errorMessages: 'error',
	    validators: [],
	    validatorListener: function validatorListener() {}
	};
	
	(0, _reactLifecyclesCompat.polyfill)(ValidatorComponent);
	
	exports.default = ValidatorComponent;

/***/ }),
/* 546 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	function componentWillMount() {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}
	
	function componentWillReceiveProps(nextProps) {
	  // Call this.constructor.gDSFP to support sub-classes.
	  // Use the setState() updater to ensure state isn't stale in certain edge cases.
	  function updater(prevState) {
	    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
	    return state !== null && state !== undefined ? state : null;
	  }
	  // Binding "this" is important for shallow renderer support.
	  this.setState(updater.bind(this));
	}
	
	function componentWillUpdate(nextProps, nextState) {
	  try {
	    var prevProps = this.props;
	    var prevState = this.state;
	    this.props = nextProps;
	    this.state = nextState;
	    this.__reactInternalSnapshotFlag = true;
	    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
	      prevProps,
	      prevState
	    );
	  } finally {
	    this.props = prevProps;
	    this.state = prevState;
	  }
	}
	
	// React may warn about cWM/cWRP/cWU methods being deprecated.
	// Add a flag to suppress these warnings for this special case.
	componentWillMount.__suppressDeprecationWarning = true;
	componentWillReceiveProps.__suppressDeprecationWarning = true;
	componentWillUpdate.__suppressDeprecationWarning = true;
	
	function polyfill(Component) {
	  var prototype = Component.prototype;
	
	  if (!prototype || !prototype.isReactComponent) {
	    throw new Error('Can only polyfill class components');
	  }
	
	  if (
	    typeof Component.getDerivedStateFromProps !== 'function' &&
	    typeof prototype.getSnapshotBeforeUpdate !== 'function'
	  ) {
	    return Component;
	  }
	
	  // If new component APIs are defined, "unsafe" lifecycles won't be called.
	  // Error if any of these lifecycles are present,
	  // Because they would work differently between older and newer (16.3+) versions of React.
	  var foundWillMountName = null;
	  var foundWillReceivePropsName = null;
	  var foundWillUpdateName = null;
	  if (typeof prototype.componentWillMount === 'function') {
	    foundWillMountName = 'componentWillMount';
	  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
	    foundWillMountName = 'UNSAFE_componentWillMount';
	  }
	  if (typeof prototype.componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'componentWillReceiveProps';
	  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	  }
	  if (typeof prototype.componentWillUpdate === 'function') {
	    foundWillUpdateName = 'componentWillUpdate';
	  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
	    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	  }
	  if (
	    foundWillMountName !== null ||
	    foundWillReceivePropsName !== null ||
	    foundWillUpdateName !== null
	  ) {
	    var componentName = Component.displayName || Component.name;
	    var newApiName =
	      typeof Component.getDerivedStateFromProps === 'function'
	        ? 'getDerivedStateFromProps()'
	        : 'getSnapshotBeforeUpdate()';
	
	    throw Error(
	      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
	        componentName +
	        ' uses ' +
	        newApiName +
	        ' but also contains the following legacy lifecycles:' +
	        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
	        (foundWillReceivePropsName !== null
	          ? '\n  ' + foundWillReceivePropsName
	          : '') +
	        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
	        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
	        'https://fb.me/react-async-component-lifecycle-hooks'
	    );
	  }
	
	  // React <= 16.2 does not support static getDerivedStateFromProps.
	  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	  // Newer versions of React will ignore these lifecycles if gDSFP exists.
	  if (typeof Component.getDerivedStateFromProps === 'function') {
	    prototype.componentWillMount = componentWillMount;
	    prototype.componentWillReceiveProps = componentWillReceiveProps;
	  }
	
	  // React <= 16.2 does not support getSnapshotBeforeUpdate.
	  // As a workaround, use cWU to invoke the new lifecycle.
	  // Newer versions of React will ignore that lifecycle if gSBU exists.
	  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
	    if (typeof prototype.componentDidUpdate !== 'function') {
	      throw new Error(
	        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
	      );
	    }
	
	    prototype.componentWillUpdate = componentWillUpdate;
	
	    var componentDidUpdate = prototype.componentDidUpdate;
	
	    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
	      prevProps,
	      prevState,
	      maybeSnapshot
	    ) {
	      // 16.3+ will not execute our will-update method;
	      // It will pass a snapshot value to did-update though.
	      // Older versions will require our polyfilled will-update value.
	      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
	      // Because for <= 15.x versions this might be a "prevContext" object.
	      // We also can't just check "__reactInternalSnapshot",
	      // Because get-snapshot might return a falsy value.
	      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
	      var snapshot = this.__reactInternalSnapshotFlag
	        ? this.__reactInternalSnapshot
	        : maybeSnapshot;
	
	      componentDidUpdate.call(this, prevProps, prevState, snapshot);
	    };
	  }
	
	  return Component;
	}
	
	exports.polyfill = polyfill;


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _ValidationRules = __webpack_require__(548);
	
	var _ValidationRules2 = _interopRequireDefault(_ValidationRules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */
	
	/* eslint-enable */
	
	
	var ValidatorForm = function (_React$Component) {
	    _inherits(ValidatorForm, _React$Component);
	
	    function ValidatorForm() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, ValidatorForm);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ValidatorForm.__proto__ || Object.getPrototypeOf(ValidatorForm)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
	            return {
	                form: {
	                    attachToForm: _this.attachToForm,
	                    detachFromForm: _this.detachFromForm,
	                    instantValidate: _this.instantValidate,
	                    debounceTime: _this.debounceTime
	                }
	            };
	        }, _this.instantValidate = _this.props.instantValidate !== undefined ? _this.props.instantValidate : true, _this.debounceTime = _this.props.debounceTime, _this.childs = [], _this.errors = [], _this.attachToForm = function (component) {
	            if (_this.childs.indexOf(component) === -1) {
	                _this.childs.push(component);
	            }
	        }, _this.detachFromForm = function (component) {
	            var componentPos = _this.childs.indexOf(component);
	            if (componentPos !== -1) {
	                _this.childs = _this.childs.slice(0, componentPos).concat(_this.childs.slice(componentPos + 1));
	            }
	        }, _this.submit = function (event) {
	            if (event) {
	                event.preventDefault();
	            }
	            _this.errors = [];
	            var result = _this.walk(_this.childs);
	            if (_this.errors.length) {
	                _this.props.onError(_this.errors);
	            }
	            if (result) {
	                _this.props.onSubmit(event);
	            }
	            return false;
	        }, _this.walk = function (children, dryRun) {
	            var self = _this;
	            var result = true;
	            if (Array.isArray(children)) {
	                children.forEach(function (input) {
	                    if (!self.checkInput(input, dryRun)) {
	                        result = false;
	                    }
	                    return input;
	                });
	            } else {
	                result = self.walk([children], dryRun);
	            }
	            return result;
	        }, _this.checkInput = function (input, dryRun) {
	            var result = true;
	            var validators = input.props.validators;
	            if (validators && !_this.validate(input, true, dryRun)) {
	                result = false;
	            }
	            return result;
	        }, _this.validate = function (input, includeRequired, dryRun) {
	            var _input$props = input.props,
	                value = _input$props.value,
	                validators = _input$props.validators,
	                name = _input$props.name;
	
	            var result = [];
	            var valid = true;
	            var validateResult = false;
	            var component = _this.find(_this.childs, function (component) {
	                return component.props.name === name;
	            });
	            validators.map(function (validator) {
	                validateResult = _this.constructor.getValidator(validator, value, includeRequired);
	                result.push({ input: input, result: validateResult });
	                component.validate(component.props.value, true, dryRun);
	                return validator;
	            });
	            result.map(function (item) {
	                if (!item.result) {
	                    valid = false;
	                    _this.errors.push(item.input);
	                }
	                return item;
	            });
	            return valid;
	        }, _this.find = function (collection, fn) {
	            for (var i = 0, l = collection.length; i < l; i++) {
	                var item = collection[i];
	                if (fn(item)) {
	                    return item;
	                }
	            }
	            return null;
	        }, _this.resetValidations = function () {
	            _this.childs.map(function (child) {
	                return child.setState({ isValid: true });
	            });
	        }, _this.isFormValid = function () {
	            var dryRun = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	            return _this.walk(_this.childs, dryRun);
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(ValidatorForm, [{
	        key: 'render',
	        value: function render() {
	            // eslint-disable-next-line
	            var _props = this.props,
	                onSubmit = _props.onSubmit,
	                instantValidate = _props.instantValidate,
	                onError = _props.onError,
	                debounceTime = _props.debounceTime,
	                children = _props.children,
	                rest = _objectWithoutProperties(_props, ['onSubmit', 'instantValidate', 'onError', 'debounceTime', 'children']);
	
	            return _react2.default.createElement(
	                'form',
	                _extends({}, rest, { onSubmit: this.submit }),
	                children
	            );
	        }
	    }]);
	
	    return ValidatorForm;
	}(_react2.default.Component);
	
	ValidatorForm.getValidator = function (validator, value, includeRequired) {
	    var result = true;
	    var name = validator;
	    if (name !== 'required' || includeRequired) {
	        var extra = void 0;
	        var splitIdx = validator.indexOf(':');
	        if (splitIdx !== -1) {
	            name = validator.substring(0, splitIdx);
	            extra = validator.substring(splitIdx + 1);
	        }
	        result = _ValidationRules2.default[name](value, extra);
	    }
	    return result;
	};
	
	ValidatorForm.addValidationRule = function (name, callback) {
	    _ValidationRules2.default[name] = callback;
	};
	
	ValidatorForm.childContextTypes = {
	    form: _propTypes2.default.object
	};
	
	ValidatorForm.propTypes = {
	    onSubmit: _propTypes2.default.func.isRequired,
	    instantValidate: _propTypes2.default.bool,
	    children: _propTypes2.default.node,
	    onError: _propTypes2.default.func,
	    debounceTime: _propTypes2.default.number
	};
	
	ValidatorForm.defaultProps = {
	    onError: function onError() {},
	    debounceTime: 0
	};
	
	exports.default = ValidatorForm;

/***/ }),
/* 548 */
/***/ (function(module, exports) {

	'use strict';
	
	var isExisty = function isExisty(value) {
	    return value !== null && value !== undefined;
	};
	
	var _isEmpty = function _isEmpty(value) {
	    return value === '' || value === undefined || value == null;
	};
	
	var isEmptyTrimed = function isEmptyTrimed(value) {
	    if (typeof value === 'string') {
	        return value.trim() === '';
	    }
	    return true;
	};
	
	var validations = {
	    matchRegexp: function matchRegexp(value, regexp) {
	        var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);
	        return !isExisty(value) || _isEmpty(value) || validationRegexp.test(value);
	    },
	
	    // eslint-disable-next-line
	    isEmail: function isEmail(value) {
	        return validations.matchRegexp(value, /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i);
	    },
	
	    isEmpty: function isEmpty(value) {
	        return _isEmpty(value);
	    },
	
	    required: function required(value) {
	        return !_isEmpty(value);
	    },
	
	    trim: function trim(value) {
	        return !isEmptyTrimed(value);
	    },
	
	    isNumber: function isNumber(value) {
	        return validations.matchRegexp(value, /^-?[0-9]\d*(\d+)?$/i);
	    },
	
	    isFloat: function isFloat(value) {
	        return validations.matchRegexp(value, /^(?:[1-9]\d*|0)?(?:\.\d+)?$/i);
	    },
	
	    isPositive: function isPositive(value) {
	        if (isExisty(value)) {
	            return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;
	        }
	        return true;
	    },
	
	    maxNumber: function maxNumber(value, max) {
	        return !isExisty(value) || _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);
	    },
	
	    minNumber: function minNumber(value, min) {
	        return !isExisty(value) || _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);
	    },
	
	    isString: function isString(value) {
	        return !_isEmpty(value) || typeof value === 'string' || value instanceof String;
	    },
	    minStringLength: function minStringLength(value, length) {
	        return validations.isString(value) && value.length >= length;
	    },
	    maxStringLength: function maxStringLength(value, length) {
	        return validations.isString(value) && value.length <= length;
	    }
	};
	
	module.exports = validations;

/***/ }),
/* 549 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var debounce = function debounce(func, wait, immediate) {
	    var timeout = void 0;
	    return function debounced() {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        var context = this;
	        var later = function delayed() {
	            timeout = null;
	            if (!immediate) {
	                func.apply(context, args);
	            }
	        };
	        var callNow = immediate && !timeout;
	        clearTimeout(timeout);
	        timeout = setTimeout(later, wait);
	        if (callNow) {
	            func.apply(context, args);
	        }
	    };
	};
	
	exports.debounce = debounce;

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _TextField = __webpack_require__(551);
	
	var _TextField2 = _interopRequireDefault(_TextField);
	
	var _reactFormValidatorCore = __webpack_require__(544);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */
	
	/* eslint-enable */
	
	
	var SelectValidator = function (_ValidatorComponent) {
	    _inherits(SelectValidator, _ValidatorComponent);
	
	    function SelectValidator() {
	        _classCallCheck(this, SelectValidator);
	
	        return _possibleConstructorReturn(this, (SelectValidator.__proto__ || Object.getPrototypeOf(SelectValidator)).apply(this, arguments));
	    }
	
	    _createClass(SelectValidator, [{
	        key: 'render',
	        value: function render() {
	            /* eslint-disable no-unused-vars */
	            var _props = this.props,
	                error = _props.error,
	                errorMessages = _props.errorMessages,
	                validators = _props.validators,
	                requiredError = _props.requiredError,
	                helperText = _props.helperText,
	                validatorListener = _props.validatorListener,
	                withRequiredValidator = _props.withRequiredValidator,
	                rest = _objectWithoutProperties(_props, ['error', 'errorMessages', 'validators', 'requiredError', 'helperText', 'validatorListener', 'withRequiredValidator']);
	
	            var isValid = this.state.isValid;
	
	            return _react2.default.createElement(_TextField2.default, _extends({}, rest, {
	                select: true,
	                error: !isValid || error,
	                helperText: !isValid && this.getErrorMessage() || helperText
	            }));
	        }
	    }]);
	
	    return SelectValidator;
	}(_reactFormValidatorCore.ValidatorComponent);
	
	exports.default = SelectValidator;

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _TextField.default;
	  }
	});
	
	var _TextField = _interopRequireDefault(__webpack_require__(552));

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _Input = _interopRequireDefault(__webpack_require__(553));
	
	var _InputLabel = _interopRequireDefault(__webpack_require__(557));
	
	var _FormControl = _interopRequireDefault(__webpack_require__(561));
	
	var _FormHelperText = _interopRequireDefault(__webpack_require__(563));
	
	var _Select = _interopRequireDefault(__webpack_require__(565));
	
	// @inheritedComponent FormControl
	
	/**
	 * The `TextField` is a convenience wrapper for the most common cases (80%).
	 * It cannot be all things to all people, otherwise the API would grow out of control.
	 *
	 * ## Advanced Configuration
	 *
	 * It's important to understand that the text field is a simple abstraction
	 * on top of the following components:
	 * - [FormControl](/api/form-control)
	 * - [InputLabel](/api/input-label)
	 * - [Input](/api/input)
	 * - [FormHelperText](/api/form-helper-text)
	 *
	 * If you wish to alter the properties applied to the native input, you can do so as follows:
	 *
	 * ```jsx
	 * const inputProps = {
	 *   step: 300,
	 * };
	 *
	 * return <TextField id="time" type="time" inputProps={inputProps} />;
	 * ```
	 *
	 * For advanced cases, please look at the source of TextField by clicking on the
	 * "Edit this page" button above. Consider either:
	 * - using the upper case props for passing values directly to the components
	 * - using the underlying components directly as shown in the demos
	 */
	function TextField(props) {
	  var autoComplete = props.autoComplete,
	      autoFocus = props.autoFocus,
	      children = props.children,
	      className = props.className,
	      defaultValue = props.defaultValue,
	      disabled = props.disabled,
	      error = props.error,
	      FormHelperTextProps = props.FormHelperTextProps,
	      fullWidth = props.fullWidth,
	      helperText = props.helperText,
	      id = props.id,
	      InputLabelProps = props.InputLabelProps,
	      inputProps = props.inputProps,
	      InputProps = props.InputProps,
	      inputRef = props.inputRef,
	      label = props.label,
	      multiline = props.multiline,
	      name = props.name,
	      onBlur = props.onBlur,
	      onChange = props.onChange,
	      onFocus = props.onFocus,
	      placeholder = props.placeholder,
	      required = props.required,
	      rows = props.rows,
	      rowsMax = props.rowsMax,
	      select = props.select,
	      SelectProps = props.SelectProps,
	      type = props.type,
	      value = props.value,
	      other = (0, _objectWithoutProperties2.default)(props, ["autoComplete", "autoFocus", "children", "className", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "rowsMax", "select", "SelectProps", "type", "value"]);
	   false ? (0, _warning.default)(!select || Boolean(children), 'Material-UI: `children` must be passed when using the `TextField` component with `select`.') : void 0;
	  var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
	
	  var InputElement = _react.default.createElement(_Input.default, (0, _extends2.default)({
	    autoComplete: autoComplete,
	    autoFocus: autoFocus,
	    defaultValue: defaultValue,
	    disabled: disabled,
	    fullWidth: fullWidth,
	    multiline: multiline,
	    name: name,
	    rows: rows,
	    rowsMax: rowsMax,
	    type: type,
	    value: value,
	    id: id,
	    inputRef: inputRef,
	    onBlur: onBlur,
	    onChange: onChange,
	    onFocus: onFocus,
	    placeholder: placeholder,
	    inputProps: inputProps
	  }, InputProps));
	
	  return _react.default.createElement(_FormControl.default, (0, _extends2.default)({
	    "aria-describedby": helperTextId,
	    className: className,
	    error: error,
	    fullWidth: fullWidth,
	    required: required
	  }, other), label && _react.default.createElement(_InputLabel.default, (0, _extends2.default)({
	    htmlFor: id
	  }, InputLabelProps), label), select ? _react.default.createElement(_Select.default, (0, _extends2.default)({
	    value: value,
	    input: InputElement
	  }, SelectProps), children) : InputElement, helperText && _react.default.createElement(_FormHelperText.default, (0, _extends2.default)({
	    id: helperTextId
	  }, FormHelperTextProps), helperText));
	}
	
	TextField.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default value of the `Input` element.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label will be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`FormHelperText`](/api/form-helper-text) element.
	   */
	  FormHelperTextProps: _propTypes.default.object,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The helper text content.
	   */
	  helperText: _propTypes.default.node,
	
	  /**
	   * The id of the `input` element.
	   * Use that property to make `label` and `helperText` accessible for screen readers.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * Properties applied to the [`InputLabel`](/api/input-label) element.
	   */
	  InputLabelProps: _propTypes.default.object,
	
	  /**
	   * Properties applied to the `Input` element.
	   */
	  InputProps: _propTypes.default.object,
	
	  /**
	   * Attributes applied to the native `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * The label content.
	   */
	  label: _propTypes.default.node,
	
	  /**
	   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
	   */
	  margin: _propTypes.default.oneOf(['none', 'dense', 'normal']),
	
	  /**
	   * If `true`, a textarea element will be rendered instead of an input.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * If `true`, the label is displayed as required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Render a `Select` element while passing the `Input` element to `Select` as `input` parameter.
	   * If this option is set you must pass the options of the select as children.
	   */
	  select: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`Select`](/api/select) element.
	   */
	  SelectProps: _propTypes.default.object,
	
	  /**
	   * Type attribute of the `Input` element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The value of the `Input` element, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))])
	} : {};
	TextField.defaultProps = {
	  required: false,
	  select: false
	};
	var _default = TextField;
	exports.default = _default;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Input.default;
	  }
	});
	
	var _Input = _interopRequireDefault(__webpack_require__(554));

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.hasValue = hasValue;
	exports.isFilled = isFilled;
	exports.isAdornedStart = isAdornedStart;
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Textarea = _interopRequireDefault(__webpack_require__(555));
	
	// Supports determination of isControlled().
	// Controlled input accepts its current value as a prop.
	//
	// @see https://facebook.github.io/react/docs/forms.html#controlled-components
	// @param value
	// @returns {boolean} true if string (including '') or number (including zero)
	function hasValue(value) {
	  return value != null && !(Array.isArray(value) && value.length === 0);
	} // Determine if field is empty or filled.
	// Response determines if label is presented above field or as placeholder.
	//
	// @param obj
	// @param SSR
	// @returns {boolean} False when not present or empty string.
	//                    True when any number or string with length.
	
	
	function isFilled(obj) {
	  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
	} // Determine if an Input is adorned on start.
	// It's corresponding to the left with LTR.
	//
	// @param obj
	// @returns {boolean} False when no adornments.
	//                    True when adorned at the start.
	
	
	function isAdornedStart(obj) {
	  return obj.startAdornment;
	}
	
	var styles = function styles(theme) {
	  var light = theme.palette.type === 'light';
	  var placeholder = {
	    color: 'currentColor',
	    opacity: light ? 0.42 : 0.5,
	    transition: theme.transitions.create('opacity', {
	      duration: theme.transitions.duration.shorter
	    })
	  };
	  var placeholderHidden = {
	    opacity: 0
	  };
	  var placeholderVisible = {
	    opacity: light ? 0.42 : 0.5
	  };
	  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
	  return {
	    root: {
	      // Mimics the default input display property used by browsers for an input.
	      display: 'inline-flex',
	      position: 'relative',
	      fontFamily: theme.typography.fontFamily,
	      color: light ? 'rgba(0, 0, 0, 0.87)' : theme.palette.common.white,
	      fontSize: theme.typography.pxToRem(16),
	      lineHeight: '1.1875em',
	      // Reset (19px), match the native input line-height
	      '&$disabled': {
	        color: theme.palette.text.disabled
	      }
	    },
	    formControl: {
	      'label + &': {
	        marginTop: 16
	      }
	    },
	    focused: {},
	    disabled: {},
	    underline: {
	      '&:after': {
	        borderBottom: "2px solid ".concat(theme.palette.primary[light ? 'dark' : 'light']),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '""',
	        position: 'absolute',
	        right: 0,
	        transform: 'scaleX(0)',
	        transition: theme.transitions.create('transform', {
	          duration: theme.transitions.duration.shorter,
	          easing: theme.transitions.easing.easeOut
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&$focused:after': {
	        transform: 'scaleX(1)'
	      },
	      '&$error:after': {
	        borderBottomColor: theme.palette.error.main,
	        transform: 'scaleX(1)' // error is always underlined in red
	
	      },
	      '&:before': {
	        borderBottom: "1px solid ".concat(bottomLineColor),
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '"\\00a0"',
	        position: 'absolute',
	        right: 0,
	        transition: theme.transitions.create('border-bottom-color', {
	          duration: theme.transitions.duration.shorter
	        }),
	        pointerEvents: 'none' // Transparent to the hover style.
	
	      },
	      '&:hover:not($disabled):not($focused):not($error):before': {
	        borderBottom: "2px solid ".concat(theme.palette.text.primary)
	      },
	      '&$disabled:before': {
	        borderBottom: "1px dotted ".concat(bottomLineColor)
	      }
	    },
	    error: {},
	    multiline: {
	      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px")
	    },
	    fullWidth: {
	      width: '100%'
	    },
	    input: {
	      font: 'inherit',
	      color: 'currentColor',
	      padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
	      border: 0,
	      boxSizing: 'content-box',
	      verticalAlign: 'middle',
	      background: 'none',
	      margin: 0,
	      // Reset for Safari
	      // Remove grey highlight
	      WebkitTapHighlightColor: 'transparent',
	      display: 'block',
	      // Make the flex item shrink with Firefox
	      minWidth: 0,
	      flexGrow: 1,
	      '&::-webkit-input-placeholder': placeholder,
	      '&::-moz-placeholder': placeholder,
	      // Firefox 19+
	      '&:-ms-input-placeholder': placeholder,
	      // IE 11
	      '&::-ms-input-placeholder': placeholder,
	      // Edge
	      '&:focus': {
	        outline: 0
	      },
	      // Reset Firefox invalid required input style
	      '&:invalid': {
	        boxShadow: 'none'
	      },
	      '&::-webkit-search-decoration': {
	        // Remove the padding when type=search.
	        '-webkit-appearance': 'none'
	      },
	      // Show and hide the placeholder logic
	      'label[data-shrink=false] + $formControl &': {
	        '&::-webkit-input-placeholder': placeholderHidden,
	        '&::-moz-placeholder': placeholderHidden,
	        // Firefox 19+
	        '&:-ms-input-placeholder': placeholderHidden,
	        // IE 11
	        '&::-ms-input-placeholder': placeholderHidden,
	        // Edge
	        '&:focus::-webkit-input-placeholder': placeholderVisible,
	        '&:focus::-moz-placeholder': placeholderVisible,
	        // Firefox 19+
	        '&:focus:-ms-input-placeholder': placeholderVisible,
	        // IE 11
	        '&:focus::-ms-input-placeholder': placeholderVisible // Edge
	
	      },
	      '&$disabled': {
	        opacity: 1 // Reset iOS opacity
	
	      }
	    },
	    inputMarginDense: {
	      paddingTop: 4 - 1
	    },
	    inputMultiline: {
	      resize: 'none',
	      padding: 0
	    },
	    inputType: {
	      // type="date" or type="time", etc. have specific styles we need to reset.
	      height: '1.1875em' // Reset (19px), match the native input line-height
	
	    },
	    inputTypeSearch: {
	      // Improve type search style.
	      '-moz-appearance': 'textfield',
	      '-webkit-appearance': 'textfield'
	    }
	  };
	};
	
	exports.styles = styles;
	
	function formControlState(props, context) {
	  var disabled = props.disabled;
	  var error = props.error;
	  var margin = props.margin;
	
	  if (context && context.muiFormControl) {
	    if (typeof disabled === 'undefined') {
	      disabled = context.muiFormControl.disabled;
	    }
	
	    if (typeof error === 'undefined') {
	      error = context.muiFormControl.error;
	    }
	
	    if (typeof margin === 'undefined') {
	      margin = context.muiFormControl.margin;
	    }
	  }
	
	  return {
	    disabled: disabled,
	    error: error,
	    margin: margin
	  };
	}
	
	var Input =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Input, _React$Component);
	
	  // Holds the input reference
	  function Input(props, context) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Input);
	    _this = (0, _possibleConstructorReturn2.default)(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props, context));
	    _this.isControlled = _this.props.value != null;
	    _this.input = null;
	    _this.state = {
	      focused: false
	    };
	
	    _this.handleFocus = function (event) {
	      // Fix a bug with IE11 where the focus/blur events are triggered
	      // while the input is disabled.
	      if (formControlState(_this.props, _this.context).disabled) {
	        event.stopPropagation();
	        return;
	      }
	
	      _this.setState({
	        focused: true
	      });
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	
	      var muiFormControl = _this.context.muiFormControl;
	
	      if (muiFormControl && muiFormControl.onFocus) {
	        muiFormControl.onFocus(event);
	      }
	    };
	
	    _this.handleBlur = function (event) {
	      _this.setState({
	        focused: false
	      });
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	
	      var muiFormControl = _this.context.muiFormControl;
	
	      if (muiFormControl && muiFormControl.onBlur) {
	        muiFormControl.onBlur(event);
	      }
	    };
	
	    _this.handleChange = function (event) {
	      if (!_this.isControlled) {
	        _this.checkDirty(_this.input);
	      } // Perform in the willUpdate
	
	
	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    };
	
	    _this.handleRefInput = function (node) {
	      _this.input = node;
	      var ref;
	
	      if (_this.props.inputRef) {
	        ref = _this.props.inputRef;
	      } else if (_this.props.inputProps && _this.props.inputProps.ref) {
	        ref = _this.props.inputProps.ref;
	      }
	
	      if (ref) {
	        if (typeof ref === 'function') {
	          ref(node);
	        } else {
	          ref.current = node;
	        }
	      }
	    };
	
	    if (_this.isControlled) {
	      _this.checkDirty(props);
	    }
	
	    var componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	      // The blur won't fire when the disabled state is set on a focused input.
	      // We need to book keep the focused state manually.
	      if (!formControlState(_this.props, _this.context).disabled && formControlState(nextProps, nextContext).disabled) {
	        _this.setState({
	          focused: false
	        });
	      }
	    };
	
	    var componentWillUpdate = function componentWillUpdate(nextProps, nextState, nextContext) {
	      // Book keep the focused state.
	      if (!formControlState(_this.props, _this.context).disabled && formControlState(nextProps, nextContext).disabled) {
	        var muiFormControl = _this.context.muiFormControl;
	
	        if (muiFormControl && muiFormControl.onBlur) {
	          muiFormControl.onBlur();
	        }
	      }
	    }; // Support for react >= 16.3.0 && < 17.0.0
	
	    /* istanbul ignore else */
	
	
	    if (_react.default.createContext) {
	      _this.UNSAFE_componentWillReceiveProps = componentWillReceiveProps;
	      _this.UNSAFE_componentWillUpdate = componentWillUpdate;
	    } else {
	      _this.componentWillReceiveProps = componentWillReceiveProps;
	      _this.componentWillUpdate = componentWillUpdate;
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(Input, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      // We are consuming the parent muiFormControl context.
	      // We don't want a child to consume it a second time.
	      return {
	        muiFormControl: null
	      };
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (!this.isControlled) {
	        this.checkDirty(this.input);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      if (this.isControlled) {
	        this.checkDirty(this.props);
	      } // else performed in the onChange
	
	    }
	  }, {
	    key: "checkDirty",
	    value: function checkDirty(obj) {
	      var muiFormControl = this.context.muiFormControl;
	
	      if (isFilled(obj)) {
	        if (muiFormControl && muiFormControl.onFilled) {
	          muiFormControl.onFilled();
	        }
	
	        if (this.props.onFilled) {
	          this.props.onFilled();
	        }
	
	        return;
	      }
	
	      if (muiFormControl && muiFormControl.onEmpty) {
	        muiFormControl.onEmpty();
	      }
	
	      if (this.props.onEmpty) {
	        this.props.onEmpty();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames, _classNames2;
	
	      var _props = this.props,
	          autoComplete = _props.autoComplete,
	          autoFocus = _props.autoFocus,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          defaultValue = _props.defaultValue,
	          disabledProp = _props.disabled,
	          disableUnderline = _props.disableUnderline,
	          endAdornment = _props.endAdornment,
	          errorProp = _props.error,
	          fullWidth = _props.fullWidth,
	          id = _props.id,
	          inputComponent = _props.inputComponent,
	          _props$inputProps = _props.inputProps;
	      _props$inputProps = _props$inputProps === void 0 ? {} : _props$inputProps;
	      var inputPropsClassName = _props$inputProps.className,
	          inputPropsProp = (0, _objectWithoutProperties2.default)(_props$inputProps, ["className"]),
	          inputRef = _props.inputRef,
	          marginProp = _props.margin,
	          multiline = _props.multiline,
	          name = _props.name,
	          onBlur = _props.onBlur,
	          onChange = _props.onChange,
	          onEmpty = _props.onEmpty,
	          onFilled = _props.onFilled,
	          onFocus = _props.onFocus,
	          onKeyDown = _props.onKeyDown,
	          onKeyUp = _props.onKeyUp,
	          placeholder = _props.placeholder,
	          readOnly = _props.readOnly,
	          rows = _props.rows,
	          rowsMax = _props.rowsMax,
	          startAdornment = _props.startAdornment,
	          type = _props.type,
	          value = _props.value,
	          other = (0, _objectWithoutProperties2.default)(_props, ["autoComplete", "autoFocus", "classes", "className", "defaultValue", "disabled", "disableUnderline", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "multiline", "name", "onBlur", "onChange", "onEmpty", "onFilled", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "rows", "rowsMax", "startAdornment", "type", "value"]);
	      var muiFormControl = this.context.muiFormControl;
	
	      var _formControlState = formControlState(this.props, this.context),
	          disabled = _formControlState.disabled,
	          error = _formControlState.error,
	          margin = _formControlState.margin;
	
	      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.error, error), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty2.default)(_classNames, classes.focused, this.state.focused), (0, _defineProperty2.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty2.default)(_classNames, classes.multiline, multiline), (0, _defineProperty2.default)(_classNames, classes.underline, !disableUnderline), _classNames), classNameProp);
	      var inputClassName = (0, _classnames.default)(classes.input, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames2, classes.inputType, type !== 'text'), (0, _defineProperty2.default)(_classNames2, classes.inputTypeSearch, type === 'search'), (0, _defineProperty2.default)(_classNames2, classes.inputMultiline, multiline), (0, _defineProperty2.default)(_classNames2, classes.inputMarginDense, margin === 'dense'), _classNames2), inputPropsClassName);
	      var required = muiFormControl && muiFormControl.required === true;
	      var InputComponent = 'input';
	      var inputProps = (0, _objectSpread2.default)({}, inputPropsProp, {
	        ref: this.handleRefInput
	      });
	
	      if (inputComponent) {
	        InputComponent = inputComponent;
	        inputProps = (0, _objectSpread2.default)({
	          // Rename ref to inputRef as we don't know the
	          // provided `inputComponent` structure.
	          inputRef: this.handleRefInput
	        }, inputProps, {
	          ref: null
	        });
	      } else if (multiline) {
	        if (rows && !rowsMax) {
	          InputComponent = 'textarea';
	        } else {
	          inputProps = (0, _objectSpread2.default)({
	            rowsMax: rowsMax,
	            textareaRef: this.handleRefInput
	          }, inputProps, {
	            ref: null
	          });
	          InputComponent = _Textarea.default;
	        }
	      }
	
	      return _react.default.createElement("div", (0, _extends2.default)({
	        className: className
	      }, other), startAdornment, _react.default.createElement(InputComponent, (0, _extends2.default)({
	        "aria-invalid": error,
	        autoComplete: autoComplete,
	        autoFocus: autoFocus,
	        className: inputClassName,
	        defaultValue: defaultValue,
	        disabled: disabled,
	        id: id,
	        name: name,
	        onBlur: this.handleBlur,
	        onChange: this.handleChange,
	        onFocus: this.handleFocus,
	        onKeyDown: onKeyDown,
	        onKeyUp: onKeyUp,
	        placeholder: placeholder,
	        readOnly: readOnly,
	        required: required ? true : undefined,
	        rows: rows,
	        type: type,
	        value: value
	      }, inputProps)), endAdornment);
	    }
	  }]);
	  return Input;
	}(_react.default.Component);
	
	Input.propTypes =  false ? {
	  /**
	   * This property helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it here:
	   * https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
	   */
	  autoComplete: _propTypes.default.string,
	
	  /**
	   * If `true`, the input will be focused during the first mount.
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the wrapper element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The default input value, useful when not controlling the component.
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * If `true`, the input will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will not have an underline.
	   */
	  disableUnderline: _propTypes.default.bool,
	
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: _propTypes.default.node,
	
	  /**
	   * If `true`, the input will indicate an error. This is normally obtained via context from
	   * FormControl.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * The id of the `input` element.
	   */
	  id: _propTypes.default.string,
	
	  /**
	   * The component used for the native input.
	   * Either a string to use a DOM element or a component.
	   */
	  inputComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Attributes applied to the `input` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Use that property to pass a ref callback to the native input component.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense', 'none']),
	
	  /**
	   * If `true`, a textarea element will be rendered.
	   */
	  multiline: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onEmpty: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFilled: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyDown: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onKeyUp: _propTypes.default.func,
	
	  /**
	   * The short hint displayed in the input before the user enters a value.
	   */
	  placeholder: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: _propTypes.default.node,
	
	  /**
	   * Type of the input element. It should be a valid HTML5 input type.
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value, required for a controlled component.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))])
	} : {};
	Input.muiName = 'Input';
	Input.defaultProps = {
	  disableUnderline: false,
	  fullWidth: false,
	  multiline: false,
	  type: 'text'
	};
	Input.contextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	Input.childContextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiInput'
	})(Input);
	
	exports.default = _default;

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _debounce = _interopRequireDefault(__webpack_require__(556));
	
	var _reactEventListener = _interopRequireDefault(__webpack_require__(428));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	// < 1kb payload overhead when lodash/debounce is > 3kb.
	var ROWS_HEIGHT = 19;
	var styles = {
	  root: {
	    position: 'relative',
	    // because the shadow has position: 'absolute',
	    width: '100%'
	  },
	  textarea: {
	    width: '100%',
	    height: '100%',
	    resize: 'none',
	    font: 'inherit',
	    padding: 0,
	    cursor: 'inherit',
	    boxSizing: 'border-box',
	    lineHeight: 'inherit',
	    border: 'none',
	    outline: 'none',
	    background: 'transparent'
	  },
	  shadow: {
	    resize: 'none',
	    // Overflow also needed to here to remove the extra row
	    // added to textareas in Firefox.
	    overflow: 'hidden',
	    // Visibility needed to hide the extra text area on ipads
	    visibility: 'hidden',
	    position: 'absolute',
	    height: 'auto',
	    whiteSpace: 'pre-wrap'
	  }
	};
	/**
	 * @ignore - internal component.
	 */
	
	exports.styles = styles;
	
	var Textarea =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Textarea, _React$Component);
	
	  // Corresponds to 10 frames at 60 Hz.
	  function Textarea(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Textarea);
	    _this = (0, _possibleConstructorReturn2.default)(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this, props)); // <Input> expects the components it renders to respond to 'value'
	    // so that it can check whether they are filled.
	
	    _this.shadow = null;
	    _this.singlelineShadow = null;
	    _this.input = null;
	    _this.value = null;
	    _this.handleResize = (0, _debounce.default)(function () {
	      _this.syncHeightWithShadow();
	    }, 166);
	    _this.state = {
	      height: null
	    };
	
	    _this.handleRefInput = function (node) {
	      _this.input = node;
	      var textareaRef = _this.props.textareaRef;
	
	      if (textareaRef) {
	        if (typeof textareaRef === 'function') {
	          textareaRef(node);
	        } else {
	          textareaRef.current = node;
	        }
	      }
	    };
	
	    _this.handleRefSinglelineShadow = function (node) {
	      _this.singlelineShadow = node;
	    };
	
	    _this.handleRefShadow = function (node) {
	      _this.shadow = node;
	    };
	
	    _this.handleChange = function (event) {
	      _this.value = event.target.value;
	
	      if (typeof _this.props.value === 'undefined' && _this.shadow) {
	        // The component is not controlled, we need to update the shallow value.
	        _this.shadow.value = _this.value;
	
	        _this.syncHeightWithShadow();
	      }
	
	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    };
	
	    _this.value = props.value || props.defaultValue || '';
	    _this.state = {
	      height: Number(props.rows) * ROWS_HEIGHT
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(Textarea, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.syncHeightWithShadow();
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.syncHeightWithShadow();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.handleResize.clear();
	    }
	  }, {
	    key: "syncHeightWithShadow",
	    value: function syncHeightWithShadow() {
	      var props = this.props;
	
	      if (!this.shadow || !this.singlelineShadow) {
	        return;
	      } // The component is controlled, we need to update the shallow value.
	
	
	      if (typeof props.value !== 'undefined') {
	        this.shadow.value = props.value == null ? '' : String(props.value);
	      }
	
	      var lineHeight = this.singlelineShadow.scrollHeight;
	      var newHeight = this.shadow.scrollHeight; // Guarding for jsdom, where scrollHeight isn't present.
	      // See https://github.com/tmpvar/jsdom/issues/1013
	
	      if (newHeight === undefined) {
	        return;
	      }
	
	      if (Number(props.rowsMax) >= Number(props.rows)) {
	        newHeight = Math.min(Number(props.rowsMax) * lineHeight, newHeight);
	      }
	
	      newHeight = Math.max(newHeight, lineHeight); // Need a large enough different to update the height.
	      // This prevents infinite rendering loop.
	
	      if (Math.abs(this.state.height - newHeight) > 1) {
	        this.setState({
	          height: newHeight
	        });
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          className = _props.className,
	          defaultValue = _props.defaultValue,
	          onChange = _props.onChange,
	          rows = _props.rows,
	          rowsMax = _props.rowsMax,
	          textareaRef = _props.textareaRef,
	          value = _props.value,
	          other = (0, _objectWithoutProperties2.default)(_props, ["classes", "className", "defaultValue", "onChange", "rows", "rowsMax", "textareaRef", "value"]);
	      return _react.default.createElement("div", {
	        className: classes.root,
	        style: {
	          height: this.state.height
	        }
	      }, _react.default.createElement(_reactEventListener.default, {
	        target: "window",
	        onResize: this.handleResize
	      }), _react.default.createElement("textarea", {
	        ref: this.handleRefSinglelineShadow,
	        className: (0, _classnames.default)(classes.shadow, classes.textarea),
	        tabIndex: -1,
	        rows: "1",
	        readOnly: true,
	        "aria-hidden": "true",
	        value: ""
	      }), _react.default.createElement("textarea", {
	        ref: this.handleRefShadow,
	        className: (0, _classnames.default)(classes.shadow, classes.textarea),
	        tabIndex: -1,
	        rows: rows,
	        "aria-hidden": "true",
	        readOnly: true,
	        defaultValue: defaultValue,
	        value: value
	      }), _react.default.createElement("textarea", (0, _extends2.default)({
	        rows: rows,
	        className: (0, _classnames.default)(classes.textarea, className),
	        defaultValue: defaultValue,
	        value: value,
	        onChange: this.handleChange,
	        ref: this.handleRefInput
	      }, other)));
	    }
	  }]);
	  return Textarea;
	}(_react.default.Component);
	
	Textarea.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * @ignore
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  rowsMax: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	
	  /**
	   * Use that property to pass a ref callback to the native textarea element.
	   */
	  textareaRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * @ignore
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
	} : {};
	Textarea.defaultProps = {
	  rows: 1
	};
	
	var _default = (0, _withStyles.default)(styles)(Textarea);
	
	exports.default = _default;

/***/ }),
/* 556 */
/***/ (function(module, exports) {

	/**
	 * Returns a function, that, as long as it continues to be invoked, will not
	 * be triggered. The function will be called after it stops being called for
	 * N milliseconds. If `immediate` is passed, trigger the function on the
	 * leading edge, instead of the trailing. The function also has a property 'clear' 
	 * that is a function which will clear the timer to prevent previously scheduled executions. 
	 *
	 * @source underscore.js
	 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
	 * @param {Function} function to wrap
	 * @param {Number} timeout in ms (`100`)
	 * @param {Boolean} whether to execute at the beginning (`false`)
	 * @api public
	 */
	
	module.exports = function debounce(func, wait, immediate){
	  var timeout, args, context, timestamp, result;
	  if (null == wait) wait = 100;
	
	  function later() {
	    var last = Date.now() - timestamp;
	
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        context = args = null;
	      }
	    }
	  };
	
	  var debounced = function(){
	    context = this;
	    args = arguments;
	    timestamp = Date.now();
	    var callNow = immediate && !timeout;
	    if (!timeout) timeout = setTimeout(later, wait);
	    if (callNow) {
	      result = func.apply(context, args);
	      context = args = null;
	    }
	
	    return result;
	  };
	
	  debounced.clear = function() {
	    if (timeout) {
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	  
	  debounced.flush = function() {
	    if (timeout) {
	      result = func.apply(context, args);
	      context = args = null;
	      
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	
	  return debounced;
	};


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _InputLabel.default;
	  }
	});
	
	var _InputLabel = _interopRequireDefault(__webpack_require__(558));

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _FormLabel = _interopRequireDefault(__webpack_require__(559));
	
	// @inheritedComponent FormLabel
	var styles = function styles(theme) {
	  return {
	    root: {
	      transformOrigin: 'top left'
	    },
	    formControl: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      // slight alteration to spec spacing to match visual spec result
	      transform: 'translate(0, 24px) scale(1)'
	    },
	    marginDense: {
	      // Compensation for the `Input.inputDense` style.
	      transform: 'translate(0, 21px) scale(1)'
	    },
	    shrink: {
	      transform: 'translate(0, 1.5px) scale(0.75)',
	      transformOrigin: 'top left'
	    },
	    animated: {
	      transition: theme.transitions.create('transform', {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      })
	    }
	  };
	};
	
	exports.styles = styles;
	
	function InputLabel(props, context) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      disableAnimation = props.disableAnimation,
	      FormLabelClasses = props.FormLabelClasses,
	      marginProp = props.margin,
	      shrinkProp = props.shrink,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "disableAnimation", "FormLabelClasses", "margin", "shrink"]);
	  var muiFormControl = context.muiFormControl;
	  var shrink = shrinkProp;
	
	  if (typeof shrink === 'undefined' && muiFormControl) {
	    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
	  }
	
	  var margin = marginProp;
	
	  if (typeof margin === 'undefined' && muiFormControl) {
	    margin = muiFormControl.margin;
	  }
	
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty2.default)(_classNames, classes.animated, !disableAnimation), (0, _defineProperty2.default)(_classNames, classes.shrink, shrink), (0, _defineProperty2.default)(_classNames, classes.marginDense, margin === 'dense'), _classNames), classNameProp);
	  return _react.default.createElement(_FormLabel.default, (0, _extends2.default)({
	    "data-shrink": shrink,
	    className: className,
	    classes: FormLabelClasses
	  }, other), children);
	}
	
	InputLabel.propTypes =  false ? {
	  /**
	   * The contents of the `InputLabel`.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the transition animation is disabled.
	   */
	  disableAnimation: _propTypes.default.bool,
	
	  /**
	   * If `true`, apply disabled class.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label will be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input of this label is focused.
	   */
	  focused: _propTypes.default.bool,
	
	  /**
	   * `classes` property applied to the `FormLabel` element.
	   */
	  FormLabelClasses: _propTypes.default.object,
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense']),
	
	  /**
	   * if `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label is shrunk.
	   */
	  shrink: _propTypes.default.bool
	} : {};
	InputLabel.defaultProps = {
	  disableAnimation: false
	};
	InputLabel.contextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiInputLabel'
	})(InputLabel);
	
	exports.default = _default;

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormLabel.default;
	  }
	});
	
	var _FormLabel = _interopRequireDefault(__webpack_require__(560));

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      fontFamily: theme.typography.fontFamily,
	      color: theme.palette.text.secondary,
	      fontSize: theme.typography.pxToRem(16),
	      lineHeight: 1,
	      padding: 0,
	      '&$focused': {
	        color: theme.palette.primary[theme.palette.type === 'light' ? 'dark' : 'light']
	      },
	      '&$disabled': {
	        color: theme.palette.text.disabled
	      },
	      '&$error': {
	        color: theme.palette.error.main
	      }
	    },
	    focused: {},
	    disabled: {},
	    error: {},
	    asterisk: {
	      '&$error': {
	        color: theme.palette.error.main
	      }
	    }
	  };
	};
	
	exports.styles = styles;
	
	function FormLabel(props, context) {
	  var _classNames;
	
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      disabledProp = props.disabled,
	      errorProp = props.error,
	      focusedProp = props.focused,
	      requiredProp = props.required,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "component", "disabled", "error", "focused", "required"]);
	  var muiFormControl = context.muiFormControl;
	  var required = requiredProp;
	  var focused = focusedProp;
	  var disabled = disabledProp;
	  var error = errorProp;
	
	  if (muiFormControl) {
	    if (typeof required === 'undefined') {
	      required = muiFormControl.required;
	    }
	
	    if (typeof focused === 'undefined') {
	      focused = muiFormControl.focused;
	    }
	
	    if (typeof disabled === 'undefined') {
	      disabled = muiFormControl.disabled;
	    }
	
	    if (typeof error === 'undefined') {
	      error = muiFormControl.error;
	    }
	  }
	
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.focused, focused), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.error, error), _classNames), classNameProp);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className
	  }, other), children, required && _react.default.createElement("span", {
	    className: (0, _classnames.default)(classes.asterisk, (0, _defineProperty2.default)({}, classes.error, error))
	  }, "\u2009*"));
	}
	
	FormLabel.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the label should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the input of this label is focused (used by `FormGroup` components).
	   */
	  focused: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool
	} : {};
	FormLabel.defaultProps = {
	  component: 'label'
	};
	FormLabel.contextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormLabel'
	})(FormLabel);
	
	exports.default = _default;

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormControl.default;
	  }
	});
	
	var _FormControl = _interopRequireDefault(__webpack_require__(562));

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Input = __webpack_require__(554);
	
	var _helpers = __webpack_require__(345);
	
	var _reactHelpers = __webpack_require__(438);
	
	var styles = {
	  root: {
	    display: 'inline-flex',
	    flexDirection: 'column',
	    position: 'relative',
	    // Reset fieldset default style
	    minWidth: 0,
	    padding: 0,
	    margin: 0,
	    border: 0
	  },
	  marginNormal: {
	    marginTop: 16,
	    marginBottom: 8
	  },
	  marginDense: {
	    marginTop: 8,
	    marginBottom: 4
	  },
	  fullWidth: {
	    width: '100%'
	  }
	};
	/**
	 * Provides context such as filled/focused/error/required for form inputs.
	 * Relying on the context provides high flexibilty and ensures that the state always stays
	 * consistent across the children of the `FormControl`.
	 * This context is used by the following components:
	 *  - FormLabel
	 *  - FormHelperText
	 *  - Input
	 *  - InputLabel
	 */
	
	exports.styles = styles;
	
	var FormControl =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(FormControl, _React$Component);
	
	  function FormControl(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, FormControl);
	    _this = (0, _possibleConstructorReturn2.default)(this, (FormControl.__proto__ || Object.getPrototypeOf(FormControl)).call(this, props)); // We need to iterate through the children and find the Input in order
	    // to fully support server side rendering.
	
	    _this.state = {
	      adornedStart: false,
	      filled: false,
	      focused: false
	    };
	
	    _this.handleFocus = function () {
	      _this.setState(function (state) {
	        return !state.focused ? {
	          focused: true
	        } : null;
	      });
	    };
	
	    _this.handleBlur = function () {
	      _this.setState(function (state) {
	        return state.focused ? {
	          focused: false
	        } : null;
	      });
	    };
	
	    _this.handleDirty = function () {
	      if (!_this.state.filled) {
	        _this.setState({
	          filled: true
	        });
	      }
	    };
	
	    _this.handleClean = function () {
	      if (_this.state.filled) {
	        _this.setState({
	          filled: false
	        });
	      }
	    };
	
	    var children = _this.props.children;
	
	    if (children) {
	      _react.default.Children.forEach(children, function (child) {
	        if (!(0, _reactHelpers.isMuiElement)(child, ['Input', 'Select', 'NativeSelect'])) {
	          return;
	        }
	
	        if ((0, _Input.isFilled)(child.props, true)) {
	          _this.state.filled = true;
	        }
	
	        var input = (0, _reactHelpers.isMuiElement)(child, ['Select', 'NativeSelect']) ? child.props.input : child;
	
	        if (input && (0, _Input.isAdornedStart)(input.props)) {
	          _this.state.adornedStart = true;
	        }
	      });
	    }
	
	    return _this;
	  }
	
	  (0, _createClass2.default)(FormControl, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      var _props = this.props,
	          disabled = _props.disabled,
	          error = _props.error,
	          required = _props.required,
	          margin = _props.margin;
	      var _state = this.state,
	          adornedStart = _state.adornedStart,
	          filled = _state.filled,
	          focused = _state.focused;
	      return {
	        muiFormControl: {
	          adornedStart: adornedStart,
	          disabled: disabled,
	          error: error,
	          filled: filled,
	          focused: focused,
	          margin: margin,
	          onBlur: this.handleBlur,
	          onEmpty: this.handleClean,
	          onFilled: this.handleDirty,
	          onFocus: this.handleFocus,
	          required: required
	        }
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _classNames;
	
	      var _props2 = this.props,
	          classes = _props2.classes,
	          className = _props2.className,
	          Component = _props2.component,
	          disabled = _props2.disabled,
	          error = _props2.error,
	          fullWidth = _props2.fullWidth,
	          margin = _props2.margin,
	          required = _props2.required,
	          other = (0, _objectWithoutProperties2.default)(_props2, ["classes", "className", "component", "disabled", "error", "fullWidth", "margin", "required"]);
	      return _react.default.createElement(Component, (0, _extends2.default)({
	        className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["margin".concat((0, _helpers.capitalize)(margin))], margin !== 'none'), (0, _defineProperty2.default)(_classNames, classes.fullWidth, fullWidth), _classNames), className)
	      }, other));
	    }
	  }]);
	  return FormControl;
	}(_react.default.Component);
	
	FormControl.propTypes =  false ? {
	  /**
	   * The contents of the form control.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the label, input and helper text should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the label should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `true`, the component will take up the full width of its container.
	   */
	  fullWidth: _propTypes.default.bool,
	
	  /**
	   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
	   */
	  margin: _propTypes.default.oneOf(['none', 'dense', 'normal']),
	
	  /**
	   * If `true`, the label will indicate that the input is required.
	   */
	  required: _propTypes.default.bool
	} : {};
	FormControl.defaultProps = {
	  component: 'div',
	  disabled: false,
	  error: false,
	  fullWidth: false,
	  margin: 'none',
	  required: false
	};
	FormControl.childContextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormControl'
	})(FormControl);
	
	exports.default = _default;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _FormHelperText.default;
	  }
	});
	
	var _FormHelperText = _interopRequireDefault(__webpack_require__(564));

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      color: theme.palette.text.secondary,
	      fontFamily: theme.typography.fontFamily,
	      fontSize: theme.typography.pxToRem(12),
	      textAlign: 'left',
	      marginTop: 8,
	      lineHeight: '1em',
	      minHeight: '1em',
	      margin: 0,
	      '&$error': {
	        color: theme.palette.error.main
	      },
	      '&$disabled': {
	        color: theme.palette.text.disabled
	      }
	    },
	    error: {},
	    disabled: {},
	    marginDense: {
	      marginTop: 4
	    }
	  };
	};
	
	exports.styles = styles;
	
	function FormHelperText(props, context) {
	  var _classNames;
	
	  var classes = props.classes,
	      classNameProp = props.className,
	      disabledProp = props.disabled,
	      errorProp = props.error,
	      marginProp = props.margin,
	      Component = props.component,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "disabled", "error", "margin", "component"]);
	  var muiFormControl = context.muiFormControl;
	  var disabled = disabledProp;
	  var error = errorProp;
	  var margin = marginProp;
	
	  if (muiFormControl) {
	    if (typeof disabled === 'undefined') {
	      disabled = muiFormControl.disabled;
	    }
	
	    if (typeof error === 'undefined') {
	      error = muiFormControl.error;
	    }
	
	    if (typeof margin === 'undefined') {
	      margin = muiFormControl.margin;
	    }
	  }
	
	  var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.error, error), (0, _defineProperty2.default)(_classNames, classes.marginDense, margin === 'dense'), _classNames), classNameProp);
	  return _react.default.createElement(Component, (0, _extends2.default)({
	    className: className
	  }, other));
	}
	
	FormHelperText.propTypes =  false ? {
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * The component used for the root node.
	   * Either a string to use a DOM element or a component.
	   */
	  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * If `true`, the helper text should be displayed in a disabled state.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, helper text should be displayed in an error state.
	   */
	  error: _propTypes.default.bool,
	
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   */
	  margin: _propTypes.default.oneOf(['dense'])
	} : {};
	FormHelperText.defaultProps = {
	  component: 'p'
	};
	FormHelperText.contextTypes = {
	  muiFormControl: _propTypes.default.object
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiFormHelperText'
	})(FormHelperText);
	
	exports.default = _default;

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Select.default;
	  }
	});
	
	var _Select = _interopRequireDefault(__webpack_require__(566));

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _SelectInput = _interopRequireDefault(__webpack_require__(567));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _mergeClasses = _interopRequireDefault(__webpack_require__(312));
	
	var _ArrowDropDown = _interopRequireDefault(__webpack_require__(596));
	
	var _Input = _interopRequireDefault(__webpack_require__(553));
	
	var _NativeSelect = __webpack_require__(597);
	
	var _NativeSelectInput = _interopRequireDefault(__webpack_require__(598));
	
	// @inheritedComponent Input
	var styles = _NativeSelect.styles;
	exports.styles = styles;
	
	function Select(props) {
	  var autoWidth = props.autoWidth,
	      children = props.children,
	      classes = props.classes,
	      displayEmpty = props.displayEmpty,
	      IconComponent = props.IconComponent,
	      input = props.input,
	      inputProps = props.inputProps,
	      MenuProps = props.MenuProps,
	      multiple = props.multiple,
	      native = props.native,
	      onClose = props.onClose,
	      onOpen = props.onOpen,
	      open = props.open,
	      renderValue = props.renderValue,
	      SelectDisplayProps = props.SelectDisplayProps,
	      other = (0, _objectWithoutProperties2.default)(props, ["autoWidth", "children", "classes", "displayEmpty", "IconComponent", "input", "inputProps", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps"]);
	  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;
	  return _react.default.cloneElement(input, (0, _objectSpread2.default)({
	    // Most of the logic is implemented in `SelectInput`.
	    // The `Select` component is a simple API wrapper to expose something better to play with.
	    inputComponent: inputComponent,
	    inputProps: (0, _objectSpread2.default)({
	      children: children,
	      IconComponent: IconComponent,
	      type: undefined
	    }, native ? {} : {
	      autoWidth: autoWidth,
	      displayEmpty: displayEmpty,
	      MenuProps: MenuProps,
	      multiple: multiple,
	      onClose: onClose,
	      onOpen: onOpen,
	      open: open,
	      renderValue: renderValue,
	      SelectDisplayProps: SelectDisplayProps
	    }, inputProps, {
	      classes: inputProps ? (0, _mergeClasses.default)({
	        baseClasses: classes,
	        newClasses: inputProps.classes,
	        Component: Select
	      }) : classes
	    }, input ? input.props.inputProps : {})
	  }, other));
	}
	
	Select.propTypes =  false ? {
	  /**
	   * If true, the width of the popover will automatically be set according to the items inside the
	   * menu, otherwise it will be at least the width of the select input.
	   */
	  autoWidth: _propTypes.default.bool,
	
	  /**
	   * The option elements to populate the select with.
	   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * If `true`, the selected item is displayed even if its value is empty.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  displayEmpty: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * An `Input` element; does not have to be a material-ui specific `Input`.
	   */
	  input: _propTypes.default.element,
	
	  /**
	   * Attributes applied to the `input` element.
	   * When `native` is `true`, the attributes are applied on the `select` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Properties applied to the [`Menu`](/api/menu) element.
	   */
	  MenuProps: _propTypes.default.object,
	
	  /**
	   * If true, `value` must be an array and the menu will support multiple selections.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  multiple: _propTypes.default.bool,
	
	  /**
	   * If `true`, the component will be using a native `select` element.
	   */
	  native: _propTypes.default.bool,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   * @param {object} [child] The react element that was selected when `native` is `false` (default).
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be opened.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onOpen: _propTypes.default.func,
	
	  /**
	   * Control `select` open state.
	   * You can only use it when the `native` property is `false` (default).
	   */
	  open: _propTypes.default.bool,
	
	  /**
	   * Render the selected value.
	   * You can only use it when the `native` property is `false` (default).
	   *
	   * @param {*} value The `value` provided to the component.
	   * @returns {ReactElement}
	   */
	  renderValue: _propTypes.default.func,
	
	  /**
	   * Properties applied to the clickable div element.
	   */
	  SelectDisplayProps: _propTypes.default.object,
	
	  /**
	   * The input value.
	   * This property is required when the `native` property is `false` (default).
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))])
	} : {};
	Select.defaultProps = {
	  autoWidth: false,
	  displayEmpty: false,
	  IconComponent: _ArrowDropDown.default,
	  input: _react.default.createElement(_Input.default, null),
	  multiple: false,
	  native: false
	};
	Select.muiName = 'Select';
	
	var _default = (0, _withStyles.default)(_NativeSelect.styles, {
	  name: 'MuiSelect'
	})(Select);
	
	exports.default = _default;

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(374));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _keycode = _interopRequireDefault(__webpack_require__(369));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _Menu = _interopRequireDefault(__webpack_require__(568));
	
	var _Input = __webpack_require__(554);
	
	/**
	 * @ignore - internal component.
	 */
	var SelectInput =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(SelectInput, _React$Component);
	
	  function SelectInput() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, SelectInput);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = SelectInput.__proto__ || Object.getPrototypeOf(SelectInput)).call.apply(_ref, [this].concat(args))), _this.ignoreNextBlur = false, _this.displayNode = null, _this.isOpenControlled = _this.props.open !== undefined, _this.state = {
	      menuMinWidth: null,
	      open: false
	    }, _this.update = function (_ref2) {
	      var event = _ref2.event,
	          open = _ref2.open;
	
	      if (_this.isOpenControlled) {
	        if (open) {
	          _this.props.onOpen(event);
	        } else {
	          _this.props.onClose(event);
	        }
	
	        return;
	      }
	
	      _this.setState({
	        // Perfom the layout computation outside of the render method.
	        menuMinWidth: _this.props.autoWidth ? null : _this.displayNode.clientWidth,
	        open: open
	      });
	    }, _this.handleClick = function (event) {
	      // Opening the menu is going to blur the. It will be focused back when closed.
	      _this.ignoreNextBlur = true;
	
	      _this.update({
	        open: true,
	        event: event
	      });
	    }, _this.handleClose = function (event) {
	      _this.update({
	        open: false,
	        event: event
	      });
	    }, _this.handleItemClick = function (child) {
	      return function (event) {
	        if (!_this.props.multiple) {
	          _this.update({
	            open: false,
	            event: event
	          });
	        }
	
	        var _this$props = _this.props,
	            onChange = _this$props.onChange,
	            name = _this$props.name;
	
	        if (onChange) {
	          var value;
	          var target;
	
	          if (event.target) {
	            target = event.target;
	          }
	
	          if (_this.props.multiple) {
	            value = Array.isArray(_this.props.value) ? (0, _toConsumableArray2.default)(_this.props.value) : [];
	            var itemIndex = value.indexOf(child.props.value);
	
	            if (itemIndex === -1) {
	              value.push(child.props.value);
	            } else {
	              value.splice(itemIndex, 1);
	            }
	          } else {
	            value = child.props.value;
	          }
	
	          event.persist();
	          event.target = (0, _objectSpread2.default)({}, target, {
	            value: value,
	            name: name
	          });
	          onChange(event, child);
	        }
	      };
	    }, _this.handleBlur = function (event) {
	      if (_this.ignoreNextBlur === true) {
	        // The parent components are relying on the bubbling of the event.
	        event.stopPropagation();
	        _this.ignoreNextBlur = false;
	        return;
	      }
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleKeyDown = function (event) {
	      if (_this.props.readOnly) {
	        return;
	      }
	
	      if (['space', 'up', 'down'].indexOf((0, _keycode.default)(event)) !== -1) {
	        event.preventDefault(); // Opening the menu is going to blur the. It will be focused back when closed.
	
	        _this.ignoreNextBlur = true;
	
	        _this.update({
	          open: true,
	          event: event
	        });
	      }
	    }, _this.handleDisplayRef = function (node) {
	      _this.displayNode = node;
	    }, _this.handleInputRef = function (node) {
	      var inputRef = _this.props.inputRef;
	
	      if (!inputRef) {
	        return;
	      }
	
	      var nodeProxy = {
	        node: node,
	        // By pass the native input as we expose a rich object (array).
	        value: _this.props.value
	      };
	
	      if (typeof inputRef === 'function') {
	        inputRef(nodeProxy);
	      } else {
	        inputRef.current = nodeProxy;
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(SelectInput, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.isOpenControlled && this.props.open) {
	        // Focus the display node so the focus is restored on this element once
	        // the menu is closed.
	        this.displayNode.focus(); // Rerender with the resolve `displayNode` reference.
	
	        this.forceUpdate();
	      }
	
	      if (this.props.autoFocus) {
	        this.displayNode.focus();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          autoWidth = _props.autoWidth,
	          children = _props.children,
	          classes = _props.classes,
	          className = _props.className,
	          disabled = _props.disabled,
	          displayEmpty = _props.displayEmpty,
	          IconComponent = _props.IconComponent,
	          inputRef = _props.inputRef,
	          _props$MenuProps = _props.MenuProps,
	          MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,
	          multiple = _props.multiple,
	          name = _props.name,
	          onBlur = _props.onBlur,
	          onChange = _props.onChange,
	          onClose = _props.onClose,
	          onFocus = _props.onFocus,
	          onOpen = _props.onOpen,
	          openProp = _props.open,
	          readOnly = _props.readOnly,
	          renderValue = _props.renderValue,
	          required = _props.required,
	          SelectDisplayProps = _props.SelectDisplayProps,
	          tabIndexProp = _props.tabIndex,
	          _props$type = _props.type,
	          type = _props$type === void 0 ? 'hidden' : _props$type,
	          value = _props.value,
	          other = (0, _objectWithoutProperties2.default)(_props, ["autoWidth", "children", "classes", "className", "disabled", "displayEmpty", "IconComponent", "inputRef", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "required", "SelectDisplayProps", "tabIndex", "type", "value"]);
	      var open = this.isOpenControlled && this.displayNode ? openProp : this.state.open;
	      delete other['aria-invalid'];
	      var display;
	      var displaySingle = '';
	      var displayMultiple = [];
	      var computeDisplay = false; // No need to display any value if the field is empty.
	
	      if ((0, _Input.isFilled)(this.props) || displayEmpty) {
	        if (renderValue) {
	          display = renderValue(value);
	        } else {
	          computeDisplay = true;
	        }
	      }
	
	      var items = _react.default.Children.map(children, function (child) {
	        if (!_react.default.isValidElement(child)) {
	          return null;
	        }
	
	         false ? (0, _warning.default)(child.type !== _react.default.Fragment, ["Material-UI: the Select component doesn't accept a Fragment as a child.", 'Consider providing an array instead.'].join('\n')) : void 0;
	        var selected;
	
	        if (multiple) {
	          if (!Array.isArray(value)) {
	            throw new Error('Material-UI: the `value` property must be an array ' + 'when using the `Select` component with `multiple`.');
	          }
	
	          selected = value.indexOf(child.props.value) !== -1;
	
	          if (selected && computeDisplay) {
	            displayMultiple.push(child.props.children);
	          }
	        } else {
	          selected = value === child.props.value;
	
	          if (selected && computeDisplay) {
	            displaySingle = child.props.children;
	          }
	        }
	
	        return _react.default.cloneElement(child, {
	          onClick: _this2.handleItemClick(child),
	          role: 'option',
	          selected: selected,
	          value: undefined,
	          // The value is most likely not a valid HTML attribute.
	          'data-value': child.props.value // Instead, we provide it as a data attribute.
	
	        });
	      });
	
	      if (computeDisplay) {
	        display = multiple ? displayMultiple.join(', ') : displaySingle;
	      } // Avoid performing a layout computation in the render method.
	
	
	      var menuMinWidth = this.state.menuMinWidth;
	
	      if (!autoWidth && this.isOpenControlled && this.displayNode) {
	        menuMinWidth = this.displayNode.clientWidth;
	      }
	
	      var tabIndex;
	
	      if (typeof tabIndexProp !== 'undefined') {
	        tabIndex = tabIndexProp;
	      } else {
	        tabIndex = disabled ? null : 0;
	      }
	
	      return _react.default.createElement("div", {
	        className: classes.root
	      }, _react.default.createElement("div", (0, _extends2.default)({
	        className: (0, _classnames.default)(classes.select, classes.selectMenu, (0, _defineProperty2.default)({}, classes.disabled, disabled), className),
	        ref: this.handleDisplayRef,
	        "aria-pressed": open ? 'true' : 'false',
	        tabIndex: tabIndex,
	        role: "button",
	        "aria-owns": open ? "menu-".concat(name || '') : null,
	        "aria-haspopup": "true",
	        onKeyDown: this.handleKeyDown,
	        onBlur: this.handleBlur,
	        onClick: disabled || readOnly ? null : this.handleClick,
	        onFocus: onFocus
	      }, SelectDisplayProps), display || _react.default.createElement("span", {
	        dangerouslySetInnerHTML: {
	          __html: '&#8203;'
	        }
	      })), _react.default.createElement("input", (0, _extends2.default)({
	        value: Array.isArray(value) ? value.join(',') : value,
	        name: name,
	        ref: this.handleInputRef,
	        type: type
	      }, other)), _react.default.createElement(IconComponent, {
	        className: classes.icon
	      }), _react.default.createElement(_Menu.default, (0, _extends2.default)({
	        id: "menu-".concat(name || ''),
	        anchorEl: this.displayNode,
	        open: open,
	        onClose: this.handleClose
	      }, MenuProps, {
	        MenuListProps: (0, _objectSpread2.default)({
	          role: 'listbox'
	        }, MenuProps.MenuListProps),
	        PaperProps: (0, _objectSpread2.default)({}, MenuProps.PaperProps, {
	          style: (0, _objectSpread2.default)({
	            minWidth: menuMinWidth
	          }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
	        })
	      }), items));
	    }
	  }]);
	  return SelectInput;
	}(_react.default.Component);
	
	SelectInput.propTypes =  false ? {
	  /**
	   * @ignore
	   */
	  autoFocus: _propTypes.default.bool,
	
	  /**
	   * If true, the width of the popover will automatically be set according to the items inside the
	   * menu, otherwise it will be at least the width of the select input.
	   */
	  autoWidth: _propTypes.default.bool,
	
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<MenuItem>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the select element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the select will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * If `true`, the selected item is displayed even if its value is empty.
	   */
	  displayEmpty: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Use that property to pass a ref callback to the native select element.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Properties applied to the [`Menu`](/api/menu) element.
	   */
	  MenuProps: _propTypes.default.object,
	
	  /**
	   * If true, `value` must be an array and the menu will support multiple selections.
	   */
	  multiple: _propTypes.default.bool,
	
	  /**
	   * Name attribute of the `select` or hidden `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * @ignore
	   */
	  onBlur: _propTypes.default.func,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   * @param {object} [child] The react element that was selected.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onFocus: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be opened.
	   * Use in controlled mode (see open).
	   *
	   * @param {object} event The event source of the callback
	   */
	  onOpen: _propTypes.default.func,
	
	  /**
	   * Control `select` open state.
	   */
	  open: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  readOnly: _propTypes.default.bool,
	
	  /**
	   * Render the selected value.
	   *
	   * @param {*} value The `value` provided to the component.
	   * @returns {ReactElement}
	   */
	  renderValue: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  required: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the clickable div element.
	   */
	  SelectDisplayProps: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
	
	  /**
	   * @ignore
	   */
	  type: _propTypes.default.string,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))]).isRequired
	} : {};
	var _default = SelectInput;
	exports.default = _default;

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _scrollbarSize = _interopRequireDefault(__webpack_require__(569));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Popover = _interopRequireDefault(__webpack_require__(571));
	
	var _MenuList = _interopRequireDefault(__webpack_require__(439));
	
	// @inheritedComponent Popover
	var RTL_ORIGIN = {
	  vertical: 'top',
	  horizontal: 'right'
	};
	var LTR_ORIGIN = {
	  vertical: 'top',
	  horizontal: 'left'
	};
	var styles = {
	  paper: {
	    // specZ: The maximum height of a simple menu should be one or more rows less than the view
	    // height. This ensures a tappable area outside of the simple menu with which to dismiss
	    // the menu.
	    maxHeight: 'calc(100% - 96px)',
	    // Add iOS momentum scrolling.
	    WebkitOverflowScrolling: 'touch',
	    // Fix a scrolling issue on Chrome.
	    transform: 'translateZ(0)'
	  }
	};
	exports.styles = styles;
	
	var Menu =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Menu, _React$Component);
	
	  function Menu() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Menu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this.menuList = null, _this.getContentAnchorEl = function () {
	      if (!_this.menuList || !_this.menuList.selectedItem) {
	        return _reactDom.default.findDOMNode(_this.menuList).firstChild;
	      }
	
	      return _reactDom.default.findDOMNode(_this.menuList.selectedItem);
	    }, _this.focus = function () {
	      if (_this.menuList && _this.menuList.selectedItem) {
	        _reactDom.default.findDOMNode(_this.menuList.selectedItem).focus();
	
	        return;
	      }
	
	      var menuList = _reactDom.default.findDOMNode(_this.menuList);
	
	      if (menuList && menuList.firstChild) {
	        menuList.firstChild.focus();
	      }
	    }, _this.handleEnter = function (element) {
	      var _this$props = _this.props,
	          disableAutoFocusItem = _this$props.disableAutoFocusItem,
	          theme = _this$props.theme;
	
	      var menuList = _reactDom.default.findDOMNode(_this.menuList); // Focus so the scroll computation of the Popover works as expected.
	
	
	      if (disableAutoFocusItem !== true) {
	        _this.focus();
	      } // Let's ignore that piece of logic if users are already overriding the width
	      // of the menu.
	
	
	      if (menuList && element.clientHeight < menuList.clientHeight && !menuList.style.width) {
	        var size = "".concat((0, _scrollbarSize.default)(), "px");
	        menuList.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = size;
	        menuList.style.width = "calc(100% + ".concat(size, ")");
	      }
	
	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }
	    }, _this.handleListKeyDown = function (event, key) {
	      if (key === 'tab') {
	        event.preventDefault();
	
	        if (_this.props.onClose) {
	          _this.props.onClose(event);
	        }
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Menu, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.props.open && this.props.disableAutoFocusItem !== true) {
	        this.focus();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          children = _props.children,
	          classes = _props.classes,
	          disableAutoFocusItem = _props.disableAutoFocusItem,
	          MenuListProps = _props.MenuListProps,
	          onEnter = _props.onEnter,
	          _props$PaperProps = _props.PaperProps,
	          PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,
	          PopoverClasses = _props.PopoverClasses,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "classes", "disableAutoFocusItem", "MenuListProps", "onEnter", "PaperProps", "PopoverClasses", "theme"]);
	      return _react.default.createElement(_Popover.default, (0, _extends2.default)({
	        getContentAnchorEl: this.getContentAnchorEl,
	        classes: PopoverClasses,
	        onEnter: this.handleEnter,
	        anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
	        transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
	        PaperProps: (0, _objectSpread2.default)({}, PaperProps, {
	          classes: (0, _objectSpread2.default)({}, PaperProps.classes, {
	            root: classes.paper
	          })
	        })
	      }, other), _react.default.createElement(_MenuList.default, (0, _extends2.default)({
	        onKeyDown: this.handleListKeyDown
	      }, MenuListProps, {
	        ref: function ref(node) {
	          _this2.menuList = node;
	        }
	      }), children));
	    }
	  }]);
	  return Menu;
	}(_react.default.Component);
	
	Menu.propTypes =  false ? {
	  /**
	   * The DOM element used to set the position of the menu.
	   */
	  anchorEl: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * Menu contents, normally `MenuItem`s.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * If `true`, the selected / first menu item will not be auto focused.
	   */
	  disableAutoFocusItem: _propTypes.default.bool,
	
	  /**
	   * Properties applied to the [`MenuList`](/api/menu-list) element.
	   */
	  MenuListProps: _propTypes.default.object,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   *
	   * @param {object} event The event source of the callback
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired before the Menu enters.
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu has entered.
	   */
	  onEntered: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu is entering.
	   */
	  onEntering: _propTypes.default.func,
	
	  /**
	   * Callback fired before the Menu exits.
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu has exited.
	   */
	  onExited: _propTypes.default.func,
	
	  /**
	   * Callback fired when the Menu is exiting.
	   */
	  onExiting: _propTypes.default.func,
	
	  /**
	   * If `true`, the menu is visible.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * @ignore
	   */
	  PaperProps: _propTypes.default.object,
	
	  /**
	   * `classes` property applied to the `Popover` element.
	   */
	  PopoverClasses: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The length of the transition in `ms`, or 'auto'
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])])
	} : {};
	Menu.defaultProps = {
	  disableAutoFocusItem: false,
	  transitionDuration: 'auto'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiMenu',
	  withTheme: true
	})(Menu);
	
	exports.default = _default;

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (recalc) {
	  if (!size && size !== 0 || recalc) {
	    if (_inDOM2.default) {
	      var scrollDiv = document.createElement('div');
	
	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';
	
	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }
	
	  return size;
	};
	
	var _inDOM = __webpack_require__(570);
	
	var _inDOM2 = _interopRequireDefault(_inDOM);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var size = void 0;
	
	module.exports = exports['default'];

/***/ }),
/* 570 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	module.exports = exports['default'];

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Popover.default;
	  }
	});
	
	var _Popover = _interopRequireDefault(__webpack_require__(572));

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _debounce = _interopRequireDefault(__webpack_require__(556));
	
	var _reactEventListener = _interopRequireDefault(__webpack_require__(428));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(370));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Modal = _interopRequireDefault(__webpack_require__(573));
	
	var _Grow = _interopRequireDefault(__webpack_require__(429));
	
	var _Paper = _interopRequireDefault(__webpack_require__(432));
	
	// @inheritedComponent Modal
	// < 1kb payload overhead when lodash/debounce is > 3kb.
	function getOffsetTop(rect, vertical) {
	  var offset = 0;
	
	  if (typeof vertical === 'number') {
	    offset = vertical;
	  } else if (vertical === 'center') {
	    offset = rect.height / 2;
	  } else if (vertical === 'bottom') {
	    offset = rect.height;
	  }
	
	  return offset;
	}
	
	function getOffsetLeft(rect, horizontal) {
	  var offset = 0;
	
	  if (typeof horizontal === 'number') {
	    offset = horizontal;
	  } else if (horizontal === 'center') {
	    offset = rect.width / 2;
	  } else if (horizontal === 'right') {
	    offset = rect.width;
	  }
	
	  return offset;
	}
	
	function getTransformOriginValue(transformOrigin) {
	  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {
	    return typeof n === 'number' ? "".concat(n, "px") : n;
	  }).join(' ');
	} // Sum the scrollTop between two elements.
	
	
	function getScrollParent(parent, child) {
	  var element = child;
	  var scrollTop = 0;
	
	  while (element && element !== parent) {
	    element = element.parentNode;
	    scrollTop += element.scrollTop;
	  }
	
	  return scrollTop;
	}
	
	function getAnchorEl(anchorEl) {
	  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
	}
	
	var styles = {
	  paper: {
	    position: 'absolute',
	    overflowY: 'auto',
	    overflowX: 'hidden',
	    // So we see the popover when it's empty.
	    // It's most likely on issue on userland.
	    minWidth: 16,
	    minHeight: 16,
	    maxWidth: 'calc(100% - 32px)',
	    maxHeight: 'calc(100% - 32px)',
	    // We disable the focus ring for mouse, touch and keyboard users.
	    outline: 'none'
	  }
	};
	exports.styles = styles;
	
	var Popover =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Popover, _React$Component);
	
	  function Popover() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Popover);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Popover.__proto__ || Object.getPrototypeOf(Popover)).call.apply(_ref, [this].concat(args))), _this.paperRef = null, _this.handleGetOffsetTop = getOffsetTop, _this.handleGetOffsetLeft = getOffsetLeft, _this.handleResize = (0, _debounce.default)(function () {
	      var element = _reactDom.default.findDOMNode(_this.paperRef);
	
	      _this.setPositioningStyles(element);
	    }, 166), _this.componentWillUnmount = function () {
	      _this.handleResize.clear();
	    }, _this.setPositioningStyles = function (element) {
	      if (element && element.style) {
	        var positioning = _this.getPositioningStyle(element);
	
	        if (positioning.top !== null) {
	          element.style.top = positioning.top;
	        }
	
	        if (positioning.left !== null) {
	          element.style.left = positioning.left;
	        }
	
	        element.style.transformOrigin = positioning.transformOrigin;
	      }
	    }, _this.getPositioningStyle = function (element) {
	      var _this$props = _this.props,
	          anchorEl = _this$props.anchorEl,
	          anchorReference = _this$props.anchorReference,
	          marginThreshold = _this$props.marginThreshold; // Check if the parent has requested anchoring on an inner content node
	
	      var contentAnchorOffset = _this.getContentAnchorOffset(element);
	
	      var elemRect = {
	        width: element.clientWidth,
	        height: element.clientHeight
	      }; // Get the transform origin point on the element itself
	
	      var transformOrigin = _this.getTransformOrigin(elemRect, contentAnchorOffset);
	
	      if (anchorReference === 'none') {
	        return {
	          top: null,
	          left: null,
	          transformOrigin: getTransformOriginValue(transformOrigin)
	        };
	      } // Get the offset of of the anchoring element
	
	
	      var anchorOffset = _this.getAnchorOffset(contentAnchorOffset); // Calculate element positioning
	
	
	      var top = anchorOffset.top - transformOrigin.vertical;
	      var left = anchorOffset.left - transformOrigin.horizontal;
	      var bottom = top + elemRect.height;
	      var right = left + elemRect.width; // Use the parent window of the anchorEl if provided
	
	      var containerWindow = (0, _ownerWindow.default)(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account
	
	      var heightThreshold = containerWindow.innerHeight - marginThreshold;
	      var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting
	
	      if (top < marginThreshold) {
	        var diff = top - marginThreshold;
	        top -= diff;
	        transformOrigin.vertical += diff;
	      } else if (bottom > heightThreshold) {
	        var _diff = bottom - heightThreshold;
	
	        top -= _diff;
	        transformOrigin.vertical += _diff;
	      }
	
	       false ? (0, _warning.default)(elemRect.height < heightThreshold || !elemRect.height || !heightThreshold, ['Material-UI: the popover component is too tall.', "Some part of it can not be seen on the screen (".concat(elemRect.height - heightThreshold, "px)."), 'Please consider adding a `max-height` to improve the user-experience.'].join('\n')) : void 0; // Check if the horizontal axis needs shifting
	
	      if (left < marginThreshold) {
	        var _diff2 = left - marginThreshold;
	
	        left -= _diff2;
	        transformOrigin.horizontal += _diff2;
	      } else if (right > widthThreshold) {
	        var _diff3 = right - widthThreshold;
	
	        left -= _diff3;
	        transformOrigin.horizontal += _diff3;
	      }
	
	      return {
	        top: "".concat(top, "px"),
	        left: "".concat(left, "px"),
	        transformOrigin: getTransformOriginValue(transformOrigin)
	      };
	    }, _this.handleEnter = function (element) {
	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }
	
	      _this.setPositioningStyles(element);
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Popover, [{
	    key: "componentDidMount",
	    // Corresponds to 10 frames at 60 Hz.
	    value: function componentDidMount() {
	      if (this.props.action) {
	        this.props.action({
	          updatePosition: this.handleResize
	        });
	      }
	    }
	  }, {
	    key: "getAnchorOffset",
	    // Returns the top/left offset of the position
	    // to attach to on the anchor element (or body if none is provided)
	    value: function getAnchorOffset(contentAnchorOffset) {
	      var _props = this.props,
	          anchorEl = _props.anchorEl,
	          anchorOrigin = _props.anchorOrigin,
	          anchorReference = _props.anchorReference,
	          anchorPosition = _props.anchorPosition;
	
	      if (anchorReference === 'anchorPosition') {
	         false ? (0, _warning.default)(anchorPosition, 'Material-UI: you need to provide a `anchorPosition` property when using ' + '<Popover anchorReference="anchorPosition" />.') : void 0;
	        return anchorPosition;
	      } // If an anchor element wasn't provided, just use the parent body element of this Popover
	
	
	      var anchorElement = getAnchorEl(anchorEl) || (0, _ownerDocument.default)(_reactDom.default.findDOMNode(this.paperRef)).body;
	      var anchorRect = anchorElement.getBoundingClientRect();
	      var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';
	      return {
	        top: anchorRect.top + this.handleGetOffsetTop(anchorRect, anchorVertical),
	        left: anchorRect.left + this.handleGetOffsetLeft(anchorRect, anchorOrigin.horizontal)
	      };
	    } // Returns the vertical offset of inner content to anchor the transform on if provided
	
	  }, {
	    key: "getContentAnchorOffset",
	    value: function getContentAnchorOffset(element) {
	      var _props2 = this.props,
	          getContentAnchorEl = _props2.getContentAnchorEl,
	          anchorReference = _props2.anchorReference;
	      var contentAnchorOffset = 0;
	
	      if (getContentAnchorEl && anchorReference === 'anchorEl') {
	        var contentAnchorEl = getContentAnchorEl(element);
	
	        if (contentAnchorEl && element.contains(contentAnchorEl)) {
	          var scrollTop = getScrollParent(element, contentAnchorEl);
	          contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
	        } // != the default value
	
	
	         false ? (0, _warning.default)(this.props.anchorOrigin.vertical === 'top', ['Material-UI: you can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` property to the popover component.', 'Only use one of the two properties.', 'Set `getContentAnchorEl` to null or leave `anchorOrigin.vertical` unchanged.'].join('\n')) : void 0;
	      }
	
	      return contentAnchorOffset;
	    } // Return the base transform origin using the element
	    // and taking the content anchor offset into account if in use
	
	  }, {
	    key: "getTransformOrigin",
	    value: function getTransformOrigin(elemRect) {
	      var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var transformOrigin = this.props.transformOrigin;
	      return {
	        vertical: this.handleGetOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
	        horizontal: this.handleGetOffsetLeft(elemRect, transformOrigin.horizontal)
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          action = _props3.action,
	          anchorEl = _props3.anchorEl,
	          anchorOrigin = _props3.anchorOrigin,
	          anchorPosition = _props3.anchorPosition,
	          anchorReference = _props3.anchorReference,
	          children = _props3.children,
	          classes = _props3.classes,
	          containerProp = _props3.container,
	          elevation = _props3.elevation,
	          getContentAnchorEl = _props3.getContentAnchorEl,
	          marginThreshold = _props3.marginThreshold,
	          onEnter = _props3.onEnter,
	          onEntered = _props3.onEntered,
	          onEntering = _props3.onEntering,
	          onExit = _props3.onExit,
	          onExited = _props3.onExited,
	          onExiting = _props3.onExiting,
	          open = _props3.open,
	          PaperProps = _props3.PaperProps,
	          role = _props3.role,
	          transformOrigin = _props3.transformOrigin,
	          TransitionComponent = _props3.TransitionComponent,
	          transitionDurationProp = _props3.transitionDuration,
	          TransitionProps = _props3.TransitionProps,
	          other = (0, _objectWithoutProperties2.default)(_props3, ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "classes", "container", "elevation", "getContentAnchorEl", "marginThreshold", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "open", "PaperProps", "role", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"]);
	      var transitionDuration = transitionDurationProp;
	
	      if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
	        transitionDuration = undefined;
	      } // If the container prop is provided, use that
	      // If the anchorEl prop is provided, use its parent body element as the container
	      // If neither are provided let the Modal take care of choosing the container
	
	
	      var container = containerProp || (anchorEl ? (0, _ownerDocument.default)(getAnchorEl(anchorEl)).body : undefined);
	      return _react.default.createElement(_Modal.default, (0, _extends2.default)({
	        container: container,
	        open: open,
	        BackdropProps: {
	          invisible: true
	        }
	      }, other), _react.default.createElement(TransitionComponent, (0, _extends2.default)({
	        appear: true,
	        "in": open,
	        onEnter: this.handleEnter,
	        onEntered: onEntered,
	        onEntering: onEntering,
	        onExit: onExit,
	        onExited: onExited,
	        onExiting: onExiting,
	        role: role,
	        timeout: transitionDuration
	      }, TransitionProps), _react.default.createElement(_Paper.default, (0, _extends2.default)({
	        className: classes.paper,
	        elevation: elevation,
	        ref: function ref(node) {
	          _this2.paperRef = node;
	        }
	      }, PaperProps), _react.default.createElement(_reactEventListener.default, {
	        target: "window",
	        onResize: this.handleResize
	      }), children)));
	    }
	  }]);
	  return Popover;
	}(_react.default.Component);
	
	Popover.propTypes =  false ? {
	  /**
	   * This is callback property. It's called by the component on mount.
	   * This is useful when you want to trigger an action programmatically.
	   * It currently only supports updatePosition() action.
	   *
	   * @param {object} actions This object contains all posible actions
	   * that can be triggered programmatically.
	   */
	  action: _propTypes.default.func,
	
	  /**
	   * This is the DOM element, or a function that returns the DOM element,
	   * that may be used to set the position of the popover.
	   */
	  anchorEl: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * This is the point on the anchor where the popover's
	   * `anchorEl` will attach to. This is not used when the
	   * anchorReference is 'anchorPosition'.
	   *
	   * Options:
	   * vertical: [top, center, bottom];
	   * horizontal: [left, center, right].
	   */
	  anchorOrigin: _propTypes.default.shape({
	    horizontal: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['left', 'center', 'right'])]).isRequired,
	    vertical: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['top', 'center', 'bottom'])]).isRequired
	  }),
	
	  /**
	   * This is the position that may be used
	   * to set the position of the popover.
	   * The coordinates are relative to
	   * the application's client area.
	   */
	  anchorPosition: _propTypes.default.shape({
	    left: _propTypes.default.number.isRequired,
	    top: _propTypes.default.number.isRequired
	  }),
	
	  /*
	   * This determines which anchor prop to refer to to set
	   * the position of the popover.
	   */
	  anchorReference: _propTypes.default.oneOf(['anchorEl', 'anchorPosition', 'none']),
	
	  /**
	   * The content of the component.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will passed to the Modal component.
	   * By default, it uses the body of the anchorEl's top-level document object,
	   * so it's simply `document.body` most of the time.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * The elevation of the popover.
	   */
	  elevation: _propTypes.default.number,
	
	  /**
	   * This function is called in order to retrieve the content anchor element.
	   * It's the opposite of the `anchorEl` property.
	   * The content anchor element should be an element inside the popover.
	   * It's used to correctly scroll and set the position of the popover.
	   * The positioning strategy tries to make the content anchor element just above the
	   * anchor element.
	   */
	  getContentAnchorEl: _propTypes.default.func,
	
	  /**
	   * Specifies how close to the edge of the window the popover can appear.
	   */
	  marginThreshold: _propTypes.default.number,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   *
	   * @param {object} event The event source of the callback.
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired before the component is entering.
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component has entered.
	   */
	  onEntered: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is entering.
	   */
	  onEntering: _propTypes.default.func,
	
	  /**
	   * Callback fired before the component is exiting.
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component has exited.
	   */
	  onExited: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component is exiting.
	   */
	  onExiting: _propTypes.default.func,
	
	  /**
	   * If `true`, the popover is visible.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * Properties applied to the [`Paper`](/api/paper) element.
	   */
	  PaperProps: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  role: _propTypes.default.string,
	
	  /**
	   * This is the point on the popover which
	   * will attach to the anchor's origin.
	   *
	   * Options:
	   * vertical: [top, center, bottom, x(px)];
	   * horizontal: [left, center, right, x(px)].
	   */
	  transformOrigin: _propTypes.default.shape({
	    horizontal: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['left', 'center', 'right'])]).isRequired,
	    vertical: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.oneOf(['top', 'center', 'bottom'])]).isRequired
	  }),
	
	  /**
	   * Transition component.
	   */
	  TransitionComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Set to 'auto' to automatically calculate transition time based on height.
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  }), _propTypes.default.oneOf(['auto'])]),
	
	  /**
	   * Properties applied to the `Transition` element.
	   */
	  TransitionProps: _propTypes.default.object
	} : {};
	Popover.defaultProps = {
	  anchorReference: 'anchorEl',
	  anchorOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  elevation: 8,
	  marginThreshold: 16,
	  transformOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  TransitionComponent: _Grow.default,
	  transitionDuration: 'auto'
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiPopover'
	})(Popover);
	
	exports.default = _default;

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Modal.default;
	  }
	});
	Object.defineProperty(exports, "ModalManager", {
	  enumerable: true,
	  get: function get() {
	    return _ModalManager.default;
	  }
	});
	
	var _Modal = _interopRequireDefault(__webpack_require__(574));
	
	var _ModalManager = _interopRequireDefault(__webpack_require__(579));

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(302));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _warning = _interopRequireDefault(__webpack_require__(16));
	
	var _keycode = _interopRequireDefault(__webpack_require__(369));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _RootRef = _interopRequireDefault(__webpack_require__(575));
	
	var _Portal = _interopRequireDefault(__webpack_require__(577));
	
	var _helpers = __webpack_require__(345);
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _ModalManager = _interopRequireDefault(__webpack_require__(579));
	
	var _Backdrop = _interopRequireDefault(__webpack_require__(592));
	
	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom.default.findDOMNode(container) || defaultContainer;
	}
	
	function getHasTransition(props) {
	  return props.children ? props.children.props.hasOwnProperty('in') : false;
	}
	
	var styles = function styles(theme) {
	  return {
	    root: {
	      position: 'fixed',
	      zIndex: theme.zIndex.modal,
	      right: 0,
	      bottom: 0,
	      top: 0,
	      left: 0
	    },
	    hidden: {
	      visibility: 'hidden'
	    }
	  };
	};
	/* istanbul ignore if */
	
	
	exports.styles = styles;
	
	if (false) {
	  throw new Error('Material-UI: react@16.3.0 or greater is required.');
	}
	/**
	 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
	 */
	
	
	var Modal =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Modal, _React$Component);
	
	  function Modal(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Modal);
	    _this = (0, _possibleConstructorReturn2.default)(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));
	    _this.mountNode = null;
	    _this.modalRef = null;
	    _this.dialogRef = null;
	    _this.mounted = false;
	
	    _this.handleRendered = function () {
	      _this.autoFocus(); // Fix a bug on Chrome where the scroll isn't initially 0.
	
	
	      _this.modalRef.scrollTop = 0;
	
	      if (_this.props.onRendered) {
	        _this.props.onRendered();
	      }
	    };
	
	    _this.handleOpen = function () {
	      var doc = (0, _ownerDocument.default)(_this.mountNode);
	      var container = getContainer(_this.props.container, doc.body);
	
	      _this.props.manager.add((0, _assertThisInitialized2.default)(_this), container);
	
	      doc.addEventListener('keydown', _this.handleDocumentKeyDown);
	      doc.addEventListener('focus', _this.enforceFocus, true);
	    };
	
	    _this.handleClose = function () {
	      _this.props.manager.remove((0, _assertThisInitialized2.default)(_this));
	
	      var doc = (0, _ownerDocument.default)(_this.mountNode);
	      doc.removeEventListener('keydown', _this.handleDocumentKeyDown);
	      doc.removeEventListener('focus', _this.enforceFocus, true);
	
	      _this.restoreLastFocus();
	    };
	
	    _this.handleExited = function () {
	      _this.setState({
	        exited: true
	      });
	
	      _this.handleClose();
	    };
	
	    _this.handleBackdropClick = function (event) {
	      if (event.target !== event.currentTarget) {
	        return;
	      }
	
	      if (_this.props.onBackdropClick) {
	        _this.props.onBackdropClick(event);
	      }
	
	      if (!_this.props.disableBackdropClick && _this.props.onClose) {
	        _this.props.onClose(event, 'backdropClick');
	      }
	    };
	
	    _this.handleDocumentKeyDown = function (event) {
	      if (!_this.isTopModal() || (0, _keycode.default)(event) !== 'esc') {
	        return;
	      }
	
	      if (_this.props.onEscapeKeyDown) {
	        _this.props.onEscapeKeyDown(event);
	      }
	
	      if (!_this.props.disableEscapeKeyDown && _this.props.onClose) {
	        _this.props.onClose(event, 'escapeKeyDown');
	      }
	    };
	
	    _this.checkForFocus = function () {
	      _this.lastFocus = (0, _ownerDocument.default)(_this.mountNode).activeElement;
	    };
	
	    _this.enforceFocus = function () {
	      if (_this.props.disableEnforceFocus || !_this.mounted || !_this.isTopModal()) {
	        return;
	      }
	
	      var currentActiveElement = (0, _ownerDocument.default)(_this.mountNode).activeElement;
	
	      if (_this.dialogRef && !_this.dialogRef.contains(currentActiveElement)) {
	        _this.dialogRef.focus();
	      }
	    };
	
	    _this.state = {
	      exited: !_this.props.open
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(Modal, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.mounted = true;
	
	      if (this.props.open) {
	        this.handleOpen();
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      if (!prevProps.open && this.props.open) {
	        this.checkForFocus();
	      }
	
	      if (prevProps.open && !this.props.open && !getHasTransition(this.props)) {
	        // Otherwise handleExited will call this.
	        this.handleClose();
	      } else if (!prevProps.open && this.props.open) {
	        this.handleOpen();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mounted = false;
	
	      if (this.props.open || getHasTransition(this.props) && !this.state.exited) {
	        this.handleClose();
	      }
	    }
	  }, {
	    key: "autoFocus",
	    value: function autoFocus() {
	      if (this.props.disableAutoFocus) {
	        return;
	      }
	
	      var currentActiveElement = (0, _ownerDocument.default)(this.mountNode).activeElement;
	
	      if (this.dialogRef && !this.dialogRef.contains(currentActiveElement)) {
	        this.lastFocus = currentActiveElement;
	
	        if (!this.dialogRef.hasAttribute('tabIndex')) {
	           false ? (0, _warning.default)(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to "-1".'].join('\n')) : void 0;
	          this.dialogRef.setAttribute('tabIndex', -1);
	        }
	
	        this.dialogRef.focus();
	      }
	    }
	  }, {
	    key: "restoreLastFocus",
	    value: function restoreLastFocus() {
	      if (this.props.disableRestoreFocus) {
	        return;
	      }
	
	      if (this.lastFocus) {
	        // Not all elements in IE11 have a focus method.
	        // Because IE11 market share is low, we accept the restore focus being broken
	        // and we silent the issue.
	        if (this.lastFocus.focus) {
	          this.lastFocus.focus();
	        }
	
	        this.lastFocus = null;
	      }
	    }
	  }, {
	    key: "isTopModal",
	    value: function isTopModal() {
	      return this.props.manager.isTopModal(this);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          BackdropComponent = _props.BackdropComponent,
	          BackdropProps = _props.BackdropProps,
	          children = _props.children,
	          classes = _props.classes,
	          className = _props.className,
	          container = _props.container,
	          disableAutoFocus = _props.disableAutoFocus,
	          disableBackdropClick = _props.disableBackdropClick,
	          disableEnforceFocus = _props.disableEnforceFocus,
	          disableEscapeKeyDown = _props.disableEscapeKeyDown,
	          disablePortal = _props.disablePortal,
	          disableRestoreFocus = _props.disableRestoreFocus,
	          hideBackdrop = _props.hideBackdrop,
	          keepMounted = _props.keepMounted,
	          manager = _props.manager,
	          onBackdropClick = _props.onBackdropClick,
	          onClose = _props.onClose,
	          onEscapeKeyDown = _props.onEscapeKeyDown,
	          onRendered = _props.onRendered,
	          open = _props.open,
	          other = (0, _objectWithoutProperties2.default)(_props, ["BackdropComponent", "BackdropProps", "children", "classes", "className", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]);
	      var exited = this.state.exited;
	      var hasTransition = getHasTransition(this.props);
	      var childProps = {};
	
	      if (!keepMounted && !open && (!hasTransition || exited)) {
	        return null;
	      } // It's a Transition like component
	
	
	      if (hasTransition) {
	        childProps.onExited = (0, _helpers.createChainedFunction)(this.handleExited, children.props.onExited);
	      }
	
	      if (children.props.role === undefined) {
	        childProps.role = children.props.role || 'document';
	      }
	
	      if (children.props.tabIndex === undefined) {
	        childProps.tabIndex = children.props.tabIndex || '-1';
	      }
	
	      return _react.default.createElement(_Portal.default, {
	        ref: function ref(node) {
	          _this2.mountNode = node ? node.getMountNode() : node;
	        },
	        container: container,
	        disablePortal: disablePortal,
	        onRendered: this.handleRendered
	      }, _react.default.createElement("div", (0, _extends2.default)({
	        ref: function ref(node) {
	          _this2.modalRef = node;
	        },
	        className: (0, _classnames.default)(classes.root, className, (0, _defineProperty2.default)({}, classes.hidden, exited))
	      }, other), hideBackdrop ? null : _react.default.createElement(BackdropComponent, (0, _extends2.default)({
	        open: open,
	        onClick: this.handleBackdropClick
	      }, BackdropProps)), _react.default.createElement(_RootRef.default, {
	        rootRef: function rootRef(node) {
	          _this2.dialogRef = node;
	        }
	      }, _react.default.cloneElement(children, childProps))));
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(nextProps) {
	      if (nextProps.open) {
	        return {
	          exited: false
	        };
	      }
	
	      if (!getHasTransition(nextProps)) {
	        // Otherwise let handleExited take care of marking exited.
	        return {
	          exited: true
	        };
	      }
	
	      return null;
	    }
	  }]);
	  return Modal;
	}(_react.default.Component);
	
	Modal.propTypes =  false ? {
	  /**
	   * A backdrop component. This property enables custom backdrop rendering.
	   */
	  BackdropComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Properties applied to the [`Backdrop`](/api/backdrop) element.
	   */
	  BackdropProps: _propTypes.default.object,
	
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.element,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will have the portal children appended to it.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * If `true`, the modal will not automatically shift focus to itself when it opens, and
	   * replace it to the last focused element when it closes.
	   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
	   *
	   * Generally this should never be set to `true` as it makes the modal less
	   * accessible to assistive technologies, like screen readers.
	   */
	  disableAutoFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, clicking the backdrop will not fire any callback.
	   */
	  disableBackdropClick: _propTypes.default.bool,
	
	  /**
	   * If `true`, the modal will not prevent focus from leaving the modal while open.
	   *
	   * Generally this should never be set to `true` as it makes the modal less
	   * accessible to assistive technologies, like screen readers.
	   */
	  disableEnforceFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, hitting escape will not fire any callback.
	   */
	  disableEscapeKeyDown: _propTypes.default.bool,
	
	  /**
	   * Disable the portal behavior.
	   * The children stay within it's parent DOM hierarchy.
	   */
	  disablePortal: _propTypes.default.bool,
	
	  /**
	   * If `true`, the modal will not restore focus to previously focused element once
	   * modal is hidden.
	   */
	  disableRestoreFocus: _propTypes.default.bool,
	
	  /**
	   * If `true`, the backdrop is not rendered.
	   */
	  hideBackdrop: _propTypes.default.bool,
	
	  /**
	   * Always keep the children in the DOM.
	   * This property can be useful in SEO situation or
	   * when you want to maximize the responsiveness of the Modal.
	   */
	  keepMounted: _propTypes.default.bool,
	
	  /**
	   * A modal manager used to track and manage the state of open
	   * Modals. This enables customizing how modals interact within a container.
	   */
	  manager: _propTypes.default.object,
	
	  /**
	   * Callback fired when the backdrop is clicked.
	   */
	  onBackdropClick: _propTypes.default.func,
	
	  /**
	   * Callback fired when the component requests to be closed.
	   * The `reason` parameter can optionally be used to control the response to `onClose`.
	   *
	   * @param {object} event The event source of the callback
	   * @param {string} reason Can be:`"escapeKeyDown"`, `"backdropClick"`
	   */
	  onClose: _propTypes.default.func,
	
	  /**
	   * Callback fired when the escape key is pressed,
	   * `disableEscapeKeyDown` is false and the modal is in focus.
	   */
	  onEscapeKeyDown: _propTypes.default.func,
	
	  /**
	   * Callback fired once the children has been mounted into the `container`.
	   * It signals that the `open={true}` property took effect.
	   */
	  onRendered: _propTypes.default.func,
	
	  /**
	   * If `true`, the modal is open.
	   */
	  open: _propTypes.default.bool.isRequired
	} : {};
	Modal.defaultProps = {
	  disableAutoFocus: false,
	  disableBackdropClick: false,
	  disableEnforceFocus: false,
	  disableEscapeKeyDown: false,
	  disablePortal: false,
	  disableRestoreFocus: false,
	  hideBackdrop: false,
	  keepMounted: false,
	  // Modals don't open on the server so this won't conflict with concurrent requests.
	  manager: new _ModalManager.default(),
	  BackdropComponent: _Backdrop.default
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  flip: false,
	  name: 'MuiModal'
	})(Modal);
	
	exports.default = _default;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _RootRef.default;
	  }
	});
	
	var _RootRef = _interopRequireDefault(__webpack_require__(576));

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _exactProp = _interopRequireDefault(__webpack_require__(306));
	
	/**
	 * Helper component to allow attaching a ref to a
	 * wrapped element to access the underlying DOM element.
	 *
	 * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.
	 * For example:
	 * ```jsx
	 * import React from 'react';
	 * import RootRef from '@material-ui/core/RootRef';
	 *
	 * class MyComponent extends React.Component {
	 *   constructor(props) {
	 *     super(props);
	 *     this.domRef = React.createRef();
	 *   }
	 *
	 *   componentDidMount() {
	 *     console.log(this.domRef.current); // DOM node
	 *   }
	 *
	 *   render() {
	 *     return (
	 *       <RootRef rootRef={this.domRef}>
	 *         <SomeChildComponent />
	 *       </RootRef>
	 *     );
	 *   }
	 * }
	 * ```
	 */
	var RootRef =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(RootRef, _React$Component);
	
	  function RootRef() {
	    (0, _classCallCheck2.default)(this, RootRef);
	    return (0, _possibleConstructorReturn2.default)(this, (RootRef.__proto__ || Object.getPrototypeOf(RootRef)).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(RootRef, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var rootRef = this.props.rootRef;
	
	      var node = _reactDom.default.findDOMNode(this);
	
	      if (typeof rootRef === 'function') {
	        rootRef(node);
	      } else if (rootRef) {
	        rootRef.current = node;
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      var rootRef = this.props.rootRef;
	
	      if (typeof rootRef === 'function') {
	        rootRef(null);
	      } else if (rootRef) {
	        rootRef.current = null;
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return RootRef;
	}(_react.default.Component);
	
	RootRef.propTypes =  false ? {
	  /**
	   * The wrapped element.
	   */
	  children: _propTypes.default.element.isRequired,
	
	  /**
	   * Provide a way to access the DOM node of the wrapped element.
	   * You can provide a callback ref or a `React.createRef()` ref.
	   */
	  rootRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]).isRequired
	} : {};
	RootRef.propTypes =  false ? (0, _exactProp.default)(RootRef.propTypes) : {};
	var _default = RootRef;
	exports.default = _default;

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Portal.default;
	  }
	});
	
	var _Portal = _interopRequireDefault(__webpack_require__(578));

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactDom = _interopRequireDefault(__webpack_require__(349));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _exactProp = _interopRequireDefault(__webpack_require__(306));
	
	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom.default.findDOMNode(container) || defaultContainer;
	}
	
	function getOwnerDocument(element) {
	  return (0, _ownerDocument.default)(_reactDom.default.findDOMNode(element));
	}
	/**
	 * Portals provide a first-class way to render children into a DOM node
	 * that exists outside the DOM hierarchy of the parent component.
	 */
	
	
	var Portal =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Portal, _React$Component);
	
	  function Portal() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Portal);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this.getMountNode = function () {
	      return _this.mountNode;
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Portal, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.setMountNode(this.props.container); // Only rerender if needed
	
	      if (!this.props.disablePortal) {
	        this.forceUpdate(this.props.onRendered);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      if (prevProps.container !== this.props.container || prevProps.disablePortal !== this.props.disablePortal) {
	        this.setMountNode(this.props.container); // Only rerender if needed
	
	        if (!this.props.disablePortal) {
	          this.forceUpdate(this.props.onRendered);
	        }
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.mountNode = null;
	    }
	  }, {
	    key: "setMountNode",
	    value: function setMountNode(container) {
	      if (this.props.disablePortal) {
	        this.mountNode = _reactDom.default.findDOMNode(this).parentElement;
	        return;
	      }
	
	      this.mountNode = getContainer(container, getOwnerDocument(this).body);
	    }
	    /**
	     * @public
	     */
	
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          disablePortal = _props.disablePortal;
	
	      if (disablePortal) {
	        return children;
	      }
	
	      return this.mountNode ? _reactDom.default.createPortal(children, this.mountNode) : null;
	    }
	  }]);
	  return Portal;
	}(_react.default.Component);
	
	Portal.propTypes =  false ? {
	  /**
	   * The children to render into the `container`.
	   */
	  children: _propTypes.default.node.isRequired,
	
	  /**
	   * A node, component instance, or function that returns either.
	   * The `container` will have the portal children appended to it.
	   * By default, it uses the body of the top-level document object,
	   * so it's simply `document.body` most of the time.
	   */
	  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
	
	  /**
	   * Disable the portal behavior.
	   * The children stay within it's parent DOM hierarchy.
	   */
	  disablePortal: _propTypes.default.bool,
	
	  /**
	   * Callback fired once the children has been mounted into the `container`.
	   */
	  onRendered: _propTypes.default.func
	} : {};
	Portal.defaultProps = {
	  disablePortal: false
	};
	Portal.propTypes =  false ? (0, _exactProp.default)(Portal.propTypes) : {};
	var _default = Portal;
	exports.default = _default;

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _style = _interopRequireDefault(__webpack_require__(580));
	
	var _scrollbarSize = _interopRequireDefault(__webpack_require__(569));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _isOverflowing = _interopRequireDefault(__webpack_require__(589));
	
	var _manageAriaHidden = __webpack_require__(591);
	
	function findIndexOf(data, callback) {
	  var idx = -1;
	  data.some(function (item, index) {
	    if (callback(item)) {
	      idx = index;
	      return true;
	    }
	
	    return false;
	  });
	  return idx;
	}
	
	function getPaddingRight(node) {
	  return parseInt((0, _style.default)(node, 'paddingRight') || 0, 10);
	}
	
	function setContainerStyle(data, container) {
	  var style = {
	    overflow: 'hidden'
	  }; // We are only interested in the actual `style` here because we will override it.
	
	  data.style = {
	    overflow: container.style.overflow,
	    paddingRight: container.style.paddingRight
	  };
	
	  if (data.overflowing) {
	    var scrollbarSize = (0, _scrollbarSize.default)(); // Use computed style, here to get the real padding to add our scrollbar width.
	
	    style.paddingRight = "".concat(getPaddingRight(container) + scrollbarSize, "px"); // .mui-fixed is a global helper.
	
	    var fixedNodes = (0, _ownerDocument.default)(container).querySelectorAll('.mui-fixed');
	
	    for (var i = 0; i < fixedNodes.length; i += 1) {
	      var paddingRight = getPaddingRight(fixedNodes[i]);
	      data.prevPaddings.push(paddingRight);
	      fixedNodes[i].style.paddingRight = "".concat(paddingRight + scrollbarSize, "px");
	    }
	  }
	
	  Object.keys(style).forEach(function (key) {
	    container.style[key] = style[key];
	  });
	}
	
	function removeContainerStyle(data, container) {
	  Object.keys(data.style).forEach(function (key) {
	    container.style[key] = data.style[key];
	  });
	  var fixedNodes = (0, _ownerDocument.default)(container).querySelectorAll('.mui-fixed');
	
	  for (var i = 0; i < fixedNodes.length; i += 1) {
	    fixedNodes[i].style.paddingRight = "".concat(data.prevPaddings[i], "px");
	  }
	}
	/**
	 * @ignore - do not document.
	 *
	 * Proper state managment for containers and the modals in those containers.
	 * Simplified, but inspired by react-overlay's ModalManager class.
	 * Used by the Modal to ensure proper styling of containers.
	 */
	
	
	var ModalManager =
	/*#__PURE__*/
	function () {
	  function ModalManager() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    (0, _classCallCheck2.default)(this, ModalManager);
	    var _options$hideSiblingN = options.hideSiblingNodes,
	        hideSiblingNodes = _options$hideSiblingN === void 0 ? true : _options$hideSiblingN,
	        _options$handleContai = options.handleContainerOverflow,
	        handleContainerOverflow = _options$handleContai === void 0 ? true : _options$handleContai;
	    this.hideSiblingNodes = hideSiblingNodes;
	    this.handleContainerOverflow = handleContainerOverflow; // this.modals[modalIdx] = modal
	
	    this.modals = []; // this.containers[containerIdx] = container
	
	    this.containers = []; // this.data[containerIdx] = {
	    //   modals: [],
	    // }
	
	    this.data = [];
	  }
	
	  (0, _createClass2.default)(ModalManager, [{
	    key: "add",
	    value: function add(modal, container) {
	      var modalIdx = this.modals.indexOf(modal);
	
	      if (modalIdx !== -1) {
	        return modalIdx;
	      }
	
	      modalIdx = this.modals.length;
	      this.modals.push(modal);
	
	      if (this.hideSiblingNodes) {
	        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
	      }
	
	      var containerIdx = this.containers.indexOf(container);
	
	      if (containerIdx !== -1) {
	        this.data[containerIdx].modals.push(modal);
	        return modalIdx;
	      }
	
	      var data = {
	        modals: [modal],
	        overflowing: (0, _isOverflowing.default)(container),
	        prevPaddings: []
	      };
	
	      if (this.handleContainerOverflow) {
	        setContainerStyle(data, container);
	      }
	
	      this.containers.push(container);
	      this.data.push(data);
	      return modalIdx;
	    }
	  }, {
	    key: "remove",
	    value: function remove(modal) {
	      var modalIdx = this.modals.indexOf(modal);
	
	      if (modalIdx === -1) {
	        return modalIdx;
	      }
	
	      var containerIdx = findIndexOf(this.data, function (item) {
	        return item.modals.indexOf(modal) !== -1;
	      });
	      var data = this.data[containerIdx];
	      var container = this.containers[containerIdx];
	      data.modals.splice(data.modals.indexOf(modal), 1);
	      this.modals.splice(modalIdx, 1); // If that was the last modal in a container, clean up the container.
	
	      if (data.modals.length === 0) {
	        if (this.handleContainerOverflow) {
	          removeContainerStyle(data, container);
	        }
	
	        if (this.hideSiblingNodes) {
	          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
	        }
	
	        this.containers.splice(containerIdx, 1);
	        this.data.splice(containerIdx, 1);
	      } else if (this.hideSiblingNodes) {
	        // Otherwise make sure the next top modal is visible to a screan reader.
	        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);
	      }
	
	      return modalIdx;
	    }
	  }, {
	    key: "isTopModal",
	    value: function isTopModal(modal) {
	      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
	    }
	  }]);
	  return ModalManager;
	}();
	
	var _default = ModalManager;
	exports.default = _default;

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = style;
	
	var _camelizeStyle = __webpack_require__(581);
	
	var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);
	
	var _hyphenateStyle = __webpack_require__(583);
	
	var _hyphenateStyle2 = _interopRequireDefault(_hyphenateStyle);
	
	var _getComputedStyle2 = __webpack_require__(585);
	
	var _getComputedStyle3 = _interopRequireDefault(_getComputedStyle2);
	
	var _removeStyle = __webpack_require__(586);
	
	var _removeStyle2 = _interopRequireDefault(_removeStyle);
	
	var _properties = __webpack_require__(587);
	
	var _isTransform = __webpack_require__(588);
	
	var _isTransform2 = _interopRequireDefault(_isTransform);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function style(node, property, value) {
	  var css = '';
	  var transforms = '';
	  var props = property;
	
	  if (typeof property === 'string') {
	    if (value === undefined) {
	      return node.style[(0, _camelizeStyle2.default)(property)] || (0, _getComputedStyle3.default)(node).getPropertyValue((0, _hyphenateStyle2.default)(property));
	    } else {
	      (props = {})[property] = value;
	    }
	  }
	
	  Object.keys(props).forEach(function (key) {
	    var value = props[key];
	    if (!value && value !== 0) {
	      (0, _removeStyle2.default)(node, (0, _hyphenateStyle2.default)(key));
	    } else if ((0, _isTransform2.default)(key)) {
	      transforms += key + '(' + value + ') ';
	    } else {
	      css += (0, _hyphenateStyle2.default)(key) + ': ' + value + ';';
	    }
	  });
	
	  if (transforms) {
	    css += _properties.transform + ': ' + transforms + ';';
	  }
	
	  node.style.cssText += ';' + css;
	}
	module.exports = exports['default'];

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = camelizeStyleName;
	
	var _camelize = __webpack_require__(582);
	
	var _camelize2 = _interopRequireDefault(_camelize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var msPattern = /^-ms-/; /**
	                          * Copyright 2014-2015, Facebook, Inc.
	                          * All rights reserved.
	                          * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
	                          */
	function camelizeStyleName(string) {
	  return (0, _camelize2.default)(string.replace(msPattern, 'ms-'));
	}
	module.exports = exports['default'];

/***/ }),
/* 582 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = camelize;
	var rHyphen = /-(.)/g;
	
	function camelize(string) {
	  return string.replace(rHyphen, function (_, chr) {
	    return chr.toUpperCase();
	  });
	}
	module.exports = exports["default"];

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateStyleName;
	
	var _hyphenate = __webpack_require__(584);
	
	var _hyphenate2 = _interopRequireDefault(_hyphenate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var msPattern = /^ms-/; /**
	                         * Copyright 2013-2014, Facebook, Inc.
	                         * All rights reserved.
	                         * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
	                         */
	
	function hyphenateStyleName(string) {
	  return (0, _hyphenate2.default)(string).replace(msPattern, '-ms-');
	}
	module.exports = exports['default'];

/***/ }),
/* 584 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenate;
	
	var rUpper = /([A-Z])/g;
	
	function hyphenate(string) {
	  return string.replace(rUpper, '-$1').toLowerCase();
	}
	module.exports = exports['default'];

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = _getComputedStyle;
	
	var _camelizeStyle = __webpack_require__(581);
	
	var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var rposition = /^(top|right|bottom|left)$/;
	var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;
	
	function _getComputedStyle(node) {
	  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
	  var doc = node.ownerDocument;
	
	  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {
	    //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
	    getPropertyValue: function getPropertyValue(prop) {
	      var style = node.style;
	
	      prop = (0, _camelizeStyle2.default)(prop);
	
	      if (prop == 'float') prop = 'styleFloat';
	
	      var current = node.currentStyle[prop] || null;
	
	      if (current == null && style && style[prop]) current = style[prop];
	
	      if (rnumnonpx.test(current) && !rposition.test(prop)) {
	        // Remember the original values
	        var left = style.left;
	        var runStyle = node.runtimeStyle;
	        var rsLeft = runStyle && runStyle.left;
	
	        // Put in the new values to get a computed value out
	        if (rsLeft) runStyle.left = node.currentStyle.left;
	
	        style.left = prop === 'fontSize' ? '1em' : current;
	        current = style.pixelLeft + 'px';
	
	        // Revert the changed values
	        style.left = left;
	        if (rsLeft) runStyle.left = rsLeft;
	      }
	
	      return current;
	    }
	  };
	}
	module.exports = exports['default'];

/***/ }),
/* 586 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = removeStyle;
	function removeStyle(node, key) {
	  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
	}
	module.exports = exports['default'];

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;
	
	var _inDOM = __webpack_require__(570);
	
	var _inDOM2 = _interopRequireDefault(_inDOM);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var transform = 'transform';
	var prefix = void 0,
	    transitionEnd = void 0,
	    animationEnd = void 0;
	var transitionProperty = void 0,
	    transitionDuration = void 0,
	    transitionTiming = void 0,
	    transitionDelay = void 0;
	var animationName = void 0,
	    animationDuration = void 0,
	    animationTiming = void 0,
	    animationDelay = void 0;
	
	if (_inDOM2.default) {
	  var _getTransitionPropert = getTransitionProperties();
	
	  prefix = _getTransitionPropert.prefix;
	  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
	  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
	
	
	  exports.transform = transform = prefix + '-' + transform;
	  exports.transitionProperty = transitionProperty = prefix + '-transition-property';
	  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';
	  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';
	  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';
	
	  exports.animationName = animationName = prefix + '-animation-name';
	  exports.animationDuration = animationDuration = prefix + '-animation-duration';
	  exports.animationTiming = animationTiming = prefix + '-animation-delay';
	  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';
	}
	
	exports.transform = transform;
	exports.transitionProperty = transitionProperty;
	exports.transitionTiming = transitionTiming;
	exports.transitionDelay = transitionDelay;
	exports.transitionDuration = transitionDuration;
	exports.transitionEnd = transitionEnd;
	exports.animationName = animationName;
	exports.animationDuration = animationDuration;
	exports.animationTiming = animationTiming;
	exports.animationDelay = animationDelay;
	exports.animationEnd = animationEnd;
	exports.default = {
	  transform: transform,
	  end: transitionEnd,
	  property: transitionProperty,
	  timing: transitionTiming,
	  delay: transitionDelay,
	  duration: transitionDuration
	};
	
	
	function getTransitionProperties() {
	  var style = document.createElement('div').style;
	
	  var vendorMap = {
	    O: function O(e) {
	      return 'o' + e.toLowerCase();
	    },
	    Moz: function Moz(e) {
	      return e.toLowerCase();
	    },
	    Webkit: function Webkit(e) {
	      return 'webkit' + e;
	    },
	    ms: function ms(e) {
	      return 'MS' + e;
	    }
	  };
	
	  var vendors = Object.keys(vendorMap);
	
	  var transitionEnd = void 0,
	      animationEnd = void 0;
	  var prefix = '';
	
	  for (var i = 0; i < vendors.length; i++) {
	    var vendor = vendors[i];
	
	    if (vendor + 'TransitionProperty' in style) {
	      prefix = '-' + vendor.toLowerCase();
	      transitionEnd = vendorMap[vendor]('TransitionEnd');
	      animationEnd = vendorMap[vendor]('AnimationEnd');
	      break;
	    }
	  }
	
	  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
	
	  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
	
	  style = null;
	
	  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };
	}

/***/ }),
/* 588 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isTransform;
	var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
	
	function isTransform(property) {
	  return !!(property && supportedTransforms.test(property));
	}
	module.exports = exports["default"];

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isBody = isBody;
	exports.default = isOverflowing;
	
	var _isWindow = _interopRequireDefault(__webpack_require__(590));
	
	var _ownerDocument = _interopRequireDefault(__webpack_require__(371));
	
	var _ownerWindow = _interopRequireDefault(__webpack_require__(370));
	
	function isBody(node) {
	  return node && node.tagName.toLowerCase() === 'body';
	} // Do we have a scroll bar?
	
	
	function isOverflowing(container) {
	  var doc = (0, _ownerDocument.default)(container);
	  var win = (0, _ownerWindow.default)(doc);
	  /* istanbul ignore next */
	
	  if (!(0, _isWindow.default)(doc) && !isBody(container)) {
	    return container.scrollHeight > container.clientHeight;
	  } // Takes in account potential non zero margin on the body.
	
	
	  var style = win.getComputedStyle(doc.body);
	  var marginLeft = parseInt(style.getPropertyValue('margin-left'), 10);
	  var marginRight = parseInt(style.getPropertyValue('margin-right'), 10);
	  return marginLeft + doc.body.clientWidth + marginRight < win.innerWidth;
	}

/***/ }),
/* 590 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getWindow;
	function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	}
	module.exports = exports["default"];

/***/ }),
/* 591 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ariaHidden = ariaHidden;
	exports.hideSiblings = hideSiblings;
	exports.showSiblings = showSiblings;
	var BLACKLIST = ['template', 'script', 'style'];
	
	function isHidable(node) {
	  return node.nodeType === 1 && BLACKLIST.indexOf(node.tagName.toLowerCase()) === -1;
	}
	
	function siblings(container, mount, callback) {
	  mount = [].concat(mount); // eslint-disable-line no-param-reassign
	
	  [].forEach.call(container.children, function (node) {
	    if (mount.indexOf(node) === -1 && isHidable(node)) {
	      callback(node);
	    }
	  });
	}
	
	function ariaHidden(show, node) {
	  if (!node) {
	    return;
	  }
	
	  if (show) {
	    node.setAttribute('aria-hidden', 'true');
	  } else {
	    node.removeAttribute('aria-hidden');
	  }
	}
	
	function hideSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(true, node);
	  });
	}
	
	function showSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(false, node);
	  });
	}

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Backdrop.default;
	  }
	});
	
	var _Backdrop = _interopRequireDefault(__webpack_require__(593));

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _Fade = _interopRequireDefault(__webpack_require__(594));
	
	var styles = {
	  root: {
	    zIndex: -1,
	    width: '100%',
	    height: '100%',
	    position: 'fixed',
	    top: 0,
	    left: 0,
	    // Remove grey highlight
	    WebkitTapHighlightColor: 'transparent',
	    backgroundColor: 'rgba(0, 0, 0, 0.5)'
	  },
	  invisible: {
	    backgroundColor: 'transparent'
	  }
	};
	exports.styles = styles;
	
	function Backdrop(props) {
	  var classes = props.classes,
	      className = props.className,
	      invisible = props.invisible,
	      open = props.open,
	      transitionDuration = props.transitionDuration,
	      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "invisible", "open", "transitionDuration"]);
	  return _react.default.createElement(_Fade.default, (0, _extends2.default)({
	    appear: true,
	    "in": open,
	    timeout: transitionDuration
	  }, other), _react.default.createElement("div", {
	    className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.invisible, invisible), className),
	    "aria-hidden": "true"
	  }));
	}
	
	Backdrop.propTypes =  false ? {
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * @ignore
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the backdrop is invisible.
	   * It can be used when rendering a popover or a custom select component.
	   */
	  invisible: _propTypes.default.bool,
	
	  /**
	   * If `true`, the backdrop is open.
	   */
	  open: _propTypes.default.bool.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   */
	  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  })])
	} : {};
	Backdrop.defaultProps = {
	  invisible: false
	};
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiBackdrop'
	})(Backdrop);
	
	exports.default = _default;

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Fade.default;
	  }
	});
	
	var _Fade = _interopRequireDefault(__webpack_require__(595));

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(298));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(299));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(300));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(303));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _Transition = _interopRequireDefault(__webpack_require__(381));
	
	var _transitions = __webpack_require__(293);
	
	var _withTheme = _interopRequireDefault(__webpack_require__(315));
	
	var _utils = __webpack_require__(431);
	
	// @inheritedComponent Transition
	var styles = {
	  entering: {
	    opacity: 1
	  },
	  entered: {
	    opacity: 1
	  }
	};
	/**
	 * The Fade transition is used by the [Modal](/utils/modal) component.
	 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
	 */
	
	var Fade =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2.default)(Fade, _React$Component);
	
	  function Fade() {
	    var _ref;
	
	    var _temp, _this;
	
	    (0, _classCallCheck2.default)(this, Fade);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = Fade.__proto__ || Object.getPrototypeOf(Fade)).call.apply(_ref, [this].concat(args))), _this.handleEnter = function (node) {
	      var theme = _this.props.theme;
	      (0, _utils.reflow)(node); // So the animation always start from the start.
	
	      var transitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'enter'
	      });
	      node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
	      node.style.transition = theme.transitions.create('opacity', transitionProps);
	
	      if (_this.props.onEnter) {
	        _this.props.onEnter(node);
	      }
	    }, _this.handleExit = function (node) {
	      var theme = _this.props.theme;
	      var transitionProps = (0, _utils.getTransitionProps)(_this.props, {
	        mode: 'exit'
	      });
	      node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
	      node.style.transition = theme.transitions.create('opacity', transitionProps);
	
	      if (_this.props.onExit) {
	        _this.props.onExit(node);
	      }
	    }, _temp));
	  }
	
	  (0, _createClass2.default)(Fade, [{
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          onEnter = _props.onEnter,
	          onExit = _props.onExit,
	          styleProp = _props.style,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties2.default)(_props, ["children", "onEnter", "onExit", "style", "theme"]);
	      var style = (0, _objectSpread2.default)({}, styleProp, _react.default.isValidElement(children) ? children.props.style : {});
	      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
	        appear: true,
	        onEnter: this.handleEnter,
	        onExit: this.handleExit
	      }, other), function (state, childProps) {
	        return _react.default.cloneElement(children, (0, _objectSpread2.default)({
	          style: (0, _objectSpread2.default)({
	            opacity: 0,
	            willChange: 'opacity'
	          }, styles[state], style)
	        }, childProps));
	      });
	    }
	  }]);
	  return Fade;
	}(_react.default.Component);
	
	Fade.propTypes =  false ? {
	  /**
	   * A single child content element.
	   */
	  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
	
	  /**
	   * If `true`, the component will transition in.
	   */
	  in: _propTypes.default.bool,
	
	  /**
	   * @ignore
	   */
	  onEnter: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  onExit: _propTypes.default.func,
	
	  /**
	   * @ignore
	   */
	  style: _propTypes.default.object,
	
	  /**
	   * @ignore
	   */
	  theme: _propTypes.default.object.isRequired,
	
	  /**
	   * The duration for the transition, in milliseconds.
	   * You may specify a single timeout for all transitions, or individually with an object.
	   */
	  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
	    enter: _propTypes.default.number,
	    exit: _propTypes.default.number
	  })])
	} : {};
	Fade.defaultProps = {
	  timeout: {
	    enter: _transitions.duration.enteringScreen,
	    exit: _transitions.duration.leavingScreen
	  }
	};
	
	var _default = (0, _withTheme.default)()(Fade);
	
	exports.default = _default;

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _pure = _interopRequireDefault(__webpack_require__(386));
	
	var _SvgIcon = _interopRequireDefault(__webpack_require__(391));
	
	var _ref = _react.default.createElement("path", {
	  d: "M7 10l5 5 5-5z"
	});
	
	/**
	 * @ignore - internal component.
	 */
	var ArrowDropDown = function ArrowDropDown(props) {
	  return _react.default.createElement(_SvgIcon.default, props, _ref);
	};
	
	ArrowDropDown = (0, _pure.default)(ArrowDropDown);
	ArrowDropDown.muiName = 'SvgIcon';
	var _default = ArrowDropDown;
	exports.default = _default;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.styles = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(276));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _NativeSelectInput = _interopRequireDefault(__webpack_require__(598));
	
	var _withStyles = _interopRequireDefault(__webpack_require__(308));
	
	var _ArrowDropDown = _interopRequireDefault(__webpack_require__(596));
	
	var _Input = _interopRequireDefault(__webpack_require__(553));
	
	// @inheritedComponent Input
	var styles = function styles(theme) {
	  return {
	    root: {
	      position: 'relative',
	      width: '100%'
	    },
	    select: {
	      '-moz-appearance': 'none',
	      // Reset
	      '-webkit-appearance': 'none',
	      // Reset
	      // When interacting quickly, the text can end up selected.
	      // Native select can't be selected either.
	      userSelect: 'none',
	      paddingRight: 32,
	      width: 'calc(100% - 32px)',
	      minWidth: 16,
	      // So it doesn't collapse.
	      cursor: 'pointer',
	      '&:focus': {
	        // Show that it's not an text input
	        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
	        borderRadius: 0 // Reset Chrome style
	
	      },
	      // Remove Firefox focus border
	      '&:-moz-focusring': {
	        color: 'transparent',
	        textShadow: '0 0 0 #000'
	      },
	      // Remove IE11 arrow
	      '&::-ms-expand': {
	        display: 'none'
	      },
	      '&$disabled': {
	        cursor: 'default'
	      }
	    },
	    selectMenu: {
	      width: 'auto',
	      // Fix Safari textOverflow
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap',
	      overflow: 'hidden',
	      minHeight: '1.1875em' // Reset (19px), match the native input line-height
	
	    },
	    disabled: {},
	    icon: {
	      // We use a position absolute over a flexbox in order to forward the pointer events
	      // to the input.
	      position: 'absolute',
	      right: 0,
	      top: 'calc(50% - 12px)',
	      // Center vertically
	      color: theme.palette.action.active,
	      'pointer-events': 'none' // Don't block pointer events on the select under the icon.
	
	    }
	  };
	};
	/**
	 * An alternative to `<Select native />` with a much smaller dependency graph.
	 */
	
	
	exports.styles = styles;
	
	function NativeSelect(props) {
	  var children = props.children,
	      classes = props.classes,
	      IconComponent = props.IconComponent,
	      input = props.input,
	      inputProps = props.inputProps,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "IconComponent", "input", "inputProps"]);
	  return _react.default.cloneElement(input, (0, _objectSpread2.default)({
	    // Most of the logic is implemented in `NativeSelectInput`.
	    // The `Select` component is a simple API wrapper to expose something better to play with.
	    inputComponent: _NativeSelectInput.default,
	    inputProps: (0, _objectSpread2.default)({
	      children: children,
	      classes: classes,
	      IconComponent: IconComponent,
	      type: undefined
	    }, inputProps, input ? input.props.inputProps : {})
	  }, other));
	}
	
	NativeSelect.propTypes =  false ? {
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<option>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * An `Input` element; does not have to be a material-ui specific `Input`.
	   */
	  input: _propTypes.default.element,
	
	  /**
	   * Attributes applied to the `select` element.
	   */
	  inputProps: _propTypes.default.object,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
	} : {};
	NativeSelect.defaultProps = {
	  IconComponent: _ArrowDropDown.default,
	  input: _react.default.createElement(_Input.default, null)
	};
	NativeSelect.muiName = 'NativeSelect';
	
	var _default = (0, _withStyles.default)(styles, {
	  name: 'MuiNativeSelect'
	})(NativeSelect);
	
	exports.default = _default;

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(273);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(309));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(277));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(278));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(17));
	
	var _classnames = _interopRequireDefault(__webpack_require__(344));
	
	/**
	 * @ignore - internal component.
	 */
	function NativeSelectInput(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      disabled = props.disabled,
	      IconComponent = props.IconComponent,
	      inputRef = props.inputRef,
	      name = props.name,
	      onChange = props.onChange,
	      value = props.value,
	      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "disabled", "IconComponent", "inputRef", "name", "onChange", "value"]);
	  return _react.default.createElement("div", {
	    className: classes.root
	  }, _react.default.createElement("select", (0, _extends2.default)({
	    className: (0, _classnames.default)(classes.select, (0, _defineProperty2.default)({}, classes.disabled, disabled), className),
	    name: name,
	    disabled: disabled,
	    onChange: onChange,
	    value: value,
	    ref: inputRef
	  }, other), children), _react.default.createElement(IconComponent, {
	    className: classes.icon
	  }));
	}
	
	NativeSelectInput.propTypes =  false ? {
	  /**
	   * The option elements to populate the select with.
	   * Can be some `<option>` elements.
	   */
	  children: _propTypes.default.node,
	
	  /**
	   * Override or extend the styles applied to the component.
	   * See [CSS API](#css-api) below for more details.
	   */
	  classes: _propTypes.default.object.isRequired,
	
	  /**
	   * The CSS class name of the select element.
	   */
	  className: _propTypes.default.string,
	
	  /**
	   * If `true`, the select will be disabled.
	   */
	  disabled: _propTypes.default.bool,
	
	  /**
	   * The icon that displays the arrow.
	   */
	  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Use that property to pass a ref callback to the native select element.
	   */
	  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
	
	  /**
	   * Name attribute of the `select` or hidden `input` element.
	   */
	  name: _propTypes.default.string,
	
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value`.
	   */
	  onChange: _propTypes.default.func,
	
	  /**
	   * The input value.
	   */
	  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
	} : {};
	var _default = NativeSelectInput;
	exports.default = _default;

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _TextField = __webpack_require__(551);
	
	var _TextField2 = _interopRequireDefault(_TextField);
	
	var _reactFormValidatorCore = __webpack_require__(544);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */
	
	/* eslint-enable */
	
	
	var TextValidator = function (_ValidatorComponent) {
	    _inherits(TextValidator, _ValidatorComponent);
	
	    function TextValidator() {
	        _classCallCheck(this, TextValidator);
	
	        return _possibleConstructorReturn(this, (TextValidator.__proto__ || Object.getPrototypeOf(TextValidator)).apply(this, arguments));
	    }
	
	    _createClass(TextValidator, [{
	        key: 'render',
	        value: function render() {
	            /* eslint-disable no-unused-vars */
	            var _props = this.props,
	                error = _props.error,
	                errorMessages = _props.errorMessages,
	                validators = _props.validators,
	                requiredError = _props.requiredError,
	                helperText = _props.helperText,
	                validatorListener = _props.validatorListener,
	                withRequiredValidator = _props.withRequiredValidator,
	                rest = _objectWithoutProperties(_props, ['error', 'errorMessages', 'validators', 'requiredError', 'helperText', 'validatorListener', 'withRequiredValidator']);
	
	            var isValid = this.state.isValid;
	
	            return _react2.default.createElement(_TextField2.default, _extends({}, rest, {
	                error: !isValid || error,
	                helperText: !isValid && this.getErrorMessage() || helperText
	            }));
	        }
	    }]);
	
	    return TextValidator;
	}(_reactFormValidatorCore.ValidatorComponent);
	
	exports.default = TextValidator;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.pageQuery = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(245);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _store = __webpack_require__(326);
	
	var _shared = __webpack_require__(362);
	
	var _Seo = __webpack_require__(529);
	
	var _Seo2 = _interopRequireDefault(_Seo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Index = function (_React$Component) {
	  _inherits(Index, _React$Component);
	
	  function Index() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Index);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.featureNavigator = _shared.featureNavigator.bind(_this), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Index.prototype.componentWillMount = function componentWillMount() {
	    if (this.props.navigatorPosition !== "is-featured") {
	      this.props.setNavigatorPosition("is-featured");
	    }
	  };
	
	  Index.prototype.render = function render() {
	    var data = this.props.data;
	
	    var facebook = (((data || {}).site || {}).siteMetadata || {}).facebook;
	
	    return _react2.default.createElement(
	      "div",
	      null,
	      _react2.default.createElement(_Seo2.default, { facebook: facebook })
	    );
	  };
	
	  return Index;
	}(_react2.default.Component);
	
	Index.propTypes = {
	  data: _propTypes2.default.object.isRequired,
	  navigatorPosition: _propTypes2.default.string.isRequired,
	  setNavigatorPosition: _propTypes2.default.func.isRequired,
	  isWideScreen: _propTypes2.default.bool.isRequired
	};
	
	var mapStateToProps = function mapStateToProps(state, ownProps) {
	  return {
	    navigatorPosition: state.navigatorPosition,
	    isWideScreen: state.isWideScreen
	  };
	};
	
	var mapDispatchToProps = {
	  setNavigatorPosition: _store.setNavigatorPosition,
	  setNavigatorShape: _store.setNavigatorShape
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Index);
	
	//eslint-disable-next-line no-undef
	
	var pageQuery = exports.pageQuery = "** extracted graphql fragment **";

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.query = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Main = __webpack_require__(515);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	var _Article = __webpack_require__(519);
	
	var _Article2 = _interopRequireDefault(_Article);
	
	var _PageHeader = __webpack_require__(535);
	
	var _PageHeader2 = _interopRequireDefault(_PageHeader);
	
	var _Search = __webpack_require__(602);
	
	var _Search2 = _interopRequireDefault(_Search);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	__webpack_require__(479);
	
	var SearchPage = function SearchPage(props) {
	  var data = props.data;
	
	
	  return _react2.default.createElement(
	    _Main2.default,
	    null,
	    _react2.default.createElement(
	      _Article2.default,
	      null,
	      _react2.default.createElement(_PageHeader2.default, { title: "Search by", algolia: true }),
	      _react2.default.createElement(_Search2.default, { algolia: data.site.siteMetadata.algolia })
	    )
	  );
	};
	
	SearchPage.propTypes = {
	  data: _propTypes2.default.object.isRequired
	};
	
	exports.default = SearchPage;
	
	//eslint-disable-next-line no-undef
	
	var query = exports.query = "** extracted graphql fragment **";

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _Search = __webpack_require__(603);
	
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Search).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports["default"];

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _dom = __webpack_require__(604);
	
	var _Hit = __webpack_require__(1049);
	
	var _Hit2 = _interopRequireDefault(_Hit);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  var _aSpan, _aSpan2;
	
	  return {
	    search: {
	      marginTop: "-1em",
	      "& .ais-SearchBox": {
	        width: "100%"
	      },
	      "& .ais-SearchBox-form": {
	        position: "relative",
	        borderBottom: "1px solid #aaa",
	        display: "flex",
	        justifyContent: "space-between"
	      },
	      "& .ais-SearchBox-input": {
	        border: "none",
	        fontFamily: theme.base.fonts.styledFamily,
	        padding: ".2em",
	        fontSize: "1.4em",
	        flexGrow: 1
	      },
	      "& .ais-SearchBox-submit, & .ais-SearchBox-reset": {
	        background: "none",
	        border: "none",
	        fill: "#666",
	        flexGrow: 0
	      },
	      "& .ais-Stats": {
	        margin: ".5em 0 2em .3em",
	        fontSize: ".9em",
	        color: "#999",
	        display: "block"
	      },
	      "& .ais-Hits-list": {
	        listStyle: "none",
	        padding: 0
	      },
	      "& .ais-Pagination-list": {
	        display: "flex",
	        listStyle: "none",
	        justifyContent: "center",
	        padding: 0
	      },
	      "& .ais-Pagination-item": {
	        "& a, & span": (_aSpan = {
	          color: "#666",
	          fontSize: "1.2em",
	          display: "block",
	          padding: ".5em .5em 2em"
	        }, _aSpan["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	          fontSize: "1.3em",
	          padding: ".5em .7em 0"
	        }, _aSpan),
	        "& a": {
	          "&:hover": {
	            color: theme.base.colors.accent
	          }
	        },
	        "&.ais-Pagination-item--firstPage, &.ais-Pagination-item--previousPage, &.ais-Pagination-item--nextPage": {
	          "& a, & span": (_aSpan2 = {
	            padding: ".4em .5em .6em"
	          }, _aSpan2["@media (min-width: " + theme.mediaQueryTresholds.L + "px)"] = {
	            padding: ".4em .7em .6em"
	          }, _aSpan2)
	        }
	      },
	      "& a": {
	        fontWeight: 400
	      }
	    }
	  };
	};
	
	var Search = function Search(props) {
	  var classes = props.classes,
	      algolia = props.algolia;
	
	
	  return _react2.default.createElement(
	    "div",
	    { className: classes.search },
	    algolia && algolia.appId && _react2.default.createElement(
	      _dom.InstantSearch,
	      {
	        appId: algolia.appId,
	        apiKey: algolia.searchOnlyApiKey,
	        indexName: algolia.indexName
	      },
	      _react2.default.createElement(_dom.SearchBox, { translations: { placeholder: "Search" } }),
	      _react2.default.createElement(_dom.Stats, null),
	      _react2.default.createElement(_dom.Hits, { hitComponent: _Hit2.default }),
	      _react2.default.createElement(_dom.Pagination, null)
	    )
	  );
	};
	
	Search.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  algolia: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Search);
	module.exports = exports["default"];

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchDom = __webpack_require__(605);
	
	Object.defineProperty(exports, 'InstantSearch', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.InstantSearch;
	  }
	});
	Object.defineProperty(exports, 'Index', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Index;
	  }
	});
	Object.defineProperty(exports, 'Breadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Breadcrumb;
	  }
	});
	Object.defineProperty(exports, 'ClearRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ClearRefinements;
	  }
	});
	Object.defineProperty(exports, 'Configure', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Configure;
	  }
	});
	Object.defineProperty(exports, 'CurrentRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.CurrentRefinements;
	  }
	});
	Object.defineProperty(exports, 'HierarchicalMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.HierarchicalMenu;
	  }
	});
	Object.defineProperty(exports, 'Highlight', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Highlight;
	  }
	});
	Object.defineProperty(exports, 'Hits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Hits;
	  }
	});
	Object.defineProperty(exports, 'HitsPerPage', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.HitsPerPage;
	  }
	});
	Object.defineProperty(exports, 'InfiniteHits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.InfiniteHits;
	  }
	});
	Object.defineProperty(exports, 'Menu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Menu;
	  }
	});
	Object.defineProperty(exports, 'MenuSelect', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.MenuSelect;
	  }
	});
	Object.defineProperty(exports, 'NumericMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.NumericMenu;
	  }
	});
	Object.defineProperty(exports, 'Pagination', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Pagination;
	  }
	});
	Object.defineProperty(exports, 'Panel', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Panel;
	  }
	});
	Object.defineProperty(exports, 'PoweredBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.PoweredBy;
	  }
	});
	Object.defineProperty(exports, 'RangeInput', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RangeInput;
	  }
	});
	Object.defineProperty(exports, 'RangeSlider', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RangeSlider;
	  }
	});
	Object.defineProperty(exports, 'RatingMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RatingMenu;
	  }
	});
	Object.defineProperty(exports, 'RefinementList', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.RefinementList;
	  }
	});
	Object.defineProperty(exports, 'ScrollTo', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ScrollTo;
	  }
	});
	Object.defineProperty(exports, 'SearchBox', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.SearchBox;
	  }
	});
	Object.defineProperty(exports, 'Snippet', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Snippet;
	  }
	});
	Object.defineProperty(exports, 'SortBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.SortBy;
	  }
	});
	Object.defineProperty(exports, 'Stats', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.Stats;
	  }
	});
	Object.defineProperty(exports, 'ToggleRefinement', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchDom.ToggleRefinement;
	  }
	});

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	Object.defineProperty(exports, 'createConnector', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.createConnector;
	  }
	});
	Object.defineProperty(exports, 'HIGHLIGHT_TAGS', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.HIGHLIGHT_TAGS;
	  }
	});
	Object.defineProperty(exports, 'translatable', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.translatable;
	  }
	});
	Object.defineProperty(exports, 'Configure', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.Configure;
	  }
	});
	Object.defineProperty(exports, 'connectAutoComplete', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectAutoComplete;
	  }
	});
	Object.defineProperty(exports, 'connectBreadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectBreadcrumb;
	  }
	});
	Object.defineProperty(exports, 'connectConfigure', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectConfigure;
	  }
	});
	Object.defineProperty(exports, 'connectCurrentRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectCurrentRefinements;
	  }
	});
	Object.defineProperty(exports, 'connectGeoSearch', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectGeoSearch;
	  }
	});
	Object.defineProperty(exports, 'connectHierarchicalMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHierarchicalMenu;
	  }
	});
	Object.defineProperty(exports, 'connectHighlight', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHighlight;
	  }
	});
	Object.defineProperty(exports, 'connectHits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHits;
	  }
	});
	Object.defineProperty(exports, 'connectHitsPerPage', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHitsPerPage;
	  }
	});
	Object.defineProperty(exports, 'connectInfiniteHits', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectInfiniteHits;
	  }
	});
	Object.defineProperty(exports, 'connectMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectMenu;
	  }
	});
	Object.defineProperty(exports, 'connectNumericMenu', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectNumericMenu;
	  }
	});
	Object.defineProperty(exports, 'connectPagination', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPagination;
	  }
	});
	Object.defineProperty(exports, 'connectPoweredBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPoweredBy;
	  }
	});
	Object.defineProperty(exports, 'connectRange', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRange;
	  }
	});
	Object.defineProperty(exports, 'connectRefinementList', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRefinementList;
	  }
	});
	Object.defineProperty(exports, 'connectScrollTo', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectScrollTo;
	  }
	});
	Object.defineProperty(exports, 'connectSearchBox', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSearchBox;
	  }
	});
	Object.defineProperty(exports, 'connectSortBy', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSortBy;
	  }
	});
	Object.defineProperty(exports, 'connectStateResults', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStateResults;
	  }
	});
	Object.defineProperty(exports, 'connectStats', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStats;
	  }
	});
	Object.defineProperty(exports, 'connectToggleRefinement', {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectToggleRefinement;
	  }
	});
	
	var _InstantSearch = __webpack_require__(934);
	
	Object.defineProperty(exports, 'InstantSearch', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_InstantSearch).default;
	  }
	});
	
	var _Index = __webpack_require__(988);
	
	Object.defineProperty(exports, 'Index', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Index).default;
	  }
	});
	
	var _Breadcrumb = __webpack_require__(989);
	
	Object.defineProperty(exports, 'Breadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Breadcrumb).default;
	  }
	});
	
	var _ClearRefinements = __webpack_require__(994);
	
	Object.defineProperty(exports, 'ClearRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ClearRefinements).default;
	  }
	});
	
	var _CurrentRefinements = __webpack_require__(996);
	
	Object.defineProperty(exports, 'CurrentRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CurrentRefinements).default;
	  }
	});
	
	var _HierarchicalMenu = __webpack_require__(998);
	
	Object.defineProperty(exports, 'HierarchicalMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HierarchicalMenu).default;
	  }
	});
	
	var _Highlight = __webpack_require__(1002);
	
	Object.defineProperty(exports, 'Highlight', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Highlight).default;
	  }
	});
	
	var _Hits = __webpack_require__(1005);
	
	Object.defineProperty(exports, 'Hits', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Hits).default;
	  }
	});
	
	var _HitsPerPage = __webpack_require__(1007);
	
	Object.defineProperty(exports, 'HitsPerPage', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HitsPerPage).default;
	  }
	});
	
	var _InfiniteHits = __webpack_require__(1010);
	
	Object.defineProperty(exports, 'InfiniteHits', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_InfiniteHits).default;
	  }
	});
	
	var _Menu = __webpack_require__(1012);
	
	Object.defineProperty(exports, 'Menu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Menu).default;
	  }
	});
	
	var _MenuSelect = __webpack_require__(1014);
	
	Object.defineProperty(exports, 'MenuSelect', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuSelect).default;
	  }
	});
	
	var _NumericMenu = __webpack_require__(1016);
	
	Object.defineProperty(exports, 'NumericMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_NumericMenu).default;
	  }
	});
	
	var _Pagination = __webpack_require__(1018);
	
	Object.defineProperty(exports, 'Pagination', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Pagination).default;
	  }
	});
	
	var _Panel = __webpack_require__(1024);
	
	Object.defineProperty(exports, 'Panel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Panel).default;
	  }
	});
	
	var _PoweredBy = __webpack_require__(1026);
	
	Object.defineProperty(exports, 'PoweredBy', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PoweredBy).default;
	  }
	});
	
	var _RangeInput = __webpack_require__(1028);
	
	Object.defineProperty(exports, 'RangeInput', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RangeInput).default;
	  }
	});
	
	var _RangeSlider = __webpack_require__(1030);
	
	Object.defineProperty(exports, 'RangeSlider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RangeSlider).default;
	  }
	});
	
	var _RatingMenu = __webpack_require__(1031);
	
	Object.defineProperty(exports, 'RatingMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RatingMenu).default;
	  }
	});
	
	var _RefinementList = __webpack_require__(1036);
	
	Object.defineProperty(exports, 'RefinementList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RefinementList).default;
	  }
	});
	
	var _ScrollTo = __webpack_require__(1038);
	
	Object.defineProperty(exports, 'ScrollTo', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ScrollTo).default;
	  }
	});
	
	var _SearchBox = __webpack_require__(1040);
	
	Object.defineProperty(exports, 'SearchBox', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SearchBox).default;
	  }
	});
	
	var _Snippet = __webpack_require__(1041);
	
	Object.defineProperty(exports, 'Snippet', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Snippet).default;
	  }
	});
	
	var _SortBy = __webpack_require__(1043);
	
	Object.defineProperty(exports, 'SortBy', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SortBy).default;
	  }
	});
	
	var _Stats = __webpack_require__(1045);
	
	Object.defineProperty(exports, 'Stats', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Stats).default;
	  }
	});
	
	var _ToggleRefinement = __webpack_require__(1047);
	
	Object.defineProperty(exports, 'ToggleRefinement', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ToggleRefinement).default;
	  }
	});
	
	var _utils = __webpack_require__(992);
	
	Object.defineProperty(exports, 'createClassNames', {
	  enumerable: true,
	  get: function get() {
	    return _utils.createClassNames;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createInstantSearch = __webpack_require__(607);
	
	Object.defineProperty(exports, 'createInstantSearch', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createInstantSearch).default;
	  }
	});
	
	var _createIndex = __webpack_require__(901);
	
	Object.defineProperty(exports, 'createIndex', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createIndex).default;
	  }
	});
	
	var _createConnector = __webpack_require__(903);
	
	Object.defineProperty(exports, 'createConnector', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createConnector).default;
	  }
	});
	
	var _highlight = __webpack_require__(899);
	
	Object.defineProperty(exports, 'HIGHLIGHT_TAGS', {
	  enumerable: true,
	  get: function get() {
	    return _highlight.HIGHLIGHT_TAGS;
	  }
	});
	
	var _version = __webpack_require__(900);
	
	Object.defineProperty(exports, 'version', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_version).default;
	  }
	});
	
	var _translatable = __webpack_require__(906);
	
	Object.defineProperty(exports, 'translatable', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_translatable).default;
	  }
	});
	
	var _Configure = __webpack_require__(907);
	
	Object.defineProperty(exports, 'Configure', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Configure).default;
	  }
	});
	
	var _connectAutoComplete = __webpack_require__(912);
	
	Object.defineProperty(exports, 'connectAutoComplete', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectAutoComplete).default;
	  }
	});
	
	var _connectBreadcrumb = __webpack_require__(913);
	
	Object.defineProperty(exports, 'connectBreadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectBreadcrumb).default;
	  }
	});
	
	var _connectConfigure = __webpack_require__(908);
	
	Object.defineProperty(exports, 'connectConfigure', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectConfigure).default;
	  }
	});
	
	var _connectCurrentRefinements = __webpack_require__(914);
	
	Object.defineProperty(exports, 'connectCurrentRefinements', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectCurrentRefinements).default;
	  }
	});
	
	var _connectGeoSearch = __webpack_require__(915);
	
	Object.defineProperty(exports, 'connectGeoSearch', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectGeoSearch).default;
	  }
	});
	
	var _connectHierarchicalMenu = __webpack_require__(916);
	
	Object.defineProperty(exports, 'connectHierarchicalMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectHierarchicalMenu).default;
	  }
	});
	
	var _connectHighlight = __webpack_require__(917);
	
	Object.defineProperty(exports, 'connectHighlight', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectHighlight).default;
	  }
	});
	
	var _connectHits = __webpack_require__(918);
	
	Object.defineProperty(exports, 'connectHits', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectHits).default;
	  }
	});
	
	var _connectHitsPerPage = __webpack_require__(919);
	
	Object.defineProperty(exports, 'connectHitsPerPage', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectHitsPerPage).default;
	  }
	});
	
	var _connectInfiniteHits = __webpack_require__(920);
	
	Object.defineProperty(exports, 'connectInfiniteHits', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectInfiniteHits).default;
	  }
	});
	
	var _connectMenu = __webpack_require__(921);
	
	Object.defineProperty(exports, 'connectMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectMenu).default;
	  }
	});
	
	var _connectNumericMenu = __webpack_require__(922);
	
	Object.defineProperty(exports, 'connectNumericMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectNumericMenu).default;
	  }
	});
	
	var _connectPagination = __webpack_require__(923);
	
	Object.defineProperty(exports, 'connectPagination', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectPagination).default;
	  }
	});
	
	var _connectPoweredBy = __webpack_require__(924);
	
	Object.defineProperty(exports, 'connectPoweredBy', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectPoweredBy).default;
	  }
	});
	
	var _connectRange = __webpack_require__(925);
	
	Object.defineProperty(exports, 'connectRange', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectRange).default;
	  }
	});
	
	var _connectRefinementList = __webpack_require__(927);
	
	Object.defineProperty(exports, 'connectRefinementList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectRefinementList).default;
	  }
	});
	
	var _connectScrollTo = __webpack_require__(928);
	
	Object.defineProperty(exports, 'connectScrollTo', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectScrollTo).default;
	  }
	});
	
	var _connectSearchBox = __webpack_require__(929);
	
	Object.defineProperty(exports, 'connectSearchBox', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectSearchBox).default;
	  }
	});
	
	var _connectSortBy = __webpack_require__(930);
	
	Object.defineProperty(exports, 'connectSortBy', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectSortBy).default;
	  }
	});
	
	var _connectStateResults = __webpack_require__(931);
	
	Object.defineProperty(exports, 'connectStateResults', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectStateResults).default;
	  }
	});
	
	var _connectStats = __webpack_require__(932);
	
	Object.defineProperty(exports, 'connectStats', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectStats).default;
	  }
	});
	
	var _connectToggleRefinement = __webpack_require__(933);
	
	Object.defineProperty(exports, 'connectToggleRefinement', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connectToggleRefinement).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createInstantSearch;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _InstantSearch = __webpack_require__(608);
	
	var _InstantSearch2 = _interopRequireDefault(_InstantSearch);
	
	var _version = __webpack_require__(900);
	
	var _version2 = _interopRequireDefault(_version);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Creates a specialized root InstantSearch component. It accepts
	 * an algolia client and a specification of the root Element.
	 * @param {function} defaultAlgoliaClient - a function that builds an Algolia client
	 * @param {object} root - the defininition of the root of an InstantSearch sub tree.
	 * @returns {object} an InstantSearch root
	 */
	function createInstantSearch(defaultAlgoliaClient, root) {
	  var _class, _temp;
	
	  return _temp = _class = function (_Component) {
	    _inherits(CreateInstantSearch, _Component);
	
	    function CreateInstantSearch() {
	      var _ref;
	
	      _classCallCheck(this, CreateInstantSearch);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      var _this = _possibleConstructorReturn(this, (_ref = CreateInstantSearch.__proto__ || Object.getPrototypeOf(CreateInstantSearch)).call.apply(_ref, [this].concat(args)));
	
	      if (_this.props.searchClient) {
	        if (_this.props.appId || _this.props.apiKey || _this.props.algoliaClient) {
	          throw new Error('react-instantsearch:: `searchClient` cannot be used with `appId`, `apiKey` or `algoliaClient`.');
	        }
	      }
	
	      if (_this.props.algoliaClient) {
	        // eslint-disable-next-line no-console
	        console.warn('`algoliaClient` option was renamed `searchClient`. Please use this new option before the next major version.');
	      }
	
	      _this.client = _this.props.searchClient || _this.props.algoliaClient || defaultAlgoliaClient(_this.props.appId, _this.props.apiKey, {
	        _useRequestCache: true
	      });
	
	      if (typeof _this.client.addAlgoliaAgent === 'function') {
	        _this.client.addAlgoliaAgent('react-instantsearch ' + _version2.default);
	      }
	      return _this;
	    }
	
	    _createClass(CreateInstantSearch, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var props = this.props;
	
	        if (nextProps.searchClient) {
	          this.client = nextProps.searchClient;
	        } else if (nextProps.algoliaClient) {
	          this.client = nextProps.algoliaClient;
	        } else if (props.appId !== nextProps.appId || props.apiKey !== nextProps.apiKey) {
	          this.client = defaultAlgoliaClient(nextProps.appId, nextProps.apiKey);
	        }
	
	        if (typeof this.client.addAlgoliaAgent === 'function') {
	          this.client.addAlgoliaAgent('react-instantsearch ' + _version2.default);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          _InstantSearch2.default,
	          {
	            createURL: this.props.createURL,
	            indexName: this.props.indexName,
	            searchState: this.props.searchState,
	            onSearchStateChange: this.props.onSearchStateChange,
	            onSearchParameters: this.props.onSearchParameters,
	            root: this.props.root,
	            searchClient: this.client,
	            algoliaClient: this.client,
	            refresh: this.props.refresh,
	            resultsState: this.props.resultsState
	          },
	          this.props.children
	        );
	      }
	    }]);
	
	    return CreateInstantSearch;
	  }(_react.Component), _class.propTypes = {
	    algoliaClient: _propTypes2.default.object,
	    searchClient: _propTypes2.default.object,
	    appId: _propTypes2.default.string,
	    apiKey: _propTypes2.default.string,
	    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
	    indexName: _propTypes2.default.string.isRequired,
	    createURL: _propTypes2.default.func,
	    searchState: _propTypes2.default.object,
	    refresh: _propTypes2.default.bool.isRequired,
	    onSearchStateChange: _propTypes2.default.func,
	    onSearchParameters: _propTypes2.default.func,
	    resultsState: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),
	    root: _propTypes2.default.shape({
	      Root: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,
	      props: _propTypes2.default.object
	    })
	  }, _class.defaultProps = {
	    refresh: false,
	    root: root
	  }, _temp;
	}

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createInstantSearchManager = __webpack_require__(609);
	
	var _createInstantSearchManager2 = _interopRequireDefault(_createInstantSearchManager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function validateNextProps(props, nextProps) {
	  if (!props.searchState && nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being uncontrolled to controlled");
	  } else if (props.searchState && !nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being controlled to uncontrolled");
	  }
	}
	
	/* eslint valid-jsdoc: 0 */
	/**
	 * @description
	 * `<InstantSearch>` is the root component of all React InstantSearch implementations.
	 * It provides all the connected components (aka widgets) a means to interact
	 * with the searchState.
	 * @kind widget
	 * @name <InstantSearch>
	 * @requirements You will need to have an Algolia account to be able to use this widget.
	 * [Create one now](https://www.algolia.com/users/sign_up).
	 * @propType {string} appId - Your Algolia application id.
	 * @propType {string} apiKey - Your Algolia search-only API key.
	 * @propType {string} indexName - Main index in which to search.
	 * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.
	 * @propType {object} [algoliaClient] - Provide a custom Algolia client instead of the internal one (deprecated in favor of `searchClient`).
	 * @propType {object} [searchClient] - Provide a custom search client.
	 * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).
	 * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).
	 * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).
	 * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).
	 * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SearchBox />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	var InstantSearch = function (_Component) {
	  _inherits(InstantSearch, _Component);
	
	  function InstantSearch(props) {
	    _classCallCheck(this, InstantSearch);
	
	    var _this = _possibleConstructorReturn(this, (InstantSearch.__proto__ || Object.getPrototypeOf(InstantSearch)).call(this, props));
	
	    _this.isControlled = Boolean(props.searchState);
	    var initialState = _this.isControlled ? props.searchState : {};
	    _this.isUnmounting = false;
	
	    _this.aisManager = (0, _createInstantSearchManager2.default)({
	      indexName: props.indexName,
	      searchClient: props.searchClient,
	      initialState: initialState,
	      resultsState: props.resultsState,
	      stalledSearchDelay: props.stalledSearchDelay
	    });
	    return _this;
	  }
	
	  _createClass(InstantSearch, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      validateNextProps(this.props, nextProps);
	
	      if (this.props.indexName !== nextProps.indexName) {
	        this.aisManager.updateIndex(nextProps.indexName);
	      }
	
	      if (this.props.refresh !== nextProps.refresh) {
	        if (nextProps.refresh) {
	          this.aisManager.clearCache();
	        }
	      }
	
	      if (this.props.searchClient !== nextProps.searchClient) {
	        this.aisManager.updateClient(nextProps.searchClient);
	      }
	
	      if (this.isControlled) {
	        this.aisManager.onExternalStateUpdate(nextProps.searchState);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.isUnmounting = true;
	      this.aisManager.skipSearch();
	    }
	  }, {
	    key: 'getChildContext',
	    value: function getChildContext() {
	      // If not already cached, cache the bound methods so that we can forward them as part
	      // of the context.
	      if (!this._aisContextCache) {
	        this._aisContextCache = {
	          ais: {
	            onInternalStateUpdate: this.onWidgetsInternalStateUpdate.bind(this),
	            createHrefForState: this.createHrefForState.bind(this),
	            onSearchForFacetValues: this.onSearchForFacetValues.bind(this),
	            onSearchStateChange: this.onSearchStateChange.bind(this),
	            onSearchParameters: this.onSearchParameters.bind(this)
	          }
	        };
	      }
	
	      return {
	        ais: _extends({}, this._aisContextCache.ais, {
	          store: this.aisManager.store,
	          widgetsManager: this.aisManager.widgetsManager,
	          mainTargetedIndex: this.props.indexName
	        })
	      };
	    }
	  }, {
	    key: 'createHrefForState',
	    value: function createHrefForState(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	      return this.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';
	    }
	  }, {
	    key: 'onWidgetsInternalStateUpdate',
	    value: function onWidgetsInternalStateUpdate(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	
	      this.onSearchStateChange(searchState);
	
	      if (!this.isControlled) {
	        this.aisManager.onExternalStateUpdate(searchState);
	      }
	    }
	  }, {
	    key: 'onSearchStateChange',
	    value: function onSearchStateChange(searchState) {
	      if (this.props.onSearchStateChange && !this.isUnmounting) {
	        this.props.onSearchStateChange(searchState);
	      }
	    }
	  }, {
	    key: 'onSearchParameters',
	    value: function onSearchParameters(getSearchParameters, context, props) {
	      if (this.props.onSearchParameters) {
	        var searchState = this.props.searchState ? this.props.searchState : {};
	        this.props.onSearchParameters(getSearchParameters, context, props, searchState);
	      }
	    }
	  }, {
	    key: 'onSearchForFacetValues',
	    value: function onSearchForFacetValues(searchState) {
	      this.aisManager.onSearchForFacetValues(searchState);
	    }
	  }, {
	    key: 'getKnownKeys',
	    value: function getKnownKeys() {
	      return this.aisManager.getWidgetsIds();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	      var _props$root = this.props.root,
	          Root = _props$root.Root,
	          props = _props$root.props;
	
	      if (childrenCount === 0) return null;else return _react2.default.createElement(
	        Root,
	        props,
	        this.props.children
	      );
	    }
	  }]);
	
	  return InstantSearch;
	}(_react.Component);
	
	InstantSearch.defaultProps = {
	  stalledSearchDelay: 200
	};
	
	InstantSearch.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes2.default.string.isRequired,
	
	  searchClient: _propTypes2.default.object.isRequired,
	
	  createURL: _propTypes2.default.func,
	
	  refresh: _propTypes2.default.bool.isRequired,
	
	  searchState: _propTypes2.default.object,
	  onSearchStateChange: _propTypes2.default.func,
	
	  onSearchParameters: _propTypes2.default.func,
	  resultsState: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),
	
	  children: _propTypes2.default.node,
	
	  root: _propTypes2.default.shape({
	    Root: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
	    props: _propTypes2.default.object
	  }).isRequired,
	
	  stalledSearchDelay: _propTypes2.default.number
	};
	
	InstantSearch.childContextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes2.default.object.isRequired
	};
	
	exports.default = InstantSearch;

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _find2 = __webpack_require__(610);
	
	var _find3 = _interopRequireDefault(_find2);
	
	var _isEmpty2 = __webpack_require__(723);
	
	var _isEmpty3 = _interopRequireDefault(_isEmpty2);
	
	var _omit2 = __webpack_require__(724);
	
	var _omit3 = _interopRequireDefault(_omit2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createInstantSearchManager;
	
	var _algoliasearchHelper = __webpack_require__(770);
	
	var _algoliasearchHelper2 = _interopRequireDefault(_algoliasearchHelper);
	
	var _createWidgetsManager = __webpack_require__(896);
	
	var _createWidgetsManager2 = _interopRequireDefault(_createWidgetsManager);
	
	var _createStore = __webpack_require__(898);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _highlight = __webpack_require__(899);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Creates a new instance of the InstantSearchManager which controls the widgets and
	 * trigger the search when the widgets are updated.
	 * @param {string} indexName - the main index name
	 * @param {object} initialState - initial widget state
	 * @param {object} SearchParameters - optional additional parameters to send to the algolia API
	 * @param {number} stalledSearchDelay - time (in ms) after the search is stalled
	 * @return {InstantSearchManager} a new instance of InstantSearchManager
	 */
	function createInstantSearchManager(_ref) {
	  var indexName = _ref.indexName,
	      _ref$initialState = _ref.initialState,
	      initialState = _ref$initialState === undefined ? {} : _ref$initialState,
	      searchClient = _ref.searchClient,
	      resultsState = _ref.resultsState,
	      stalledSearchDelay = _ref.stalledSearchDelay;
	
	  var baseSP = new _algoliasearchHelper.SearchParameters(_extends({
	    index: indexName
	  }, _highlight.HIGHLIGHT_TAGS));
	
	  var stalledSearchTimer = null;
	
	  var helper = (0, _algoliasearchHelper2.default)(searchClient, indexName, baseSP);
	  helper.on('result', handleSearchSuccess);
	  helper.on('error', handleSearchError);
	  helper.on('search', handleNewSearch);
	
	  var derivedHelpers = {};
	  var indexMapping = {}; // keep track of the original index where the parameters applied when sortBy is used.
	
	  var initialSearchParameters = helper.state;
	
	  var widgetsManager = (0, _createWidgetsManager2.default)(onWidgetsUpdate);
	
	  var store = (0, _createStore2.default)({
	    widgets: initialState,
	    metadata: [],
	    results: resultsState || null,
	    error: null,
	    searching: false,
	    isSearchStalled: true,
	    searchingForFacetValues: false
	  });
	
	  var skip = false;
	
	  function skipSearch() {
	    skip = true;
	  }
	
	  function updateClient(client) {
	    helper.setClient(client);
	    search();
	  }
	
	  function clearCache() {
	    helper.clearCache();
	    search();
	  }
	
	  function getMetadata(state) {
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getMetadata);
	    }).map(function (widget) {
	      return widget.getMetadata(state);
	    });
	  }
	
	  function getSearchParameters() {
	    indexMapping = {};
	    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      return !widget.context.multiIndexContext && (widget.props.indexName === indexName || !widget.props.indexName);
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, initialSearchParameters);
	    indexMapping[sharedParameters.index] = indexName;
	
	    var derivatedWidgets = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      return widget.context.multiIndexContext && widget.context.multiIndexContext.targetedIndex !== indexName || widget.props.indexName && widget.props.indexName !== indexName;
	    }).reduce(function (indices, widget) {
	      var targetedIndex = widget.context.multiIndexContext ? widget.context.multiIndexContext.targetedIndex : widget.props.indexName;
	      var index = (0, _find3.default)(indices, function (i) {
	        return i.targetedIndex === targetedIndex;
	      });
	      if (index) {
	        index.widgets.push(widget);
	      } else {
	        indices.push({ targetedIndex: targetedIndex, widgets: [widget] });
	      }
	      return indices;
	    }, []);
	
	    var mainIndexParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      return widget.context.multiIndexContext && widget.context.multiIndexContext.targetedIndex === indexName || widget.props.indexName && widget.props.indexName === indexName;
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, sharedParameters);
	
	    indexMapping[mainIndexParameters.index] = indexName;
	
	    return { sharedParameters: sharedParameters, mainIndexParameters: mainIndexParameters, derivatedWidgets: derivatedWidgets };
	  }
	
	  function search() {
	    if (!skip) {
	      var _getSearchParameters = getSearchParameters(helper.state),
	          sharedParameters = _getSearchParameters.sharedParameters,
	          mainIndexParameters = _getSearchParameters.mainIndexParameters,
	          derivatedWidgets = _getSearchParameters.derivatedWidgets;
	
	      Object.keys(derivedHelpers).forEach(function (key) {
	        return derivedHelpers[key].detach();
	      });
	      derivedHelpers = {};
	
	      helper.setState(sharedParameters);
	
	      derivatedWidgets.forEach(function (derivatedSearchParameters) {
	        var index = derivatedSearchParameters.targetedIndex;
	        var derivedHelper = helper.derive(function () {
	          var parameters = derivatedSearchParameters.widgets.reduce(function (res, widget) {
	            return widget.getSearchParameters(res);
	          }, sharedParameters);
	          indexMapping[parameters.index] = index;
	          return parameters;
	        });
	        derivedHelper.on('result', handleSearchSuccess);
	        derivedHelper.on('error', handleSearchError);
	        derivedHelpers[index] = derivedHelper;
	      });
	
	      helper.setState(mainIndexParameters);
	
	      helper.search();
	    }
	  }
	
	  function handleSearchSuccess(content) {
	    var state = store.getState();
	    var results = state.results ? state.results : {};
	
	    /* if switching from mono index to multi index and vice versa,
	    results needs to reset to {}*/
	    results = !(0, _isEmpty3.default)(derivedHelpers) && results.getFacetByName ? {} : results;
	
	    if (!(0, _isEmpty3.default)(derivedHelpers)) {
	      results[indexMapping[content.index]] = content;
	    } else {
	      results = content;
	    }
	
	    var currentState = store.getState();
	    var nextIsSearchStalled = currentState.isSearchStalled;
	    if (!helper.hasPendingRequests()) {
	      clearTimeout(stalledSearchTimer);
	      stalledSearchTimer = null;
	      nextIsSearchStalled = false;
	    }
	
	    var nextState = (0, _omit3.default)(_extends({}, currentState, {
	      results: results,
	      isSearchStalled: nextIsSearchStalled,
	      searching: false,
	      error: null
	    }), 'resultsFacetValues');
	    store.setState(nextState);
	  }
	
	  function handleSearchError(error) {
	    var currentState = store.getState();
	    var nextIsSearchStalled = currentState.isSearchStalled;
	    if (!helper.hasPendingRequests()) {
	      clearTimeout(stalledSearchTimer);
	      nextIsSearchStalled = false;
	    }
	
	    var nextState = (0, _omit3.default)(_extends({}, currentState, {
	      isSearchStalled: nextIsSearchStalled,
	      error: error,
	      searching: false
	    }), 'resultsFacetValues');
	    store.setState(nextState);
	  }
	
	  function handleNewSearch() {
	    if (!stalledSearchTimer) {
	      stalledSearchTimer = setTimeout(function () {
	        var nextState = (0, _omit3.default)(_extends({}, store.getState(), {
	          isSearchStalled: true
	        }), 'resultsFacetValues');
	        store.setState(nextState);
	      }, stalledSearchDelay);
	    }
	  }
	
	  // Called whenever a widget has been rendered with new props.
	  function onWidgetsUpdate() {
	    var metadata = getMetadata(store.getState().widgets);
	
	    store.setState(_extends({}, store.getState(), {
	      metadata: metadata,
	      searching: true
	    }));
	
	    // Since the `getSearchParameters` method of widgets also depends on props,
	    // the result search parameters might have changed.
	    search();
	  }
	
	  function transitionState(nextSearchState) {
	    var searchState = store.getState().widgets;
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.transitionState);
	    }).reduce(function (res, widget) {
	      return widget.transitionState(searchState, res);
	    }, nextSearchState);
	  }
	
	  function onExternalStateUpdate(nextSearchState) {
	    var metadata = getMetadata(nextSearchState);
	
	    store.setState(_extends({}, store.getState(), {
	      widgets: nextSearchState,
	      metadata: metadata,
	      searching: true
	    }));
	
	    search();
	  }
	
	  function onSearchForFacetValues(_ref2) {
	    var facetName = _ref2.facetName,
	        query = _ref2.query,
	        maxFacetHits = _ref2.maxFacetHits;
	
	    store.setState(_extends({}, store.getState(), {
	      searchingForFacetValues: true
	    }));
	
	    helper.searchForFacetValues(facetName, query, maxFacetHits).then(function (content) {
	      var _extends2;
	
	      store.setState(_extends({}, store.getState(), {
	        resultsFacetValues: _extends({}, store.getState().resultsFacetValues, (_extends2 = {}, _defineProperty(_extends2, facetName, content.facetHits), _defineProperty(_extends2, 'query', query), _extends2)),
	        searchingForFacetValues: false
	      }));
	    }, function (error) {
	      store.setState(_extends({}, store.getState(), {
	        error: error,
	        searchingForFacetValues: false
	      }));
	    }).catch(function (error) {
	      // Since setState is synchronous, any error that occurs in the render of a
	      // component will be swallowed by this promise.
	      // This is a trick to make the error show up correctly in the console.
	      // See http://stackoverflow.com/a/30741722/969302
	      setTimeout(function () {
	        throw error;
	      });
	    });
	  }
	
	  function updateIndex(newIndex) {
	    initialSearchParameters = initialSearchParameters.setIndex(newIndex);
	    search();
	  }
	
	  function getWidgetsIds() {
	    return store.getState().metadata.reduce(function (res, meta) {
	      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;
	    }, []);
	  }
	
	  return {
	    store: store,
	    widgetsManager: widgetsManager,
	    getWidgetsIds: getWidgetsIds,
	    onExternalStateUpdate: onExternalStateUpdate,
	    transitionState: transitionState,
	    onSearchForFacetValues: onSearchForFacetValues,
	    updateClient: updateClient,
	    updateIndex: updateIndex,
	    clearCache: clearCache,
	    skipSearch: skipSearch
	  };
	}

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	var createFind = __webpack_require__(611),
	    findIndex = __webpack_require__(718);
	
	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	var find = createFind(findIndex);
	
	module.exports = find;


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(612),
	    isArrayLike = __webpack_require__(689),
	    keys = __webpack_require__(673);
	
	/**
	 * Creates a `_.find` or `_.findLast` function.
	 *
	 * @private
	 * @param {Function} findIndexFunc The function to find the collection index.
	 * @returns {Function} Returns the new find function.
	 */
	function createFind(findIndexFunc) {
	  return function(collection, predicate, fromIndex) {
	    var iterable = Object(collection);
	    if (!isArrayLike(collection)) {
	      var iteratee = baseIteratee(predicate, 3);
	      collection = keys(collection);
	      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	    }
	    var index = findIndexFunc(collection, predicate, fromIndex);
	    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	  };
	}
	
	module.exports = createFind;


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(613),
	    baseMatchesProperty = __webpack_require__(698),
	    identity = __webpack_require__(714),
	    isArray = __webpack_require__(669),
	    property = __webpack_require__(715);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(614),
	    getMatchData = __webpack_require__(695),
	    matchesStrictComparable = __webpack_require__(697);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(615),
	    baseIsEqual = __webpack_require__(653);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(616),
	    stackClear = __webpack_require__(624),
	    stackDelete = __webpack_require__(625),
	    stackGet = __webpack_require__(626),
	    stackHas = __webpack_require__(627),
	    stackSet = __webpack_require__(628);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(617),
	    listCacheDelete = __webpack_require__(618),
	    listCacheGet = __webpack_require__(621),
	    listCacheHas = __webpack_require__(622),
	    listCacheSet = __webpack_require__(623);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ }),
/* 617 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(619);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(620);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ }),
/* 620 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(619);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(619);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(619);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(616);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}
	
	module.exports = stackClear;


/***/ }),
/* 625 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);
	
	  this.size = data.size;
	  return result;
	}
	
	module.exports = stackDelete;


/***/ }),
/* 626 */
/***/ (function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ }),
/* 627 */
/***/ (function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(616),
	    Map = __webpack_require__(629),
	    MapCache = __webpack_require__(638);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}
	
	module.exports = stackSet;


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630),
	    root = __webpack_require__(260);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(631),
	    getValue = __webpack_require__(637);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(632),
	    isMasked = __webpack_require__(634),
	    isObject = __webpack_require__(633),
	    toSource = __webpack_require__(636);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isObject = __webpack_require__(633);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ }),
/* 633 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(635);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(260);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ }),
/* 636 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ }),
/* 637 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(639),
	    mapCacheDelete = __webpack_require__(647),
	    mapCacheGet = __webpack_require__(650),
	    mapCacheHas = __webpack_require__(651),
	    mapCacheSet = __webpack_require__(652);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(640),
	    ListCache = __webpack_require__(616),
	    Map = __webpack_require__(629);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(641),
	    hashDelete = __webpack_require__(643),
	    hashGet = __webpack_require__(644),
	    hashHas = __webpack_require__(645),
	    hashSet = __webpack_require__(646);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(642);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}
	
	module.exports = hashClear;


/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ }),
/* 643 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = hashDelete;


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(642);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(642);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(642);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(648);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = mapCacheDelete;


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(649);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ }),
/* 649 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(648);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(648);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(648);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;
	
	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(654),
	    isObjectLike = __webpack_require__(266);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(615),
	    equalArrays = __webpack_require__(655),
	    equalByTag = __webpack_require__(661),
	    equalObjects = __webpack_require__(665),
	    getTag = __webpack_require__(690),
	    isArray = __webpack_require__(669),
	    isBuffer = __webpack_require__(678),
	    isTypedArray = __webpack_require__(681);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(656),
	    arraySome = __webpack_require__(659),
	    cacheHas = __webpack_require__(660);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(638),
	    setCacheAdd = __webpack_require__(657),
	    setCacheHas = __webpack_require__(658);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ }),
/* 657 */
/***/ (function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ }),
/* 658 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ }),
/* 659 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ }),
/* 660 */
/***/ (function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259),
	    Uint8Array = __webpack_require__(662),
	    eq = __webpack_require__(620),
	    equalArrays = __webpack_require__(655),
	    mapToArray = __webpack_require__(663),
	    setToArray = __webpack_require__(664);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(260);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ }),
/* 663 */
/***/ (function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ }),
/* 664 */
/***/ (function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(666);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(667),
	    getSymbols = __webpack_require__(670),
	    keys = __webpack_require__(673);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(668),
	    isArray = __webpack_require__(669);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ }),
/* 668 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ }),
/* 669 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(671),
	    stubArray = __webpack_require__(672);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};
	
	module.exports = getSymbols;


/***/ }),
/* 671 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ }),
/* 672 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(674),
	    baseKeys = __webpack_require__(686),
	    isArrayLike = __webpack_require__(689);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(675),
	    isArguments = __webpack_require__(676),
	    isArray = __webpack_require__(669),
	    isBuffer = __webpack_require__(678),
	    isIndex = __webpack_require__(680),
	    isTypedArray = __webpack_require__(681);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ }),
/* 675 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(677),
	    isObjectLike = __webpack_require__(266);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(260),
	    stubFalse = __webpack_require__(679);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(56)(module)))

/***/ }),
/* 679 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 680 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	
	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(682),
	    baseUnary = __webpack_require__(684),
	    nodeUtil = __webpack_require__(685);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isLength = __webpack_require__(683),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ }),
/* 683 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ }),
/* 684 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(261);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(56)(module)))

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(687),
	    nativeKeys = __webpack_require__(688);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ }),
/* 687 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(265);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(632),
	    isLength = __webpack_require__(683);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(691),
	    Map = __webpack_require__(629),
	    Promise = __webpack_require__(692),
	    Set = __webpack_require__(693),
	    WeakMap = __webpack_require__(694),
	    baseGetTag = __webpack_require__(258),
	    toSource = __webpack_require__(636);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630),
	    root = __webpack_require__(260);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630),
	    root = __webpack_require__(260);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630),
	    root = __webpack_require__(260);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630),
	    root = __webpack_require__(260);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(696),
	    keys = __webpack_require__(673);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(633);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ }),
/* 697 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(653),
	    get = __webpack_require__(699),
	    hasIn = __webpack_require__(711),
	    isKey = __webpack_require__(702),
	    isStrictComparable = __webpack_require__(696),
	    matchesStrictComparable = __webpack_require__(697),
	    toKey = __webpack_require__(710);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(700);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(701),
	    toKey = __webpack_require__(710);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(669),
	    isKey = __webpack_require__(702),
	    stringToPath = __webpack_require__(704),
	    toString = __webpack_require__(707);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(669),
	    isSymbol = __webpack_require__(703);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(705);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (string.charCodeAt(0) === 46 /* . */) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, subString) {
	    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(706);
	
	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;
	
	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });
	
	  var cache = result.cache;
	  return result;
	}
	
	module.exports = memoizeCapped;


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(638);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Expose `MapCache`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(708);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259),
	    arrayMap = __webpack_require__(709),
	    isArray = __webpack_require__(669),
	    isSymbol = __webpack_require__(703);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ }),
/* 709 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(703);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(712),
	    hasPath = __webpack_require__(713);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ }),
/* 712 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(701),
	    isArguments = __webpack_require__(676),
	    isArray = __webpack_require__(669),
	    isIndex = __webpack_require__(680),
	    isLength = __webpack_require__(683),
	    toKey = __webpack_require__(710);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ }),
/* 714 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(716),
	    basePropertyDeep = __webpack_require__(717),
	    isKey = __webpack_require__(702),
	    toKey = __webpack_require__(710);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ }),
/* 716 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(700);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(719),
	    baseIteratee = __webpack_require__(612),
	    toInteger = __webpack_require__(720);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}
	
	module.exports = findIndex;


/***/ }),
/* 719 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(721);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(722);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(633),
	    isSymbol = __webpack_require__(703);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(686),
	    getTag = __webpack_require__(690),
	    isArguments = __webpack_require__(676),
	    isArray = __webpack_require__(669),
	    isArrayLike = __webpack_require__(689),
	    isBuffer = __webpack_require__(678),
	    isPrototype = __webpack_require__(687),
	    isTypedArray = __webpack_require__(681);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709),
	    baseClone = __webpack_require__(725),
	    baseUnset = __webpack_require__(755),
	    castPath = __webpack_require__(701),
	    copyObject = __webpack_require__(731),
	    customOmitClone = __webpack_require__(759),
	    flatRest = __webpack_require__(760),
	    getAllKeysIn = __webpack_require__(741);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});
	
	module.exports = omit;


/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(615),
	    arrayEach = __webpack_require__(726),
	    assignValue = __webpack_require__(727),
	    baseAssign = __webpack_require__(730),
	    baseAssignIn = __webpack_require__(732),
	    cloneBuffer = __webpack_require__(736),
	    copyArray = __webpack_require__(737),
	    copySymbols = __webpack_require__(738),
	    copySymbolsIn = __webpack_require__(739),
	    getAllKeys = __webpack_require__(666),
	    getAllKeysIn = __webpack_require__(741),
	    getTag = __webpack_require__(690),
	    initCloneArray = __webpack_require__(742),
	    initCloneByTag = __webpack_require__(743),
	    initCloneObject = __webpack_require__(749),
	    isArray = __webpack_require__(669),
	    isBuffer = __webpack_require__(678),
	    isMap = __webpack_require__(751),
	    isObject = __webpack_require__(633),
	    isSet = __webpack_require__(753),
	    keys = __webpack_require__(673);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Deep clone
	 *  2 - Flatten inherited properties
	 *  4 - Clone symbols
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, bitmask, customizer, key, object, stack) {
	  var result,
	      isDeep = bitmask & CLONE_DEEP_FLAG,
	      isFlat = bitmask & CLONE_FLAT_FLAG,
	      isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      result = (isFlat || isFunc) ? {} : initCloneObject(value);
	      if (!isDeep) {
	        return isFlat
	          ? copySymbolsIn(value, baseAssignIn(result, value))
	          : copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (isSet(value)) {
	    value.forEach(function(subValue) {
	      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
	    });
	
	    return result;
	  }
	
	  if (isMap(value)) {
	    value.forEach(function(subValue, key) {
	      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
	    });
	
	    return result;
	  }
	
	  var keysFunc = isFull
	    ? (isFlat ? getAllKeysIn : getAllKeys)
	    : (isFlat ? keysIn : keys);
	
	  var props = isArr ? undefined : keysFunc(value);
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ }),
/* 726 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(728),
	    eq = __webpack_require__(620);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(729);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(630);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(731),
	    keys = __webpack_require__(673);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(727),
	    baseAssignValue = __webpack_require__(728);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(731),
	    keysIn = __webpack_require__(733);
	
	/**
	 * The base implementation of `_.assignIn` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssignIn(object, source) {
	  return object && copyObject(source, keysIn(source), object);
	}
	
	module.exports = baseAssignIn;


/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(674),
	    baseKeysIn = __webpack_require__(734),
	    isArrayLike = __webpack_require__(689);
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}
	
	module.exports = keysIn;


/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(633),
	    isPrototype = __webpack_require__(687),
	    nativeKeysIn = __webpack_require__(735);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];
	
	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeysIn;


/***/ }),
/* 735 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(260);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(56)(module)))

/***/ }),
/* 737 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(731),
	    getSymbols = __webpack_require__(670);
	
	/**
	 * Copies own symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(731),
	    getSymbolsIn = __webpack_require__(740);
	
	/**
	 * Copies own and inherited symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbolsIn(source, object) {
	  return copyObject(source, getSymbolsIn(source), object);
	}
	
	module.exports = copySymbolsIn;


/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(668),
	    getPrototype = __webpack_require__(264),
	    getSymbols = __webpack_require__(670),
	    stubArray = __webpack_require__(672);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own and inherited enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};
	
	module.exports = getSymbolsIn;


/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(667),
	    getSymbolsIn = __webpack_require__(740),
	    keysIn = __webpack_require__(733);
	
	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}
	
	module.exports = getAllKeysIn;


/***/ }),
/* 742 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = new array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ }),
/* 743 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(744),
	    cloneDataView = __webpack_require__(745),
	    cloneRegExp = __webpack_require__(746),
	    cloneSymbol = __webpack_require__(747),
	    cloneTypedArray = __webpack_require__(748);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return new Ctor;
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return new Ctor;
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(662);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(744);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ }),
/* 746 */
/***/ (function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(744);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(750),
	    getPrototype = __webpack_require__(264),
	    isPrototype = __webpack_require__(687);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(633);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMap = __webpack_require__(752),
	    baseUnary = __webpack_require__(684),
	    nodeUtil = __webpack_require__(685);
	
	/* Node.js helper references. */
	var nodeIsMap = nodeUtil && nodeUtil.isMap;
	
	/**
	 * Checks if `value` is classified as a `Map` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 * @example
	 *
	 * _.isMap(new Map);
	 * // => true
	 *
	 * _.isMap(new WeakMap);
	 * // => false
	 */
	var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
	module.exports = isMap;


/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(690),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]';
	
	/**
	 * The base implementation of `_.isMap` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 */
	function baseIsMap(value) {
	  return isObjectLike(value) && getTag(value) == mapTag;
	}
	
	module.exports = baseIsMap;


/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsSet = __webpack_require__(754),
	    baseUnary = __webpack_require__(684),
	    nodeUtil = __webpack_require__(685);
	
	/* Node.js helper references. */
	var nodeIsSet = nodeUtil && nodeUtil.isSet;
	
	/**
	 * Checks if `value` is classified as a `Set` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 * @example
	 *
	 * _.isSet(new Set);
	 * // => true
	 *
	 * _.isSet(new WeakSet);
	 * // => false
	 */
	var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
	module.exports = isSet;


/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(690),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var setTag = '[object Set]';
	
	/**
	 * The base implementation of `_.isSet` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 */
	function baseIsSet(value) {
	  return isObjectLike(value) && getTag(value) == setTag;
	}
	
	module.exports = baseIsSet;


/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(701),
	    last = __webpack_require__(756),
	    parent = __webpack_require__(757),
	    toKey = __webpack_require__(710);
	
	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}
	
	module.exports = baseUnset;


/***/ }),
/* 756 */
/***/ (function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(700),
	    baseSlice = __webpack_require__(758);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ }),
/* 758 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(257);
	
	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}
	
	module.exports = customOmitClone;


/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(761),
	    overRest = __webpack_require__(764),
	    setToString = __webpack_require__(766);
	
	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}
	
	module.exports = flatRest;


/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(762);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(668),
	    isFlattenable = __webpack_require__(763);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(259),
	    isArguments = __webpack_require__(676),
	    isArray = __webpack_require__(669);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(765);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ }),
/* 765 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(767),
	    shortOut = __webpack_require__(769);
	
	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);
	
	module.exports = setToString;


/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(768),
	    defineProperty = __webpack_require__(729),
	    identity = __webpack_require__(714);
	
	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};
	
	module.exports = baseSetToString;


/***/ }),
/* 768 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ }),
/* 769 */
/***/ (function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;
	
	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;
	
	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}
	
	module.exports = shortOut;


/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AlgoliaSearchHelper = __webpack_require__(771);
	
	var SearchParameters = __webpack_require__(772);
	var SearchResults = __webpack_require__(824);
	
	/**
	 * The algoliasearchHelper module is the function that will let its
	 * contains everything needed to use the Algoliasearch
	 * Helper. It is a also a function that instanciate the helper.
	 * To use the helper, you also need the Algolia JS client v3.
	 * @example
	 * //using the UMD build
	 * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');
	 * var helper = algoliasearchHelper(client, 'bestbuy', {
	 *   facets: ['shipping'],
	 *   disjunctiveFacets: ['category']
	 * });
	 * helper.on('result', function(result) {
	 *   console.log(result);
	 * });
	 * helper.toggleRefine('Movies & TV Shows')
	 *       .toggleRefine('Free shipping')
	 *       .search();
	 * @example
	 * // The helper is an event emitter using the node API
	 * helper.on('result', updateTheResults);
	 * helper.once('result', updateTheResults);
	 * helper.removeListener('result', updateTheResults);
	 * helper.removeAllListeners('result');
	 * @module algoliasearchHelper
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the name of the index to query
	 * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.
	 * @return {AlgoliaSearchHelper}
	 */
	function algoliasearchHelper(client, index, opts) {
	  return new AlgoliaSearchHelper(client, index, opts);
	}
	
	/**
	 * The version currently used
	 * @member module:algoliasearchHelper.version
	 * @type {number}
	 */
	algoliasearchHelper.version = __webpack_require__(895);
	
	/**
	 * Constructor for the Helper.
	 * @member module:algoliasearchHelper.AlgoliaSearchHelper
	 * @type {AlgoliaSearchHelper}
	 */
	algoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;
	
	/**
	 * Constructor for the object containing all the parameters of the search.
	 * @member module:algoliasearchHelper.SearchParameters
	 * @type {SearchParameters}
	 */
	algoliasearchHelper.SearchParameters = SearchParameters;
	
	/**
	 * Constructor for the object containing the results of the search.
	 * @member module:algoliasearchHelper.SearchResults
	 * @type {SearchResults}
	 */
	algoliasearchHelper.SearchResults = SearchResults;
	
	/**
	 * URL tools to generate query string and parse them from/into
	 * SearchParameters
	 * @member module:algoliasearchHelper.url
	 * @type {object} {@link url}
	 *
	 */
	algoliasearchHelper.url = __webpack_require__(880);
	
	module.exports = algoliasearchHelper;


/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var SearchParameters = __webpack_require__(772);
	var SearchResults = __webpack_require__(824);
	var DerivedHelper = __webpack_require__(876);
	var requestBuilder = __webpack_require__(879);
	
	var util = __webpack_require__(877);
	var events = __webpack_require__(878);
	
	var flatten = __webpack_require__(761);
	var forEach = __webpack_require__(788);
	var isEmpty = __webpack_require__(723);
	var map = __webpack_require__(793);
	
	var url = __webpack_require__(880);
	var version = __webpack_require__(895);
	
	/**
	 * Event triggered when a parameter is set or updated
	 * @event AlgoliaSearchHelper#event:change
	 * @property {SearchParameters} state the current parameters with the latest changes applied
	 * @property {SearchResults} lastResults the previous results received from Algolia. `null` before
	 * the first request
	 * @example
	 * helper.on('change', function(state, lastResults) {
	 *   console.log('The parameters have changed');
	 * });
	 */
	
	/**
	 * Event triggered when a main search is sent to Algolia
	 * @event AlgoliaSearchHelper#event:search
	 * @property {SearchParameters} state the parameters used for this search
	 * @property {SearchResults} lastResults the results from the previous search. `null` if
	 * it is the first search.
	 * @example
	 * helper.on('search', function(state, lastResults) {
	 *   console.log('Search sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchForFacetValues` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchForFacetValues
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @property {string} facet the facet searched into
	 * @property {string} query the query used to search in the facets
	 * @example
	 * helper.on('searchForFacetValues', function(state, facet, query) {
	 *   console.log('searchForFacetValues sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchOnce` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchOnce
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @example
	 * helper.on('searchOnce', function(state) {
	 *   console.log('searchOnce sent');
	 * });
	 */
	
	/**
	 * Event triggered when the results are retrieved from Algolia
	 * @event AlgoliaSearchHelper#event:result
	 * @property {SearchResults} results the results received from Algolia
	 * @property {SearchParameters} state the parameters used to query Algolia. Those might
	 * be different from the one in the helper instance (for example if the network is unreliable).
	 * @example
	 * helper.on('result', function(results, state) {
	 *   console.log('Search results received');
	 * });
	 */
	
	/**
	 * Event triggered when Algolia sends back an error. For example, if an unknown parameter is
	 * used, the error can be caught using this event.
	 * @event AlgoliaSearchHelper#event:error
	 * @property {Error} error the error returned by the Algolia.
	 * @example
	 * helper.on('error', function(error) {
	 *   console.log('Houston we got a problem.');
	 * });
	 */
	
	/**
	 * Event triggered when the queue of queries have been depleted (with any result or outdated queries)
	 * @event AlgoliaSearchHelper#event:searchQueueEmpty
	 * @example
	 * helper.on('searchQueueEmpty', function() {
	 *   console.log('No more search pending');
	 *   // This is received before the result event if we're not expecting new results
	 * });
	 *
	 * helper.search();
	 */
	
	/**
	 * Initialize a new AlgoliaSearchHelper
	 * @class
	 * @classdesc The AlgoliaSearchHelper is a class that ease the management of the
	 * search. It provides an event based interface for search callbacks:
	 *  - change: when the internal search state is changed.
	 *    This event contains a {@link SearchParameters} object and the
	 *    {@link SearchResults} of the last result if any.
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 *  - error: when the response is an error. This event contains the error returned by the server.
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the index name to query
	 * @param  {SearchParameters | object} options an object defining the initial
	 * config of the search. It doesn't have to be a {SearchParameters},
	 * just an object containing the properties you need from it.
	 */
	function AlgoliaSearchHelper(client, index, options) {
	  if (client.addAlgoliaAgent && !doesClientAgentContainsHelper(client)) {
	    client.addAlgoliaAgent('JS Helper ' + version);
	  }
	
	  this.setClient(client);
	  var opts = options || {};
	  opts.index = index;
	  this.state = SearchParameters.make(opts);
	  this.lastResults = null;
	  this._queryId = 0;
	  this._lastQueryIdReceived = -1;
	  this.derivedHelpers = [];
	  this._currentNbQueries = 0;
	}
	
	util.inherits(AlgoliaSearchHelper, events.EventEmitter);
	
	/**
	 * Start the search with the parameters set in the state. When the
	 * method is called, it triggers a `search` event. The results will
	 * be available through the `result` event. If an error occurs, an
	 * `error` will be fired instead.
	 * @return {AlgoliaSearchHelper}
	 * @fires search
	 * @fires result
	 * @fires error
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.search = function() {
	  this._search();
	  return this;
	};
	
	/**
	 * Gets the search query parameters that would be sent to the Algolia Client
	 * for the hits
	 * @return {object} Query Parameters
	 */
	AlgoliaSearchHelper.prototype.getQuery = function() {
	  var state = this.state;
	  return requestBuilder._getHitsSearchParams(state);
	};
	
	/**
	 * Start a search using a modified version of the current state. This method does
	 * not trigger the helper lifecycle and does not modify the state kept internally
	 * by the helper. This second aspect means that the next search call will be the
	 * same as a search call before calling searchOnce.
	 * @param {object} options can contain all the parameters that can be set to SearchParameters
	 * plus the index
	 * @param {function} [callback] optional callback executed when the response from the
	 * server is back.
	 * @return {promise|undefined} if a callback is passed the method returns undefined
	 * otherwise it returns a promise containing an object with two keys :
	 *  - content with a SearchResults
	 *  - state with the state used for the query as a SearchParameters
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the callback API
	 * var state = helper.searchOnce({hitsPerPage: 1},
	 *   function(error, content, state) {
	 *     // if an error occurred it will be passed in error, otherwise its value is null
	 *     // content contains the results formatted as a SearchResults
	 *     // state is the instance of SearchParameters used for this search
	 *   });
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the promise API
	 * var state1 = helper.searchOnce({hitsPerPage: 1})
	 *                 .then(promiseHandler);
	 *
	 * function promiseHandler(res) {
	 *   // res contains
	 *   // {
	 *   //   content : SearchResults
	 *   //   state   : SearchParameters (the one used for this specific search)
	 *   // }
	 * }
	 */
	AlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {
	  var tempState = !options ? this.state : this.state.setQueryParameters(options);
	  var queries = requestBuilder._getQueries(tempState.index, tempState);
	  var self = this;
	
	  this._currentNbQueries++;
	
	  this.emit('searchOnce', tempState);
	
	  if (cb) {
	    this.client
	      .search(queries)
	      .then(function(content) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(null, new SearchResults(tempState, content.results), tempState);
	      })
	      .catch(function(err) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(err, null, tempState);
	      });
	
	    return undefined;
	  }
	
	  return this.client.search(queries).then(function(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    return {
	      content: new SearchResults(tempState, content.results),
	      state: tempState,
	      _originalResponse: content
	    };
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Structure of each result when using
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * @typedef FacetSearchHit
	 * @type {object}
	 * @property {string} value the facet value
	 * @property {string} highlighted the facet value highlighted with the query string
	 * @property {number} count number of occurrence of this facet value
	 * @property {boolean} isRefined true if the value is already refined
	 */
	
	/**
	 * Structure of the data resolved by the
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * promise.
	 * @typedef FacetSearchResult
	 * @type {object}
	 * @property {FacetSearchHit} facetHits the results for this search for facet values
	 * @property {number} processingTimeMS time taken by the query inside the engine
	 */
	
	/**
	 * Search for facet values based on an query and the name of a faceted attribute. This
	 * triggers a search and will return a promise. On top of using the query, it also sends
	 * the parameters from the state so that the search is narrowed down to only the possible values.
	 *
	 * See the description of [FacetSearchResult](reference.html#FacetSearchResult)
	 * @param {string} facet the name of the faceted attribute
	 * @param {string} query the string query for the search
	 * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100
	 * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes
	 * it in the generated query.
	 * @return {promise.<FacetSearchResult>} the results of the search
	 */
	AlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {
	  var state = this.state.setQueryParameters(userState || {});
	  var isDisjunctive = state.isDisjunctiveFacet(facet);
	  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);
	
	  this._currentNbQueries++;
	  var self = this;
	
	  this.emit('searchForFacetValues', state, facet, query);
	  var searchForFacetValuesPromise = typeof this.client.searchForFacetValues === 'function'
	    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])
	    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);
	
	  return searchForFacetValuesPromise.then(function addIsRefined(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	
	    content = Array.isArray(content) ? content[0] : content;
	
	    content.facetHits = forEach(content.facetHits, function(f) {
	      f.isRefined = isDisjunctive ?
	        state.isDisjunctiveFacetRefined(facet, f.value) :
	        state.isFacetRefined(facet, f.value);
	    });
	
	    return content;
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Sets the text query used for the search.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} q the user query
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setQuery = function(q) {
	  this._change(this.state.setPage(0).setQuery(q));
	  return this;
	};
	
	/**
	 * Remove all the types of refinements except tags. A string can be provided to remove
	 * only the refinements of a specific attribute. For more advanced use case, you can
	 * provide a function instead. This function should follow the
	 * [clearCallback definition](#SearchParameters.clearCallback).
	 *
	 * This method resets the current page to 0.
	 * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * // Removing all the refinements
	 * helper.clearRefinements().search();
	 * @example
	 * // Removing all the filters on a the category attribute.
	 * helper.clearRefinements('category').search();
	 * @example
	 * // Removing only the exclude filters on the category facet.
	 * helper.clearRefinements(function(value, attribute, type) {
	 *   return type === 'exclude' && attribute === 'category';
	 * }).search();
	 */
	AlgoliaSearchHelper.prototype.clearRefinements = function(name) {
	  this._change(this.state.setPage(0).clearRefinements(name));
	  return this;
	};
	
	/**
	 * Remove all the tag filters.
	 *
	 * This method resets the current page to 0.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.clearTags = function() {
	  this._change(this.state.setPage(0).clearTags());
	  return this;
	};
	
	/**
	 * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {
	  return this.addDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds a refinement on a hierarchical facet. It will throw
	 * an exception if the facet is not defined or if the facet
	 * is already refined.
	 *
	 * This method resets the current page to 0.
	 * @param {string} facet the facet name
	 * @param {string} path the hierarchical facet path
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is refined
	 * @chainable
	 * @fires change
	 */
	AlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addHierarchicalFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} operator the operator of the filter
	 * @param  {number} value the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).addNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Adds a filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addRefine = function() {
	  return this.addFacetRefinement.apply(this, arguments);
	};
	
	
	/**
	 * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).addExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.addExclude = function() {
	  return this.addFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds a tag filter with the `tag` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag the tag to add to the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addTag = function(tag) {
	  this._change(this.state.setPage(0).addTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * Some parameters are optional, triggering different behavior:
	 *  - if the value is not provided, then all the numeric value will be removed for the
	 *  specified attribute/operator couple.
	 *  - if the operator is not provided either, then all the numeric filter on this attribute
	 *  will be removed.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} [operator] the operator of the filter
	 * @param  {number} [value] the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).removeNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {
	  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes the refinement set on a hierarchical facet.
	 * @param {string} facet the facet name
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is not refined
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {
	  this._change(this.state.setPage(0).removeHierarchicalFacetRefinement(facet));
	
	  return this;
	};
	
	/**
	 * Removes a filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeRefine = function() {
	  return this.removeFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).removeExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.removeExclude = function() {
	  return this.removeFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Removes a tag filter with the `tag` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove from the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeTag = function(tag) {
	  this._change(this.state.setPage(0).removeTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).toggleExcludeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.toggleExclude = function() {
	  return this.toggleFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {
	  return this.toggleFacetRefinement(facet, value);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).toggleFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefine = function() {
	  return this.toggleFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a tag filter with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove or add
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleTag = function(tag) {
	  this._change(this.state.setPage(0).toggleTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Increments the page number by one.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setPage(0).nextPage().getPage();
	 * // returns 1
	 */
	AlgoliaSearchHelper.prototype.nextPage = function() {
	  return this.setPage(this.state.page + 1);
	};
	
	/**
	 * Decrements the page number by one.
	 * @fires change
	 * @return {AlgoliaSearchHelper}
	 * @chainable
	 * @example
	 * helper.setPage(1).previousPage().getPage();
	 * // returns 0
	 */
	AlgoliaSearchHelper.prototype.previousPage = function() {
	  return this.setPage(this.state.page - 1);
	};
	
	/**
	 * @private
	 */
	function setCurrentPage(page) {
	  if (page < 0) throw new Error('Page requested below 0.');
	
	  this._change(this.state.setPage(page));
	  return this;
	}
	
	/**
	 * Change the current page
	 * @deprecated
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;
	
	/**
	 * Updates the current page.
	 * @function
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setPage = setCurrentPage;
	
	/**
	 * Updates the name of the index that will be targeted by the query.
	 *
	 * This method resets the current page to 0.
	 * @param {string} name the index name
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setIndex = function(name) {
	  this._change(this.state.setPage(0).setIndex(name));
	  return this;
	};
	
	/**
	 * Update a parameter of the search. This method reset the page
	 *
	 * The complete list of parameters is available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters and facets have their own API)
	 *
	 * This method resets the current page to 0.
	 * @param {string} parameter name of the parameter to update
	 * @param {any} value new value of the parameter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setQueryParameter('hitsPerPage', 20).search();
	 */
	AlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {
	  this._change(this.state.setPage(0).setQueryParameter(parameter, value));
	  return this;
	};
	
	/**
	 * Set the whole state (warning: will erase previous state)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setState = function(newState) {
	  this._change(SearchParameters.make(newState));
	  return this;
	};
	
	/**
	 * Get the current search state stored in the helper. This object is immutable.
	 * @param {string[]} [filters] optional filters to retrieve only a subset of the state
	 * @return {SearchParameters|object} if filters is specified a plain object is
	 * returned containing only the requested fields, otherwise return the unfiltered
	 * state
	 * @example
	 * // Get the complete state as stored in the helper
	 * helper.getState();
	 * @example
	 * // Get a part of the state with all the refinements on attributes and the query
	 * helper.getState(['query', 'attribute:category']);
	 */
	AlgoliaSearchHelper.prototype.getState = function(filters) {
	  if (filters === undefined) return this.state;
	  return this.state.filter(filters);
	};
	
	/**
	 * DEPRECATED Get part of the state as a query string. By default, the output keys will not
	 * be prefixed and will only take the applied refinements and the query.
	 * @deprecated
	 * @param {object} [options] May contain the following parameters :
	 *
	 * **filters** : possible values are all the keys of the [SearchParameters](#searchparameters), `index` for
	 * the index, all the refinements with `attribute:*` or for some specific attributes with
	 * `attribute:theAttribute`
	 *
	 * **prefix** : prefix in front of the keys
	 *
	 * **moreAttributes** : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 * @return {string} the query string
	 */
	AlgoliaSearchHelper.prototype.getStateAsQueryString = function getStateAsQueryString(options) {
	  var filters = options && options.filters || ['query', 'attribute:*'];
	  var partialState = this.getState(filters);
	
	  return url.getQueryStringFromState(partialState, options);
	};
	
	/**
	 * DEPRECATED Read a query string and return an object containing the state. Use
	 * url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} options accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 * @see {@link url#getStateFromQueryString}
	 */
	AlgoliaSearchHelper.getConfigurationFromQueryString = url.getStateFromQueryString;
	
	/**
	 * DEPRECATED Retrieve an object of all the properties that are not understandable as helper
	 * parameters. Use url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string to read
	 * @param {object} options the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	AlgoliaSearchHelper.getForeignConfigurationInQueryString = url.getUnrecognizedParametersInQueryString;
	
	/**
	 * DEPRECATED Overrides part of the state with the properties stored in the provided query
	 * string.
	 * @deprecated
	 * @param {string} queryString the query string containing the informations to url the state
	 * @param {object} options optional parameters :
	 *  - prefix : prefix used for the algolia parameters
	 *  - triggerChange : if set to true the state update will trigger a change event
	 */
	AlgoliaSearchHelper.prototype.setStateFromQueryString = function(queryString, options) {
	  var triggerChange = options && options.triggerChange || false;
	  var configuration = url.getStateFromQueryString(queryString, options);
	  var updatedState = this.state.setQueryParameters(configuration);
	
	  if (triggerChange) this.setState(updatedState);
	  else this.overrideStateWithoutTriggeringChangeEvent(updatedState);
	};
	
	/**
	 * Override the current state without triggering a change event.
	 * Do not use this method unless you know what you are doing. (see the example
	 * for a legit use case)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @example
	 *  helper.on('change', function(state){
	 *    // In this function you might want to find a way to store the state in the url/history
	 *    updateYourURL(state)
	 *  })
	 *  window.onpopstate = function(event){
	 *    // This is naive though as you should check if the state is really defined etc.
	 *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()
	 *  }
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {
	  this.state = new SearchParameters(newState);
	  return this;
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isRefined = function(facet, value) {
	  if (this.state.isConjunctiveFacet(facet)) {
	    return this.state.isFacetRefined(facet, value);
	  } else if (this.state.isDisjunctiveFacet(facet)) {
	    return this.state.isDisjunctiveFacetRefined(facet, value);
	  }
	
	  throw new Error(facet +
	    ' is not properly defined in this helper configuration' +
	    '(use the facets or disjunctiveFacets keys to configure it)');
	};
	
	/**
	 * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.
	 * @param {string} attribute the name of the attribute
	 * @return {boolean} true if the attribute is filtered by at least one value
	 * @example
	 * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters
	 * helper.hasRefinements('price'); // false
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.hasRefinements('price'); // true
	 *
	 * helper.hasRefinements('color'); // false
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.hasRefinements('color'); // true
	 *
	 * helper.hasRefinements('material'); // false
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * helper.hasRefinements('material'); // true
	 *
	 * helper.hasRefinements('categories'); // false
	 * helper.toggleFacetRefinement('categories', 'kitchen > knife');
	 * helper.hasRefinements('categories'); // true
	 *
	 */
	AlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {
	  if (!isEmpty(this.state.getNumericRefinements(attribute))) {
	    return true;
	  } else if (this.state.isConjunctiveFacet(attribute)) {
	    return this.state.isFacetRefined(attribute);
	  } else if (this.state.isDisjunctiveFacet(attribute)) {
	    return this.state.isDisjunctiveFacetRefined(attribute);
	  } else if (this.state.isHierarchicalFacet(attribute)) {
	    return this.state.isHierarchicalFacetRefined(attribute);
	  }
	
	  // there's currently no way to know that the user did call `addNumericRefinement` at some point
	  // thus we cannot distinguish if there once was a numeric refinement that was cleared
	  // so we will return false in every other situations to be consistent
	  // while what we should do here is throw because we did not find the attribute in any type
	  // of refinement
	  return false;
	};
	
	/**
	 * Check if a value is excluded for a specific faceted attribute. If the value
	 * is omitted then the function checks if there is any excluding refinements.
	 *
	 * @param  {string}  facet name of the attribute for used for faceting
	 * @param  {string}  [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	 * @return {boolean} true if refined
	 * @example
	 * helper.isExcludeRefined('color'); // false
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // false
	 *
	 * helper.addFacetExclusion('color', 'red');
	 *
	 * helper.isExcludeRefined('color'); // true
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // true
	 */
	AlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {
	  return this.state.isExcludeRefined(facet, value);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {
	  return this.state.isDisjunctiveFacetRefined(facet, value);
	};
	
	/**
	 * Check if the string is a currently filtering tag.
	 * @param {string} tag tag to check
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype.hasTag = function(tag) {
	  return this.state.isTagRefined(tag);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}
	 */
	AlgoliaSearchHelper.prototype.isTagRefined = function() {
	  return this.hasTagRefinements.apply(this, arguments);
	};
	
	
	/**
	 * Get the name of the currently used index.
	 * @return {string}
	 * @example
	 * helper.setIndex('highestPrice_products').getIndex();
	 * // returns 'highestPrice_products'
	 */
	AlgoliaSearchHelper.prototype.getIndex = function() {
	  return this.state.index;
	};
	
	function getCurrentPage() {
	  return this.state.page;
	}
	
	/**
	 * Get the currently selected page
	 * @deprecated
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;
	/**
	 * Get the currently selected page
	 * @function
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getPage = getCurrentPage;
	
	/**
	 * Get all the tags currently set to filters the results.
	 *
	 * @return {string[]} The list of tags currently set.
	 */
	AlgoliaSearchHelper.prototype.getTags = function() {
	  return this.state.tagRefinements;
	};
	
	/**
	 * Get a parameter of the search by its name. It is possible that a parameter is directly
	 * defined in the index dashboard, but it will be undefined using this method.
	 *
	 * The complete list of parameters is
	 * available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters have their own API)
	 * @param {string} parameterName the parameter name
	 * @return {any} the parameter value
	 * @example
	 * var hitsPerPage = helper.getQueryParameter('hitsPerPage');
	 */
	AlgoliaSearchHelper.prototype.getQueryParameter = function(parameterName) {
	  return this.state.getQueryParameter(parameterName);
	};
	
	/**
	 * Get the list of refinements for a given attribute. This method works with
	 * conjunctive, disjunctive, excluding and numerical filters.
	 *
	 * See also SearchResults#getRefinements
	 *
	 * @param {string} facetName attribute name used for faceting
	 * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and
	 * a type. Numeric also contains an operator.
	 * @example
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.getRefinements('price');
	 * // [
	 * //   {
	 * //     "value": [
	 * //       100
	 * //     ],
	 * //     "operator": ">",
	 * //     "type": "numeric"
	 * //   }
	 * // ]
	 * @example
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.addFacetExclusion('color', 'red');
	 * helper.getRefinements('color');
	 * // [
	 * //   {
	 * //     "value": "blue",
	 * //     "type": "conjunctive"
	 * //   },
	 * //   {
	 * //     "value": "red",
	 * //     "type": "exclude"
	 * //   }
	 * // ]
	 * @example
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * // [
	 * //   {
	 * //     "value": "plastic",
	 * //     "type": "disjunctive"
	 * //   }
	 * // ]
	 */
	AlgoliaSearchHelper.prototype.getRefinements = function(facetName) {
	  var refinements = [];
	
	  if (this.state.isConjunctiveFacet(facetName)) {
	    var conjRefinements = this.state.getConjunctiveRefinements(facetName);
	
	    forEach(conjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'conjunctive'
	      });
	    });
	
	    var excludeRefinements = this.state.getExcludeRefinements(facetName);
	
	    forEach(excludeRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'exclude'
	      });
	    });
	  } else if (this.state.isDisjunctiveFacet(facetName)) {
	    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);
	
	    forEach(disjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'disjunctive'
	      });
	    });
	  }
	
	  var numericRefinements = this.state.getNumericRefinements(facetName);
	
	  forEach(numericRefinements, function(value, operator) {
	    refinements.push({
	      value: value,
	      operator: operator,
	      type: 'numeric'
	    });
	  });
	
	  return refinements;
	};
	
	/**
	 * Return the current refinement for the (attribute, operator)
	 * @param {string} attribute attribute in the record
	 * @param {string} operator operator applied on the refined values
	 * @return {Array.<number|number[]>} refined values
	 */
	AlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {
	  return this.state.getNumericRefinement(attribute, operator);
	};
	
	/**
	 * Get the current breadcrumb for a hierarchical facet, as an array
	 * @param  {string} facetName Hierarchical facet name
	 * @return {array.<string>} the path as an array of string
	 */
	AlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {
	  return this.state.getHierarchicalFacetBreadcrumb(facetName);
	};
	
	// /////////// PRIVATE
	
	/**
	 * Perform the underlying queries
	 * @private
	 * @return {undefined}
	 * @fires search
	 * @fires result
	 * @fires error
	 */
	AlgoliaSearchHelper.prototype._search = function() {
	  var state = this.state;
	  var mainQueries = requestBuilder._getQueries(state.index, state);
	
	  var states = [{
	    state: state,
	    queriesCount: mainQueries.length,
	    helper: this
	  }];
	
	  this.emit('search', state, this.lastResults);
	
	  var derivedQueries = map(this.derivedHelpers, function(derivedHelper) {
	    var derivedState = derivedHelper.getModifiedState(state);
	    var queries = requestBuilder._getQueries(derivedState.index, derivedState);
	    states.push({
	      state: derivedState,
	      queriesCount: queries.length,
	      helper: derivedHelper
	    });
	    derivedHelper.emit('search', derivedState, derivedHelper.lastResults);
	    return queries;
	  });
	
	  var queries = mainQueries.concat(flatten(derivedQueries));
	  var queryId = this._queryId++;
	
	  this._currentNbQueries++;
	
	  try {
	    this.client.search(queries)
	      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))
	      .catch(this._dispatchAlgoliaError.bind(this, queryId));
	  } catch (err) {
	    // If we reach this part, we're in an internal error state
	    this.emit('error', err);
	  }
	};
	
	/**
	 * Transform the responses as sent by the server and transform them into a user
	 * usable object that merge the results of all the batch requests. It will dispatch
	 * over the different helper + derived helpers (when there are some).
	 * @private
	 * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}
	 *  state state used for to generate the request
	 * @param {number} queryId id of the current request
	 * @param {object} content content of the response
	 * @return {undefined}
	 */
	AlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {
	  // FIXME remove the number of outdated queries discarded instead of just one
	
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);
	  this._lastQueryIdReceived = queryId;
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	
	  var results = content.results;
	  forEach(states, function(s) {
	    var state = s.state;
	    var queriesCount = s.queriesCount;
	    var helper = s.helper;
	    var specificResults = results.splice(0, queriesCount);
	
	    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);
	    helper.emit('result', formattedResponse, state);
	  });
	};
	
	AlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, err) {
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= queryId - this._lastQueryIdReceived;
	  this._lastQueryIdReceived = queryId;
	
	  this.emit('error', err);
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	};
	
	AlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {
	  return query ||
	    facetFilters.length !== 0 ||
	    numericFilters.length !== 0 ||
	    tagFilters.length !== 0;
	};
	
	/**
	 * Test if there are some disjunctive refinements on the facet
	 * @private
	 * @param {string} facet the attribute to test
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {
	  return this.state.disjunctiveRefinements[facet] &&
	    this.state.disjunctiveRefinements[facet].length > 0;
	};
	
	AlgoliaSearchHelper.prototype._change = function(newState) {
	  if (newState !== this.state) {
	    this.state = newState;
	    this.emit('change', this.state, this.lastResults);
	  }
	};
	
	/**
	 * Clears the cache of the underlying Algolia client.
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.clearCache = function() {
	  this.client.clearCache && this.client.clearCache();
	  return this;
	};
	
	/**
	 * Updates the internal client instance. If the reference of the clients
	 * are equal then no update is actually done.
	 * @param  {AlgoliaSearch} newClient an AlgoliaSearch client
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.setClient = function(newClient) {
	  if (this.client === newClient) return this;
	
	  if (newClient.addAlgoliaAgent && !doesClientAgentContainsHelper(newClient)) newClient.addAlgoliaAgent('JS Helper ' + version);
	  this.client = newClient;
	
	  return this;
	};
	
	/**
	 * Gets the instance of the currently used client.
	 * @return {AlgoliaSearch}
	 */
	AlgoliaSearchHelper.prototype.getClient = function() {
	  return this.client;
	};
	
	/**
	 * Creates an derived instance of the Helper. A derived helper
	 * is a way to request other indices synchronised with the lifecycle
	 * of the main Helper. This mechanism uses the multiqueries feature
	 * of Algolia to aggregate all the requests in a single network call.
	 *
	 * This method takes a function that is used to create a new SearchParameter
	 * that will be used to create requests to Algolia. Those new requests
	 * are created just before the `search` event. The signature of the function
	 * is `SearchParameters -> SearchParameters`.
	 *
	 * This method returns a new DerivedHelper which is an EventEmitter
	 * that fires the same `search`, `result` and `error` events. Those
	 * events, however, will receive data specific to this DerivedHelper
	 * and the SearchParameters that is returned by the call of the
	 * parameter function.
	 * @param {function} fn SearchParameters -> SearchParameters
	 * @return {DerivedHelper}
	 */
	AlgoliaSearchHelper.prototype.derive = function(fn) {
	  var derivedHelper = new DerivedHelper(this, fn);
	  this.derivedHelpers.push(derivedHelper);
	  return derivedHelper;
	};
	
	/**
	 * This method detaches a derived Helper from the main one. Prefer using the one from the
	 * derived helper itself, to remove the event listeners too.
	 * @private
	 * @return {undefined}
	 * @throws Error
	 */
	AlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {
	  var pos = this.derivedHelpers.indexOf(derivedHelper);
	  if (pos === -1) throw new Error('Derived helper already detached');
	  this.derivedHelpers.splice(pos, 1);
	};
	
	/**
	 * This method returns true if there is currently at least one on-going search.
	 * @return {boolean} true if there is a search pending
	 */
	AlgoliaSearchHelper.prototype.hasPendingRequests = function() {
	  return this._currentNbQueries > 0;
	};
	
	/**
	 * @typedef AlgoliaSearchHelper.NumericRefinement
	 * @type {object}
	 * @property {number[]} value the numbers that are used for filtering this attribute with
	 * the operator specified.
	 * @property {string} operator the faceting data: value, number of entries
	 * @property {string} type will be 'numeric'
	 */
	
	/**
	 * @typedef AlgoliaSearchHelper.FacetRefinement
	 * @type {object}
	 * @property {string} value the string use to filter the attribute
	 * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'
	 */
	
	
	/*
	 * This function tests if the _ua parameter of the client
	 * already contains the JS Helper UA
	 */
	function doesClientAgentContainsHelper(client) {
	  // this relies on JS Client internal variable, this might break if implementation changes
	  var currentAgent = client._ua;
	  return !currentAgent ? false :
	    currentAgent.indexOf('JS Helper') !== -1;
	}
	
	module.exports = AlgoliaSearchHelper;


/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var keys = __webpack_require__(673);
	var intersection = __webpack_require__(773);
	var forOwn = __webpack_require__(783);
	var forEach = __webpack_require__(788);
	var filter = __webpack_require__(791);
	var map = __webpack_require__(793);
	var reduce = __webpack_require__(795);
	var omit = __webpack_require__(724);
	var indexOf = __webpack_require__(798);
	var isNaN = __webpack_require__(799);
	var isEmpty = __webpack_require__(723);
	var isEqual = __webpack_require__(801);
	var isUndefined = __webpack_require__(802);
	var isString = __webpack_require__(803);
	var isFunction = __webpack_require__(632);
	var find = __webpack_require__(610);
	var trim = __webpack_require__(804);
	
	var defaults = __webpack_require__(812);
	var merge = __webpack_require__(814);
	
	var valToNumber = __webpack_require__(821);
	
	var filterState = __webpack_require__(822);
	
	var RefinementList = __webpack_require__(823);
	
	/**
	 * like _.find but using _.isEqual to be able to use it
	 * to find arrays.
	 * @private
	 * @param {any[]} array array to search into
	 * @param {any} searchedValue the value we're looking for
	 * @return {any} the searched value or undefined
	 */
	function findArray(array, searchedValue) {
	  return find(array, function(currentValue) {
	    return isEqual(currentValue, searchedValue);
	  });
	}
	
	/**
	 * The facet list is the structure used to store the list of values used to
	 * filter a single attribute.
	 * @typedef {string[]} SearchParameters.FacetList
	 */
	
	/**
	 * Structure to store numeric filters with the operator as the key. The supported operators
	 * are `=`, `>`, `<`, `>=`, `<=` and `!=`.
	 * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList
	 */
	
	/**
	 * SearchParameters is the data structure that contains all the information
	 * usable for making a search to Algolia API. It doesn't do the search itself,
	 * nor does it contains logic about the parameters.
	 * It is an immutable object, therefore it has been created in a way that each
	 * changes does not change the object itself but returns a copy with the
	 * modification.
	 * This object should probably not be instantiated outside of the helper. It will
	 * be provided when needed. This object is documented for reference as you'll
	 * get it from events generated by the {@link AlgoliaSearchHelper}.
	 * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}
	 * @constructor
	 * @classdesc contains all the parameters of a search
	 * @param {object|SearchParameters} newParameters existing parameters or partial object
	 * for the properties of a new SearchParameters
	 * @see SearchParameters.make
	 * @example <caption>SearchParameters of the first query in
	 *   <a href="http://demos.algolia.com/instant-search-demo/">the instant search demo</a></caption>
	{
	   "query": "",
	   "disjunctiveFacets": [
	      "customerReviewCount",
	      "category",
	      "salePrice_range",
	      "manufacturer"
	  ],
	   "maxValuesPerFacet": 30,
	   "page": 0,
	   "hitsPerPage": 10,
	   "facets": [
	      "type",
	      "shipping"
	  ]
	}
	 */
	function SearchParameters(newParameters) {
	  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};
	
	  /**
	   * Targeted index. This parameter is mandatory.
	   * @member {string}
	   */
	  this.index = params.index || '';
	
	  // Query
	  /**
	   * Query string of the instant search. The empty string is a valid query.
	   * @member {string}
	   * @see https://www.algolia.com/doc/rest#param-query
	   */
	  this.query = params.query || '';
	
	  // Facets
	  /**
	   * This attribute contains the list of all the conjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.facets = params.facets || [];
	  /**
	   * This attribute contains the list of all the disjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.disjunctiveFacets = params.disjunctiveFacets || [];
	  /**
	   * This attribute contains the list of all the hierarchical facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * Hierarchical facets are a sub type of disjunctive facets that
	   * let you filter faceted attributes hierarchically.
	   * @member {string[]|object[]}
	   */
	  this.hierarchicalFacets = params.hierarchicalFacets || [];
	
	  // Refinements
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsRefinements = params.facetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * excluded from the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters excluded for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsExcludes = params.facetsExcludes || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the disjunctive facets. Each facet must be properly
	   * defined in the `disjunctiveFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the numeric attributes.
	   *
	   * The key is the name of the attribute, and the value is the
	   * filters to apply to this attribute.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `numericFilters` attribute.
	   * @member {Object.<string, SearchParameters.OperatorList>}
	   */
	  this.numericRefinements = params.numericRefinements || {};
	  /**
	   * This attribute contains all the tags used to refine the query.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `tagFilters` attribute.
	   * @member {string[]}
	   */
	  this.tagRefinements = params.tagRefinements || [];
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the hierarchical facets. Each facet must be properly
	   * defined in the `hierarchicalFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name. The FacetList values
	   * are structured as a string that contain the values for each level
	   * separated by the configured separator.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};
	
	  /**
	   * Contains the numeric filters in the raw format of the Algolia API. Setting
	   * this parameter is not compatible with the usage of numeric filters methods.
	   * @see https://www.algolia.com/doc/javascript#numericFilters
	   * @member {string}
	   */
	  this.numericFilters = params.numericFilters;
	
	  /**
	   * Contains the tag filters in the raw format of the Algolia API. Setting this
	   * parameter is not compatible with the of the add/remove/toggle methods of the
	   * tag api.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.tagFilters = params.tagFilters;
	
	  /**
	   * Contains the optional tag filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalTagFilters = params.optionalTagFilters;
	
	  /**
	   * Contains the optional facet filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalFacetFilters = params.optionalFacetFilters;
	
	
	  // Misc. parameters
	  /**
	   * Number of hits to be returned by the search API
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-hitsPerPage
	   */
	  this.hitsPerPage = params.hitsPerPage;
	  /**
	   * Number of values for each faceted attribute
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-maxValuesPerFacet
	   */
	  this.maxValuesPerFacet = params.maxValuesPerFacet;
	  /**
	   * The current page number
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-page
	   */
	  this.page = params.page || 0;
	  /**
	   * How the query should be treated by the search engine.
	   * Possible values: prefixAll, prefixLast, prefixNone
	   * @see https://www.algolia.com/doc/rest#param-queryType
	   * @member {string}
	   */
	  this.queryType = params.queryType;
	  /**
	   * How the typo tolerance behave in the search engine.
	   * Possible values: true, false, min, strict
	   * @see https://www.algolia.com/doc/rest#param-typoTolerance
	   * @member {string}
	   */
	  this.typoTolerance = params.typoTolerance;
	
	  /**
	   * Number of characters to wait before doing one character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor1Typo
	   * @member {number}
	   */
	  this.minWordSizefor1Typo = params.minWordSizefor1Typo;
	  /**
	   * Number of characters to wait before doing a second character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor2Typos
	   * @member {number}
	   */
	  this.minWordSizefor2Typos = params.minWordSizefor2Typos;
	  /**
	   * Configure the precision of the proximity ranking criterion
	   * @see https://www.algolia.com/doc/rest#param-minProximity
	   */
	  this.minProximity = params.minProximity;
	  /**
	   * Should the engine allow typos on numerics.
	   * @see https://www.algolia.com/doc/rest#param-allowTyposOnNumericTokens
	   * @member {boolean}
	   */
	  this.allowTyposOnNumericTokens = params.allowTyposOnNumericTokens;
	  /**
	   * Should the plurals be ignored
	   * @see https://www.algolia.com/doc/rest#param-ignorePlurals
	   * @member {boolean}
	   */
	  this.ignorePlurals = params.ignorePlurals;
	  /**
	   * Restrict which attribute is searched.
	   * @see https://www.algolia.com/doc/rest#param-restrictSearchableAttributes
	   * @member {string}
	   */
	  this.restrictSearchableAttributes = params.restrictSearchableAttributes;
	  /**
	   * Enable the advanced syntax.
	   * @see https://www.algolia.com/doc/rest#param-advancedSyntax
	   * @member {boolean}
	   */
	  this.advancedSyntax = params.advancedSyntax;
	  /**
	   * Enable the analytics
	   * @see https://www.algolia.com/doc/rest#param-analytics
	   * @member {boolean}
	   */
	  this.analytics = params.analytics;
	  /**
	   * Tag of the query in the analytics.
	   * @see https://www.algolia.com/doc/rest#param-analyticsTags
	   * @member {string}
	   */
	  this.analyticsTags = params.analyticsTags;
	  /**
	   * Enable the synonyms
	   * @see https://www.algolia.com/doc/rest#param-synonyms
	   * @member {boolean}
	   */
	  this.synonyms = params.synonyms;
	  /**
	   * Should the engine replace the synonyms in the highlighted results.
	   * @see https://www.algolia.com/doc/rest#param-replaceSynonymsInHighlight
	   * @member {boolean}
	   */
	  this.replaceSynonymsInHighlight = params.replaceSynonymsInHighlight;
	  /**
	   * Add some optional words to those defined in the dashboard
	   * @see https://www.algolia.com/doc/rest#param-optionalWords
	   * @member {string}
	   */
	  this.optionalWords = params.optionalWords;
	  /**
	   * Possible values are "lastWords" "firstWords" "allOptional" "none" (default)
	   * @see https://www.algolia.com/doc/rest#param-removeWordsIfNoResults
	   * @member {string}
	   */
	  this.removeWordsIfNoResults = params.removeWordsIfNoResults;
	  /**
	   * List of attributes to retrieve
	   * @see https://www.algolia.com/doc/rest#param-attributesToRetrieve
	   * @member {string}
	   */
	  this.attributesToRetrieve = params.attributesToRetrieve;
	  /**
	   * List of attributes to highlight
	   * @see https://www.algolia.com/doc/rest#param-attributesToHighlight
	   * @member {string}
	   */
	  this.attributesToHighlight = params.attributesToHighlight;
	  /**
	   * Code to be embedded on the left part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPreTag
	   * @member {string}
	   */
	  this.highlightPreTag = params.highlightPreTag;
	  /**
	   * Code to be embedded on the right part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPostTag
	   * @member {string}
	   */
	  this.highlightPostTag = params.highlightPostTag;
	  /**
	   * List of attributes to snippet
	   * @see https://www.algolia.com/doc/rest#param-attributesToSnippet
	   * @member {string}
	   */
	  this.attributesToSnippet = params.attributesToSnippet;
	  /**
	   * Enable the ranking informations in the response, set to 1 to activate
	   * @see https://www.algolia.com/doc/rest#param-getRankingInfo
	   * @member {number}
	   */
	  this.getRankingInfo = params.getRankingInfo;
	  /**
	   * Remove duplicates based on the index setting attributeForDistinct
	   * @see https://www.algolia.com/doc/rest#param-distinct
	   * @member {boolean|number}
	   */
	  this.distinct = params.distinct;
	  /**
	   * Center of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLng
	   * @member {string}
	   */
	  this.aroundLatLng = params.aroundLatLng;
	  /**
	   * Center of the search, retrieve from the user IP.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLngViaIP
	   * @member {boolean}
	   */
	  this.aroundLatLngViaIP = params.aroundLatLngViaIP;
	  /**
	   * Radius of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundRadius
	   * @member {number}
	   */
	  this.aroundRadius = params.aroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundPrecision
	   * @member {number}
	   */
	  this.minimumAroundRadius = params.minimumAroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-minimumAroundRadius
	   * @member {number}
	   */
	  this.aroundPrecision = params.aroundPrecision;
	  /**
	   * Geo search inside a box.
	   * @see https://www.algolia.com/doc/rest#param-insideBoundingBox
	   * @member {string}
	   */
	  this.insideBoundingBox = params.insideBoundingBox;
	  /**
	   * Geo search inside a polygon.
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.insidePolygon = params.insidePolygon;
	  /**
	   * Allows to specify an ellipsis character for the snippet when we truncate the text
	   * (added before and after if truncated).
	   * The default value is an empty string and we recommend to set it to "…"
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.snippetEllipsisText = params.snippetEllipsisText;
	  /**
	   * Allows to specify some attributes name on which exact won't be applied.
	   * Attributes are separated with a comma (for example "name,address" ), you can also use a
	   * JSON string array encoding (for example encodeURIComponent('["name","address"]') ).
	   * By default the list is empty.
	   * @see https://www.algolia.com/doc/rest#param-disableExactOnAttributes
	   * @member {string|string[]}
	   */
	  this.disableExactOnAttributes = params.disableExactOnAttributes;
	  /**
	   * Applies 'exact' on single word queries if the word contains at least 3 characters
	   * and is not a stop word.
	   * Can take two values: true or false.
	   * By default, its set to false.
	   * @see https://www.algolia.com/doc/rest#param-enableExactOnSingleWordQuery
	   * @member {boolean}
	   */
	  this.enableExactOnSingleWordQuery = params.enableExactOnSingleWordQuery;
	
	  // Undocumented parameters, still needed otherwise we fail
	  this.offset = params.offset;
	  this.length = params.length;
	
	  var self = this;
	  forOwn(params, function checkForUnknownParameter(paramValue, paramName) {
	    if (SearchParameters.PARAMETERS.indexOf(paramName) === -1) {
	      self[paramName] = paramValue;
	    }
	  });
	}
	
	/**
	 * List all the properties in SearchParameters and therefore all the known Algolia properties
	 * This doesn't contain any beta/hidden features.
	 * @private
	 */
	SearchParameters.PARAMETERS = keys(new SearchParameters());
	
	/**
	 * @private
	 * @param {object} partialState full or part of a state
	 * @return {object} a new object with the number keys as number
	 */
	SearchParameters._parseNumbers = function(partialState) {
	  // Do not reparse numbers in SearchParameters, they ought to be parsed already
	  if (partialState instanceof SearchParameters) return partialState;
	
	  var numbers = {};
	
	  var numberKeys = [
	    'aroundPrecision',
	    'aroundRadius',
	    'getRankingInfo',
	    'minWordSizefor2Typos',
	    'minWordSizefor1Typo',
	    'page',
	    'maxValuesPerFacet',
	    'distinct',
	    'minimumAroundRadius',
	    'hitsPerPage',
	    'minProximity'
	  ];
	
	  forEach(numberKeys, function(k) {
	    var value = partialState[k];
	    if (isString(value)) {
	      var parsedValue = parseFloat(value);
	      numbers[k] = isNaN(parsedValue) ? value : parsedValue;
	    }
	  });
	
	  // there's two formats of insideBoundingBox, we need to parse
	  // the one which is an array of float geo rectangles
	  if (Array.isArray(partialState.insideBoundingBox)) {
	    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {
	      return geoRect.map(function(value) {
	        return parseFloat(value);
	      });
	    });
	  }
	
	  if (partialState.numericRefinements) {
	    var numericRefinements = {};
	    forEach(partialState.numericRefinements, function(operators, attribute) {
	      numericRefinements[attribute] = {};
	      forEach(operators, function(values, operator) {
	        var parsedValues = map(values, function(v) {
	          if (Array.isArray(v)) {
	            return map(v, function(vPrime) {
	              if (isString(vPrime)) {
	                return parseFloat(vPrime);
	              }
	              return vPrime;
	            });
	          } else if (isString(v)) {
	            return parseFloat(v);
	          }
	          return v;
	        });
	        numericRefinements[attribute][operator] = parsedValues;
	      });
	    });
	    numbers.numericRefinements = numericRefinements;
	  }
	
	  return merge({}, partialState, numbers);
	};
	
	/**
	 * Factory for SearchParameters
	 * @param {object|SearchParameters} newParameters existing parameters or partial
	 * object for the properties of a new SearchParameters
	 * @return {SearchParameters} frozen instance of SearchParameters
	 */
	SearchParameters.make = function makeSearchParameters(newParameters) {
	  var instance = new SearchParameters(newParameters);
	
	  forEach(newParameters.hierarchicalFacets, function(facet) {
	    if (facet.rootPath) {
	      var currentRefinement = instance.getHierarchicalRefinement(facet.name);
	
	      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {
	        instance = instance.clearRefinements(facet.name);
	      }
	
	      // get it again in case it has been cleared
	      currentRefinement = instance.getHierarchicalRefinement(facet.name);
	      if (currentRefinement.length === 0) {
	        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);
	      }
	    }
	  });
	
	  return instance;
	};
	
	/**
	 * Validates the new parameters based on the previous state
	 * @param {SearchParameters} currentState the current state
	 * @param {object|SearchParameters} parameters the new parameters to set
	 * @return {Error|null} Error if the modification is invalid, null otherwise
	 */
	SearchParameters.validate = function(currentState, parameters) {
	  var params = parameters || {};
	
	  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {
	    return new Error(
	      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +
	      'an error, if it is really what you want, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.tagRefinements.length > 0 && params.tagFilters) {
	    return new Error(
	      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +
	      'an error, if it is not, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.numericFilters && params.numericRefinements && !isEmpty(params.numericRefinements)) {
	    return new Error(
	      "[Numeric filters] Can't switch from the advanced to the managed API. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  if (!isEmpty(currentState.numericRefinements) && params.numericFilters) {
	    return new Error(
	      "[Numeric filters] Can't switch from the managed API to the advanced. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  return null;
	};
	
	SearchParameters.prototype = {
	  constructor: SearchParameters,
	
	  /**
	   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)
	   * @method
	   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {SearchParameters}
	   */
	  clearRefinements: function clearRefinements(attribute) {
	    var clear = RefinementList.clearRefinement;
	    var patch = {
	      numericRefinements: this._clearNumericRefinements(attribute),
	      facetsRefinements: clear(this.facetsRefinements, attribute, 'conjunctiveFacet'),
	      facetsExcludes: clear(this.facetsExcludes, attribute, 'exclude'),
	      disjunctiveFacetsRefinements: clear(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),
	      hierarchicalFacetsRefinements: clear(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')
	    };
	    if (patch.numericRefinements === this.numericRefinements &&
	        patch.facetsRefinements === this.facetsRefinements &&
	        patch.facetsExcludes === this.facetsExcludes &&
	        patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&
	        patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {
	      return this;
	    }
	    return this.setQueryParameters(patch);
	  },
	  /**
	   * Remove all the refined tags from the SearchParameters
	   * @method
	   * @return {SearchParameters}
	   */
	  clearTags: function clearTags() {
	    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;
	
	    return this.setQueryParameters({
	      tagFilters: undefined,
	      tagRefinements: []
	    });
	  },
	  /**
	   * Set the index.
	   * @method
	   * @param {string} index the index name
	   * @return {SearchParameters}
	   */
	  setIndex: function setIndex(index) {
	    if (index === this.index) return this;
	
	    return this.setQueryParameters({
	      index: index
	    });
	  },
	  /**
	   * Query setter
	   * @method
	   * @param {string} newQuery value for the new query
	   * @return {SearchParameters}
	   */
	  setQuery: function setQuery(newQuery) {
	    if (newQuery === this.query) return this;
	
	    return this.setQueryParameters({
	      query: newQuery
	    });
	  },
	  /**
	   * Page setter
	   * @method
	   * @param {number} newPage new page number
	   * @return {SearchParameters}
	   */
	  setPage: function setPage(newPage) {
	    if (newPage === this.page) return this;
	
	    return this.setQueryParameters({
	      page: newPage
	    });
	  },
	  /**
	   * Facets setter
	   * The facets are the simple facets, used for conjunctive (and) faceting.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting
	   * @return {SearchParameters}
	   */
	  setFacets: function setFacets(facets) {
	    return this.setQueryParameters({
	      facets: facets
	    });
	  },
	  /**
	   * Disjunctive facets setter
	   * Change the list of disjunctive (or) facets the helper chan handle.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting
	   * @return {SearchParameters}
	   */
	  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {
	    return this.setQueryParameters({
	      disjunctiveFacets: facets
	    });
	  },
	  /**
	   * HitsPerPage setter
	   * Hits per page represents the number of hits retrieved for this query
	   * @method
	   * @param {number} n number of hits retrieved per page of results
	   * @return {SearchParameters}
	   */
	  setHitsPerPage: function setHitsPerPage(n) {
	    if (this.hitsPerPage === n) return this;
	
	    return this.setQueryParameters({
	      hitsPerPage: n
	    });
	  },
	  /**
	   * typoTolerance setter
	   * Set the value of typoTolerance
	   * @method
	   * @param {string} typoTolerance new value of typoTolerance ("true", "false", "min" or "strict")
	   * @return {SearchParameters}
	   */
	  setTypoTolerance: function setTypoTolerance(typoTolerance) {
	    if (this.typoTolerance === typoTolerance) return this;
	
	    return this.setQueryParameters({
	      typoTolerance: typoTolerance
	    });
	  },
	  /**
	   * Add a numeric filter for a given attribute
	   * When value is an array, they are combined with OR
	   * When value is a single value, it will combined with AND
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number | number[]} value value of the filter
	   * @return {SearchParameters}
	   * @example
	   * // for price = 50 or 40
	   * searchparameter.addNumericRefinement('price', '=', [50, 40]);
	   * @example
	   * // for size = 38 and 40
	   * searchparameter.addNumericRefinement('size', '=', 38);
	   * searchparameter.addNumericRefinement('size', '=', 40);
	   */
	  addNumericRefinement: function(attribute, operator, v) {
	    var value = valToNumber(v);
	
	    if (this.isNumericRefined(attribute, operator, value)) return this;
	
	    var mod = merge({}, this.numericRefinements);
	
	    mod[attribute] = merge({}, mod[attribute]);
	
	    if (mod[attribute][operator]) {
	      // Array copy
	      mod[attribute][operator] = mod[attribute][operator].slice();
	      // Add the element. Concat can't be used here because value can be an array.
	      mod[attribute][operator].push(value);
	    } else {
	      mod[attribute][operator] = [value];
	    }
	
	    return this.setQueryParameters({
	      numericRefinements: mod
	    });
	  },
	  /**
	   * Get the list of conjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getConjunctiveRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of disjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getDisjunctiveRefinements: function(facetName) {
	    if (!this.isDisjunctiveFacet(facetName)) {
	      throw new Error(
	        facetName + ' is not defined in the disjunctiveFacets attribute of the helper configuration'
	      );
	    }
	    return this.disjunctiveFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of hierarchical refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getHierarchicalRefinement: function(facetName) {
	    // we send an array but we currently do not support multiple
	    // hierarchicalRefinements for a hierarchicalFacet
	    return this.hierarchicalFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of exclude refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getExcludeRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsExcludes[facetName] || [];
	  },
	
	  /**
	   * Remove all the numeric filter for a given (attribute, operator)
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number} [number] the value to be removed
	   * @return {SearchParameters}
	   */
	  removeNumericRefinement: function(attribute, operator, paramValue) {
	    if (paramValue !== undefined) {
	      var paramValueAsNumber = valToNumber(paramValue);
	      if (!this.isNumericRefined(attribute, operator, paramValueAsNumber)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator && isEqual(value.val, paramValueAsNumber);
	        })
	      });
	    } else if (operator !== undefined) {
	      if (!this.isNumericRefined(attribute, operator)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator;
	        })
	      });
	    }
	
	    if (!this.isNumericRefined(attribute)) return this;
	    return this.setQueryParameters({
	      numericRefinements: this._clearNumericRefinements(function(value, key) {
	        return key === attribute;
	      })
	    });
	  },
	  /**
	   * Get the list of numeric refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {SearchParameters.OperatorList[]} list of refinements
	   */
	  getNumericRefinements: function(facetName) {
	    return this.numericRefinements[facetName] || {};
	  },
	  /**
	   * Return the current refinement for the (attribute, operator)
	   * @param {string} attribute attribute in the record
	   * @param {string} operator operator applied on the refined values
	   * @return {Array.<number|number[]>} refined values
	   */
	  getNumericRefinement: function(attribute, operator) {
	    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];
	  },
	  /**
	   * Clear numeric filters.
	   * @method
	   * @private
	   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {Object.<string, OperatorList>}
	   */
	  _clearNumericRefinements: function _clearNumericRefinements(attribute) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(this.numericRefinements)) return this.numericRefinements;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(this.numericRefinements[attribute])) return this.numericRefinements;
	      return omit(this.numericRefinements, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	      var newNumericRefinements = reduce(this.numericRefinements, function(memo, operators, key) {
	        var operatorList = {};
	
	        forEach(operators, function(values, operator) {
	          var outValues = [];
	          forEach(values, function(value) {
	            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');
	            if (!predicateResult) outValues.push(value);
	          });
	          if (!isEmpty(outValues)) {
	            if (outValues.length !== values.length) hasChanged = true;
	            operatorList[operator] = outValues;
	          }
	          else hasChanged = true;
	        });
	
	        if (!isEmpty(operatorList)) memo[key] = operatorList;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newNumericRefinements;
	      return this.numericRefinements;
	    }
	  },
	  /**
	   * Add a facet to the facets attribute of the helper configuration, if it
	   * isn't already present.
	   * @method
	   * @param {string} facet facet name to add
	   * @return {SearchParameters}
	   */
	  addFacet: function addFacet(facet) {
	    if (this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      facets: this.facets.concat([facet])
	    });
	  },
	  /**
	   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper
	   * configuration, if it isn't already present.
	   * @method
	   * @param {string} facet disjunctive facet name to add
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {
	    if (this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacets: this.disjunctiveFacets.concat([facet])
	    });
	  },
	  /**
	   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper
	   * configuration.
	   * @method
	   * @param {object} hierarchicalFacet hierarchical facet to add
	   * @return {SearchParameters}
	   * @throws will throw an error if a hierarchical facet with the same name was already declared
	   */
	  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {
	    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {
	      throw new Error(
	        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])
	    });
	  },
	  /**
	   * Add a refinement on a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addFacetRefinement: function addFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Exclude a value from a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the exclusion on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addExcludeRefinement: function addExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Adds a refinement on a disjunctive facet.
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.addRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * addTagRefinement adds a tag to the list used to filter the results
	   * @param {string} tag tag to be added
	   * @return {SearchParameters}
	   */
	  addTagRefinement: function addTagRefinement(tag) {
	    if (this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: this.tagRefinements.concat(tag)
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Remove a facet from the facets attribute of the helper configuration, if it
	   * is present.
	   * @method
	   * @param {string} facet facet name to remove
	   * @return {SearchParameters}
	   */
	  removeFacet: function removeFacet(facet) {
	    if (!this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      facets: filter(this.facets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a disjunctive facet from the disjunctiveFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet disjunctive facet name to remove
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      disjunctiveFacets: filter(this.disjunctiveFacets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a hierarchical facet from the hierarchicalFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet hierarchical facet name to remove
	   * @return {SearchParameters}
	   */
	  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {
	    if (!this.isHierarchicalFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      hierarchicalFacets: filter(this.hierarchicalFacets, function(f) {
	        return f.name !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a refinement set on facet. If a value is provided, it will clear the
	   * refinement for the given value, otherwise it will clear all the refinement
	   * values for the faceted attribute.
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} [value] value used to filter
	   * @return {SearchParameters}
	   */
	  removeFacetRefinement: function removeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a negative refinement on a facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Remove a refinement on a disjunctive facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.removeRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a tag from the list of tag refinements
	   * @method
	   * @param {string} tag the tag to remove
	   * @return {SearchParameters}
	   */
	  removeTagRefinement: function removeTagRefinement(tag) {
	    if (!this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: filter(this.tagRefinements, function(t) { return t !== tag; })
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}
	   */
	  toggleRefinement: function toggleRefinement(facet, value) {
	    return this.toggleFacetRefinement(facet, value);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   */
	  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {
	    if (this.isHierarchicalFacet(facet)) {
	      return this.toggleHierarchicalFacetRefinement(facet, value);
	    } else if (this.isConjunctiveFacet(facet)) {
	      return this.toggleConjunctiveFacetRefinement(facet, value);
	    } else if (this.isDisjunctiveFacet(facet)) {
	      return this.toggleDisjunctiveFacetRefinement(facet, value);
	    }
	
	    throw new Error('Cannot refine the undeclared facet ' + facet +
	      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));
	
	    var mod = {};
	
	    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&
	      this.hierarchicalFacetsRefinements[facet].length > 0 && (
	      // remove current refinement:
	      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0] === value ||
	      // remove a parent refinement of the current refinement:
	      //  - refinement was 'beer > IPA > Flying dog'
	      //  - call is toggleRefine('beer > IPA')
	      //  - refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0
	    );
	
	    if (upOneOrMultipleLevel) {
	      if (value.indexOf(separator) === -1) {
	        // go back to root level
	        mod[facet] = [];
	      } else {
	        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];
	      }
	    } else {
	      mod[facet] = [value];
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Adds a refinement on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @param {string} path the hierarchical facet path
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is refined
	   */
	  addHierarchicalFacetRefinement: function(facet, path) {
	    if (this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is already refined.');
	    }
	    var mod = {};
	    mod[facet] = [path];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Removes the refinement set on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is not refined
	   */
	  removeHierarchicalFacetRefinement: function(facet) {
	    if (!this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is not refined.');
	    }
	    var mod = {};
	    mod[facet] = [];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	  /**
	   * Switch the tag refinement
	   * @method
	   * @param {string} tag the tag to remove or add
	   * @return {SearchParameters}
	   */
	  toggleTagRefinement: function toggleTagRefinement(tag) {
	    if (this.isTagRefined(tag)) {
	      return this.removeTagRefinement(tag);
	    }
	
	    return this.addTagRefinement(tag);
	  },
	  /**
	   * Test if the facet name is from one of the disjunctive facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isDisjunctiveFacet: function(facet) {
	    return indexOf(this.disjunctiveFacets, facet) > -1;
	  },
	  /**
	   * Test if the facet name is from one of the hierarchical facets
	   * @method
	   * @param {string} facetName facet name to test
	   * @return {boolean}
	   */
	  isHierarchicalFacet: function(facetName) {
	    return this.getHierarchicalFacetByName(facetName) !== undefined;
	  },
	  /**
	   * Test if the facet name is from one of the conjunctive/normal facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isConjunctiveFacet: function(facet) {
	    return indexOf(this.facets, facet) > -1;
	  },
	  /**
	   * Returns true if the facet is refined, either for a specific value or in
	   * general.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value, optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isFacetRefined: function isFacetRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains exclusions or if a specific value is
	   * excluded.
	   *
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isExcludeRefined: function isExcludeRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsExcludes, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var refinements = this.getHierarchicalRefinement(facet);
	
	    if (!value) {
	      return refinements.length > 0;
	    }
	
	    return indexOf(refinements, value) !== -1;
	  },
	  /**
	   * Test if the triple (attribute, operator, value) is already refined.
	   * If only the attribute and the operator are provided, it tests if the
	   * contains any refinement value.
	   * @method
	   * @param {string} attribute attribute for which the refinement is applied
	   * @param {string} [operator] operator of the refinement
	   * @param {string} [value] value of the refinement
	   * @return {boolean} true if it is refined
	   */
	  isNumericRefined: function isNumericRefined(attribute, operator, value) {
	    if (isUndefined(value) && isUndefined(operator)) {
	      return !!this.numericRefinements[attribute];
	    }
	
	    var isOperatorDefined = this.numericRefinements[attribute] &&
	      !isUndefined(this.numericRefinements[attribute][operator]);
	
	    if (isUndefined(value) || !isOperatorDefined) {
	      return isOperatorDefined;
	    }
	
	    var parsedValue = valToNumber(value);
	    var isAttributeValueDefined = !isUndefined(
	      findArray(this.numericRefinements[attribute][operator], parsedValue)
	    );
	
	    return isOperatorDefined && isAttributeValueDefined;
	  },
	  /**
	   * Returns true if the tag refined, false otherwise
	   * @method
	   * @param {string} tag the tag to check
	   * @return {boolean}
	   */
	  isTagRefined: function isTagRefined(tag) {
	    return indexOf(this.tagRefinements, tag) !== -1;
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {
	    // attributes used for numeric filter can also be disjunctive
	    var disjunctiveNumericRefinedFacets = intersection(
	      keys(this.numericRefinements),
	      this.disjunctiveFacets
	    );
	
	    return keys(this.disjunctiveFacetsRefinements)
	      .concat(disjunctiveNumericRefinedFacets)
	      .concat(this.getRefinedHierarchicalFacets());
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {
	    return intersection(
	      // enforce the order between the two arrays,
	      // so that refinement name index === hierarchical facet index
	      map(this.hierarchicalFacets, 'name'),
	      keys(this.hierarchicalFacetsRefinements)
	    );
	  },
	  /**
	   * Returned the list of all disjunctive facets not refined
	   * @method
	   * @return {string[]}
	   */
	  getUnrefinedDisjunctiveFacets: function() {
	    var refinedFacets = this.getRefinedDisjunctiveFacets();
	
	    return filter(this.disjunctiveFacets, function(f) {
	      return indexOf(refinedFacets, f) === -1;
	    });
	  },
	
	  managedParameters: [
	    'index',
	    'facets', 'disjunctiveFacets', 'facetsRefinements',
	    'facetsExcludes', 'disjunctiveFacetsRefinements',
	    'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'
	  ],
	  getQueryParams: function getQueryParams() {
	    var managedParameters = this.managedParameters;
	
	    var queryParams = {};
	
	    forOwn(this, function(paramValue, paramName) {
	      if (indexOf(managedParameters, paramName) === -1 && paramValue !== undefined) {
	        queryParams[paramName] = paramValue;
	      }
	    });
	
	    return queryParams;
	  },
	  /**
	   * Let the user retrieve any parameter value from the SearchParameters
	   * @param {string} paramName name of the parameter
	   * @return {any} the value of the parameter
	   */
	  getQueryParameter: function getQueryParameter(paramName) {
	    if (!this.hasOwnProperty(paramName)) {
	      throw new Error(
	        "Parameter '" + paramName + "' is not an attribute of SearchParameters " +
	        '(http://algolia.github.io/algoliasearch-helper-js/docs/SearchParameters.html)');
	    }
	
	    return this[paramName];
	  },
	  /**
	   * Let the user set a specific value for a given parameter. Will return the
	   * same instance if the parameter is invalid or if the value is the same as the
	   * previous one.
	   * @method
	   * @param {string} parameter the parameter name
	   * @param {any} value the value to be set, must be compliant with the definition
	   * of the attribute on the object
	   * @return {SearchParameters} the updated state
	   */
	  setQueryParameter: function setParameter(parameter, value) {
	    if (this[parameter] === value) return this;
	
	    var modification = {};
	
	    modification[parameter] = value;
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Let the user set any of the parameters with a plain object.
	   * @method
	   * @param {object} params all the keys and the values to be updated
	   * @return {SearchParameters} a new updated instance
	   */
	  setQueryParameters: function setQueryParameters(params) {
	    if (!params) return this;
	
	    var error = SearchParameters.validate(this, params);
	
	    if (error) {
	      throw error;
	    }
	
	    var parsedParams = SearchParameters._parseNumbers(params);
	
	    return this.mutateMe(function mergeWith(newInstance) {
	      var ks = keys(params);
	
	      forEach(ks, function(k) {
	        newInstance[k] = parsedParams[k];
	      });
	
	      return newInstance;
	    });
	  },
	
	  /**
	   * Returns an object with only the selected attributes.
	   * @param {string[]} filters filters to retrieve only a subset of the state. It
	   * accepts strings that can be either attributes of the SearchParameters (e.g. hitsPerPage)
	   * or attributes of the index with the notation 'attribute:nameOfMyAttribute'
	   * @return {object}
	   */
	  filter: function(filters) {
	    return filterState(this, filters);
	  },
	  /**
	   * Helper function to make it easier to build new instances from a mutating
	   * function
	   * @private
	   * @param {function} fn newMutableState -> previousState -> () function that will
	   * change the value of the newMutable to the desired state
	   * @return {SearchParameters} a new instance with the specified modifications applied
	   */
	  mutateMe: function mutateMe(fn) {
	    var newState = new this.constructor(this);
	
	    fn(newState, this);
	    return newState;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {
	    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {
	    return hierarchicalFacet.separator || ' > ';
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet prefix path or null
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.rootPath or null as default
	   */
	  _getHierarchicalRootPath: function(hierarchicalFacet) {
	    return hierarchicalFacet.rootPath || null;
	  },
	
	  /**
	   * Helper function to check if we show the parent level of the hierarchicalFacet
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default
	   */
	  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {
	    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {
	      return hierarchicalFacet.showParentLevel;
	    }
	    return true;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet by it's name
	   * @param  {string} hierarchicalFacetName
	   * @return {object} a hierarchicalFacet
	   */
	  getHierarchicalFacetByName: function(hierarchicalFacetName) {
	    return find(
	      this.hierarchicalFacets,
	      {name: hierarchicalFacetName}
	    );
	  },
	
	  /**
	   * Get the current breadcrumb for a hierarchical facet, as an array
	   * @param  {string} facetName Hierarchical facet name
	   * @return {array.<string>} the path as an array of string
	   */
	  getHierarchicalFacetBreadcrumb: function(facetName) {
	    if (!this.isHierarchicalFacet(facetName)) {
	      throw new Error(
	        'Cannot get the breadcrumb of an unknown hierarchical facet: `' + facetName + '`');
	    }
	
	    var refinement = this.getHierarchicalRefinement(facetName)[0];
	    if (!refinement) return [];
	
	    var separator = this._getHierarchicalFacetSeparator(
	      this.getHierarchicalFacetByName(facetName)
	    );
	    var path = refinement.split(separator);
	    return map(path, trim);
	  },
	
	  toString: function() {
	    return JSON.stringify(this, null, 2);
	  }
	};
	
	/**
	 * Callback used for clearRefinement method
	 * @callback SearchParameters.clearCallback
	 * @param {OperatorList|FacetList} value the value of the filter
	 * @param {string} key the current attribute name
	 * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`
	 * depending on the type of facet
	 * @return {boolean} `true` if the element should be removed. `false` otherwise.
	 */
	module.exports = SearchParameters;


/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709),
	    baseIntersection = __webpack_require__(774),
	    baseRest = __webpack_require__(780),
	    castArrayLikeObject = __webpack_require__(781);
	
	/**
	 * Creates an array of unique values that are included in all given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of intersecting values.
	 * @example
	 *
	 * _.intersection([2, 1], [2, 3]);
	 * // => [2]
	 */
	var intersection = baseRest(function(arrays) {
	  var mapped = arrayMap(arrays, castArrayLikeObject);
	  return (mapped.length && mapped[0] === arrays[0])
	    ? baseIntersection(mapped)
	    : [];
	});
	
	module.exports = intersection;


/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(656),
	    arrayIncludes = __webpack_require__(775),
	    arrayIncludesWith = __webpack_require__(779),
	    arrayMap = __webpack_require__(709),
	    baseUnary = __webpack_require__(684),
	    cacheHas = __webpack_require__(660);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * The base implementation of methods like `_.intersection`, without support
	 * for iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of shared values.
	 */
	function baseIntersection(arrays, iteratee, comparator) {
	  var includes = comparator ? arrayIncludesWith : arrayIncludes,
	      length = arrays[0].length,
	      othLength = arrays.length,
	      othIndex = othLength,
	      caches = Array(othLength),
	      maxLength = Infinity,
	      result = [];
	
	  while (othIndex--) {
	    var array = arrays[othIndex];
	    if (othIndex && iteratee) {
	      array = arrayMap(array, baseUnary(iteratee));
	    }
	    maxLength = nativeMin(array.length, maxLength);
	    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	      ? new SetCache(othIndex && array)
	      : undefined;
	  }
	  array = arrays[0];
	
	  var index = -1,
	      seen = caches[0];
	
	  outer:
	  while (++index < length && result.length < maxLength) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (!(seen
	          ? cacheHas(seen, computed)
	          : includes(result, computed, comparator)
	        )) {
	      othIndex = othLength;
	      while (--othIndex) {
	        var cache = caches[othIndex];
	        if (!(cache
	              ? cacheHas(cache, computed)
	              : includes(arrays[othIndex], computed, comparator))
	            ) {
	          continue outer;
	        }
	      }
	      if (seen) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseIntersection;


/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(776);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(719),
	    baseIsNaN = __webpack_require__(777),
	    strictIndexOf = __webpack_require__(778);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}
	
	module.exports = baseIndexOf;


/***/ }),
/* 777 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}
	
	module.exports = baseIsNaN;


/***/ }),
/* 778 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ }),
/* 779 */
/***/ (function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(714),
	    overRest = __webpack_require__(764),
	    setToString = __webpack_require__(766);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(782);
	
	/**
	 * Casts `value` to an empty array if it's not an array like object.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array|Object} Returns the cast array-like object.
	 */
	function castArrayLikeObject(value) {
	  return isArrayLikeObject(value) ? value : [];
	}
	
	module.exports = castArrayLikeObject;


/***/ }),
/* 782 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(689),
	    isObjectLike = __webpack_require__(266);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(784),
	    castFunction = __webpack_require__(787);
	
	/**
	 * Iterates over own enumerable string keyed properties of an object and
	 * invokes `iteratee` for each property. The iteratee is invoked with three
	 * arguments: (value, key, object). Iteratee functions may exit iteration
	 * early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 * @see _.forOwnRight
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.forOwn(new Foo, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forOwn(object, iteratee) {
	  return object && baseForOwn(object, castFunction(iteratee));
	}
	
	module.exports = forOwn;


/***/ }),
/* 784 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(785),
	    keys = __webpack_require__(673);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ }),
/* 785 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(786);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ }),
/* 786 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ }),
/* 787 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(714);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = castFunction;


/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(726),
	    baseEach = __webpack_require__(789),
	    castFunction = __webpack_require__(787),
	    isArray = __webpack_require__(669);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _.forEach([1, 2], function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, castFunction(iteratee));
	}
	
	module.exports = forEach;


/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(784),
	    createBaseEach = __webpack_require__(790);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(689);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(671),
	    baseFilter = __webpack_require__(792),
	    baseIteratee = __webpack_require__(612),
	    isArray = __webpack_require__(669);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(789);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709),
	    baseIteratee = __webpack_require__(612),
	    baseMap = __webpack_require__(794),
	    isArray = __webpack_require__(669);
	
	/**
	 * Creates an array of values by running each element in `collection` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	 *
	 * The guarded methods are:
	 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * _.map([4, 8], square);
	 * // => [16, 64]
	 *
	 * _.map({ 'a': 4, 'b': 8 }, square);
	 * // => [16, 64] (iteration order is not guaranteed)
	 *
	 * var users = [
	 *   { 'user': 'barney' },
	 *   { 'user': 'fred' }
	 * ];
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, 'user');
	 * // => ['barney', 'fred']
	 */
	function map(collection, iteratee) {
	  var func = isArray(collection) ? arrayMap : baseMap;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = map;


/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(789),
	    isArrayLike = __webpack_require__(689);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(796),
	    baseEach = __webpack_require__(789),
	    baseIteratee = __webpack_require__(612),
	    baseReduce = __webpack_require__(797),
	    isArray = __webpack_require__(669);
	
	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;
	
	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}
	
	module.exports = reduce;


/***/ }),
/* 796 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ }),
/* 797 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseReduce;


/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(776),
	    toInteger = __webpack_require__(720);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Gets the index at which the first occurrence of `value` is found in `array`
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. If `fromIndex` is negative, it's used as the
	 * offset from the end of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 * @example
	 *
	 * _.indexOf([1, 2, 1, 2], 2);
	 * // => 1
	 *
	 * // Search from the `fromIndex`.
	 * _.indexOf([1, 2, 1, 2], 2, 2);
	 * // => 3
	 */
	function indexOf(array, value, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseIndexOf(array, value, index);
	}
	
	module.exports = indexOf;


/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

	var isNumber = __webpack_require__(800);
	
	/**
	 * Checks if `value` is `NaN`.
	 *
	 * **Note:** This method is based on
	 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	 * `undefined` and other non-number values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 * @example
	 *
	 * _.isNaN(NaN);
	 * // => true
	 *
	 * _.isNaN(new Number(NaN));
	 * // => true
	 *
	 * isNaN(undefined);
	 * // => true
	 *
	 * _.isNaN(undefined);
	 * // => false
	 */
	function isNaN(value) {
	  // An `NaN` primitive is the only value that is not equal to itself.
	  // Perform the `toStringTag` check first to avoid errors with some
	  // ActiveX objects in IE.
	  return isNumber(value) && value != +value;
	}
	
	module.exports = isNaN;


/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var numberTag = '[object Number]';
	
	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}
	
	module.exports = isNumber;


/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(653);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ }),
/* 802 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(258),
	    isArray = __webpack_require__(669),
	    isObjectLike = __webpack_require__(266);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(708),
	    castSlice = __webpack_require__(805),
	    charsEndIndex = __webpack_require__(806),
	    charsStartIndex = __webpack_require__(807),
	    stringToArray = __webpack_require__(808),
	    toString = __webpack_require__(707);
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrim, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars),
	      start = charsStartIndex(strSymbols, chrSymbols),
	      end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	  return castSlice(strSymbols, start, end).join('');
	}
	
	module.exports = trim;


/***/ }),
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(758);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(776);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(776);
	
	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;
	
	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsStartIndex;


/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiToArray = __webpack_require__(809),
	    hasUnicode = __webpack_require__(810),
	    unicodeToArray = __webpack_require__(811);
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return hasUnicode(string)
	    ? unicodeToArray(string)
	    : asciiToArray(string);
	}
	
	module.exports = stringToArray;


/***/ }),
/* 809 */
/***/ (function(module, exports) {

	/**
	 * Converts an ASCII `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function asciiToArray(string) {
	  return string.split('');
	}
	
	module.exports = asciiToArray;


/***/ }),
/* 810 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}
	
	module.exports = hasUnicode;


/***/ }),
/* 811 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts a Unicode `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function unicodeToArray(string) {
	  return string.match(reUnicode) || [];
	}
	
	module.exports = unicodeToArray;


/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(780),
	    eq = __webpack_require__(620),
	    isIterateeCall = __webpack_require__(813),
	    keysIn = __webpack_require__(733);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns own and inherited enumerable string keyed properties of source
	 * objects to the destination object for all destination properties that
	 * resolve to `undefined`. Source objects are applied from left to right.
	 * Once a property is set, additional values of the same property are ignored.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaultsDeep
	 * @example
	 *
	 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var defaults = baseRest(function(object, sources) {
	  object = Object(object);
	
	  var index = -1;
	  var length = sources.length;
	  var guard = length > 2 ? sources[2] : undefined;
	
	  if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	    length = 1;
	  }
	
	  while (++index < length) {
	    var source = sources[index];
	    var props = keysIn(source);
	    var propsIndex = -1;
	    var propsLength = props.length;
	
	    while (++propsIndex < propsLength) {
	      var key = props[propsIndex];
	      var value = object[key];
	
	      if (value === undefined ||
	          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        object[key] = source[key];
	      }
	    }
	  }
	
	  return object;
	});
	
	module.exports = defaults;


/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(620),
	    isArrayLike = __webpack_require__(689),
	    isIndex = __webpack_require__(680),
	    isObject = __webpack_require__(633);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ }),
/* 814 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(815),
	    createAssigner = __webpack_require__(820);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ }),
/* 815 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(615),
	    assignMergeValue = __webpack_require__(816),
	    baseFor = __webpack_require__(785),
	    baseMergeDeep = __webpack_require__(817),
	    isObject = __webpack_require__(633),
	    keysIn = __webpack_require__(733),
	    safeGet = __webpack_require__(818);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ }),
/* 816 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(728),
	    eq = __webpack_require__(620);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ }),
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(816),
	    cloneBuffer = __webpack_require__(736),
	    cloneTypedArray = __webpack_require__(748),
	    copyArray = __webpack_require__(737),
	    initCloneObject = __webpack_require__(749),
	    isArguments = __webpack_require__(676),
	    isArray = __webpack_require__(669),
	    isArrayLikeObject = __webpack_require__(782),
	    isBuffer = __webpack_require__(678),
	    isFunction = __webpack_require__(632),
	    isObject = __webpack_require__(633),
	    isPlainObject = __webpack_require__(257),
	    isTypedArray = __webpack_require__(681),
	    safeGet = __webpack_require__(818),
	    toPlainObject = __webpack_require__(819);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = safeGet(object, key),
	      srcValue = safeGet(source, key),
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ }),
/* 818 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key`, unless `key` is "__proto__".
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function safeGet(object, key) {
	  return key == '__proto__'
	    ? undefined
	    : object[key];
	}
	
	module.exports = safeGet;


/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(731),
	    keysIn = __webpack_require__(733);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(780),
	    isIterateeCall = __webpack_require__(813);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var map = __webpack_require__(793);
	var isNumber = __webpack_require__(800);
	var isString = __webpack_require__(803);
	function valToNumber(v) {
	  if (isNumber(v)) {
	    return v;
	  } else if (isString(v)) {
	    return parseFloat(v);
	  } else if (Array.isArray(v)) {
	    return map(v, valToNumber);
	  }
	
	  throw new Error('The value should be a number, a parseable string or an array of those.');
	}
	
	module.exports = valToNumber;


/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(788);
	var filter = __webpack_require__(791);
	var map = __webpack_require__(793);
	var isEmpty = __webpack_require__(723);
	var indexOf = __webpack_require__(798);
	
	function filterState(state, filters) {
	  var partialState = {};
	  var attributeFilters = filter(filters, function(f) { return f.indexOf('attribute:') !== -1; });
	  var attributes = map(attributeFilters, function(aF) { return aF.split(':')[1]; });
	
	  if (indexOf(attributes, '*') === -1) {
	    forEach(attributes, function(attr) {
	      if (state.isConjunctiveFacet(attr) && state.isFacetRefined(attr)) {
	        if (!partialState.facetsRefinements) partialState.facetsRefinements = {};
	        partialState.facetsRefinements[attr] = state.facetsRefinements[attr];
	      }
	
	      if (state.isDisjunctiveFacet(attr) && state.isDisjunctiveFacetRefined(attr)) {
	        if (!partialState.disjunctiveFacetsRefinements) partialState.disjunctiveFacetsRefinements = {};
	        partialState.disjunctiveFacetsRefinements[attr] = state.disjunctiveFacetsRefinements[attr];
	      }
	
	      if (state.isHierarchicalFacet(attr) && state.isHierarchicalFacetRefined(attr)) {
	        if (!partialState.hierarchicalFacetsRefinements) partialState.hierarchicalFacetsRefinements = {};
	        partialState.hierarchicalFacetsRefinements[attr] = state.hierarchicalFacetsRefinements[attr];
	      }
	
	      var numericRefinements = state.getNumericRefinements(attr);
	      if (!isEmpty(numericRefinements)) {
	        if (!partialState.numericRefinements) partialState.numericRefinements = {};
	        partialState.numericRefinements[attr] = state.numericRefinements[attr];
	      }
	    });
	  } else {
	    if (!isEmpty(state.numericRefinements)) {
	      partialState.numericRefinements = state.numericRefinements;
	    }
	    if (!isEmpty(state.facetsRefinements)) partialState.facetsRefinements = state.facetsRefinements;
	    if (!isEmpty(state.disjunctiveFacetsRefinements)) {
	      partialState.disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements;
	    }
	    if (!isEmpty(state.hierarchicalFacetsRefinements)) {
	      partialState.hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements;
	    }
	  }
	
	  var searchParameters = filter(
	    filters,
	    function(f) {
	      return f.indexOf('attribute:') === -1;
	    }
	  );
	
	  forEach(
	    searchParameters,
	    function(parameterKey) {
	      partialState[parameterKey] = state[parameterKey];
	    }
	  );
	
	  return partialState;
	}
	
	module.exports = filterState;


/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Functions to manipulate refinement lists
	 *
	 * The RefinementList is not formally defined through a prototype but is based
	 * on a specific structure.
	 *
	 * @module SearchParameters.refinementList
	 *
	 * @typedef {string[]} SearchParameters.refinementList.Refinements
	 * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList
	 */
	
	var isUndefined = __webpack_require__(802);
	var isString = __webpack_require__(803);
	var isFunction = __webpack_require__(632);
	var isEmpty = __webpack_require__(723);
	var defaults = __webpack_require__(812);
	
	var reduce = __webpack_require__(795);
	var filter = __webpack_require__(791);
	var omit = __webpack_require__(724);
	
	var lib = {
	  /**
	   * Adds a refinement to a RefinementList
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement, if the value is not a string it will be converted
	   * @return {RefinementList} a new and updated refinement list
	   */
	  addRefinement: function addRefinement(refinementList, attribute, value) {
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return refinementList;
	    }
	
	    var valueAsString = '' + value;
	
	    var facetRefinement = !refinementList[attribute] ?
	      [valueAsString] :
	      refinementList[attribute].concat(valueAsString);
	
	    var mod = {};
	
	    mod[attribute] = facetRefinement;
	
	    return defaults({}, mod, refinementList);
	  },
	  /**
	   * Removes refinement(s) for an attribute:
	   *  - if the value is specified removes the refinement for the value on the attribute
	   *  - if no value is specified removes all the refinements for this attribute
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} [value] the value of the refinement
	   * @return {RefinementList} a new and updated refinement lst
	   */
	  removeRefinement: function removeRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) {
	      return lib.clearRefinement(refinementList, attribute);
	    }
	
	    var valueAsString = '' + value;
	
	    return lib.clearRefinement(refinementList, function(v, f) {
	      return attribute === f && valueAsString === v;
	    });
	  },
	  /**
	   * Toggles the refinement value for an attribute.
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement
	   * @return {RefinementList} a new and updated list
	   */
	  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) throw new Error('toggleRefinement should be used with a value');
	
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return lib.removeRefinement(refinementList, attribute, value);
	    }
	
	    return lib.addRefinement(refinementList, attribute, value);
	  },
	  /**
	   * Clear all or parts of a RefinementList. Depending on the arguments, three
	   * kinds of behavior can happen:
	   *  - if no attribute is provided: clears the whole list
	   *  - if an attribute is provided as a string: clears the list for the specific attribute
	   *  - if an attribute is provided as a function: discards the elements for which the function returns true
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} [attribute] the attribute or function to discard
	   * @param {string} [refinementType] optional parameter to give more context to the attribute function
	   * @return {RefinementList} a new and updated refinement list
	   */
	  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(refinementList)) return refinementList;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(refinementList[attribute])) return refinementList;
	      return omit(refinementList, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	
	      var newRefinementList = reduce(refinementList, function(memo, values, key) {
	        var facetList = filter(values, function(value) {
	          return !attribute(value, key, refinementType);
	        });
	
	        if (!isEmpty(facetList)) {
	          if (facetList.length !== values.length) hasChanged = true;
	          memo[key] = facetList;
	        }
	        else hasChanged = true;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newRefinementList;
	      return refinementList;
	    }
	  },
	  /**
	   * Test if the refinement value is used for the attribute. If no refinement value
	   * is provided, test if the refinementList contains any refinement for the
	   * given attribute.
	   * @param {RefinementList} refinementList the list of refinement
	   * @param {string} attribute name of the attribute
	   * @param {string} [refinementValue] value of the filter/refinement
	   * @return {boolean}
	   */
	  isRefined: function isRefined(refinementList, attribute, refinementValue) {
	    var indexOf = __webpack_require__(798);
	
	    var containsRefinements = !!refinementList[attribute] &&
	      refinementList[attribute].length > 0;
	
	    if (isUndefined(refinementValue) || !containsRefinements) {
	      return containsRefinements;
	    }
	
	    var refinementValueAsString = '' + refinementValue;
	
	    return indexOf(refinementList[attribute], refinementValueAsString) !== -1;
	  }
	};
	
	module.exports = lib;


/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(788);
	var compact = __webpack_require__(825);
	var indexOf = __webpack_require__(798);
	var findIndex = __webpack_require__(718);
	var get = __webpack_require__(699);
	
	var sumBy = __webpack_require__(826);
	var find = __webpack_require__(610);
	var includes = __webpack_require__(828);
	var map = __webpack_require__(793);
	var orderBy = __webpack_require__(831);
	
	var defaults = __webpack_require__(812);
	var merge = __webpack_require__(814);
	
	var isFunction = __webpack_require__(632);
	
	var partial = __webpack_require__(836);
	var partialRight = __webpack_require__(868);
	
	var formatSort = __webpack_require__(869);
	
	var generateHierarchicalTree = __webpack_require__(872);
	
	/**
	 * @typedef SearchResults.Facet
	 * @type {object}
	 * @property {string} name name of the attribute in the record
	 * @property {object} data the faceting data: value, number of entries
	 * @property {object} stats undefined unless facet_stats is retrieved from algolia
	 */
	
	/**
	 * @typedef SearchResults.HierarchicalFacet
	 * @type {object}
	 * @property {string} name name of the current value given the hierarchical level, trimmed.
	 * If root node, you get the facet name
	 * @property {number} count number of objects matching this hierarchical value
	 * @property {string} path the current hierarchical value full path
	 * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise
	 * @property {HierarchicalFacet[]} data sub values for the current level
	 */
	
	/**
	 * @typedef SearchResults.FacetValue
	 * @type {object}
	 * @property {string} name the facet value itself
	 * @property {number} count times this facet appears in the results
	 * @property {boolean} isRefined is the facet currently selected
	 * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)
	 */
	
	/**
	 * @typedef Refinement
	 * @type {object}
	 * @property {string} type the type of filter used:
	 * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`
	 * @property {string} attributeName name of the attribute used for filtering
	 * @property {string} name the value of the filter
	 * @property {number} numericValue the value as a number. Only for numeric filters.
	 * @property {string} operator the operator used. Only for numeric filters.
	 * @property {number} count the number of computed hits for this filter. Only on facets.
	 * @property {boolean} exhaustive if the count is exhaustive
	 */
	
	function getIndices(obj) {
	  var indices = {};
	
	  forEach(obj, function(val, idx) { indices[val] = idx; });
	
	  return indices;
	}
	
	function assignFacetStats(dest, facetStats, key) {
	  if (facetStats && facetStats[key]) {
	    dest.stats = facetStats[key];
	  }
	}
	
	function findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {
	  return find(
	    hierarchicalFacets,
	    function facetKeyMatchesAttribute(hierarchicalFacet) {
	      return includes(hierarchicalFacet.attributes, hierarchicalAttributeName);
	    }
	  );
	}
	
	/*eslint-disable */
	/**
	 * Constructor for SearchResults
	 * @class
	 * @classdesc SearchResults contains the results of a query to Algolia using the
	 * {@link AlgoliaSearchHelper}.
	 * @param {SearchParameters} state state that led to the response
	 * @param {array.<object>} results the results from algolia client
	 * @example <caption>SearchResults of the first query in
	 * <a href="http://demos.algolia.com/instant-search-demo">the instant search demo</a></caption>
	{
	   "hitsPerPage": 10,
	   "processingTimeMS": 2,
	   "facets": [
	      {
	         "name": "type",
	         "data": {
	            "HardGood": 6627,
	            "BlackTie": 550,
	            "Music": 665,
	            "Software": 131,
	            "Game": 456,
	            "Movie": 1571
	         },
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "Free shipping": 5507
	         },
	         "name": "shipping"
	      }
	  ],
	   "hits": [
	      {
	         "thumbnailImage": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif",
	         "_highlightResult": {
	            "shortDescription": {
	               "matchLevel": "none",
	               "value": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	               "matchedWords": []
	            },
	            "category": {
	               "matchLevel": "none",
	               "value": "Computer Security Software",
	               "matchedWords": []
	            },
	            "manufacturer": {
	               "matchedWords": [],
	               "value": "Webroot",
	               "matchLevel": "none"
	            },
	            "name": {
	               "value": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	               "matchedWords": [],
	               "matchLevel": "none"
	            }
	         },
	         "image": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg",
	         "shipping": "Free shipping",
	         "bestSellingRank": 4,
	         "shortDescription": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	         "url": "http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ",
	         "name": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	         "category": "Computer Security Software",
	         "salePrice_range": "1 - 50",
	         "objectID": "1688832",
	         "type": "Software",
	         "customerReviewCount": 5980,
	         "salePrice": 49.99,
	         "manufacturer": "Webroot"
	      },
	      ....
	  ],
	   "nbHits": 10000,
	   "disjunctiveFacets": [
	      {
	         "exhaustive": false,
	         "data": {
	            "5": 183,
	            "12": 112,
	            "7": 149,
	            ...
	         },
	         "name": "customerReviewCount",
	         "stats": {
	            "max": 7461,
	            "avg": 157.939,
	            "min": 1
	         }
	      },
	      {
	         "data": {
	            "Printer Ink": 142,
	            "Wireless Speakers": 60,
	            "Point & Shoot Cameras": 48,
	            ...
	         },
	         "name": "category",
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "> 5000": 2,
	            "1 - 50": 6524,
	            "501 - 2000": 566,
	            "201 - 500": 1501,
	            "101 - 200": 1360,
	            "2001 - 5000": 47
	         },
	         "name": "salePrice_range"
	      },
	      {
	         "data": {
	            "Dynex™": 202,
	            "Insignia™": 230,
	            "PNY": 72,
	            ...
	         },
	         "name": "manufacturer",
	         "exhaustive": false
	      }
	  ],
	   "query": "",
	   "nbPages": 100,
	   "page": 0,
	   "index": "bestbuy"
	}
	 **/
	/*eslint-enable */
	function SearchResults(state, results) {
	  var mainSubResponse = results[0];
	
	  this._rawResults = results;
	
	  /**
	   * query used to generate the results
	   * @member {string}
	   */
	  this.query = mainSubResponse.query;
	  /**
	   * The query as parsed by the engine given all the rules.
	   * @member {string}
	   */
	  this.parsedQuery = mainSubResponse.parsedQuery;
	  /**
	   * all the records that match the search parameters. Each record is
	   * augmented with a new attribute `_highlightResult`
	   * which is an object keyed by attribute and with the following properties:
	   *  - `value` : the value of the facet highlighted (html)
	   *  - `matchLevel`: full, partial or none depending on how the query terms match
	   * @member {object[]}
	   */
	  this.hits = mainSubResponse.hits;
	  /**
	   * index where the results come from
	   * @member {string}
	   */
	  this.index = mainSubResponse.index;
	  /**
	   * number of hits per page requested
	   * @member {number}
	   */
	  this.hitsPerPage = mainSubResponse.hitsPerPage;
	  /**
	   * total number of hits of this query on the index
	   * @member {number}
	   */
	  this.nbHits = mainSubResponse.nbHits;
	  /**
	   * total number of pages with respect to the number of hits per page and the total number of hits
	   * @member {number}
	   */
	  this.nbPages = mainSubResponse.nbPages;
	  /**
	   * current page
	   * @member {number}
	   */
	  this.page = mainSubResponse.page;
	  /**
	   * sum of the processing time of all the queries
	   * @member {number}
	   */
	  this.processingTimeMS = sumBy(results, 'processingTimeMS');
	  /**
	   * The position if the position was guessed by IP.
	   * @member {string}
	   * @example "48.8637,2.3615",
	   */
	  this.aroundLatLng = mainSubResponse.aroundLatLng;
	  /**
	   * The radius computed by Algolia.
	   * @member {string}
	   * @example "126792922",
	   */
	  this.automaticRadius = mainSubResponse.automaticRadius;
	  /**
	   * String identifying the server used to serve this request.
	   * @member {string}
	   * @example "c7-use-2.algolia.net",
	   */
	  this.serverUsed = mainSubResponse.serverUsed;
	  /**
	   * Boolean that indicates if the computation of the counts did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutCounts = mainSubResponse.timeoutCounts;
	  /**
	   * Boolean that indicates if the computation of the hits did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutHits = mainSubResponse.timeoutHits;
	
	  /**
	   * True if the counts of the facets is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveFacetsCount = mainSubResponse.exhaustiveFacetsCount;
	
	  /**
	   * True if the number of hits is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveNbHits = mainSubResponse.exhaustiveNbHits;
	
	
	  /**
	   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).
	   * @member {object[]}
	   */
	  this.userData = mainSubResponse.userData;
	
	  /**
	   * queryID is the unique identifier of the query used to generate the current search results.
	   * This value is only available if the `clickAnalytics` search parameter is set to `true`.
	   * @member {string}
	   */
	  this.queryID = mainSubResponse.queryID;
	
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.disjunctiveFacets = [];
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.HierarchicalFacet[]}
	   */
	  this.hierarchicalFacets = map(state.hierarchicalFacets, function initFutureTree() {
	    return [];
	  });
	  /**
	   * other facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.facets = [];
	
	  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();
	
	  var facetsIndices = getIndices(state.facets);
	  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);
	  var nextDisjunctiveResult = 1;
	
	  var self = this;
	  // Since we send request only for disjunctive facets that have been refined,
	  // we get the facets informations from the first, general, response.
	  forEach(mainSubResponse.facets, function(facetValueObject, facetKey) {
	    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(
	      state.hierarchicalFacets,
	      facetKey
	    );
	
	    if (hierarchicalFacet) {
	      // Place the hierarchicalFacet data at the correct index depending on
	      // the attributes order that was defined at the helper initialization
	      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);
	      var idxAttributeName = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      self.hierarchicalFacets[idxAttributeName][facetIndex] = {
	        attribute: facetKey,
	        data: facetValueObject,
	        exhaustive: mainSubResponse.exhaustiveFacetsCount
	      };
	    } else {
	      var isFacetDisjunctive = indexOf(state.disjunctiveFacets, facetKey) !== -1;
	      var isFacetConjunctive = indexOf(state.facets, facetKey) !== -1;
	      var position;
	
	      if (isFacetDisjunctive) {
	        position = disjunctiveFacetsIndices[facetKey];
	        self.disjunctiveFacets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);
	      }
	      if (isFacetConjunctive) {
	        position = facetsIndices[facetKey];
	        self.facets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);
	      }
	    }
	  });
	
	  // Make sure we do not keep holes within the hierarchical facets
	  this.hierarchicalFacets = compact(this.hierarchicalFacets);
	
	  // aggregate the refined disjunctive facets
	  forEach(disjunctiveFacets, function(disjunctiveFacet) {
	    var result = results[nextDisjunctiveResult];
	    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);
	
	    // There should be only item in facets.
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position;
	
	      if (hierarchicalFacet) {
	        position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	        var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	        // previous refinements and no results so not able to find it
	        if (attributeIndex === -1) {
	          return;
	        }
	
	        self.hierarchicalFacets[position][attributeIndex].data = merge(
	          {},
	          self.hierarchicalFacets[position][attributeIndex].data,
	          facetResults
	        );
	      } else {
	        position = disjunctiveFacetsIndices[dfacet];
	
	        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};
	
	        self.disjunctiveFacets[position] = {
	          name: dfacet,
	          data: defaults({}, facetResults, dataFromMainRequest),
	          exhaustive: result.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);
	
	        if (state.disjunctiveFacetsRefinements[dfacet]) {
	          forEach(state.disjunctiveFacetsRefinements[dfacet], function(refinementValue) {
	            // add the disjunctive refinements if it is no more retrieved
	            if (!self.disjunctiveFacets[position].data[refinementValue] &&
	              indexOf(state.disjunctiveFacetsRefinements[dfacet], refinementValue) > -1) {
	              self.disjunctiveFacets[position].data[refinementValue] = 0;
	            }
	          });
	        }
	      }
	    });
	    nextDisjunctiveResult++;
	  });
	
	  // if we have some root level values for hierarchical facets, merge them
	  forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	
	    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	    // if we are already at a root refinement (or no refinement at all), there is no
	    // root level values request
	    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {
	      return;
	    }
	
	    var result = results[nextDisjunctiveResult];
	
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	      // previous refinements and no results so not able to find it
	      if (attributeIndex === -1) {
	        return;
	      }
	
	      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),
	      // then the disjunctive values will be `beers` (count: 100),
	      // but we do not want to display
	      //   | beers (100)
	      //     > IPA (5)
	      // We want
	      //   | beers (5)
	      //     > IPA (5)
	      var defaultData = {};
	
	      if (currentRefinement.length > 0) {
	        var root = currentRefinement[0].split(separator)[0];
	        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];
	      }
	
	      self.hierarchicalFacets[position][attributeIndex].data = defaults(
	        defaultData,
	        facetResults,
	        self.hierarchicalFacets[position][attributeIndex].data
	      );
	    });
	
	    nextDisjunctiveResult++;
	  });
	
	  // add the excludes
	  forEach(state.facetsExcludes, function(excludes, facetName) {
	    var position = facetsIndices[facetName];
	
	    self.facets[position] = {
	      name: facetName,
	      data: mainSubResponse.facets[facetName],
	      exhaustive: mainSubResponse.exhaustiveFacetsCount
	    };
	    forEach(excludes, function(facetValue) {
	      self.facets[position] = self.facets[position] || {name: facetName};
	      self.facets[position].data = self.facets[position].data || {};
	      self.facets[position].data[facetValue] = 0;
	    });
	  });
	
	  this.hierarchicalFacets = map(this.hierarchicalFacets, generateHierarchicalTree(state));
	
	  this.facets = compact(this.facets);
	  this.disjunctiveFacets = compact(this.disjunctiveFacets);
	
	  this._state = state;
	}
	
	/**
	 * Get a facet object with its name
	 * @deprecated
	 * @param {string} name name of the faceted attribute
	 * @return {SearchResults.Facet} the facet object
	 */
	SearchResults.prototype.getFacetByName = function(name) {
	  var predicate = {name: name};
	
	  return find(this.facets, predicate) ||
	    find(this.disjunctiveFacets, predicate) ||
	    find(this.hierarchicalFacets, predicate);
	};
	
	/**
	 * Get the facet values of a specified attribute from a SearchResults object.
	 * @private
	 * @param {SearchResults} results the search results to search in
	 * @param {string} attribute name of the faceted attribute to search for
	 * @return {array|object} facet values. For the hierarchical facets it is an object.
	 */
	function extractNormalizedFacetValues(results, attribute) {
	  var predicate = {name: attribute};
	  if (results._state.isConjunctiveFacet(attribute)) {
	    var facet = find(results.facets, predicate);
	    if (!facet) return [];
	
	    return map(facet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isFacetRefined(attribute, k),
	        isExcluded: results._state.isExcludeRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isDisjunctiveFacet(attribute)) {
	    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);
	    if (!disjunctiveFacet) return [];
	
	    return map(disjunctiveFacet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isDisjunctiveFacetRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isHierarchicalFacet(attribute)) {
	    return find(results.hierarchicalFacets, predicate);
	  }
	}
	
	/**
	 * Sort nodes of a hierarchical facet results
	 * @private
	 * @param {HierarchicalFacet} node node to upon which we want to apply the sort
	 */
	function recSort(sortFn, node) {
	  if (!node.data || node.data.length === 0) {
	    return node;
	  }
	  var children = map(node.data, partial(recSort, sortFn));
	  var sortedChildren = sortFn(children);
	  var newNode = merge({}, node, {data: sortedChildren});
	  return newNode;
	}
	
	SearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];
	
	function vanillaSortFn(order, data) {
	  return data.sort(order);
	}
	
	/**
	 * Get a the list of values for a given facet attribute. Those values are sorted
	 * refinement first, descending count (bigger value on top), and name ascending
	 * (alphabetical order). The sort formula can overridden using either string based
	 * predicates or a function.
	 *
	 * This method will return all the values returned by the Algolia engine plus all
	 * the values already refined. This means that it can happen that the
	 * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)
	 * might not be respected if you have facet values that are already refined.
	 * @param {string} attribute attribute name
	 * @param {object} opts configuration options.
	 * @param {Array.<string> | function} opts.sortBy
	 * When using strings, it consists of
	 * the name of the [FacetValue](#SearchResults.FacetValue) or the
	 * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the
	 * order (`asc` or `desc`). For example to order the value by count, the
	 * argument would be `['count:asc']`.
	 *
	 * If only the attribute name is specified, the ordering defaults to the one
	 * specified in the default value for this attribute.
	 *
	 * When not specified, the order is
	 * ascending.  This parameter can also be a function which takes two facet
	 * values and should return a number, 0 if equal, 1 if the first argument is
	 * bigger or -1 otherwise.
	 *
	 * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`
	 * @return {FacetValue[]|HierarchicalFacet} depending on the type of facet of
	 * the attribute requested (hierarchical, disjunctive or conjunctive)
	 * @example
	 * helper.on('results', function(content){
	 *   //get values ordered only by name ascending using the string predicate
	 *   content.getFacetValues('city', {sortBy: ['name:asc']});
	 *   //get values  ordered only by count ascending using a function
	 *   content.getFacetValues('city', {
	 *     // this is equivalent to ['count:asc']
	 *     sortBy: function(a, b) {
	 *       if (a.count === b.count) return 0;
	 *       if (a.count > b.count)   return 1;
	 *       if (b.count > a.count)   return -1;
	 *     }
	 *   });
	 * });
	 */
	SearchResults.prototype.getFacetValues = function(attribute, opts) {
	  var facetValues = extractNormalizedFacetValues(this, attribute);
	  if (!facetValues) throw new Error(attribute + ' is not a retrieved facet.');
	
	  var options = defaults({}, opts, {sortBy: SearchResults.DEFAULT_SORT});
	
	  if (Array.isArray(options.sortBy)) {
	    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);
	    if (Array.isArray(facetValues)) {
	      return orderBy(facetValues, order[0], order[1]);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partialRight(orderBy, order[0], order[1]), facetValues);
	  } else if (isFunction(options.sortBy)) {
	    if (Array.isArray(facetValues)) {
	      return facetValues.sort(options.sortBy);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partial(vanillaSortFn, options.sortBy), facetValues);
	  }
	  throw new Error(
	    'options.sortBy is optional but if defined it must be ' +
	    'either an array of string (predicates) or a sorting function'
	  );
	};
	
	/**
	 * Returns the facet stats if attribute is defined and the facet contains some.
	 * Otherwise returns undefined.
	 * @param {string} attribute name of the faceted attribute
	 * @return {object} The stats of the facet
	 */
	SearchResults.prototype.getFacetStats = function(attribute) {
	  if (this._state.isConjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.facets, attribute);
	  } else if (this._state.isDisjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);
	  }
	
	  throw new Error(attribute + ' is not present in `facets` or `disjunctiveFacets`');
	};
	
	function getFacetStatsIfAvailable(facetList, facetName) {
	  var data = find(facetList, {name: facetName});
	  return data && data.stats;
	}
	
	/**
	 * Returns all refinements for all filters + tags. It also provides
	 * additional information: count and exhausistivity for each filter.
	 *
	 * See the [refinement type](#Refinement) for an exhaustive view of the available
	 * data.
	 *
	 * @return {Array.<Refinement>} all the refinements
	 */
	SearchResults.prototype.getRefinements = function() {
	  var state = this._state;
	  var results = this;
	  var res = [];
	
	  forEach(state.facetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.facetsExcludes, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.disjunctiveFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));
	    });
	  });
	
	  forEach(state.hierarchicalFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));
	    });
	  });
	
	  forEach(state.numericRefinements, function(operators, attributeName) {
	    forEach(operators, function(values, operator) {
	      forEach(values, function(value) {
	        res.push({
	          type: 'numeric',
	          attributeName: attributeName,
	          name: value,
	          numericValue: value,
	          operator: operator
	        });
	      });
	    });
	  });
	
	  forEach(state.tagRefinements, function(name) {
	    res.push({type: 'tag', attributeName: '_tags', name: name});
	  });
	
	  return res;
	};
	
	function getRefinement(state, type, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var count = get(facet, 'data[' + name + ']');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: type,
	    attributeName: attributeName,
	    name: name,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	function getHierarchicalRefinement(state, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);
	  var splitted = name.split(facetDeclaration.separator);
	  var configuredName = splitted[splitted.length - 1];
	  for (var i = 0; facet !== undefined && i < splitted.length; ++i) {
	    facet = find(facet.data, {name: splitted[i]});
	  }
	  var count = get(facet, 'count');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: 'hierarchical',
	    attributeName: attributeName,
	    name: configuredName,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	module.exports = SearchResults;


/***/ }),
/* 825 */
/***/ (function(module, exports) {

	/**
	 * Creates an array with all falsey values removed. The values `false`, `null`,
	 * `0`, `""`, `undefined`, and `NaN` are falsey.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to compact.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * _.compact([0, 1, false, 2, '', 3]);
	 * // => [1, 2, 3]
	 */
	function compact(array) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = compact;


/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(612),
	    baseSum = __webpack_require__(827);
	
	/**
	 * This method is like `_.sum` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the value to be summed.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	 *
	 * _.sumBy(objects, function(o) { return o.n; });
	 * // => 20
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.sumBy(objects, 'n');
	 * // => 20
	 */
	function sumBy(array, iteratee) {
	  return (array && array.length)
	    ? baseSum(array, baseIteratee(iteratee, 2))
	    : 0;
	}
	
	module.exports = sumBy;


/***/ }),
/* 827 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}
	
	module.exports = baseSum;


/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(776),
	    isArrayLike = __webpack_require__(689),
	    isString = __webpack_require__(803),
	    toInteger = __webpack_require__(720),
	    values = __webpack_require__(829);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Checks if `value` is in `collection`. If `collection` is a string, it's
	 * checked for a substring of `value`, otherwise
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'a': 1, 'b': 2 }, 1);
	 * // => true
	 *
	 * _.includes('abcd', 'bc');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}
	
	module.exports = includes;


/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(830),
	    keys = __webpack_require__(673);
	
	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object == null ? [] : baseValues(object, keys(object));
	}
	
	module.exports = values;


/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709);
	
	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}
	
	module.exports = baseValues;


/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

	var baseOrderBy = __webpack_require__(832),
	    isArray = __webpack_require__(669);
	
	/**
	 * This method is like `_.sortBy` except that it allows specifying the sort
	 * orders of the iteratees to sort by. If `orders` is unspecified, all values
	 * are sorted in ascending order. Otherwise, specify an order of "desc" for
	 * descending or "asc" for ascending sort order of corresponding values.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @param {string[]} [orders] The sort orders of `iteratees`.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 34 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 36 }
	 * ];
	 *
	 * // Sort by `user` in ascending order and by `age` in descending order.
	 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 */
	function orderBy(collection, iteratees, orders, guard) {
	  if (collection == null) {
	    return [];
	  }
	  if (!isArray(iteratees)) {
	    iteratees = iteratees == null ? [] : [iteratees];
	  }
	  orders = guard ? undefined : orders;
	  if (!isArray(orders)) {
	    orders = orders == null ? [] : [orders];
	  }
	  return baseOrderBy(collection, iteratees, orders);
	}
	
	module.exports = orderBy;


/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709),
	    baseIteratee = __webpack_require__(612),
	    baseMap = __webpack_require__(794),
	    baseSortBy = __webpack_require__(833),
	    baseUnary = __webpack_require__(684),
	    compareMultiple = __webpack_require__(834),
	    identity = __webpack_require__(714);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ }),
/* 833 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(835);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(703);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(780),
	    createWrap = __webpack_require__(837),
	    getHolder = __webpack_require__(863),
	    replaceHolders = __webpack_require__(865);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with `partials` prepended to the
	 * arguments it receives. This method is like `_.bind` except it does **not**
	 * alter the `this` binding.
	 *
	 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.2.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var sayHelloTo = _.partial(greet, 'hello');
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 *
	 * // Partially applied with placeholders.
	 * var greetFred = _.partial(greet, _, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 */
	var partial = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partial));
	  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partial.placeholder = {};
	
	module.exports = partial;


/***/ }),
/* 837 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(838),
	    createBind = __webpack_require__(840),
	    createCurry = __webpack_require__(842),
	    createHybrid = __webpack_require__(843),
	    createPartial = __webpack_require__(866),
	    getData = __webpack_require__(851),
	    mergeData = __webpack_require__(867),
	    setData = __webpack_require__(858),
	    setWrapToString = __webpack_require__(859),
	    toInteger = __webpack_require__(720);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}
	
	module.exports = createWrap;


/***/ }),
/* 838 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(714),
	    metaMap = __webpack_require__(839);
	
	/**
	 * The base implementation of `setData` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};
	
	module.exports = baseSetData;


/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(694);
	
	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;
	
	module.exports = metaMap;


/***/ }),
/* 840 */
/***/ (function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(841),
	    root = __webpack_require__(260);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBind;


/***/ }),
/* 841 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(750),
	    isObject = __webpack_require__(633);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtor;


/***/ }),
/* 842 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(765),
	    createCtor = __webpack_require__(841),
	    createHybrid = __webpack_require__(843),
	    createRecurry = __webpack_require__(847),
	    getHolder = __webpack_require__(863),
	    replaceHolders = __webpack_require__(865),
	    root = __webpack_require__(260);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurry;


/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(844),
	    composeArgsRight = __webpack_require__(845),
	    countHolders = __webpack_require__(846),
	    createCtor = __webpack_require__(841),
	    createRecurry = __webpack_require__(847),
	    getHolder = __webpack_require__(863),
	    reorder = __webpack_require__(864),
	    replaceHolders = __webpack_require__(865),
	    root = __webpack_require__(260);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybrid;


/***/ }),
/* 844 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ }),
/* 845 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;
	
	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ }),
/* 846 */
/***/ (function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;
	
	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}
	
	module.exports = countHolders;


/***/ }),
/* 847 */
/***/ (function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(848),
	    setData = __webpack_require__(858),
	    setWrapToString = __webpack_require__(859);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}
	
	module.exports = createRecurry;


/***/ }),
/* 848 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(849),
	    getData = __webpack_require__(851),
	    getFuncName = __webpack_require__(853),
	    lodash = __webpack_require__(855);
	
	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	 *  else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];
	
	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}
	
	module.exports = isLaziable;


/***/ }),
/* 849 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(750),
	    baseLodash = __webpack_require__(850);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}
	
	// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;
	
	module.exports = LazyWrapper;


/***/ }),
/* 850 */
/***/ (function(module, exports) {

	/**
	 * The function whose prototype chain sequence wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}
	
	module.exports = baseLodash;


/***/ }),
/* 851 */
/***/ (function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(839),
	    noop = __webpack_require__(852);
	
	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};
	
	module.exports = getData;


/***/ }),
/* 852 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ }),
/* 853 */
/***/ (function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(854);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}
	
	module.exports = getFuncName;


/***/ }),
/* 854 */
/***/ (function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};
	
	module.exports = realNames;


/***/ }),
/* 855 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(849),
	    LodashWrapper = __webpack_require__(856),
	    baseLodash = __webpack_require__(850),
	    isArray = __webpack_require__(669),
	    isObjectLike = __webpack_require__(266),
	    wrapperClone = __webpack_require__(857);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chain sequences. Methods that operate on and return arrays, collections,
	 * and functions can be chained together. Methods that retrieve a single value
	 * or may return a primitive value will automatically end the chain sequence
	 * and return the unwrapped value. Otherwise, the value must be unwrapped
	 * with `_#value`.
	 *
	 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	 * enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion.
	 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	 * the creation of intermediate arrays and can greatly reduce the number of
	 * iteratee executions. Sections of a chain sequence qualify for shortcut
	 * fusion if the section is applied to an array and iteratees accept only
	 * one argument. The heuristic for whether a section qualifies for shortcut
	 * fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	 * `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	 * `upperFirst`, `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}
	
	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	lodash.prototype.constructor = lodash;
	
	module.exports = lodash;


/***/ }),
/* 856 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(750),
	    baseLodash = __webpack_require__(850);
	
	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable explicit method chain sequences.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}
	
	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;
	
	module.exports = LodashWrapper;


/***/ }),
/* 857 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(849),
	    LodashWrapper = __webpack_require__(856),
	    copyArray = __webpack_require__(737);
	
	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}
	
	module.exports = wrapperClone;


/***/ }),
/* 858 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(838),
	    shortOut = __webpack_require__(769);
	
	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity
	 * function to avoid garbage collection pauses in V8. See
	 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = shortOut(baseSetData);
	
	module.exports = setData;


/***/ }),
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

	var getWrapDetails = __webpack_require__(860),
	    insertWrapDetails = __webpack_require__(861),
	    setToString = __webpack_require__(766),
	    updateWrapDetails = __webpack_require__(862);
	
	/**
	 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	 * with wrapper details in a comment at the top of the source body.
	 *
	 * @private
	 * @param {Function} wrapper The function to modify.
	 * @param {Function} reference The reference function.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Function} Returns `wrapper`.
	 */
	function setWrapToString(wrapper, reference, bitmask) {
	  var source = (reference + '');
	  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	}
	
	module.exports = setWrapToString;


/***/ }),
/* 860 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	    reSplitDetails = /,? & /;
	
	/**
	 * Extracts wrapper details from the `source` body comment.
	 *
	 * @private
	 * @param {string} source The source to inspect.
	 * @returns {Array} Returns the wrapper details.
	 */
	function getWrapDetails(source) {
	  var match = source.match(reWrapDetails);
	  return match ? match[1].split(reSplitDetails) : [];
	}
	
	module.exports = getWrapDetails;


/***/ }),
/* 861 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
	
	/**
	 * Inserts wrapper `details` in a comment at the top of the `source` body.
	 *
	 * @private
	 * @param {string} source The source to modify.
	 * @returns {Array} details The details to insert.
	 * @returns {string} Returns the modified source.
	 */
	function insertWrapDetails(source, details) {
	  var length = details.length;
	  if (!length) {
	    return source;
	  }
	  var lastIndex = length - 1;
	  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	  details = details.join(length > 2 ? ', ' : ' ');
	  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	}
	
	module.exports = insertWrapDetails;


/***/ }),
/* 862 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(726),
	    arrayIncludes = __webpack_require__(775);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256,
	    WRAP_FLIP_FLAG = 512;
	
	/** Used to associate wrap methods with their bit flags. */
	var wrapFlags = [
	  ['ary', WRAP_ARY_FLAG],
	  ['bind', WRAP_BIND_FLAG],
	  ['bindKey', WRAP_BIND_KEY_FLAG],
	  ['curry', WRAP_CURRY_FLAG],
	  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	  ['flip', WRAP_FLIP_FLAG],
	  ['partial', WRAP_PARTIAL_FLAG],
	  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	  ['rearg', WRAP_REARG_FLAG]
	];
	
	/**
	 * Updates wrapper `details` based on `bitmask` flags.
	 *
	 * @private
	 * @returns {Array} details The details to modify.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Array} Returns `details`.
	 */
	function updateWrapDetails(details, bitmask) {
	  arrayEach(wrapFlags, function(pair) {
	    var value = '_.' + pair[0];
	    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	      details.push(value);
	    }
	  });
	  return details.sort();
	}
	
	module.exports = updateWrapDetails;


/***/ }),
/* 863 */
/***/ (function(module, exports) {

	/**
	 * Gets the argument placeholder value for `func`.
	 *
	 * @private
	 * @param {Function} func The function to inspect.
	 * @returns {*} Returns the placeholder value.
	 */
	function getHolder(func) {
	  var object = func;
	  return object.placeholder;
	}
	
	module.exports = getHolder;


/***/ }),
/* 864 */
/***/ (function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(737),
	    isIndex = __webpack_require__(680);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ }),
/* 865 */
/***/ (function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value === placeholder || value === PLACEHOLDER) {
	      array[index] = PLACEHOLDER;
	      result[resIndex++] = index;
	    }
	  }
	  return result;
	}
	
	module.exports = replaceHolders;


/***/ }),
/* 866 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(765),
	    createCtor = __webpack_require__(841),
	    root = __webpack_require__(260);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartial;


/***/ }),
/* 867 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(844),
	    composeArgsRight = __webpack_require__(845),
	    replaceHolders = __webpack_require__(865);
	
	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and
	 * `_.rearg` modify function arguments, making the order in which they are
	 * executed important, preventing the merging of metadata. However, we make
	 * an exception for a safe combined case where curried functions have `_.ary`
	 * and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	  var isCombo =
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & WRAP_BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = value;
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & WRAP_ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;
	
	  return data;
	}
	
	module.exports = mergeData;


/***/ }),
/* 868 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(780),
	    createWrap = __webpack_require__(837),
	    getHolder = __webpack_require__(863),
	    replaceHolders = __webpack_require__(865);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partialRight.placeholder = {};
	
	module.exports = partialRight;


/***/ }),
/* 869 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var reduce = __webpack_require__(795);
	var find = __webpack_require__(610);
	var startsWith = __webpack_require__(870);
	
	/**
	 * Transform sort format from user friendly notation to lodash format
	 * @param {string[]} sortBy array of predicate of the form "attribute:order"
	 * @return {array.<string[]>} array containing 2 elements : attributes, orders
	 */
	module.exports = function formatSort(sortBy, defaults) {
	  return reduce(sortBy, function preparePredicate(out, sortInstruction) {
	    var sortInstructions = sortInstruction.split(':');
	    if (defaults && sortInstructions.length === 1) {
	      var similarDefault = find(defaults, function(predicate) {
	        return startsWith(predicate, sortInstruction[0]);
	      });
	      if (similarDefault) {
	        sortInstructions = similarDefault.split(':');
	      }
	    }
	    out[0].push(sortInstructions[0]);
	    out[1].push(sortInstructions[1]);
	    return out;
	  }, [[], []]);
	};


/***/ }),
/* 870 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(871),
	    baseToString = __webpack_require__(708),
	    toInteger = __webpack_require__(720),
	    toString = __webpack_require__(707);
	
	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`,
	 *  else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = position == null
	    ? 0
	    : baseClamp(toInteger(position), 0, string.length);
	
	  target = baseToString(target);
	  return string.slice(position, position + target.length) == target;
	}
	
	module.exports = startsWith;


/***/ }),
/* 871 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.clamp` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 */
	function baseClamp(number, lower, upper) {
	  if (number === number) {
	    if (upper !== undefined) {
	      number = number <= upper ? number : upper;
	    }
	    if (lower !== undefined) {
	      number = number >= lower ? number : lower;
	    }
	  }
	  return number;
	}
	
	module.exports = baseClamp;


/***/ }),
/* 872 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = generateTrees;
	
	var last = __webpack_require__(756);
	var map = __webpack_require__(793);
	var reduce = __webpack_require__(795);
	var orderBy = __webpack_require__(831);
	var trim = __webpack_require__(804);
	var find = __webpack_require__(610);
	var pickBy = __webpack_require__(873);
	
	var prepareHierarchicalFacetSortBy = __webpack_require__(869);
	
	function generateTrees(state) {
	  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {
	    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];
	    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&
	      state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';
	    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);
	    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));
	
	    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	      hierarchicalShowParentLevel, hierarchicalFacetRefinement);
	
	    var results = hierarchicalFacetResult;
	
	    if (hierarchicalRootPath) {
	      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);
	    }
	
	    return reduce(results, generateTreeFn, {
	      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,
	      count: null, // root level, no count
	      isRefined: true, // root level, always refined
	      path: null, // root level, no path
	      data: null
	    });
	  };
	}
	
	function generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	                                  hierarchicalShowParentLevel, currentRefinement) {
	  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {
	    var parent = hierarchicalTree;
	
	    if (currentHierarchicalLevel > 0) {
	      var level = 0;
	
	      parent = hierarchicalTree;
	
	      while (level < currentHierarchicalLevel) {
	        parent = parent && find(parent.data, {isRefined: true});
	        level++;
	      }
	    }
	
	    // we found a refined parent, let's add current level data under it
	    if (parent) {
	      // filter values in case an object has multiple categories:
	      //   {
	      //     categories: {
	      //       level0: ['beers', 'bières'],
	      //       level1: ['beers > IPA', 'bières > Belges']
	      //     }
	      //   }
	      //
	      // If parent refinement is `beers`, then we do not want to have `bières > Belges`
	      // showing up
	
	      var onlyMatchingValuesFn = filterFacetValues(parent.path || hierarchicalRootPath,
	        currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);
	
	      parent.data = orderBy(
	        map(
	          pickBy(hierarchicalFacetResult.data, onlyMatchingValuesFn),
	          formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement)
	        ),
	        sortBy[0], sortBy[1]
	      );
	    }
	
	    return hierarchicalTree;
	  };
	}
	
	function filterFacetValues(parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath,
	                           hierarchicalShowParentLevel) {
	  return function(facetCount, facetValue) {
	    // we want the facetValue is a child of hierarchicalRootPath
	    if (hierarchicalRootPath &&
	      (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {
	      return false;
	    }
	
	    // we always want root levels (only when there is no prefix path)
	    return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 ||
	      // if there is a rootPath, being root level mean 1 level under rootPath
	      hierarchicalRootPath &&
	      facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 ||
	      // if current refinement is a root level and current facetValue is a root level,
	      // keep the facetValue
	      facetValue.indexOf(hierarchicalSeparator) === -1 &&
	      currentRefinement.indexOf(hierarchicalSeparator) === -1 ||
	      // currentRefinement is a child of the facet value
	      currentRefinement.indexOf(facetValue) === 0 ||
	      // facetValue is a child of the current parent, add it
	      facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&
	      (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);
	  };
	}
	
	function formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement) {
	  return function format(facetCount, facetValue) {
	    return {
	      name: trim(last(facetValue.split(hierarchicalSeparator))),
	      path: facetValue,
	      count: facetCount,
	      isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,
	      data: null
	    };
	  };
	}


/***/ }),
/* 873 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(709),
	    baseIteratee = __webpack_require__(612),
	    basePickBy = __webpack_require__(874),
	    getAllKeysIn = __webpack_require__(741);
	
	/**
	 * Creates an object composed of the `object` properties `predicate` returns
	 * truthy for. The predicate is invoked with two arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pickBy(object, _.isNumber);
	 * // => { 'a': 1, 'c': 3 }
	 */
	function pickBy(object, predicate) {
	  if (object == null) {
	    return {};
	  }
	  var props = arrayMap(getAllKeysIn(object), function(prop) {
	    return [prop];
	  });
	  predicate = baseIteratee(predicate);
	  return basePickBy(object, props, function(value, path) {
	    return predicate(value, path[0]);
	  });
	}
	
	module.exports = pickBy;


/***/ }),
/* 874 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(700),
	    baseSet = __webpack_require__(875),
	    castPath = __webpack_require__(701);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};
	
	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);
	
	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}
	
	module.exports = basePickBy;


/***/ }),
/* 875 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(727),
	    castPath = __webpack_require__(701),
	    isIndex = __webpack_require__(680),
	    isObject = __webpack_require__(633),
	    toKey = __webpack_require__(710);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;
	
	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ }),
/* 876 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var util = __webpack_require__(877);
	var events = __webpack_require__(878);
	
	/**
	 * A DerivedHelper is a way to create sub requests to
	 * Algolia from a main helper.
	 * @class
	 * @classdesc The DerivedHelper provides an event based interface for search callbacks:
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 */
	function DerivedHelper(mainHelper, fn) {
	  this.main = mainHelper;
	  this.fn = fn;
	  this.lastResults = null;
	}
	
	util.inherits(DerivedHelper, events.EventEmitter);
	
	/**
	 * Detach this helper from the main helper
	 * @return {undefined}
	 * @throws Error if the derived helper is already detached
	 */
	DerivedHelper.prototype.detach = function() {
	  this.removeAllListeners();
	  this.main.detachDerivedHelper(this);
	};
	
	DerivedHelper.prototype.getModifiedState = function(parameters) {
	  return this.fn(parameters);
	};
	
	module.exports = DerivedHelper;


/***/ }),
/* 877 */
/***/ (function(module, exports) {

	module.exports = require("util");

/***/ }),
/* 878 */
/***/ (function(module, exports) {

	module.exports = require("events");

/***/ }),
/* 879 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(788);
	var map = __webpack_require__(793);
	var reduce = __webpack_require__(795);
	var merge = __webpack_require__(814);
	
	var requestBuilder = {
	  /**
	   * Get all the queries to send to the client, those queries can used directly
	   * with the Algolia client.
	   * @private
	   * @return {object[]} The queries
	   */
	  _getQueries: function getQueries(index, state) {
	    var queries = [];
	
	    // One query for the hits
	    queries.push({
	      indexName: index,
	      params: requestBuilder._getHitsSearchParams(state)
	    });
	
	    // One for each disjunctive facets
	    forEach(state.getRefinedDisjunctiveFacets(), function(refinedFacet) {
	      queries.push({
	        indexName: index,
	        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)
	      });
	    });
	
	    // maybe more to get the root level of hierarchical facets when activated
	    forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	
	      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	      // if we are deeper than level 0 (starting from `beer > IPA`)
	      // we want to get the root values
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {
	        queries.push({
	          indexName: index,
	          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)
	        });
	      }
	    });
	
	    return queries;
	  },
	
	  /**
	   * Build search parameters used to fetch hits
	   * @private
	   * @return {object.<string, any>}
	   */
	  _getHitsSearchParams: function(state) {
	    var facets = state.facets
	      .concat(state.disjunctiveFacets)
	      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));
	
	
	    var facetFilters = requestBuilder._getFacetFilters(state);
	    var numericFilters = requestBuilder._getNumericFilters(state);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      facets: facets,
	      tagFilters: tagFilters
	    };
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Build search parameters used to fetch a disjunctive facet
	   * @private
	   * @param  {string} facet the associated facet name
	   * @param  {boolean} hierarchicalRootLevel ?? FIXME
	   * @return {object}
	   */
	  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);
	    var numericFilters = requestBuilder._getNumericFilters(state, facet);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      hitsPerPage: 1,
	      page: 0,
	      attributesToRetrieve: [],
	      attributesToHighlight: [],
	      attributesToSnippet: [],
	      tagFilters: tagFilters,
	      analytics: false,
	      clickAnalytics: false
	    };
	
	    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);
	
	    if (hierarchicalFacet) {
	      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(
	        state,
	        hierarchicalFacet,
	        hierarchicalRootLevel
	      );
	    } else {
	      additionalParams.facets = facet;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Return the numeric filters in an algolia request fashion
	   * @private
	   * @param {string} [facetName] the name of the attribute for which the filters should be excluded
	   * @return {string[]} the numeric filters in the algolia format
	   */
	  _getNumericFilters: function(state, facetName) {
	    if (state.numericFilters) {
	      return state.numericFilters;
	    }
	
	    var numericFilters = [];
	
	    forEach(state.numericRefinements, function(operators, attribute) {
	      forEach(operators, function(values, operator) {
	        if (facetName !== attribute) {
	          forEach(values, function(value) {
	            if (Array.isArray(value)) {
	              var vs = map(value, function(v) {
	                return attribute + operator + v;
	              });
	              numericFilters.push(vs);
	            } else {
	              numericFilters.push(attribute + operator + value);
	            }
	          });
	        }
	      });
	    });
	
	    return numericFilters;
	  },
	
	  /**
	   * Return the tags filters depending
	   * @private
	   * @return {string}
	   */
	  _getTagFilters: function(state) {
	    if (state.tagFilters) {
	      return state.tagFilters;
	    }
	
	    return state.tagRefinements.join(',');
	  },
	
	
	  /**
	   * Build facetFilters parameter based on current refinements. The array returned
	   * contains strings representing the facet filters in the algolia format.
	   * @private
	   * @param  {string} [facet] if set, the current disjunctive facet
	   * @return {array.<string>}
	   */
	  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = [];
	
	    forEach(state.facetsRefinements, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':' + facetValue);
	      });
	    });
	
	    forEach(state.facetsExcludes, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':-' + facetValue);
	      });
	    });
	
	    forEach(state.disjunctiveFacetsRefinements, function(facetValues, facetName) {
	      if (facetName === facet || !facetValues || facetValues.length === 0) return;
	      var orFilters = [];
	
	      forEach(facetValues, function(facetValue) {
	        orFilters.push(facetName + ':' + facetValue);
	      });
	
	      facetFilters.push(orFilters);
	    });
	
	    forEach(state.hierarchicalFacetsRefinements, function(facetValues, facetName) {
	      var facetValue = facetValues[0];
	
	      if (facetValue === undefined) {
	        return;
	      }
	
	      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeToRefine;
	      var attributesIndex;
	
	      // we ask for parent facet values only when the `facet` is the current hierarchical facet
	      if (facet === facetName) {
	        // if we are at the root level already, no need to ask for facet values, we get them from
	        // the hits query
	        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||
	          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {
	          return;
	        }
	
	        if (!rootPath) {
	          attributesIndex = facetValue.split(separator).length - 2;
	          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));
	        } else {
	          attributesIndex = rootPath.split(separator).length - 1;
	          facetValue = rootPath;
	        }
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      } else {
	        attributesIndex = facetValue.split(separator).length - 1;
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      }
	
	      if (attributeToRefine) {
	        facetFilters.push([attributeToRefine + ':' + facetValue]);
	      }
	    });
	
	    return facetFilters;
	  },
	
	  _getHitsHierarchicalFacetsAttributes: function(state) {
	    var out = [];
	
	    return reduce(
	      state.hierarchicalFacets,
	      // ask for as much levels as there's hierarchical refinements
	      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {
	        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];
	
	        // if no refinement, ask for root level
	        if (!hierarchicalRefinement) {
	          allAttributes.push(hierarchicalFacet.attributes[0]);
	          return allAttributes;
	        }
	
	        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	        var level = hierarchicalRefinement.split(separator).length;
	        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);
	
	        return allAttributes.concat(newAttributes);
	      }, out);
	  },
	
	  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    if (rootLevel === true) {
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeIndex = 0;
	
	      if (rootPath) {
	        attributeIndex = rootPath.split(separator).length;
	      }
	      return [hierarchicalFacet.attributes[attributeIndex]];
	    }
	
	    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';
	    // if refinement is 'beers > IPA > Flying dog',
	    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)
	
	    var parentLevel = hierarchicalRefinement.split(separator).length - 1;
	    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);
	  },
	
	  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {
	    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?
	      state.clearRefinements(facetName) :
	      state;
	    var searchForFacetSearchParameters = {
	      facetQuery: query,
	      facetName: facetName
	    };
	    if (typeof maxFacetHits === 'number') {
	      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;
	    }
	    var queries = merge(requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);
	    return queries;
	  }
	};
	
	module.exports = requestBuilder;


/***/ }),
/* 880 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Module containing the functions to serialize and deserialize
	 * {SearchParameters} in the query string format
	 * @module algoliasearchHelper.url
	 */
	
	var shortener = __webpack_require__(881);
	var SearchParameters = __webpack_require__(772);
	
	var qs = __webpack_require__(885);
	
	var bind = __webpack_require__(890);
	var forEach = __webpack_require__(788);
	var pick = __webpack_require__(891);
	var map = __webpack_require__(793);
	var mapKeys = __webpack_require__(893);
	var mapValues = __webpack_require__(894);
	var isString = __webpack_require__(803);
	var isPlainObject = __webpack_require__(257);
	var isEmpty = __webpack_require__(723);
	var invert = __webpack_require__(882);
	
	var encode = __webpack_require__(887).encode;
	
	function recursiveEncode(input) {
	  if (isPlainObject(input)) {
	    return mapValues(input, recursiveEncode);
	  }
	  if (Array.isArray(input)) {
	    return map(input, recursiveEncode);
	  }
	  if (isString(input)) {
	    return encode(input);
	  }
	  return input;
	}
	
	var refinementsParameters = ['dFR', 'fR', 'nR', 'hFR', 'tR'];
	var stateKeys = shortener.ENCODED_PARAMETERS;
	function sortQueryStringValues(prefixRegexp, invertedMapping, a, b) {
	  if (prefixRegexp !== null) {
	    a = a.replace(prefixRegexp, '');
	    b = b.replace(prefixRegexp, '');
	  }
	
	  a = invertedMapping[a] || a;
	  b = invertedMapping[b] || b;
	
	  if (stateKeys.indexOf(a) !== -1 || stateKeys.indexOf(b) !== -1) {
	    if (a === 'q') return -1;
	    if (b === 'q') return 1;
	
	    var isARefinements = refinementsParameters.indexOf(a) !== -1;
	    var isBRefinements = refinementsParameters.indexOf(b) !== -1;
	    if (isARefinements && !isBRefinements) {
	      return 1;
	    } else if (isBRefinements && !isARefinements) {
	      return -1;
	    }
	  }
	
	  return a.localeCompare(b);
	}
	
	/**
	 * Read a query string and return an object containing the state
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} [options] accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 */
	exports.getStateFromQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var partialStateWithPrefix = qs.parse(queryString);
	  var prefixRegexp = new RegExp('^' + prefixForParameters);
	  var partialState = mapKeys(
	    partialStateWithPrefix,
	    function(v, k) {
	      var hasPrefix = prefixForParameters && prefixRegexp.test(k);
	      var unprefixedKey = hasPrefix ? k.replace(prefixRegexp, '') : k;
	      var decodedKey = shortener.decode(invertedMapping[unprefixedKey] || unprefixedKey);
	      return decodedKey || unprefixedKey;
	    }
	  );
	
	  var partialStateWithParsedNumbers = SearchParameters._parseNumbers(partialState);
	
	  return pick(partialStateWithParsedNumbers, SearchParameters.PARAMETERS);
	};
	
	/**
	 * Retrieve an object of all the properties that are not understandable as helper
	 * parameters.
	 * @param {string} queryString the query string to read
	 * @param {object} [options] the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	exports.getUnrecognizedParametersInQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix;
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var foreignConfig = {};
	  var config = qs.parse(queryString);
	  if (prefixForParameters) {
	    var prefixRegexp = new RegExp('^' + prefixForParameters);
	    forEach(config, function(v, key) {
	      if (!prefixRegexp.test(key)) foreignConfig[key] = v;
	    });
	  } else {
	    forEach(config, function(v, key) {
	      if (!shortener.decode(invertedMapping[key] || key)) foreignConfig[key] = v;
	    });
	  }
	
	  return foreignConfig;
	};
	
	/**
	 * Generate a query string for the state passed according to the options
	 * @param {SearchParameters} state state to serialize
	 * @param {object} [options] May contain the following parameters :
	 *  - prefix : prefix in front of the keys
	 *  - mapping : map short attributes to another value e.g. {q: 'query'}
	 *  - moreAttributes : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 *  - safe : get safe urls for use in emails, chat apps or any application auto linking urls.
	 *  All parameters and values will be encoded in a way that it's safe to share them.
	 *  Default to false for legacy reasons ()
	 * @return {string} the query string
	 */
	exports.getQueryStringFromState = function(state, options) {
	  var moreAttributes = options && options.moreAttributes;
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var safe = options && options.safe || false;
	  var invertedMapping = invert(mapping);
	
	  var stateForUrl = safe ? state : recursiveEncode(state);
	
	  var encodedState = mapKeys(
	    stateForUrl,
	    function(v, k) {
	      var shortK = shortener.encode(k);
	      return prefixForParameters + (mapping[shortK] || shortK);
	    }
	  );
	
	  var prefixRegexp = prefixForParameters === '' ? null : new RegExp('^' + prefixForParameters);
	  var sort = bind(sortQueryStringValues, null, prefixRegexp, invertedMapping);
	  if (!isEmpty(moreAttributes)) {
	    var stateQs = qs.stringify(encodedState, {encode: safe, sort: sort});
	    var moreQs = qs.stringify(moreAttributes, {encode: safe});
	    if (!stateQs) return moreQs;
	    return stateQs + '&' + moreQs;
	  }
	
	  return qs.stringify(encodedState, {encode: safe, sort: sort});
	};


/***/ }),
/* 881 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var invert = __webpack_require__(882);
	var keys = __webpack_require__(673);
	
	var keys2Short = {
	  advancedSyntax: 'aS',
	  allowTyposOnNumericTokens: 'aTONT',
	  analyticsTags: 'aT',
	  analytics: 'a',
	  aroundLatLngViaIP: 'aLLVIP',
	  aroundLatLng: 'aLL',
	  aroundPrecision: 'aP',
	  aroundRadius: 'aR',
	  attributesToHighlight: 'aTH',
	  attributesToRetrieve: 'aTR',
	  attributesToSnippet: 'aTS',
	  disjunctiveFacetsRefinements: 'dFR',
	  disjunctiveFacets: 'dF',
	  distinct: 'd',
	  facetsExcludes: 'fE',
	  facetsRefinements: 'fR',
	  facets: 'f',
	  getRankingInfo: 'gRI',
	  hierarchicalFacetsRefinements: 'hFR',
	  hierarchicalFacets: 'hF',
	  highlightPostTag: 'hPoT',
	  highlightPreTag: 'hPrT',
	  hitsPerPage: 'hPP',
	  ignorePlurals: 'iP',
	  index: 'idx',
	  insideBoundingBox: 'iBB',
	  insidePolygon: 'iPg',
	  length: 'l',
	  maxValuesPerFacet: 'mVPF',
	  minimumAroundRadius: 'mAR',
	  minProximity: 'mP',
	  minWordSizefor1Typo: 'mWS1T',
	  minWordSizefor2Typos: 'mWS2T',
	  numericFilters: 'nF',
	  numericRefinements: 'nR',
	  offset: 'o',
	  optionalWords: 'oW',
	  page: 'p',
	  queryType: 'qT',
	  query: 'q',
	  removeWordsIfNoResults: 'rWINR',
	  replaceSynonymsInHighlight: 'rSIH',
	  restrictSearchableAttributes: 'rSA',
	  synonyms: 's',
	  tagFilters: 'tF',
	  tagRefinements: 'tR',
	  typoTolerance: 'tT',
	  optionalTagFilters: 'oTF',
	  optionalFacetFilters: 'oFF',
	  snippetEllipsisText: 'sET',
	  disableExactOnAttributes: 'dEOA',
	  enableExactOnSingleWordQuery: 'eEOSWQ'
	};
	
	var short2Keys = invert(keys2Short);
	
	module.exports = {
	  /**
	   * All the keys of the state, encoded.
	   * @const
	   */
	  ENCODED_PARAMETERS: keys(short2Keys),
	  /**
	   * Decode a shorten attribute
	   * @param {string} shortKey the shorten attribute
	   * @return {string} the decoded attribute, undefined otherwise
	   */
	  decode: function(shortKey) {
	    return short2Keys[shortKey];
	  },
	  /**
	   * Encode an attribute into a short version
	   * @param {string} key the attribute
	   * @return {string} the shorten attribute
	   */
	  encode: function(key) {
	    return keys2Short[key];
	  }
	};


/***/ }),
/* 882 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(768),
	    createInverter = __webpack_require__(883),
	    identity = __webpack_require__(714);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Creates an object composed of the inverted keys and values of `object`.
	 * If `object` contains duplicate values, subsequent values overwrite
	 * property assignments of previous values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.7.0
	 * @category Object
	 * @param {Object} object The object to invert.
	 * @returns {Object} Returns the new inverted object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2, 'c': 1 };
	 *
	 * _.invert(object);
	 * // => { '1': 'c', '2': 'b' }
	 */
	var invert = createInverter(function(result, value, key) {
	  if (value != null &&
	      typeof value.toString != 'function') {
	    value = nativeObjectToString.call(value);
	  }
	
	  result[value] = key;
	}, constant(identity));
	
	module.exports = invert;


/***/ }),
/* 883 */
/***/ (function(module, exports, __webpack_require__) {

	var baseInverter = __webpack_require__(884);
	
	/**
	 * Creates a function like `_.invertBy`.
	 *
	 * @private
	 * @param {Function} setter The function to set accumulator values.
	 * @param {Function} toIteratee The function to resolve iteratees.
	 * @returns {Function} Returns the new inverter function.
	 */
	function createInverter(setter, toIteratee) {
	  return function(object, iteratee) {
	    return baseInverter(object, setter, toIteratee(iteratee), {});
	  };
	}
	
	module.exports = createInverter;


/***/ }),
/* 884 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(784);
	
	/**
	 * The base implementation of `_.invert` and `_.invertBy` which inverts
	 * `object` with values transformed by `iteratee` and set by `setter`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform values.
	 * @param {Object} accumulator The initial inverted object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function baseInverter(object, setter, iteratee, accumulator) {
	  baseForOwn(object, function(value, key, object) {
	    setter(accumulator, iteratee(value), key, object);
	  });
	  return accumulator;
	}
	
	module.exports = baseInverter;


/***/ }),
/* 885 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var stringify = __webpack_require__(886);
	var parse = __webpack_require__(889);
	var formats = __webpack_require__(888);
	
	module.exports = {
	    formats: formats,
	    parse: parse,
	    stringify: stringify
	};


/***/ }),
/* 886 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(887);
	var formats = __webpack_require__(888);
	
	var arrayPrefixGenerators = {
	    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
	        return prefix + '[]';
	    },
	    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
	        return prefix + '[' + key + ']';
	    },
	    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
	        return prefix;
	    }
	};
	
	var toISO = Date.prototype.toISOString;
	
	var defaults = {
	    delimiter: '&',
	    encode: true,
	    encoder: utils.encode,
	    encodeValuesOnly: false,
	    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
	        return toISO.call(date);
	    },
	    skipNulls: false,
	    strictNullHandling: false
	};
	
	var stringify = function stringify( // eslint-disable-line func-name-matching
	    object,
	    prefix,
	    generateArrayPrefix,
	    strictNullHandling,
	    skipNulls,
	    encoder,
	    filter,
	    sort,
	    allowDots,
	    serializeDate,
	    formatter,
	    encodeValuesOnly
	) {
	    var obj = object;
	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    } else if (obj instanceof Date) {
	        obj = serializeDate(obj);
	    } else if (obj === null) {
	        if (strictNullHandling) {
	            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;
	        }
	
	        obj = '';
	    }
	
	    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
	        if (encoder) {
	            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);
	            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];
	        }
	        return [formatter(prefix) + '=' + formatter(String(obj))];
	    }
	
	    var values = [];
	
	    if (typeof obj === 'undefined') {
	        return values;
	    }
	
	    var objKeys;
	    if (Array.isArray(filter)) {
	        objKeys = filter;
	    } else {
	        var keys = Object.keys(obj);
	        objKeys = sort ? keys.sort(sort) : keys;
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (skipNulls && obj[key] === null) {
	            continue;
	        }
	
	        if (Array.isArray(obj)) {
	            values = values.concat(stringify(
	                obj[key],
	                generateArrayPrefix(prefix, key),
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly
	            ));
	        } else {
	            values = values.concat(stringify(
	                obj[key],
	                prefix + (allowDots ? '.' + key : '[' + key + ']'),
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly
	            ));
	        }
	    }
	
	    return values;
	};
	
	module.exports = function (object, opts) {
	    var obj = object;
	    var options = opts ? utils.assign({}, opts) : {};
	
	    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
	        throw new TypeError('Encoder has to be a function.');
	    }
	
	    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
	    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
	    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
	    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
	    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;
	    var sort = typeof options.sort === 'function' ? options.sort : null;
	    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
	    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;
	    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;
	    if (typeof options.format === 'undefined') {
	        options.format = formats['default'];
	    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {
	        throw new TypeError('Unknown format option provided.');
	    }
	    var formatter = formats.formatters[options.format];
	    var objKeys;
	    var filter;
	
	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    } else if (Array.isArray(options.filter)) {
	        filter = options.filter;
	        objKeys = filter;
	    }
	
	    var keys = [];
	
	    if (typeof obj !== 'object' || obj === null) {
	        return '';
	    }
	
	    var arrayFormat;
	    if (options.arrayFormat in arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    } else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    } else {
	        arrayFormat = 'indices';
	    }
	
	    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
	
	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }
	
	    if (sort) {
	        objKeys.sort(sort);
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (skipNulls && obj[key] === null) {
	            continue;
	        }
	
	        keys = keys.concat(stringify(
	            obj[key],
	            key,
	            generateArrayPrefix,
	            strictNullHandling,
	            skipNulls,
	            encode ? encoder : null,
	            filter,
	            sort,
	            allowDots,
	            serializeDate,
	            formatter,
	            encodeValuesOnly
	        ));
	    }
	
	    var joined = keys.join(delimiter);
	    var prefix = options.addQueryPrefix === true ? '?' : '';
	
	    return joined.length > 0 ? prefix + joined : '';
	};


/***/ }),
/* 887 */
/***/ (function(module, exports) {

	'use strict';
	
	var has = Object.prototype.hasOwnProperty;
	
	var hexTable = (function () {
	    var array = [];
	    for (var i = 0; i < 256; ++i) {
	        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
	    }
	
	    return array;
	}());
	
	var compactQueue = function compactQueue(queue) {
	    var obj;
	
	    while (queue.length) {
	        var item = queue.pop();
	        obj = item.obj[item.prop];
	
	        if (Array.isArray(obj)) {
	            var compacted = [];
	
	            for (var j = 0; j < obj.length; ++j) {
	                if (typeof obj[j] !== 'undefined') {
	                    compacted.push(obj[j]);
	                }
	            }
	
	            item.obj[item.prop] = compacted;
	        }
	    }
	
	    return obj;
	};
	
	exports.arrayToObject = function arrayToObject(source, options) {
	    var obj = options && options.plainObjects ? Object.create(null) : {};
	    for (var i = 0; i < source.length; ++i) {
	        if (typeof source[i] !== 'undefined') {
	            obj[i] = source[i];
	        }
	    }
	
	    return obj;
	};
	
	exports.merge = function merge(target, source, options) {
	    if (!source) {
	        return target;
	    }
	
	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        } else if (typeof target === 'object') {
	            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {
	                target[source] = true;
	            }
	        } else {
	            return [target, source];
	        }
	
	        return target;
	    }
	
	    if (typeof target !== 'object') {
	        return [target].concat(source);
	    }
	
	    var mergeTarget = target;
	    if (Array.isArray(target) && !Array.isArray(source)) {
	        mergeTarget = exports.arrayToObject(target, options);
	    }
	
	    if (Array.isArray(target) && Array.isArray(source)) {
	        source.forEach(function (item, i) {
	            if (has.call(target, i)) {
	                if (target[i] && typeof target[i] === 'object') {
	                    target[i] = exports.merge(target[i], item, options);
	                } else {
	                    target.push(item);
	                }
	            } else {
	                target[i] = item;
	            }
	        });
	        return target;
	    }
	
	    return Object.keys(source).reduce(function (acc, key) {
	        var value = source[key];
	
	        if (has.call(acc, key)) {
	            acc[key] = exports.merge(acc[key], value, options);
	        } else {
	            acc[key] = value;
	        }
	        return acc;
	    }, mergeTarget);
	};
	
	exports.assign = function assignSingleSource(target, source) {
	    return Object.keys(source).reduce(function (acc, key) {
	        acc[key] = source[key];
	        return acc;
	    }, target);
	};
	
	exports.decode = function (str) {
	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};
	
	exports.encode = function encode(str) {
	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }
	
	    var string = typeof str === 'string' ? str : String(str);
	
	    var out = '';
	    for (var i = 0; i < string.length; ++i) {
	        var c = string.charCodeAt(i);
	
	        if (
	            c === 0x2D // -
	            || c === 0x2E // .
	            || c === 0x5F // _
	            || c === 0x7E // ~
	            || (c >= 0x30 && c <= 0x39) // 0-9
	            || (c >= 0x41 && c <= 0x5A) // a-z
	            || (c >= 0x61 && c <= 0x7A) // A-Z
	        ) {
	            out += string.charAt(i);
	            continue;
	        }
	
	        if (c < 0x80) {
	            out = out + hexTable[c];
	            continue;
	        }
	
	        if (c < 0x800) {
	            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        if (c < 0xD800 || c >= 0xE000) {
	            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        i += 1;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
	        out += hexTable[0xF0 | (c >> 18)]
	            + hexTable[0x80 | ((c >> 12) & 0x3F)]
	            + hexTable[0x80 | ((c >> 6) & 0x3F)]
	            + hexTable[0x80 | (c & 0x3F)];
	    }
	
	    return out;
	};
	
	exports.compact = function compact(value) {
	    var queue = [{ obj: { o: value }, prop: 'o' }];
	    var refs = [];
	
	    for (var i = 0; i < queue.length; ++i) {
	        var item = queue[i];
	        var obj = item.obj[item.prop];
	
	        var keys = Object.keys(obj);
	        for (var j = 0; j < keys.length; ++j) {
	            var key = keys[j];
	            var val = obj[key];
	            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
	                queue.push({ obj: obj, prop: key });
	                refs.push(val);
	            }
	        }
	    }
	
	    return compactQueue(queue);
	};
	
	exports.isRegExp = function isRegExp(obj) {
	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};
	
	exports.isBuffer = function isBuffer(obj) {
	    if (obj === null || typeof obj === 'undefined') {
	        return false;
	    }
	
	    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
	};


/***/ }),
/* 888 */
/***/ (function(module, exports) {

	'use strict';
	
	var replace = String.prototype.replace;
	var percentTwenties = /%20/g;
	
	module.exports = {
	    'default': 'RFC3986',
	    formatters: {
	        RFC1738: function (value) {
	            return replace.call(value, percentTwenties, '+');
	        },
	        RFC3986: function (value) {
	            return value;
	        }
	    },
	    RFC1738: 'RFC1738',
	    RFC3986: 'RFC3986'
	};


/***/ }),
/* 889 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(887);
	
	var has = Object.prototype.hasOwnProperty;
	
	var defaults = {
	    allowDots: false,
	    allowPrototypes: false,
	    arrayLimit: 20,
	    decoder: utils.decode,
	    delimiter: '&',
	    depth: 5,
	    parameterLimit: 1000,
	    plainObjects: false,
	    strictNullHandling: false
	};
	
	var parseValues = function parseQueryStringValues(str, options) {
	    var obj = {};
	    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
	    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
	    var parts = cleanStr.split(options.delimiter, limit);
	
	    for (var i = 0; i < parts.length; ++i) {
	        var part = parts[i];
	
	        var bracketEqualsPos = part.indexOf(']=');
	        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
	
	        var key, val;
	        if (pos === -1) {
	            key = options.decoder(part, defaults.decoder);
	            val = options.strictNullHandling ? null : '';
	        } else {
	            key = options.decoder(part.slice(0, pos), defaults.decoder);
	            val = options.decoder(part.slice(pos + 1), defaults.decoder);
	        }
	        if (has.call(obj, key)) {
	            obj[key] = [].concat(obj[key]).concat(val);
	        } else {
	            obj[key] = val;
	        }
	    }
	
	    return obj;
	};
	
	var parseObject = function (chain, val, options) {
	    var leaf = val;
	
	    for (var i = chain.length - 1; i >= 0; --i) {
	        var obj;
	        var root = chain[i];
	
	        if (root === '[]') {
	            obj = [];
	            obj = obj.concat(leaf);
	        } else {
	            obj = options.plainObjects ? Object.create(null) : {};
	            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
	            var index = parseInt(cleanRoot, 10);
	            if (
	                !isNaN(index)
	                && root !== cleanRoot
	                && String(index) === cleanRoot
	                && index >= 0
	                && (options.parseArrays && index <= options.arrayLimit)
	            ) {
	                obj = [];
	                obj[index] = leaf;
	            } else {
	                obj[cleanRoot] = leaf;
	            }
	        }
	
	        leaf = obj;
	    }
	
	    return leaf;
	};
	
	var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
	    if (!givenKey) {
	        return;
	    }
	
	    // Transform dot notation to bracket notation
	    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
	
	    // The regex chunks
	
	    var brackets = /(\[[^[\]]*])/;
	    var child = /(\[[^[\]]*])/g;
	
	    // Get the parent
	
	    var segment = brackets.exec(key);
	    var parent = segment ? key.slice(0, segment.index) : key;
	
	    // Stash the parent if it exists
	
	    var keys = [];
	    if (parent) {
	        // If we aren't using plain objects, optionally prefix keys
	        // that would overwrite object prototype properties
	        if (!options.plainObjects && has.call(Object.prototype, parent)) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	
	        keys.push(parent);
	    }
	
	    // Loop through children appending to the array until we hit depth
	
	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {
	        i += 1;
	        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	        keys.push(segment[1]);
	    }
	
	    // If there's a remainder, just add whatever is left
	
	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }
	
	    return parseObject(keys, val, options);
	};
	
	module.exports = function (str, opts) {
	    var options = opts ? utils.assign({}, opts) : {};
	
	    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
	        throw new TypeError('Decoder has to be a function.');
	    }
	
	    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
	    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
	    options.parseArrays = options.parseArrays !== false;
	    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
	    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
	    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
	    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
	    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
	
	    if (str === '' || str === null || typeof str === 'undefined') {
	        return options.plainObjects ? Object.create(null) : {};
	    }
	
	    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};
	
	    // Iterate over the keys and setup the new object
	
	    var keys = Object.keys(tempObj);
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        var newObj = parseKeys(key, tempObj[key], options);
	        obj = utils.merge(obj, newObj, options);
	    }
	
	    return utils.compact(obj);
	};


/***/ }),
/* 890 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(780),
	    createWrap = __webpack_require__(837),
	    getHolder = __webpack_require__(863),
	    replaceHolders = __webpack_require__(865);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of `thisArg`
	 * and `partials` prepended to the arguments it receives.
	 *
	 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	 * property of bound functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new bound function.
	 * @example
	 *
	 * function greet(greeting, punctuation) {
	 *   return greeting + ' ' + this.user + punctuation;
	 * }
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * var bound = _.bind(greet, object, 'hi');
	 * bound('!');
	 * // => 'hi fred!'
	 *
	 * // Bound with placeholders.
	 * var bound = _.bind(greet, object, _, '!');
	 * bound('hi');
	 * // => 'hi fred!'
	 */
	var bind = baseRest(function(func, thisArg, partials) {
	  var bitmask = WRAP_BIND_FLAG;
	  if (partials.length) {
	    var holders = replaceHolders(partials, getHolder(bind));
	    bitmask |= WRAP_PARTIAL_FLAG;
	  }
	  return createWrap(func, bitmask, thisArg, partials, holders);
	});
	
	// Assign default placeholders.
	bind.placeholder = {};
	
	module.exports = bind;


/***/ }),
/* 891 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(892),
	    flatRest = __webpack_require__(760);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});
	
	module.exports = pick;


/***/ }),
/* 892 */
/***/ (function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(874),
	    hasIn = __webpack_require__(711);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}
	
	module.exports = basePick;


/***/ }),
/* 893 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(728),
	    baseForOwn = __webpack_require__(784),
	    baseIteratee = __webpack_require__(612);
	
	/**
	 * The opposite of `_.mapValues`; this method creates an object with the
	 * same values as `object` and keys generated by running each own enumerable
	 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	 * with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.8.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapValues
	 * @example
	 *
	 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   return key + value;
	 * });
	 * // => { 'a1': 1, 'b2': 2 }
	 */
	function mapKeys(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, iteratee(value, key, object), value);
	  });
	  return result;
	}
	
	module.exports = mapKeys;


/***/ }),
/* 894 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(728),
	    baseForOwn = __webpack_require__(784),
	    baseIteratee = __webpack_require__(612);
	
	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}
	
	module.exports = mapValues;


/***/ }),
/* 895 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '2.26.0';


/***/ }),
/* 896 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createWidgetsManager;
	
	var _utils = __webpack_require__(897);
	
	function createWidgetsManager(onWidgetsUpdate) {
	  var widgets = [];
	  // Is an update scheduled?
	  var scheduled = false;
	
	  // The state manager's updates need to be batched since more than one
	  // component can register or unregister widgets during the same tick.
	  function scheduleUpdate() {
	    if (scheduled) {
	      return;
	    }
	    scheduled = true;
	    (0, _utils.defer)(function () {
	      scheduled = false;
	      onWidgetsUpdate();
	    });
	  }
	
	  return {
	    registerWidget: function registerWidget(widget) {
	      widgets.push(widget);
	      scheduleUpdate();
	      return function unregisterWidget() {
	        widgets.splice(widgets.indexOf(widget), 1);
	        scheduleUpdate();
	      };
	    },
	
	    update: scheduleUpdate,
	    getWidgets: function getWidgets() {
	      return widgets;
	    }
	  };
	}

/***/ }),
/* 897 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.removeEmptyKey = exports.defer = exports.getDisplayName = exports.shallowEqual = undefined;
	
	var _isPlainObject2 = __webpack_require__(257);
	
	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
	
	var _isEmpty2 = __webpack_require__(723);
	
	var _isEmpty3 = _interopRequireDefault(_isEmpty2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js
	var shallowEqual = exports.shallowEqual = function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	};
	
	var getDisplayName = exports.getDisplayName = function getDisplayName(Component) {
	  return Component.displayName || Component.name || 'UnknownComponent';
	};
	
	var resolved = Promise.resolve();
	var defer = exports.defer = function defer(f) {
	  resolved.then(f);
	};
	
	var removeEmptyKey = exports.removeEmptyKey = function removeEmptyKey(obj) {
	  Object.keys(obj).forEach(function (key) {
	    var value = obj[key];
	    if ((0, _isEmpty3.default)(value) && (0, _isPlainObject3.default)(value)) {
	      delete obj[key];
	    } else if ((0, _isPlainObject3.default)(value)) {
	      removeEmptyKey(value);
	    }
	  });
	
	  return obj;
	};

/***/ }),
/* 898 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createStore;
	function createStore(initialState) {
	  var state = initialState;
	  var listeners = [];
	  function dispatch() {
	    listeners.forEach(function (listener) {
	      return listener();
	    });
	  }
	  return {
	    getState: function getState() {
	      return state;
	    },
	    setState: function setState(nextState) {
	      state = nextState;
	      dispatch();
	    },
	    subscribe: function subscribe(listener) {
	      listeners.push(listener);
	      return function unsubcribe() {
	        listeners.splice(listeners.indexOf(listener), 1);
	      };
	    }
	  };
	}

/***/ }),
/* 899 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.HIGHLIGHT_TAGS = undefined;
	
	var _get2 = __webpack_require__(699);
	
	var _get3 = _interopRequireDefault(_get2);
	
	exports.parseAlgoliaHit = parseAlgoliaHit;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HIGHLIGHT_TAGS = exports.HIGHLIGHT_TAGS = {
	  highlightPreTag: '<ais-highlight-0000000000>',
	  highlightPostTag: '</ais-highlight-0000000000>'
	};
	
	/**
	 * Parses an highlighted attribute into an array of objects with the string value, and
	 * a boolean that indicated if this part is highlighted.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature
	 * @return {object[]} - An array of {value: string, isDefined: boolean}.
	 */
	function parseHighlightedAttribute(_ref) {
	  var preTag = _ref.preTag,
	      postTag = _ref.postTag,
	      _ref$highlightedValue = _ref.highlightedValue,
	      highlightedValue = _ref$highlightedValue === undefined ? '' : _ref$highlightedValue;
	
	  var splitByPreTag = highlightedValue.split(preTag);
	  var firstValue = splitByPreTag.shift();
	  var elements = firstValue === '' ? [] : [{ value: firstValue, isHighlighted: false }];
	
	  if (postTag === preTag) {
	    var isHighlighted = true;
	    splitByPreTag.forEach(function (split) {
	      elements.push({ value: split, isHighlighted: isHighlighted });
	      isHighlighted = !isHighlighted;
	    });
	  } else {
	    splitByPreTag.forEach(function (split) {
	      var splitByPostTag = split.split(postTag);
	
	      elements.push({
	        value: splitByPostTag[0],
	        isHighlighted: true
	      });
	
	      if (splitByPostTag[1] !== '') {
	        elements.push({
	          value: splitByPostTag[1],
	          isHighlighted: false
	        });
	      }
	    });
	  }
	
	  return elements;
	}
	
	/**
	 * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,
	 * and provided an array of objects with the string value and a boolean if this
	 * value is highlighted.
	 *
	 * In order to use this feature, highlight must be activated in the configuration of
	 * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and
	 * highligtPostTag in Algolia configuration.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightProperty - the property that contains the highlight structure in the results
	 * @param {string} attribute - the highlighted attribute to look for
	 * @param {object} hit - the actual hit returned by Algolia.
	 * @return {object[]} - An array of {value: string, isHighlighted: boolean}.
	 */
	function parseAlgoliaHit(_ref2) {
	  var _ref2$preTag = _ref2.preTag,
	      preTag = _ref2$preTag === undefined ? '<em>' : _ref2$preTag,
	      _ref2$postTag = _ref2.postTag,
	      postTag = _ref2$postTag === undefined ? '</em>' : _ref2$postTag,
	      highlightProperty = _ref2.highlightProperty,
	      attribute = _ref2.attribute,
	      hit = _ref2.hit;
	
	  if (!hit) throw new Error('`hit`, the matching record, must be provided');
	
	  var highlightObject = (0, _get3.default)(hit[highlightProperty], attribute, {});
	
	  if (Array.isArray(highlightObject)) {
	    return highlightObject.map(function (item) {
	      return parseHighlightedAttribute({
	        preTag: preTag,
	        postTag: postTag,
	        highlightedValue: item.value
	      });
	    });
	  }
	
	  return parseHighlightedAttribute({
	    preTag: preTag,
	    postTag: postTag,
	    highlightedValue: highlightObject.value
	  });
	}

/***/ }),
/* 900 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = '5.2.2';

/***/ }),
/* 901 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Index = __webpack_require__(902);
	
	var _Index2 = _interopRequireDefault(_Index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Creates a specialized root Index component. It accepts
	 * a specification of the root Element.
	 * @param {object} defaultRoot - the defininition of the root of an Index sub tree.
	 * @return {object} a Index root
	 */
	var createIndex = function createIndex(defaultRoot) {
	  var CreateIndex = function CreateIndex(_ref) {
	    var indexName = _ref.indexName,
	        root = _ref.root,
	        children = _ref.children;
	    return _react2.default.createElement(
	      _Index2.default,
	      { indexName: indexName, root: root },
	      children
	    );
	  };
	
	  CreateIndex.propTypes = {
	    indexName: _propTypes2.default.string.isRequired,
	    root: _propTypes2.default.shape({
	      Root: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,
	      props: _propTypes2.default.object
	    }),
	    children: _propTypes2.default.node
	  };
	
	  CreateIndex.defaultProps = {
	    root: defaultRoot
	  };
	
	  return CreateIndex;
	};
	
	exports.default = createIndex;

/***/ }),
/* 902 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/* eslint valid-jsdoc: 0 */
	/**
	 * @description
	 * `<Index>` is the component that allows you to apply widgets to a dedicated index. It's
	 * useful if you want to build an interface that targets multiple indices.
	 * @kind widget
	 * @name <Index>
	 * @propType {string} indexName - index in which to search.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <SearchBox />
	 *     <Index indexName="ikea">
	 *       <Hits />
	 *     </Index>
	 *     <Index indexName="bestbuy">
	 *       <Hits />
	 *     </Index>
	 *   </InstantSearch>
	 * );
	 */
	var Index = function (_Component) {
	  _inherits(Index, _Component);
	
	  function Index(props, context) {
	    _classCallCheck(this, Index);
	
	    var _this = _possibleConstructorReturn(this, (Index.__proto__ || Object.getPrototypeOf(Index)).call(this, props));
	
	    var widgetsManager = context.ais.widgetsManager;
	
	    /*
	     we want <Index> to be seen as a regular widget.
	     It means that with only <Index> present a new query will be sent to Algolia.
	     That way you don't need a virtual hits widget to use the connectAutoComplete.
	    */
	
	    _this.unregisterWidget = widgetsManager.registerWidget(_this);
	    return _this;
	  }
	
	  _createClass(Index, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.context.ais.onSearchParameters(this.getSearchParameters, this.getChildContext(), this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.indexName !== nextProps.indexName) {
	        this.context.ais.widgetsManager.update();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unregisterWidget();
	    }
	  }, {
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        multiIndexContext: {
	          targetedIndex: this.props.indexName
	        }
	      };
	    }
	  }, {
	    key: 'getSearchParameters',
	    value: function getSearchParameters(searchParameters, props) {
	      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	      var _props$root = this.props.root,
	          Root = _props$root.Root,
	          props = _props$root.props;
	
	      if (childrenCount === 0) return null;else return _react2.default.createElement(
	        Root,
	        props,
	        this.props.children
	      );
	    }
	  }]);
	
	  return Index;
	}(_react.Component);
	
	Index.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes2.default.string.isRequired,
	  children: _propTypes2.default.node,
	  root: _propTypes2.default.shape({
	    Root: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
	    props: _propTypes2.default.object
	  }).isRequired
	};
	
	Index.childContextTypes = {
	  multiIndexContext: _propTypes2.default.object.isRequired
	};
	
	Index.contextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes2.default.object.isRequired
	};
	
	exports.default = Index;

/***/ }),
/* 903 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _find2 = __webpack_require__(610);
	
	var _find3 = _interopRequireDefault(_find2);
	
	var _isEqual2 = __webpack_require__(801);
	
	var _isEqual3 = _interopRequireDefault(_isEqual2);
	
	var _has2 = __webpack_require__(904);
	
	var _has3 = _interopRequireDefault(_has2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = createConnector;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _utils = __webpack_require__(897);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * @typedef {object} ConnectorDescription
	 * @property {string} displayName - the displayName used by the wrapper
	 * @property {function} refine - a function to filter the local state
	 * @property {function} getSearchParameters - function transforming the local state to a SearchParameters
	 * @property {function} getMetadata - metadata of the widget
	 * @property {function} transitionState - hook after the state has changed
	 * @property {function} getProvidedProps - transform the state into props passed to the wrapped component.
	 * Receives (props, widgetStates, searchState, metadata) and returns the local state.
	 * @property {function} getId - Receives props and return the id that will be used to identify the widget
	 * @property {function} cleanUp - hook when the widget will unmount. Receives (props, searchState) and return a cleaned state.
	 * @property {object} propTypes - PropTypes forwarded to the wrapped component.
	 * @property {object} defaultProps - default values for the props
	 */
	
	/**
	 * Connectors are the HOC used to transform React components
	 * into InstantSearch widgets.
	 * In order to simplify the construction of such connectors
	 * `createConnector` takes a description and transform it into
	 * a connector.
	 * @param {ConnectorDescription} connectorDesc the description of the connector
	 * @return {Connector} a function that wraps a component into
	 * an instantsearch connected one.
	 */
	function createConnector(connectorDesc) {
	  if (!connectorDesc.displayName) {
	    throw new Error('`createConnector` requires you to provide a `displayName` property.');
	  }
	
	  var hasRefine = (0, _has3.default)(connectorDesc, 'refine');
	  var hasSearchForFacetValues = (0, _has3.default)(connectorDesc, 'searchForFacetValues');
	  var hasSearchParameters = (0, _has3.default)(connectorDesc, 'getSearchParameters');
	  var hasMetadata = (0, _has3.default)(connectorDesc, 'getMetadata');
	  var hasTransitionState = (0, _has3.default)(connectorDesc, 'transitionState');
	  var hasCleanUp = (0, _has3.default)(connectorDesc, 'cleanUp');
	  var hasShouldComponentUpdate = (0, _has3.default)(connectorDesc, 'shouldComponentUpdate');
	  var isWidget = hasSearchParameters || hasMetadata || hasTransitionState;
	
	  return function (Composed) {
	    var _class, _temp, _initialiseProps;
	
	    return _temp = _class = function (_Component) {
	      _inherits(Connector, _Component);
	
	      function Connector(props, context) {
	        _classCallCheck(this, Connector);
	
	        var _this = _possibleConstructorReturn(this, (Connector.__proto__ || Object.getPrototypeOf(Connector)).call(this, props, context));
	
	        _initialiseProps.call(_this);
	
	        var _context$ais = context.ais,
	            store = _context$ais.store,
	            widgetsManager = _context$ais.widgetsManager;
	
	        var canRender = false;
	        _this.state = {
	          props: _this.getProvidedProps(_extends({}, props, { canRender: canRender })),
	          canRender: canRender // use to know if a component is rendered (browser), or not (server).
	        };
	
	        _this.unsubscribe = store.subscribe(function () {
	          if (_this.state.canRender) {
	            _this.setState({
	              props: _this.getProvidedProps(_extends({}, _this.props, {
	                canRender: _this.state.canRender
	              }))
	            });
	          }
	        });
	        if (isWidget) {
	          _this.unregisterWidget = widgetsManager.registerWidget(_this);
	        }
	        if (false) {
	          var onlyGetProvidedPropsUsage = !(0, _find3.default)(Object.keys(connectorDesc), function (key) {
	            return ['getMetadata', 'getSearchParameters', 'refine', 'cleanUp'].indexOf(key) > -1;
	          });
	
	          if (onlyGetProvidedPropsUsage && connectorDesc.displayName.substr(0, 7) !== 'Algolia') {
	            // eslint-disable-next-line no-console
	            console.warn('react-instantsearch: it seems that you are using the `createConnector` api ' + 'only to access the `searchState` and the `searchResults` through `getProvidedProps`.' + 'We are now provided a dedicated API' + ' the `connectStateResults` connector that you should use instead. The `createConnector` API will be ' + 'soon deprecated and will break in future next major versions.' + '\n\n' + 'See more at https://community.algolia.com/react-instantsearch/connectors/connectStateResults.html' + '\n' + 'and https://community.algolia.com/react-instantsearch/guide/Conditional_display.html');
	          }
	        }
	        return _this;
	      }
	
	      _createClass(Connector, [{
	        key: 'getMetadata',
	        value: function getMetadata(nextWidgetsState) {
	          if (hasMetadata) {
	            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);
	          }
	          return {};
	        }
	      }, {
	        key: 'getSearchParameters',
	        value: function getSearchParameters(searchParameters) {
	          if (hasSearchParameters) {
	            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.context.ais.store.getState().widgets);
	          }
	          return null;
	        }
	      }, {
	        key: 'transitionState',
	        value: function transitionState(prevWidgetsState, nextWidgetsState) {
	          if (hasTransitionState) {
	            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);
	          }
	          return nextWidgetsState;
	        }
	      }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          this.setState({
	            canRender: true
	          });
	        }
	      }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	          if (connectorDesc.getSearchParameters) {
	            this.context.ais.onSearchParameters(connectorDesc.getSearchParameters, this.context, this.props);
	          }
	        }
	      }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	          if (!(0, _isEqual3.default)(this.props, nextProps)) {
	            this.setState({
	              props: this.getProvidedProps(nextProps)
	            });
	
	            if (isWidget) {
	              // Since props might have changed, we need to re-run getSearchParameters
	              // and getMetadata with the new props.
	              this.context.ais.widgetsManager.update();
	              if (connectorDesc.transitionState) {
	                this.context.ais.onSearchStateChange(connectorDesc.transitionState.call(this, nextProps, this.context.ais.store.getState().widgets, this.context.ais.store.getState().widgets));
	              }
	            }
	          }
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          this.unsubscribe();
	          if (isWidget) {
	            this.unregisterWidget(); // will schedule an update
	            if (hasCleanUp) {
	              var newState = connectorDesc.cleanUp.call(this, this.props, this.context.ais.store.getState().widgets);
	              this.context.ais.store.setState(_extends({}, this.context.ais.store.getState(), {
	                widgets: newState
	              }));
	              this.context.ais.onSearchStateChange((0, _utils.removeEmptyKey)(newState));
	            }
	          }
	        }
	      }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {
	          if (hasShouldComponentUpdate) {
	            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);
	          }
	
	          var propsEqual = (0, _utils.shallowEqual)(this.props, nextProps);
	          if (this.state.props === null || nextState.props === null) {
	            if (this.state.props === nextState.props) {
	              return !propsEqual;
	            }
	            return true;
	          }
	          return !propsEqual || !(0, _utils.shallowEqual)(this.state.props, nextState.props);
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          if (this.state.props === null) {
	            return null;
	          }
	
	          var refineProps = hasRefine ? { refine: this.refine, createURL: this.createURL } : {};
	
	          var searchForFacetValuesProps = hasSearchForFacetValues ? { searchForItems: this.searchForFacetValues } : {};
	
	          return _react2.default.createElement(Composed, _extends({}, this.props, this.state.props, refineProps, searchForFacetValuesProps));
	        }
	      }]);
	
	      return Connector;
	    }(_react.Component), _class.displayName = connectorDesc.displayName + '(' + (0, _utils.getDisplayName)(Composed) + ')', _class.defaultClassNames = Composed.defaultClassNames, _class.propTypes = connectorDesc.propTypes, _class.defaultProps = connectorDesc.defaultProps, _class.contextTypes = {
	      // @TODO: more precise state manager propType
	      ais: _propTypes2.default.object.isRequired,
	      multiIndexContext: _propTypes2.default.object
	    }, _initialiseProps = function _initialiseProps() {
	      var _this2 = this;
	
	      this.getProvidedProps = function (props) {
	        var store = _this2.context.ais.store;
	
	        var _store$getState = store.getState(),
	            results = _store$getState.results,
	            searching = _store$getState.searching,
	            error = _store$getState.error,
	            widgets = _store$getState.widgets,
	            metadata = _store$getState.metadata,
	            resultsFacetValues = _store$getState.resultsFacetValues,
	            searchingForFacetValues = _store$getState.searchingForFacetValues,
	            isSearchStalled = _store$getState.isSearchStalled;
	
	        var searchResults = {
	          results: results,
	          searching: searching,
	          error: error,
	          searchingForFacetValues: searchingForFacetValues,
	          isSearchStalled: isSearchStalled
	        };
	        return connectorDesc.getProvidedProps.call(_this2, props, widgets, searchResults, metadata, resultsFacetValues);
	      };
	
	      this.refine = function () {
	        var _connectorDesc$refine;
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        _this2.context.ais.onInternalStateUpdate((_connectorDesc$refine = connectorDesc.refine).call.apply(_connectorDesc$refine, [_this2, _this2.props, _this2.context.ais.store.getState().widgets].concat(args)));
	      };
	
	      this.searchForFacetValues = function () {
	        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	          args[_key2] = arguments[_key2];
	        }
	
	        _this2.context.ais.onSearchForFacetValues(connectorDesc.searchForFacetValues.apply(connectorDesc, [_this2.props, _this2.context.ais.store.getState().widgets].concat(args)));
	      };
	
	      this.createURL = function () {
	        var _connectorDesc$refine2;
	
	        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	          args[_key3] = arguments[_key3];
	        }
	
	        return _this2.context.ais.createHrefForState((_connectorDesc$refine2 = connectorDesc.refine).call.apply(_connectorDesc$refine2, [_this2, _this2.props, _this2.context.ais.store.getState().widgets].concat(args)));
	      };
	
	      this.cleanUp = function () {
	        var _connectorDesc$cleanU;
	
	        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	          args[_key4] = arguments[_key4];
	        }
	
	        return (_connectorDesc$cleanU = connectorDesc.cleanUp).call.apply(_connectorDesc$cleanU, [_this2].concat(args));
	      };
	    }, _temp;
	  };
	}

/***/ }),
/* 904 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(905),
	    hasPath = __webpack_require__(713);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ }),
/* 905 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}
	
	module.exports = baseHas;


/***/ }),
/* 906 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _has2 = __webpack_require__(904);
	
	var _has3 = _interopRequireDefault(_has2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = translatable;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var withKeysPropType = function withKeysPropType(keys) {
	  return function (props, propName, componentName) {
	    var prop = props[propName];
	    if (prop) {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = Object.keys(prop)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var key = _step.value;
	
	          if (keys.indexOf(key) === -1) {
	            return new Error('Unknown `' + propName + '` key `' + key + '`. Check the render method ' + ('of `' + componentName + '`.'));
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	    return undefined;
	  };
	};
	
	function translatable(defaultTranslations) {
	  return function (Composed) {
	    var Translatable = function (_Component) {
	      _inherits(Translatable, _Component);
	
	      function Translatable() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, Translatable);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Translatable.__proto__ || Object.getPrototypeOf(Translatable)).call.apply(_ref, [this].concat(args))), _this), _this.translate = function (key) {
	          for (var _len2 = arguments.length, params = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	            params[_key2 - 1] = arguments[_key2];
	          }
	
	          var translations = _this.props.translations;
	
	
	          var translation = translations && (0, _has3.default)(translations, key) ? translations[key] : defaultTranslations[key];
	
	          if (typeof translation === 'function') {
	            return translation.apply(undefined, params);
	          }
	
	          return translation;
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	      }
	
	      _createClass(Translatable, [{
	        key: 'render',
	        value: function render() {
	          return _react2.default.createElement(Composed, _extends({ translate: this.translate }, this.props));
	        }
	      }]);
	
	      return Translatable;
	    }(_react.Component);
	
	    var name = Composed.displayName || Composed.name || 'UnknownComponent';
	
	    Translatable.displayName = 'Translatable(' + name + ')';
	
	    Translatable.propTypes = {
	      translations: withKeysPropType(Object.keys(defaultTranslations))
	    };
	
	    return Translatable;
	  };
	}

/***/ }),
/* 907 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _connectConfigure = __webpack_require__(908);
	
	var _connectConfigure2 = _interopRequireDefault(_connectConfigure);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Configure is a widget that lets you provide raw search parameters
	 * to the Algolia API.
	 *
	 * Any of the props added to this widget will be forwarded to Algolia. For more information
	 * on the different parameters that can be set, have a look at the
	 * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).
	 *
	 * This widget can be used either with react-dom and react-native. It will not render anything
	 * on screen, only configure some parameters.
	 *
	 * Read more in the [Search parameters](guide/Search_parameters.html) guide.
	 * @name Configure
	 * @kind widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _connectConfigure2.default)(function () {
	  return null;
	});

/***/ }),
/* 908 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _keys2 = __webpack_require__(673);
	
	var _keys3 = _interopRequireDefault(_keys2);
	
	var _difference2 = __webpack_require__(909);
	
	var _difference3 = _interopRequireDefault(_difference2);
	
	var _omit2 = __webpack_require__(724);
	
	var _omit3 = _interopRequireDefault(_omit2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId() {
	  return 'configure';
	}
	
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaConfigure',
	  getProvidedProps: function getProvidedProps() {
	    return {};
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props) {
	    var items = (0, _omit3.default)(props, 'children');
	    return searchParameters.setQueryParameters(items);
	  },
	  transitionState: function transitionState(props, prevSearchState, nextSearchState) {
	    var id = getId();
	    var items = (0, _omit3.default)(props, 'children');
	    var nonPresentKeys = this._props ? (0, _difference3.default)((0, _keys3.default)(this._props), (0, _keys3.default)(props)) : [];
	    this._props = props;
	    var nextValue = _defineProperty({}, id, _extends({}, (0, _omit3.default)(nextSearchState[id], nonPresentKeys), items));
	    return (0, _indexUtils.refineValue)(nextSearchState, nextValue, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    var id = getId();
	    var index = (0, _indexUtils.getIndex)(this.context);
	    var subState = (0, _indexUtils.hasMultipleIndex)(this.context) && searchState.indices ? searchState.indices[index] : searchState;
	    var configureKeys = subState && subState[id] ? Object.keys(subState[id]) : [];
	    var configureState = configureKeys.reduce(function (acc, item) {
	      if (!props[item]) {
	        acc[item] = subState[id][item];
	      }
	      return acc;
	    }, {});
	    var nextValue = _defineProperty({}, id, configureState);
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context);
	  }
	});

/***/ }),
/* 909 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(910),
	    baseFlatten = __webpack_require__(762),
	    baseRest = __webpack_require__(780),
	    isArrayLikeObject = __webpack_require__(782);
	
	/**
	 * Creates an array of `array` values not included in the other given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * **Note:** Unlike `_.pullAll`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.without, _.xor
	 * @example
	 *
	 * _.difference([2, 1], [2, 3]);
	 * // => [1]
	 */
	var difference = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	    : [];
	});
	
	module.exports = difference;


/***/ }),
/* 910 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(656),
	    arrayIncludes = __webpack_require__(775),
	    arrayIncludesWith = __webpack_require__(779),
	    arrayMap = __webpack_require__(709),
	    baseUnary = __webpack_require__(684),
	    cacheHas = __webpack_require__(660);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ }),
/* 911 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _get2 = __webpack_require__(699);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _omit2 = __webpack_require__(724);
	
	var _omit3 = _interopRequireDefault(_omit2);
	
	var _has2 = __webpack_require__(904);
	
	var _has3 = _interopRequireDefault(_has2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.getIndex = getIndex;
	exports.getResults = getResults;
	exports.hasMultipleIndex = hasMultipleIndex;
	exports.refineValue = refineValue;
	exports.getCurrentRefinementValue = getCurrentRefinementValue;
	exports.cleanUpValue = cleanUpValue;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getIndex(context) {
	  return context && context.multiIndexContext ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;
	}
	
	function getResults(searchResults, context) {
	  if (searchResults.results && !searchResults.results.hits) {
	    return searchResults.results[getIndex(context)] ? searchResults.results[getIndex(context)] : null;
	  } else {
	    return searchResults.results ? searchResults.results : null;
	  }
	}
	
	function hasMultipleIndex(context) {
	  return context && context.multiIndexContext;
	}
	
	// eslint-disable-next-line max-params
	function refineValue(searchState, nextRefinement, context, resetPage, namespace) {
	  if (hasMultipleIndex(context)) {
	    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, context, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, context, resetPage);
	  } else {
	    // When we have a multi index page with shared widgets we should also
	    // reset their page to 1 if the resetPage is provided. Otherwise the
	    // indices will always be reset
	    // see: https://github.com/algolia/react-instantsearch/issues/310
	    // see: https://github.com/algolia/react-instantsearch/issues/637
	    if (searchState.indices && resetPage) {
	      Object.keys(searchState.indices).forEach(function (targetedIndex) {
	        searchState = refineValue(searchState, { page: 1 }, { multiIndexContext: { targetedIndex: targetedIndex } }, true, namespace);
	      });
	    }
	    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);
	  }
	}
	
	function refineMultiIndex(searchState, nextRefinement, context, resetPage) {
	  var page = resetPage ? { page: 1 } : undefined;
	  var index = getIndex(context);
	  var state = (0, _has3.default)(searchState, 'indices.' + index) ? _extends({}, searchState.indices, _defineProperty({}, index, _extends({}, searchState.indices[index], nextRefinement, page))) : _extends({}, searchState.indices, _defineProperty({}, index, _extends({}, nextRefinement, page)));
	  return _extends({}, searchState, { indices: state });
	}
	
	function refineSingleIndex(searchState, nextRefinement, resetPage) {
	  var page = resetPage ? { page: 1 } : undefined;
	  return _extends({}, searchState, nextRefinement, page);
	}
	
	// eslint-disable-next-line max-params
	function refineMultiIndexWithNamespace(searchState, nextRefinement, context, resetPage, namespace) {
	  var _extends4;
	
	  var index = getIndex(context);
	  var page = resetPage ? { page: 1 } : undefined;
	  var state = (0, _has3.default)(searchState, 'indices.' + index) ? _extends({}, searchState.indices, _defineProperty({}, index, _extends({}, searchState.indices[index], (_extends4 = {}, _defineProperty(_extends4, namespace, _extends({}, searchState.indices[index][namespace], nextRefinement)), _defineProperty(_extends4, 'page', 1), _extends4)))) : _extends({}, searchState.indices, _defineProperty({}, index, _extends(_defineProperty({}, namespace, nextRefinement), page)));
	  return _extends({}, searchState, { indices: state });
	}
	
	function refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {
	  var page = resetPage ? { page: 1 } : undefined;
	  return _extends({}, searchState, _defineProperty({}, namespace, _extends({}, searchState[namespace], nextRefinement)), page);
	}
	
	function getNamespaceAndAttributeName(id) {
	  var parts = id.match(/^([^.]*)\.(.*)/);
	  var namespace = parts && parts[1];
	  var attributeName = parts && parts[2];
	
	  return { namespace: namespace, attributeName: attributeName };
	}
	
	// eslint-disable-next-line max-params
	function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {
	  var refinementsCallback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (x) {
	    return x;
	  };
	
	  var index = getIndex(context);
	
	  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri.namespace,
	      attributeName = _getNamespaceAndAttri.attributeName;
	
	  var refinements = hasMultipleIndex(context) && searchState.indices && namespace && searchState.indices['' + index] && (0, _has3.default)(searchState.indices['' + index][namespace], '' + attributeName) || hasMultipleIndex(context) && searchState.indices && (0, _has3.default)(searchState, 'indices.' + index + '.' + id) || !hasMultipleIndex(context) && namespace && (0, _has3.default)(searchState[namespace], attributeName) || !hasMultipleIndex(context) && (0, _has3.default)(searchState, id);
	  if (refinements) {
	    var currentRefinement = void 0;
	
	    if (hasMultipleIndex(context)) {
	      currentRefinement = namespace ? (0, _get3.default)(searchState.indices['' + index][namespace], attributeName) : (0, _get3.default)(searchState.indices[index], id);
	    } else {
	      currentRefinement = namespace ? (0, _get3.default)(searchState[namespace], attributeName) : (0, _get3.default)(searchState, id);
	    }
	
	    return refinementsCallback(currentRefinement);
	  }
	
	  if (props.defaultRefinement) {
	    return props.defaultRefinement;
	  }
	
	  return defaultValue;
	}
	
	function cleanUpValue(searchState, context, id) {
	  var indexName = getIndex(context);
	
	  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri2.namespace,
	      attributeName = _getNamespaceAndAttri2.attributeName;
	
	  if (hasMultipleIndex(context) && Boolean(searchState.indices)) {
	    return cleanUpValueWithMutliIndex({
	      attribute: attributeName,
	      searchState: searchState,
	      indexName: indexName,
	      id: id,
	      namespace: namespace
	    });
	  }
	
	  return cleanUpValueWithSingleIndex({
	    attribute: attributeName,
	    searchState: searchState,
	    id: id,
	    namespace: namespace
	  });
	}
	
	function cleanUpValueWithSingleIndex(_ref) {
	  var searchState = _ref.searchState,
	      id = _ref.id,
	      namespace = _ref.namespace,
	      attribute = _ref.attribute;
	
	  if (namespace) {
	    return _extends({}, searchState, _defineProperty({}, namespace, (0, _omit3.default)(searchState[namespace], attribute)));
	  }
	
	  return (0, _omit3.default)(searchState, id);
	}
	
	function cleanUpValueWithMutliIndex(_ref2) {
	  var searchState = _ref2.searchState,
	      indexName = _ref2.indexName,
	      id = _ref2.id,
	      namespace = _ref2.namespace,
	      attribute = _ref2.attribute;
	
	  var index = searchState.indices[indexName];
	
	  if (namespace && index) {
	    return _extends({}, searchState, {
	      indices: _extends({}, searchState.indices, _defineProperty({}, indexName, _extends({}, index, _defineProperty({}, namespace, (0, _omit3.default)(index[namespace], attribute)))))
	    });
	  }
	
	  return (0, _omit3.default)(searchState, 'indices.' + indexName + '.' + id);
	}

/***/ }),
/* 912 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var getId = function getId() {
	  return 'query';
	};
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	    return '';
	  });
	}
	
	function getHits(searchResults) {
	  if (searchResults.results) {
	    if (searchResults.results.hits && Array.isArray(searchResults.results.hits)) {
	      return searchResults.results.hits;
	    } else {
	      return Object.keys(searchResults.results).reduce(function (hits, index) {
	        return [].concat(_toConsumableArray(hits), [{
	          index: index,
	          hits: searchResults.results[index].hits
	        }]);
	      }, []);
	    }
	  } else {
	    return [];
	  }
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = _defineProperty({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	
	/**
	 * connectAutoComplete connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 * @name connectAutoComplete
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {function} refine - a function to change the query
	 * @providedPropType {string} currentRefinement - the query to search for
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaAutoComplete',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      hits: getHits(searchResults),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context)
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	
	
	  /* connectAutoComplete needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	    * */
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  }
	});

/***/ }),
/* 913 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getId = undefined;
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var getId = exports.getId = function getId(props) {
	  return props.attributes[0];
	};
	
	var namespace = 'hierarchicalMenu';
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = _defineProperty({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function transformValue(values) {
	  return values.reduce(function (acc, item) {
	    if (item.isRefined) {
	      acc.push({
	        label: item.name,
	        // If dealing with a nested "items", "value" is equal to the previous value concatenated with the current label
	        // If dealing with the first level, "value" is equal to the current label
	        value: item.path
	      });
	      // Create a variable in order to keep the same acc for the recursion, otherwise "reduce" returns a new one
	      if (item.data) {
	        acc = acc.concat(transformValue(item.data, acc));
	      }
	    }
	    return acc;
	  }, []);
	}
	
	/**
	 * The breadcrumb component is s a type of secondary navigation scheme that
	 * reveals the user’s location in a website or web application.
	 *
	 * @name connectBreadcrumb
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a Breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.
	 */
	
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaBreadcrumb',
	
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');
	      }
	      return undefined;
	    },
	    transformItems: _propTypes2.default.func
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var id = getId(props);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        canRefine: false
	      };
	    }
	
	    var values = results.getFacetValues(id);
	
	    var items = values.data ? transformValue(values.data) : [];
	
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	
	    return {
	      canRefine: transformedItems.length > 0,
	      items: transformedItems
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  }
	});

/***/ }),
/* 914 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * connectCurrentRefinements connector provides the logic to build a widget that will
	 * give the user the ability to remove all or some of the filters that were
	 * set.
	 * @name connectCurrentRefinements
	 * @kind connector
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {function} [clearsQuery=false] - Pass true to also clear the search query
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {array.<{label: string, attribute: string, currentRefinement: string || object, items: array, value: function}>} items - all the filters, the `value` is to pass to the `refine` function for removing all currentrefinements, `label` is for the display. When existing several refinements for the same atribute name, then you get a nested `items` object that contains a `label` and a `value` function to use to remove a single filter. `attribute` and `currentRefinement` are metadata containing row values.
	 * @providedPropType {string} query - the search query
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaCurrentRefinements',
	
	  propTypes: {
	    transformItems: _propTypes2.default.func
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata) {
	    var items = metadata.reduce(function (res, meta) {
	      if (typeof meta.items !== 'undefined') {
	        if (!props.clearsQuery && meta.id === 'query') {
	          return res;
	        } else {
	          if (props.clearsQuery && meta.id === 'query' && meta.items[0].currentRefinement === '') {
	            return res;
	          }
	          return res.concat(meta.items.map(function (item) {
	            return _extends({}, item, {
	              id: meta.id,
	              index: meta.index
	            });
	          }));
	        }
	      }
	      return res;
	    }, []);
	
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      canRefine: items.length > 0
	    };
	  },
	  refine: function refine(props, searchState, items) {
	    // `value` corresponds to our internal clear function computed in each connector metadata.
	    var refinementsToClear = items instanceof Array ? items.map(function (item) {
	      return item.value;
	    }) : [items];
	    return refinementsToClear.reduce(function (res, clear) {
	      return clear(res);
	    }, searchState);
	  }
	});

/***/ }),
/* 915 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isEmpty2 = __webpack_require__(723);
	
	var _isEmpty3 = _interopRequireDefault(_isEmpty2);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * The GeoSearch connector provides the logic to build a widget that will display the results on a map.
	 * It also provides a way to search for results based on their position. The connector provides function to manage the search experience (search on map interaction).
	 * @name connectGeoSearch
	 * @kind connector
	 * @requirements Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia.
	 * Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function. Currently, the feature is not compatible with multiple values in the `_geoloc` attribute
	 * (e.g. a restaurant with multiple locations). In that case you can duplicate your records and use the [distinct](https://www.algolia.com/doc/guides/ranking/distinct) feature of Algolia to only retrieve unique results.
	 * @propType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [defaultRefinement] - Default search state of the widget containing the bounds for the map
	 * @providedPropType {function({ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } })} refine - a function to toggle the refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<object>} hits - the records that matched the search
	 * @providedPropType {boolean} isRefinedWithMap - true if the current refinement is set with the map bounds
	 * @providedPropType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [currentRefinement] - the refinement currently applied
	 * @providedPropType {{ lat: number, lng: number }} [position] - the position of the search
	 */
	
	// To control the map with an external widget the other widget
	// **must** write the value in the attribute `aroundLatLng`
	var getBoundingBoxId = function getBoundingBoxId() {
	  return 'boundingBox';
	};
	var getAroundLatLngId = function getAroundLatLngId() {
	  return 'aroundLatLng';
	};
	var getConfigureAroundLatLngId = function getConfigureAroundLatLngId() {
	  return 'configure.aroundLatLng';
	};
	
	var currentRefinementToString = function currentRefinementToString(currentRefinement) {
	  return [currentRefinement.northEast.lat, currentRefinement.northEast.lng, currentRefinement.southWest.lat, currentRefinement.southWest.lng].join();
	};
	
	var stringToCurrentRefinement = function stringToCurrentRefinement(value) {
	  var values = value.split(',');
	
	  return {
	    northEast: {
	      lat: parseFloat(values[0]),
	      lng: parseFloat(values[1])
	    },
	    southWest: {
	      lat: parseFloat(values[2]),
	      lng: parseFloat(values[3])
	    }
	  };
	};
	
	var latLngRegExp = /^(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)$/;
	var stringToPosition = function stringToPosition(value) {
	  var pattern = value.match(latLngRegExp);
	
	  return {
	    lat: parseFloat(pattern[1]),
	    lng: parseFloat(pattern[2])
	  };
	};
	
	var getCurrentRefinement = function getCurrentRefinement(props, searchState, context) {
	  var refinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, getBoundingBoxId(), {});
	
	  if ((0, _isEmpty3.default)(refinement)) {
	    return;
	  }
	
	  // eslint-disable-next-line consistent-return
	  return {
	    northEast: {
	      lat: parseFloat(refinement.northEast.lat),
	      lng: parseFloat(refinement.northEast.lng)
	    },
	    southWest: {
	      lat: parseFloat(refinement.southWest.lat),
	      lng: parseFloat(refinement.southWest.lng)
	    }
	  };
	};
	
	var getCurrentPosition = function getCurrentPosition(props, searchState, context) {
	  var defaultRefinement = props.defaultRefinement,
	      propsWithoutDefaultRefinement = _objectWithoutProperties(props, ['defaultRefinement']);
	
	  var aroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getAroundLatLngId());
	
	  if (!aroundLatLng) {
	    // Fallback on `configure.aroundLatLng`
	    var configureAroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getConfigureAroundLatLngId());
	
	    return configureAroundLatLng && stringToPosition(configureAroundLatLng);
	  }
	
	  return aroundLatLng;
	};
	
	var _refine = function _refine(searchState, nextValue, context) {
	  var resetPage = true;
	  var nextRefinement = _defineProperty({}, getBoundingBoxId(), nextValue);
	
	  return (0, _indexUtils.refineValue)(searchState, nextRefinement, context, resetPage);
	};
	
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaGeoSearch',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    // We read it from both because the SearchParameters & the searchState are not always
	    // in sync. When we set the refinement the searchState is used but when we clear the refinement
	    // the SearchParameters is used. In the first case when we render, the results are not there
	    // so we can't find the value from the results. The most up to date value is the searchState.
	    // But when we clear the refinement the searchState is immediatly cleared even when the items
	    // retrieved are still the one from the previous query with the bounding box. It leads to some
	    // issue with the position of the map. We should rely on 1 source of truth or at least always
	    // be sync.
	
	    var currentRefinementFromSearchState = getCurrentRefinement(props, searchState, this.context);
	
	    var currentRefinementFromSearchParameters = results && results._state.insideBoundingBox && stringToCurrentRefinement(results._state.insideBoundingBox) || undefined;
	
	    var currentPositionFromSearchState = getCurrentPosition(props, searchState, this.context);
	
	    var currentPositionFromSearchParameters = results && results._state.aroundLatLng && stringToPosition(results._state.aroundLatLng) || undefined;
	
	    var currentRefinement = currentRefinementFromSearchState || currentRefinementFromSearchParameters;
	
	    var position = currentPositionFromSearchState || currentPositionFromSearchParameters;
	
	    return {
	      hits: !results ? [] : results.hits.filter(function (_) {
	        return Boolean(_._geoloc);
	      }),
	      isRefinedWithMap: Boolean(currentRefinement),
	      currentRefinement: currentRefinement,
	      position: position
	    };
	  },
	  refine: function refine(props, searchState, nextValue) {
	    return _refine(searchState, nextValue, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (!currentRefinement) {
	      return searchParameters;
	    }
	
	    return searchParameters.setQueryParameter('insideBoundingBox', currentRefinementToString(currentRefinement));
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getBoundingBoxId());
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var items = [];
	    var id = getBoundingBoxId();
	    var index = (0, _indexUtils.getIndex)(this.context);
	    var nextRefinement = {};
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement) {
	      items.push({
	        label: id + ': ' + currentRefinementToString(currentRefinement),
	        value: function value(nextState) {
	          return _refine(nextState, nextRefinement, _this.context);
	        },
	        currentRefinement: currentRefinement
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  },
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    return true;
	  }
	});

/***/ }),
/* 916 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getId = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _algoliasearchHelper = __webpack_require__(770);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var getId = exports.getId = function getId(props) {
	  return props.attributes[0];
	};
	
	var namespace = 'hierarchicalMenu';
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), null, function (currentRefinement) {
	    if (currentRefinement === '') {
	      return null;
	    }
	    return currentRefinement;
	  });
	}
	
	function getValue(path, props, searchState, context) {
	  var id = props.id,
	      attributes = props.attributes,
	      separator = props.separator,
	      rootPath = props.rootPath,
	      showParentLevel = props.showParentLevel;
	
	
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var nextRefinement = void 0;
	
	  if (currentRefinement === null) {
	    nextRefinement = path;
	  } else {
	    var tmpSearchParameters = new _algoliasearchHelper.SearchParameters({
	      hierarchicalFacets: [{
	        name: id,
	        attributes: attributes,
	        separator: separator,
	        rootPath: rootPath,
	        showParentLevel: showParentLevel
	      }]
	    });
	
	    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];
	  }
	
	  return nextRefinement;
	}
	
	function transformValue(value, props, searchState, context) {
	  return value.map(function (v) {
	    return {
	      label: v.name,
	      value: getValue(v.path, props, searchState, context),
	      count: v.count,
	      isRefined: v.isRefined,
	      items: v.data && transformValue(v.data, props, searchState, context)
	    };
	  });
	}
	
	var truncate = function truncate() {
	  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
	  return items.slice(0, limit).map(function () {
	    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    return Array.isArray(item.items) ? _extends({}, item, {
	      items: truncate(item.items, limit)
	    }) : item;
	  });
	};
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = _defineProperty({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	
	var sortBy = ['name:asc'];
	
	/**
	 * connectHierarchicalMenu connector provides the logic to build a widget that will
	 * give the user the ability to explore a tree-like structure.
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 * @name connectHierarchicalMenu
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string[]} [rootPath=null] - The already selected and hidden path.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaHierarchicalMenu',
	
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');
	      }
	      return undefined;
	    },
	    separator: _propTypes2.default.string,
	    rootPath: _propTypes2.default.string,
	    showParentLevel: _propTypes2.default.bool,
	    defaultRefinement: _propTypes2.default.string,
	    showMore: _propTypes2.default.bool,
	    limit: _propTypes2.default.number,
	    showMoreLimit: _propTypes2.default.number,
	    transformItems: _propTypes2.default.func
	  },
	
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20,
	    separator: ' > ',
	    rootPath: null,
	    showParentLevel: true
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	
	    var id = getId(props);
	
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: false
	      };
	    }
	    var itemsLimit = showMore ? showMoreLimit : limit;
	    var value = results.getFacetValues(id, { sortBy: sortBy });
	    var items = value.data ? transformValue(value.data, props, searchState, this.context) : [];
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: truncate(transformedItems, itemsLimit),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: items.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attributes = props.attributes,
	        separator = props.separator,
	        rootPath = props.rootPath,
	        showParentLevel = props.showParentLevel,
	        showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	
	
	    var id = getId(props);
	    var itemsLimit = showMore ? showMoreLimit : limit;
	
	    searchParameters = searchParameters.addHierarchicalFacet({
	      name: id,
	      attributes: attributes,
	      separator: separator,
	      rootPath: rootPath,
	      showParentLevel: showParentLevel
	    }).setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, itemsLimit)
	    });
	
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var rootAttribute = props.attributes[0];
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndex)(this.context),
	      items: !currentRefinement ? [] : [{
	        label: rootAttribute + ': ' + currentRefinement,
	        attribute: rootAttribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});

/***/ }),
/* 917 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _highlight = __webpack_require__(899);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var highlight = function highlight(_ref) {
	  var attribute = _ref.attribute,
	      hit = _ref.hit,
	      highlightProperty = _ref.highlightProperty,
	      _ref$preTag = _ref.preTag,
	      preTag = _ref$preTag === undefined ? _highlight.HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,
	      _ref$postTag = _ref.postTag,
	      postTag = _ref$postTag === undefined ? _highlight.HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;
	  return (0, _highlight.parseAlgoliaHit)({
	    attribute: attribute,
	    highlightProperty: highlightProperty,
	    hit: hit,
	    preTag: preTag,
	    postTag: postTag
	  });
	};
	
	/**
	 * connectHighlight connector provides the logic to create an highlighter
	 * component that will retrieve, parse and render an highlighted attribute
	 * from an Algolia hit.
	 * @name connectHighlight
	 * @kind connector
	 * @category connector
	 * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';
	 *
	 * const CustomHighlight = connectHighlight(
	 *   ({ highlight, attribute, hit, highlightProperty }) => {
	 *     const highlights = highlight({
	 *       highlightProperty: '_highlightResult',
	 *       attribute,
	 *       hit
	 *     });
	 *
	 *     return highlights.map(part => part.isHighlighted ? (
	 *       <mark>{part.value}</mark>
	 *     ) : (
	 *       <span>{part.value}</span>
	 *     ));
	 *   }
	 * );
	 *
	 * const Hit = ({ hit }) => (
	 *   <p>
	 *     <CustomHighlight attribute="name" hit={hit} />
	 *   </p>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SearchBox defaultRefinement="legi" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaHighlighter',
	
	  propTypes: {},
	
	  getProvidedProps: function getProvidedProps() {
	    return { highlight: highlight };
	  }
	});

/***/ }),
/* 918 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * connectHits connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 *
	 * **Warning:** you will need to use the **objectID** property available on every hit as a key
	 * when iterating over them. This will ensure you have the best possible UI experience
	 * especially on slow networks.
	 * @name connectHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';
	 *
	 * const CustomHits = connectHits(({ hits }) => (
	 *   <div>
	 *     {hits.map(hit =>
	 *       <p key={hit.objectID}>
	 *         <Highlight attribute="name" hit={hit} />
	 *       </p>
	 *     )}
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <CustomHits />
	 *   </InstantSearch>
	 * );
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaHits',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var hits = results ? results.hits : [];
	
	    return { hits: hits };
	  },
	
	
	  /* Hits needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	   * */
	  getSearchParameters: function getSearchParameters(searchParameters) {
	    return searchParameters;
	  }
	});

/***/ }),
/* 919 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId() {
	  return 'hitsPerPage';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      return parseInt(currentRefinement, 10);
	    }
	    return currentRefinement;
	  });
	}
	
	/**
	 * connectHitsPerPage connector provides the logic to create connected
	 * components that will allow a user to choose to display more or less results from Algolia.
	 * @name connectHitsPerPage
	 * @kind connector
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {{value: number, label: string}[]} items - List of hits per page options.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: number}>} items - the list of items the HitsPerPage can display. If no label provided, the value will be displayed.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaHitsPerPage',
	
	  propTypes: {
	    defaultRefinement: _propTypes2.default.number.isRequired,
	    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	      label: _propTypes2.default.string,
	      value: _propTypes2.default.number.isRequired
	    })).isRequired,
	    transformItems: _propTypes2.default.func
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? _extends({}, item, { isRefined: true }) : _extends({}, item, { isRefined: false });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = _defineProperty({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setHitsPerPage(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata() {
	    return { id: getId() };
	  }
	});

/***/ }),
/* 920 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      currentRefinement = parseInt(currentRefinement, 10);
	    }
	    return currentRefinement;
	  });
	}
	
	/**
	 * InfiniteHits connector provides the logic to create connected
	 * components that will render an continuous list of results retrieved from
	 * Algolia. This connector provides a function to load more results.
	 * @name connectInfiniteHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {boolean} hasMore - indicates if there are more pages to load
	 * @providedPropType {function} refine - call to load more results
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaInfiniteHits',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    this._allResults = this._allResults || [];
	    this._previousPage = this._previousPage || 0;
	
	    if (!results) {
	      return {
	        hits: [],
	        hasMore: false
	      };
	    }
	
	    var hits = results.hits,
	        page = results.page,
	        nbPages = results.nbPages;
	
	
	    if (page === 0) {
	      this._allResults = hits;
	    } else if (page > this._previousPage) {
	      this._allResults = [].concat(_toConsumableArray(this._allResults), _toConsumableArray(hits));
	    } else if (page < this._previousPage) {
	      this._allResults = hits;
	    }
	
	    var lastPageIndex = nbPages - 1;
	    var hasMore = page < lastPageIndex;
	
	    this._previousPage = page;
	
	    return {
	      hits: this._allResults,
	      hasMore: hasMore
	    };
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQueryParameters({
	      page: getCurrentRefinement(props, searchState, this.context) - 1
	    });
	  },
	  refine: function refine(props, searchState) {
	    var id = getId();
	    var nextPage = getCurrentRefinement(props, searchState, this.context) + 1;
	    var nextValue = _defineProperty({}, id, nextPage);
	    var resetPage = false;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  }
	});

/***/ }),
/* 921 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _orderBy2 = __webpack_require__(831);
	
	var _orderBy3 = _interopRequireDefault(_orderBy2);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var namespace = 'menu';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), null, function (currentRefinement) {
	    if (currentRefinement === '') {
	      return null;
	    }
	    return currentRefinement;
	  });
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  return name === currentRefinement ? '' : name;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = _defineProperty({}, id, nextRefinement ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	
	var sortBy = ['count:desc', 'name:asc'];
	
	/**
	 * connectMenu connector provides the logic to build a widget that will
	 * give the user the ability to choose a single value for a specific facet.
	 * @name connectMenu
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Menu can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaMenu',
	
	  propTypes: {
	    attribute: _propTypes2.default.string.isRequired,
	    showMore: _propTypes2.default.bool,
	    limit: _propTypes2.default.number,
	    showMoreLimit: _propTypes2.default.number,
	    defaultRefinement: _propTypes2.default.string,
	    transformItems: _propTypes2.default.func,
	    searchable: _propTypes2.default.bool
	  },
	
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, meta, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== '');
	
	    // Search For Facet Values is not available with derived helper (used for multi index search)
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        isFromSearch: isFromSearch,
	        searchable: searchable,
	        canRefine: canRefine
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: { label: { value: v.highlighted } },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, { sortBy: sortBy }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	
	    var sortedItems = searchable && !isFromSearch ? (0, _orderBy3.default)(items, ['isRefined', 'count', 'label'], ['desc', 'desc', 'asc']) : items;
	
	    var transformedItems = props.transformItems ? props.transformItems(sortedItems) : sortedItems;
	
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: items.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	
	
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.addDisjunctiveFacetRefinement(attribute, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this2 = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndex)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: props.attribute + ': ' + currentRefinement,
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this2.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});

/***/ }),
/* 922 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isEmpty2 = __webpack_require__(723);
	
	var _isEmpty3 = _interopRequireDefault(_isEmpty2);
	
	var _find3 = __webpack_require__(610);
	
	var _find4 = _interopRequireDefault(_find3);
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function stringifyItem(item) {
	  if (typeof item.start === 'undefined' && typeof item.end === 'undefined') {
	    return '';
	  }
	  return (item.start ? item.start : '') + ':' + (item.end ? item.end : '');
	}
	
	function parseItem(value) {
	  if (value.length === 0) {
	    return { start: null, end: null };
	  }
	
	  var _value$split = value.split(':'),
	      _value$split2 = _slicedToArray(_value$split, 2),
	      startStr = _value$split2[0],
	      endStr = _value$split2[1];
	
	  return {
	    start: startStr.length > 0 ? parseInt(startStr, 10) : null,
	    end: endStr.length > 0 ? parseInt(endStr, 10) : null
	  };
	}
	
	var namespace = 'multiRange';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), '', function (currentRefinement) {
	    if (currentRefinement === '') {
	      return '';
	    }
	    return currentRefinement;
	  });
	}
	
	function isRefinementsRangeIncludesInsideItemRange(stats, start, end) {
	  return stats.min > start && stats.min < end || stats.max > start && stats.max < end;
	}
	
	function isItemRangeIncludedInsideRefinementsRange(stats, start, end) {
	  return start > stats.min && start < stats.max || end > stats.min && end < stats.max;
	}
	
	function itemHasRefinement(attribute, results, value) {
	  var stats = results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	  var range = value.split(':');
	  var start = Number(range[0]) === 0 || value === '' ? Number.NEGATIVE_INFINITY : Number(range[0]);
	  var end = Number(range[1]) === 0 || value === '' ? Number.POSITIVE_INFINITY : Number(range[1]);
	  return !(Boolean(stats) && (isRefinementsRangeIncludesInsideItemRange(stats, start, end) || isItemRangeIncludedInsideRefinementsRange(stats, start, end)));
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var nextValue = _defineProperty({}, getId(props, searchState), nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	
	/**
	 * connectNumericMenu connector provides the logic to build a widget that will
	 * give the user the ability to select a range value for a numeric attribute.
	 * Ranges are defined statically.
	 * @name connectNumericMenu
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the shape of a `string` with a pattern of `'{start}:{end}'`.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied.  follow the shape of a `string` with a pattern of `'{start}:{end}'` which corresponds to the current selected item. For instance, when the selected item is `{start: 10, end: 20}`, the searchState of the widget is `'10:20'`. When `start` isn't defined, the searchState of the widget is `':{end}'`, and the same way around when `end` isn't defined. However, when neither `start` nor `end` are defined, the searchState is an empty string.
	 * @providedPropType {array.<{isRefined: boolean, label: string, value: string, isRefined: boolean, noRefinement: boolean}>} items - the list of ranges the NumericMenu can display.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaNumericMenu',
	
	  propTypes: {
	    id: _propTypes2.default.string,
	    attribute: _propTypes2.default.string.isRequired,
	    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	      label: _propTypes2.default.node,
	      start: _propTypes2.default.number,
	      end: _propTypes2.default.number
	    })).isRequired,
	    transformItems: _propTypes2.default.func
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute;
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    var items = props.items.map(function (item) {
	      var value = stringifyItem(item);
	      return {
	        label: item.label,
	        value: value,
	        isRefined: value === currentRefinement,
	        noRefinement: results ? itemHasRefinement(getId(props), results, value) : false
	      };
	    });
	
	    var stats = results && results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	    var refinedItem = (0, _find4.default)(items, function (item) {
	      return item.isRefined === true;
	    });
	    if (!items.some(function (item) {
	      return item.value === '';
	    })) {
	      items.push({
	        value: '',
	        isRefined: (0, _isEmpty3.default)(refinedItem),
	        noRefinement: !stats,
	        label: 'All'
	      });
	    }
	
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement,
	      canRefine: items.length > 0 && items.some(function (item) {
	        return item.noRefinement === false;
	      })
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	
	    var _parseItem = parseItem(getCurrentRefinement(props, searchState, this.context)),
	        start = _parseItem.start,
	        end = _parseItem.end;
	
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    if (start) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '>=', start);
	    }
	    if (end) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '<=', end);
	    }
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var value = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndex)(this.context);
	    if (value !== '') {
	      var _find2 = (0, _find4.default)(props.items, function (item) {
	        return stringifyItem(item) === value;
	      }),
	          label = _find2.label;
	
	      items.push({
	        label: props.attribute + ': ' + label,
	        attribute: props.attribute,
	        currentRefinement: label,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        }
	      });
	    }
	    return { id: id, index: index, items: items };
	  }
	});

/***/ }),
/* 923 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      return parseInt(currentRefinement, 10);
	    }
	    return currentRefinement;
	  });
	}
	
	function _refine(props, searchState, nextPage, context) {
	  var id = getId();
	  var nextValue = _defineProperty({}, id, nextPage);
	  var resetPage = false;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	/**
	 * connectPagination connector provides the logic to build a widget that will
	 * let the user displays hits corresponding to a certain page.
	 * @name connectPagination
	 * @kind connector
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {number} nbPages - the total of existing pages
	 * @providedPropType {number} currentRefinement - the page refinement currently applied
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaPagination',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	
	    var nbPages = results.nbPages;
	    return {
	      nbPages: nbPages,
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: nbPages > 1
	    };
	  },
	  refine: function refine(props, searchState, nextPage) {
	    return _refine(props, searchState, nextPage, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setPage(getCurrentRefinement(props, searchState, this.context) - 1);
	  },
	  getMetadata: function getMetadata() {
	    return { id: getId() };
	  }
	});

/***/ }),
/* 924 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * connectPoweredBy connector provides the logic to build a widget that
	 * will display a link to algolia.
	 * @name connectPoweredBy
	 * @kind connector
	 * @providedPropType {string} url - the url to redirect to algolia
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaPoweredBy',
	
	  propTypes: {},
	
	  getProvidedProps: function getProvidedProps(props) {
	    var url = 'https://www.algolia.com/?' + 'utm_source=react-instantsearch&' + 'utm_medium=website&' + ('utm_content=' + (props.canRender ? location.hostname : '') + '&') + 'utm_campaign=poweredby';
	    return { url: url };
	  }
	});

/***/ }),
/* 925 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFinite3 = __webpack_require__(926);
	
	var _isFinite4 = _interopRequireDefault(_isFinite3);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * connectRange connector provides the logic to create connected
	 * components that will give the ability for a user to refine results using
	 * a numeric range.
	 * @name connectRange
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - Name of the attribute for faceting
	 * @propType {{min?: number, max?: number}} [defaultRefinement] - Default searchState of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {number} min - the minimum value available.
	 * @providedPropType {number} max - the maximum value available.
	 * @providedPropType {number} precision - Number of digits after decimal point to use.
	 */
	
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'range';
	
	function getCurrentRange(boundaries, stats, precision) {
	  var pow = Math.pow(10, precision);
	
	  var min = void 0;
	  if ((0, _isFinite4.default)(boundaries.min)) {
	    min = boundaries.min;
	  } else if ((0, _isFinite4.default)(stats.min)) {
	    min = stats.min;
	  } else {
	    min = undefined;
	  }
	
	  var max = void 0;
	  if ((0, _isFinite4.default)(boundaries.max)) {
	    max = boundaries.max;
	  } else if ((0, _isFinite4.default)(stats.max)) {
	    max = stats.max;
	  } else {
	    max = undefined;
	  }
	
	  return {
	    min: min !== undefined ? Math.floor(min * pow) / pow : min,
	    max: max !== undefined ? Math.ceil(max * pow) / pow : max
	  };
	}
	
	function getCurrentRefinement(props, searchState, currentRange, context) {
	  var refinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), {}, function (currentRefinement) {
	    var min = currentRefinement.min,
	        max = currentRefinement.max;
	
	    var isFloatPrecision = Boolean(props.precision);
	
	    var nextMin = min;
	    if (typeof nextMin === 'string') {
	      nextMin = isFloatPrecision ? parseFloat(nextMin) : parseInt(nextMin, 10);
	    }
	
	    var nextMax = max;
	    if (typeof nextMax === 'string') {
	      nextMax = isFloatPrecision ? parseFloat(nextMax) : parseInt(nextMax, 10);
	    }
	
	    return {
	      min: nextMin,
	      max: nextMax
	    };
	  });
	
	  var hasMinBound = props.min !== undefined;
	  var hasMaxBound = props.max !== undefined;
	
	  var hasMinRefinment = refinement.min !== undefined;
	  var hasMaxRefinment = refinement.max !== undefined;
	
	  if (hasMinBound && hasMinRefinment && refinement.min < currentRange.min) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (hasMaxBound && hasMaxRefinment && refinement.max > currentRange.max) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  if (hasMinBound && !hasMinRefinment) {
	    refinement.min = currentRange.min;
	  }
	
	  if (hasMaxBound && !hasMaxRefinment) {
	    refinement.max = currentRange.max;
	  }
	
	  return refinement;
	}
	
	function getCurrentRefinementWithRange(refinement, range) {
	  return {
	    min: refinement.min !== undefined ? refinement.min : range.min,
	    max: refinement.max !== undefined ? refinement.max : range.max
	  };
	}
	
	function nextValueForRefinement(hasBound, isReset, range, value) {
	  var next = void 0;
	  if (!hasBound && range === value) {
	    next = undefined;
	  } else if (hasBound && isReset) {
	    next = range;
	  } else {
	    next = value;
	  }
	
	  return next;
	}
	
	function _refine(props, searchState, nextRefinement, currentRange, context) {
	  var nextMin = nextRefinement.min,
	      nextMax = nextRefinement.max;
	  var currentMinRange = currentRange.min,
	      currentMaxRange = currentRange.max;
	
	
	  var isMinReset = nextMin === undefined || nextMin === '';
	  var isMaxReset = nextMax === undefined || nextMax === '';
	
	  var nextMinAsNumber = !isMinReset ? parseFloat(nextMin) : undefined;
	  var nextMaxAsNumber = !isMaxReset ? parseFloat(nextMax) : undefined;
	
	  var isNextMinValid = isMinReset || (0, _isFinite4.default)(nextMinAsNumber);
	  var isNextMaxValid = isMaxReset || (0, _isFinite4.default)(nextMaxAsNumber);
	
	  if (!isNextMinValid || !isNextMaxValid) {
	    throw Error("You can't provide non finite values to the range connector.");
	  }
	
	  if (nextMinAsNumber < currentMinRange) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (nextMaxAsNumber > currentMaxRange) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  var id = getId(props);
	  var resetPage = true;
	  var nextValue = _defineProperty({}, id, {
	    min: nextValueForRefinement(props.min !== undefined, isMinReset, currentMinRange, nextMinAsNumber),
	    max: nextValueForRefinement(props.max !== undefined, isMaxReset, currentMaxRange, nextMaxAsNumber)
	  });
	
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaRange',
	
	  propTypes: {
	    id: _propTypes2.default.string,
	    attribute: _propTypes2.default.string.isRequired,
	    defaultRefinement: _propTypes2.default.shape({
	      min: _propTypes2.default.number,
	      max: _propTypes2.default.number
	    }),
	    min: _propTypes2.default.number,
	    max: _propTypes2.default.number,
	    precision: _propTypes2.default.number,
	    header: _propTypes2.default.node,
	    footer: _propTypes2.default.node
	  },
	
	  defaultProps: {
	    precision: 0
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute,
	        precision = props.precision,
	        minBound = props.min,
	        maxBound = props.max;
	
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var hasFacet = results && results.getFacetByName(attribute);
	    var stats = hasFacet ? results.getFacetStats(attribute) || {} : {};
	    var facetValues = hasFacet ? results.getFacetValues(attribute) : [];
	
	    var count = facetValues.map(function (v) {
	      return {
	        value: v.name,
	        count: v.count
	      };
	    });
	
	    var _getCurrentRange = getCurrentRange({ min: minBound, max: maxBound }, stats, precision),
	        rangeMin = _getCurrentRange.min,
	        rangeMax = _getCurrentRange.max;
	
	    // The searchState is not always in sync with the helper state. For example
	    // when we set boundaries on the first render the searchState don't have
	    // the correct refinement. If this behaviour change in the upcoming version
	    // we could store the range inside the searchState instead of rely on `this`.
	
	
	    this._currentRange = {
	      min: rangeMin,
	      max: rangeMax
	    };
	
	    var currentRefinement = getCurrentRefinement(props, searchState, this._currentRange, this.context);
	
	    return {
	      min: rangeMin,
	      max: rangeMax,
	      canRefine: count.length > 0,
	      currentRefinement: getCurrentRefinementWithRange(currentRefinement, this._currentRange),
	      count: count,
	      precision: precision
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this._currentRange, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(params, props, searchState) {
	    var attribute = props.attribute;
	
	    var _getCurrentRefinement = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        min = _getCurrentRefinement.min,
	        max = _getCurrentRefinement.max;
	
	    params = params.addDisjunctiveFacet(attribute);
	
	    if (min !== undefined) {
	      params = params.addNumericRefinement(attribute, '>=', min);
	    }
	
	    if (max !== undefined) {
	      params = params.addNumericRefinement(attribute, '<=', max);
	    }
	
	    return params;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var _currentRange = this._currentRange,
	        minRange = _currentRange.min,
	        maxRange = _currentRange.max;
	
	    var _getCurrentRefinement2 = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        minValue = _getCurrentRefinement2.min,
	        maxValue = _getCurrentRefinement2.max;
	
	    var items = [];
	    var hasMin = minValue !== undefined;
	    var hasMax = maxValue !== undefined;
	    var shouldDisplayMinLabel = hasMin && minValue !== minRange;
	    var shouldDisplayMaxLabel = hasMax && maxValue !== maxRange;
	
	    if (shouldDisplayMinLabel || shouldDisplayMaxLabel) {
	      var fragments = [hasMin ? minValue + ' <= ' : '', props.attribute, hasMax ? ' <= ' + maxValue : ''];
	
	      items.push({
	        label: fragments.join(''),
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, {}, _this._currentRange, _this.context);
	        },
	        currentRefinement: getCurrentRefinementWithRange({ min: minValue, max: maxValue }, { min: minRange, max: maxRange })
	      });
	    }
	
	    return {
	      id: getId(props),
	      index: (0, _indexUtils.getIndex)(this.context),
	      items: items
	    };
	  }
	});

/***/ }),
/* 926 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(260);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsFinite = root.isFinite;
	
	/**
	 * Checks if `value` is a finite primitive number.
	 *
	 * **Note:** This method is based on
	 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	 * @example
	 *
	 * _.isFinite(3);
	 * // => true
	 *
	 * _.isFinite(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isFinite(Infinity);
	 * // => false
	 *
	 * _.isFinite('3');
	 * // => false
	 */
	function isFinite(value) {
	  return typeof value == 'number' && nativeIsFinite(value);
	}
	
	module.exports = isFinite;


/***/ }),
/* 927 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var namespace = 'refinementList';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), [], function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      // All items were unselected
	      if (currentRefinement === '') {
	        return [];
	      }
	
	      // Only one item was in the searchState but we know it should be an array
	      return [currentRefinement];
	    }
	    return currentRefinement;
	  });
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var isAnewValue = currentRefinement.indexOf(name) === -1;
	  var nextRefinement = isAnewValue ? currentRefinement.concat([name]) // cannot use .push(), it mutates
	  : currentRefinement.filter(function (selectedValue) {
	    return selectedValue !== name;
	  }); // cannot use .splice(), it mutates
	  return nextRefinement;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  // Setting the value to an empty string ensures that it is persisted in
	  // the URL as an empty value.
	  // This is necessary in the case where `defaultRefinement` contains one
	  // item and we try to deselect it. `nextSelected` would be an empty array,
	  // which would not be persisted to the URL.
	  // {foo: ['bar']} => "foo[0]=bar"
	  // {foo: []} => ""
	  var nextValue = _defineProperty({}, id, nextRefinement.length > 0 ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	/**
	 * connectRefinementList connector provides the logic to build a widget that will
	 * give the user the ability to choose multiple values for a specific facet.
	 * @name connectRefinementList
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} defaultRefinement - the values of the items selected by default. The searchState of this widget takes the form of a list of `string`s, which correspond to the values of all selected refinements. However, when there are no refinements selected, the value of the searchState is an empty string.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the RefinementList can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 */
	
	var sortBy = ['isRefined', 'count:desc', 'name:asc'];
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaRefinementList',
	
	  propTypes: {
	    id: _propTypes2.default.string,
	    attribute: _propTypes2.default.string.isRequired,
	    operator: _propTypes2.default.oneOf(['and', 'or']),
	    showMore: _propTypes2.default.bool,
	    limit: _propTypes2.default.number,
	    showMoreLimit: _propTypes2.default.number,
	    defaultRefinement: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])),
	    searchable: _propTypes2.default.bool,
	    transformItems: _propTypes2.default.func
	  },
	
	  defaultProps: {
	    operator: 'or',
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== '');
	
	    // Search For Facet Values is not available with derived helper (used for multi index search)
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: canRefine,
	        isFromSearch: isFromSearch,
	        searchable: searchable
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: { label: { value: v.highlighted } },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, { sortBy: sortBy }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: items.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        operator = props.operator;
	
	
	    var addKey = operator === 'and' ? 'addFacet' : 'addDisjunctiveFacet';
	    var addRefinementKey = addKey + 'Refinement';
	
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	
	    searchParameters = searchParameters[addKey](attribute);
	
	    return getCurrentRefinement(props, searchState, this.context).reduce(function (res, val) {
	      return res[addRefinementKey](attribute, val);
	    }, searchParameters);
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var id = getId(props);
	    var context = this.context;
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndex)(this.context),
	      items: getCurrentRefinement(props, searchState, context).length > 0 ? [{
	        attribute: props.attribute,
	        label: props.attribute + ': ',
	        currentRefinement: getCurrentRefinement(props, searchState, context),
	        value: function value(nextState) {
	          return _refine(props, nextState, [], context);
	        },
	        items: getCurrentRefinement(props, searchState, context).map(function (item) {
	          return {
	            label: '' + item,
	            value: function value(nextState) {
	              var nextSelectedItems = getCurrentRefinement(props, nextState, context).filter(function (other) {
	                return other !== item;
	              });
	              return _refine(props, searchState, nextSelectedItems, context);
	            }
	          };
	        })
	      }] : []
	    };
	  }
	});

/***/ }),
/* 928 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _omit2 = __webpack_require__(724);
	
	var _omit3 = _interopRequireDefault(_omit2);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	var _utils = __webpack_require__(897);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * connectScrollTo connector provides the logic to build a widget that will
	 * let the page scroll to a certain point.
	 * @name connectScrollTo
	 * @kind connector
	 * @propType {string} [scrollOn="page"] - Widget searchState key on which to listen for changes, default to the pagination widget.
	 * @providedPropType {any} value - the current refinement applied to the widget listened by scrollTo
	 * @providedPropType {boolean} hasNotChanged - indicates whether the refinement came from the scrollOn argument (for instance page by default)
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaScrollTo',
	
	  propTypes: {
	    scrollOn: _propTypes2.default.string
	  },
	
	  defaultProps: {
	    scrollOn: 'page'
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var id = props.scrollOn;
	    var value = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, this.context, id, null, function (currentRefinement) {
	      return currentRefinement;
	    });
	
	    if (!this._prevSearchState) {
	      this._prevSearchState = {};
	    }
	
	    /* Get the subpart of the state that interest us*/
	    if ((0, _indexUtils.hasMultipleIndex)(this.context)) {
	      var index = (0, _indexUtils.getIndex)(this.context);
	      searchState = searchState.indices ? searchState.indices[index] : {};
	    }
	
	    /*
	      if there is a change in the app that has been triggered by another element than
	      "props.scrollOn (id) or the Configure widget, we need to keep track of the search state to
	      know if there's a change in the app that was not triggered by the props.scrollOn (id)
	      or the Configure widget. This is useful when using ScrollTo in combination of Pagination.
	      As pagination can be change by every widget, we want to scroll only if it cames from the pagination
	      widget itself. We also remove the configure key from the search state to do this comparaison because for
	      now configure values are not present in the search state before a first refinement has been made
	      and will false the results.
	      See: https://github.com/algolia/react-instantsearch/issues/164
	    */
	    var cleanedSearchState = (0, _omit3.default)((0, _omit3.default)(searchState, 'configure'), id);
	
	    var hasNotChanged = (0, _utils.shallowEqual)(this._prevSearchState, cleanedSearchState);
	
	    this._prevSearchState = cleanedSearchState;
	
	    return { value: value, hasNotChanged: hasNotChanged };
	  }
	});

/***/ }),
/* 929 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId() {
	  return 'query';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	    return '';
	  });
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = _defineProperty({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	
	/**
	 * connectSearchBox connector provides the logic to build a widget that will
	 * let the user search for a query
	 * @name connectSearchBox
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {function} refine - a function to change the current query
	 * @providedPropType {string} currentRefinement - the current query used
	 * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaSearchBox',
	
	  propTypes: {
	    defaultRefinement: _propTypes2.default.string
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isSearchStalled: searchResults.isSearchStalled
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndex)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: id + ': ' + currentRefinement,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});

/***/ }),
/* 930 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId() {
	  return 'sortBy';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null, function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	    return null;
	  });
	}
	
	/**
	 * The connectSortBy connector provides the logic to build a widget that will
	 *  display a list of indices. This allows a user to change how the hits are being sorted.
	 * @name connectSortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind connector
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: string}>} items - the list of items the HitsPerPage can display.  If no label provided, the value will be displayed.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaSortBy',
	
	  propTypes: {
	    defaultRefinement: _propTypes2.default.string,
	    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	      label: _propTypes2.default.string,
	      value: _propTypes2.default.string.isRequired
	    })).isRequired,
	    transformItems: _propTypes2.default.func
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? _extends({}, item, { isRefined: true }) : _extends({}, item, { isRefined: false });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = _defineProperty({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var selectedIndex = getCurrentRefinement(props, searchState, this.context);
	    return searchParameters.setIndex(selectedIndex);
	  },
	  getMetadata: function getMetadata() {
	    return { id: getId() };
	  }
	});

/***/ }),
/* 931 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`
	 * of InstantSearch.
	 * For instance this connector allows you to create results/noResults or query/noQuery pages.
	 * @name connectStateResults
	 * @kind connector
	 * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)
	 * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)
	 * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results
	 * @providedPropType {string} error - If the search failed, the error will be logged here.
	 * @providedPropType {boolean} searching - If there is a search in progress.
	 * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.
	 * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.
	 * @providedPropType {object} props - component props.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';
	 *
	 * const Content = connectStateResults(({ searchState, searchResults }) => {
	 *   const hasResults = searchResults && searchResults.nbHits !== 0;
	 *
	 *    return (
	 *      <div>
	 *        <div hidden={!hasResults}>
	 *          <Hits />
	 *        </div>
	 *        <div hidden={hasResults}>
	 *          <div>No results has been found for {searchState.query}</div>
	 *        </div>
	 *      </div>
	 *    );
	 * });
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *      appId="latency"
	 *      apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *      indexName="ikea"
	 *    >
	 *      <SearchBox />
	 *      <Content />
	 *    </InstantSearch>
	 * );
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaStateResults',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    return {
	      searchState: searchState,
	      searchResults: results,
	      allSearchResults: searchResults.results,
	      searching: searchResults.searching,
	      isSearchStalled: searchResults.isSearchStalled,
	      error: searchResults.error,
	      searchingForFacetValues: searchResults.searchingForFacetValues,
	      props: props
	    };
	  }
	});

/***/ }),
/* 932 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * connectStats connector provides the logic to build a widget that will
	 *  displays algolia search statistics (hits number and processing time).
	 * @name connectStats
	 * @kind connector
	 * @providedPropType {number} nbHits - number of hits returned by Algolia.
	 * @providedPropType {number} processingTimeMS - the time in ms took by Algolia to search for results.
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaStats',
	
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	    return {
	      nbHits: results.nbHits,
	      processingTimeMS: results.processingTimeMS
	    };
	  }
	});

/***/ }),
/* 933 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createConnector = __webpack_require__(903);
	
	var _createConnector2 = _interopRequireDefault(_createConnector);
	
	var _indexUtils = __webpack_require__(911);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'toggle';
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), false, function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	    return false;
	  });
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = _defineProperty({}, id, nextRefinement ? nextRefinement : false);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));
	}
	
	/**
	 * connectToggleRefinement connector provides the logic to build a widget that will
	 * provides an on/off filtering feature based on an attribute value.
	 * @name connectToggleRefinement
	 * @kind connector
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {string} value - Value of the refinement to apply on `attribute`.
	 * @propType {boolean} [defaultRefinement=false] - Default searchState of the widget. Should the toggle be checked by default?
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {boolean} currentRefinement - `true` when the refinement is applied, `false` otherwise
	 */
	exports.default = (0, _createConnector2.default)({
	  displayName: 'AlgoliaToggle',
	
	  propTypes: {
	    label: _propTypes2.default.string,
	    filter: _propTypes2.default.func,
	    attribute: _propTypes2.default.string,
	    value: _propTypes2.default.any,
	    defaultRefinement: _propTypes2.default.bool
	  },
	
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return { currentRefinement: currentRefinement };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        value = props.value,
	        filter = props.filter;
	
	    var checked = getCurrentRefinement(props, searchState, this.context);
	
	    if (checked) {
	      if (attribute) {
	        searchParameters = searchParameters.addFacet(attribute).addFacetRefinement(attribute, value);
	      }
	      if (filter) {
	        searchParameters = filter(searchParameters);
	      }
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var checked = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndex)(this.context);
	
	    if (checked) {
	      items.push({
	        label: props.label,
	        currentRefinement: checked,
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, false, _this.context);
	        }
	      });
	    }
	
	    return { id: id, index: index, items: items };
	  }
	});

/***/ }),
/* 934 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _lite = __webpack_require__(935);
	
	var _lite2 = _interopRequireDefault(_lite);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var InstantSearch = (0, _reactInstantsearchCore.createInstantSearch)(_lite2.default, {
	  Root: 'div',
	  props: {
	    className: 'ais-InstantSearch__root'
	  }
	});
	
	exports.default = InstantSearch;

/***/ }),
/* 935 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// For Node.js users, you will get the normal build (no lite)
	// For browser users, this will be mapped to src/browser/builds/algoliasearchLite.js
	// when used through browserify or webpack (see package.json browser field)
	// This is done to ease universal applications (https://github.com/algolia/algoliasearch-client-js/issues/283)
	module.exports = __webpack_require__(936);


/***/ }),
/* 936 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// default entrypoint is the node module
	// this is overriden by the `browser` field in package.json
	// https://github.com/substack/node-browserify#browser-field
	module.exports = __webpack_require__(937);


/***/ }),
/* 937 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This is the Node.JS entry point
	module.exports = algoliasearch;
	
	var debug = __webpack_require__(938)('algoliasearch:nodejs');
	var crypto = __webpack_require__(945);
	var zlib = __webpack_require__(946);
	
	var inherits = __webpack_require__(947);
	var Promise = global.Promise || __webpack_require__(949).Promise;
	var semver = __webpack_require__(950);
	var isNotSupported = semver.satisfies(process.version, '<0.10');
	var isNode010 = semver.satisfies(process.version, '=0.10');
	var places = __webpack_require__(951);
	
	var AlgoliaSearchServer = __webpack_require__(956);
	var errors = __webpack_require__(953);
	
	// does not work on node <= 0.8
	if (isNotSupported) {
	  throw new errors.AlgoliaSearchError('Node.js version ' + process.version + ' is not supported');
	}
	
	if (false) {
	  require('debug').enable('algoliasearch*');
	}
	
	debug('loaded the Node.js client');
	
	function algoliasearch(applicationID, apiKey, opts) {
	  var cloneDeep = __webpack_require__(955);
	  var reduce = __webpack_require__(972);
	
	  if (!opts) {
	    opts = {};
	  }
	
	  var httpAgent = opts.httpAgent;
	
	  opts = cloneDeep(reduce(opts, allButHttpAgent, {}));
	
	  // as an httpAgent is an object with methods etc, we take a reference to
	  // it rather than cloning it like other values
	  function allButHttpAgent(filteredOpts, val, keyName) {
	    if (keyName !== 'httpAgent') {
	      filteredOpts[keyName] = val;
	    }
	
	    return filteredOpts;
	  }
	
	  opts.httpAgent = httpAgent;
	
	  opts.timeouts = opts.timeouts || {
	    connect: 2 * 1000,
	    read: 5 * 1000,
	    write: 30 * 1000
	  };
	
	  if (opts.protocol === undefined) {
	    opts.protocol = 'https:';
	  }
	
	  opts._ua = opts._ua || algoliasearch.ua;
	  opts._useCache = false;
	
	  return new AlgoliaSearchNodeJS(applicationID, apiKey, opts);
	}
	
	algoliasearch.version = __webpack_require__(973);
	algoliasearch.ua = 'Algolia for Node.js ' + algoliasearch.version;
	algoliasearch.initPlaces = places(algoliasearch);
	
	function AlgoliaSearchNodeJS(applicationID, apiKey, opts) {
	  var getAgent = __webpack_require__(974);
	
	  // call AlgoliaSearchServer constructor
	  AlgoliaSearchServer.apply(this, arguments);
	
	  this._Agent = opts.httpAgent || getAgent(opts.protocol);
	}
	
	inherits(AlgoliaSearchNodeJS, AlgoliaSearchServer);
	
	AlgoliaSearchNodeJS.prototype._request = function request(rawUrl, opts) {
	  var http = __webpack_require__(976);
	  var https = __webpack_require__(977);
	  var url = __webpack_require__(975);
	
	  var client = this;
	
	  return new Promise(function doReq(resolve, reject) {
	    opts.debug('url: %s, method: %s, timeouts: %j', rawUrl, opts.method, opts.timeouts);
	
	    var body = opts.body;
	
	    var parsedUrl = url.parse(rawUrl);
	    var requestOptions = {
	      hostname: parsedUrl.hostname,
	      port: parsedUrl.port,
	      method: opts.method,
	      path: parsedUrl.path,
	      agent: client._Agent
	    };
	
	    var timedOut = false;
	    var timeoutId;
	    var req;
	
	    if (parsedUrl.protocol === 'https:') {
	      // we do not rely on any "smart" port computing by either node.js
	      // or a custom http agent, because:
	      // https://github.com/TooTallNate/node-https-proxy-agent/issues/7#issuecomment-119539690
	      if (requestOptions.port === null) {
	        requestOptions.port = 443;
	      }
	      req = https.request(requestOptions);
	    } else {
	      // same reason to set the port as `https:`
	      if (requestOptions.port === null) {
	        requestOptions.port = 80;
	      }
	      req = http.request(requestOptions);
	    }
	
	    req.setHeader('connection', 'keep-alive');
	    req.setHeader('accept', 'application/json');
	
	    Object.keys(opts.headers).forEach(function setRequestHeader(headerName) {
	      req.setHeader(headerName, opts.headers[headerName]);
	    });
	
	    req.setHeader('accept-encoding', 'gzip,deflate');
	
	    // we do not use req.setTimeout because it's either an inactivity timeout
	    // or a global timeout given the nodejs version
	    timeoutId = setTimeout(timeout, opts.timeouts.connect);
	
	    req.once('error', error);
	    req.once('response', response);
	    if (body) {
	      req.setHeader('content-type', 'application/json');
	      req.setHeader('content-length', Buffer.byteLength(body, 'utf8'));
	      req.write(body);
	    } else if (req.method === 'DELETE') {
	      // Node.js was setting transfer-encoding: chunked on all DELETE requests
	      // which is not good since there's no body to be sent, resulting in nginx
	      // sending 400 on socket reuse (waiting for previous socket data)
	      // https://github.com/nodejs/node-v0.x-archive/issues/6164
	      // https://github.com/nodejs/node-v0.x-archive/commit/aef0960
	      req.setHeader('content-length', 0);
	    }
	
	    req.end();
	
	    function response(res) {
	      clearTimeout(timeoutId);
	      timeoutId = setTimeout(onCompleteTimeout, opts.timeouts.complete);
	      var chunks = [];
	      var originalRes = res;
	
	      // save headers and statusCode BEFORE treating the response as zlib, otherwise
	      // we lose them
	      var headers = res.headers;
	      var statusCode = res.statusCode;
	
	      // Algolia answers should be gzip when asked for it,
	      // but a proxy might uncompress Algolia response
	      // So we handle both compressed and uncompressed
	      if (headers['content-encoding'] === 'gzip' ||
	          headers['content-encoding'] === 'deflate') {
	        res = res.pipe(zlib.createUnzip());
	      }
	
	      res
	        .on('data', onData)
	        .once('error', reject)
	        .once('end', onEnd);
	
	      function onData(chunk) {
	        chunks.push(chunk);
	      }
	
	      function onEnd() {
	        clearTimeout(timeoutId);
	
	        var data = Buffer.concat(chunks).toString();
	        var out;
	
	        try {
	          out = {
	            body: JSON.parse(data),
	            responseText: data,
	            statusCode: statusCode,
	            headers: headers
	          };
	        } catch (e) {
	          out = new errors.UnparsableJSON({
	            more: data
	          });
	        }
	
	        if (out instanceof errors.UnparsableJSON) {
	          reject(out);
	        } else {
	          resolve(out);
	        }
	      }
	
	      function onCompleteTimeout() {
	        res.removeListener('data', onData);
	        res.removeListener('end', onEnd);
	        originalRes.destroy();
	        timeout();
	      }
	    }
	
	    function error(err) {
	      opts.debug('error: %j  - %s', err, rawUrl);
	
	      if (timedOut) {
	        opts.debug('request had already timedout');
	        return;
	      }
	
	      abort();
	      clearTimeout(timeoutId);
	      reject(new errors.Network(err.message, err));
	    }
	
	    function timeout() {
	      timedOut = true;
	      opts.debug('timeout %s', rawUrl);
	      abort();
	      reject(new errors.RequestTimeout());
	    }
	
	    function abort() {
	      if (isNode010 && req.socket && req.socket.socket) {
	        req.socket.socket.destroy();
	      }
	
	      req.removeListener('response', response);
	      req.abort();
	    }
	  });
	};
	
	AlgoliaSearchNodeJS.prototype._promise = {
	  reject: function reject(val) {
	    return Promise.reject(val);
	  },
	  resolve: function resolve(val) {
	    return Promise.resolve(val);
	  },
	  delay: function delayPromise(ms) {
	    return new Promise(function resolveOnTimeout(resolve/* , reject */) {
	      setTimeout(resolve, ms);
	    });
	  },
	  all: function all(promises) {
	    return Promise.all(promises);
	  }
	};
	
	AlgoliaSearchNodeJS.prototype.destroy = function destroy() {
	  if (typeof this._Agent.destroy === 'function') {
	    this._Agent.destroy();
	  }
	};
	
	/*
	 * Generate a secured and public API Key from an apiKey and queryParameters
	 * optional user token identifying the current user
	 *
	 * @param apiKey - The api key to encode as secure
	 * @param {Object} [queryParameters] - Any search query parameter
	 */
	AlgoliaSearchNodeJS.prototype.generateSecuredApiKey = function generateSecuredApiKey(privateApiKey, queryParametersOrTagFilters, userToken) {
	  var searchParams;
	
	  if (Array.isArray(queryParametersOrTagFilters)) {
	    // generateSecuredApiKey(apiKey, ['user_42'], userToken);
	
	    searchParams = {
	      tagFilters: queryParametersOrTagFilters
	    };
	
	    if (userToken) {
	      searchParams.userToken = userToken;
	    }
	
	    searchParams = this._getSearchParams(searchParams, '');
	  } else if (typeof queryParametersOrTagFilters === 'string') {
	    if (queryParametersOrTagFilters.indexOf('=') === -1) {
	      // generateSecuredApiKey(apiKey, 'user_42', userToken);
	      searchParams = 'tagFilters=' + queryParametersOrTagFilters;
	    } else {
	      // generateSecuredApiKey(apiKey, 'tagFilters=user_42', userToken);
	      searchParams = queryParametersOrTagFilters;
	    }
	
	
	    if (userToken) {
	      searchParams += '&userToken=' + encodeURIComponent(userToken);
	    }
	  } else {
	    searchParams = this._getSearchParams(queryParametersOrTagFilters, '');
	  }
	
	  var securedKey = crypto
	    .createHmac('sha256', privateApiKey)
	    .update(searchParams)
	    .digest('hex');
	
	  return new Buffer(securedKey + searchParams).toString('base64');
	};


/***/ }),
/* 938 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Detect Electron renderer process, which is node, but we should
	 * treat as a browser.
	 */
	
	if (typeof process !== 'undefined' && process.type === 'renderer') {
	  module.exports = __webpack_require__(939);
	} else {
	  module.exports = __webpack_require__(942);
	}


/***/ }),
/* 939 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = __webpack_require__(940);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();
	
	/**
	 * Colors.
	 */
	
	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];
	
	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */
	
	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
	    return true;
	  }
	
	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}
	
	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */
	
	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};
	
	
	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */
	
	function formatArgs(args) {
	  var useColors = this.useColors;
	
	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);
	
	  if (!useColors) return;
	
	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')
	
	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });
	
	  args.splice(lastC, 0, c);
	}
	
	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */
	
	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}
	
	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */
	
	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}
	
	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */
	
	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}
	
	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (!r && typeof process !== 'undefined' && 'env' in process) {
	    r = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).DEBUG;
	  }
	
	  return r;
	}
	
	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */
	
	exports.enable(load());
	
	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */
	
	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}


/***/ }),
/* 940 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(941);
	
	/**
	 * The currently active debug mode names, and names to skip.
	 */
	
	exports.names = [];
	exports.skips = [];
	
	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */
	
	exports.formatters = {};
	
	/**
	 * Previous log timestamp.
	 */
	
	var prevTime;
	
	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */
	
	function selectColor(namespace) {
	  var hash = 0, i;
	
	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }
	
	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}
	
	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */
	
	function createDebug(namespace) {
	
	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;
	
	    var self = debug;
	
	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;
	
	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	
	    args[0] = exports.coerce(args[0]);
	
	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }
	
	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);
	
	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });
	
	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);
	
	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	
	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);
	
	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }
	
	  return debug;
	}
	
	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */
	
	function enable(namespaces) {
	  exports.save(namespaces);
	
	  exports.names = [];
	  exports.skips = [];
	
	  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
	  var len = split.length;
	
	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}
	
	/**
	 * Disable debug output.
	 *
	 * @api public
	 */
	
	function disable() {
	  exports.enable('');
	}
	
	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */
	
	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */
	
	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ }),
/* 941 */
/***/ (function(module, exports) {

	/**
	 * Helpers.
	 */
	
	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;
	
	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} [options]
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */
	
	module.exports = function(val, options) {
	  options = options || {};
	  var type = typeof val;
	  if (type === 'string' && val.length > 0) {
	    return parse(val);
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ? fmtLong(val) : fmtShort(val);
	  }
	  throw new Error(
	    'val is not a non-empty string or a valid number. val=' +
	      JSON.stringify(val)
	  );
	};
	
	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */
	
	function parse(str) {
	  str = String(str);
	  if (str.length > 100) {
	    return;
	  }
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
	    str
	  );
	  if (!match) {
	    return;
	  }
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	    default:
	      return undefined;
	  }
	}
	
	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtShort(ms) {
	  if (ms >= d) {
	    return Math.round(ms / d) + 'd';
	  }
	  if (ms >= h) {
	    return Math.round(ms / h) + 'h';
	  }
	  if (ms >= m) {
	    return Math.round(ms / m) + 'm';
	  }
	  if (ms >= s) {
	    return Math.round(ms / s) + 's';
	  }
	  return ms + 'ms';
	}
	
	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtLong(ms) {
	  return plural(ms, d, 'day') ||
	    plural(ms, h, 'hour') ||
	    plural(ms, m, 'minute') ||
	    plural(ms, s, 'second') ||
	    ms + ' ms';
	}
	
	/**
	 * Pluralization helper.
	 */
	
	function plural(ms, n, name) {
	  if (ms < n) {
	    return;
	  }
	  if (ms < n * 1.5) {
	    return Math.floor(ms / n) + ' ' + name;
	  }
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


/***/ }),
/* 942 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */
	
	var tty = __webpack_require__(943);
	var util = __webpack_require__(877);
	
	/**
	 * This is the Node.js implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = __webpack_require__(940);
	exports.init = init;
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	
	/**
	 * Colors.
	 */
	
	exports.colors = [6, 2, 3, 4, 5, 1];
	
	/**
	 * Build up the default `inspectOpts` object from the environment variables.
	 *
	 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
	 */
	
	exports.inspectOpts = Object.keys(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"})).filter(function (key) {
	  return /^debug_/i.test(key);
	}).reduce(function (obj, key) {
	  // camel-case
	  var prop = key
	    .substring(6)
	    .toLowerCase()
	    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });
	
	  // coerce string value into JS value
	  var val = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"})[key];
	  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
	  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
	  else if (val === 'null') val = null;
	  else val = Number(val);
	
	  obj[prop] = val;
	  return obj;
	}, {});
	
	/**
	 * The file descriptor to write the `debug()` calls to.
	 * Set the `DEBUG_FD` env variable to override with another value. i.e.:
	 *
	 *   $ DEBUG_FD=3 node script.js 3>debug.log
	 */
	
	var fd = parseInt(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).DEBUG_FD, 10) || 2;
	
	if (1 !== fd && 2 !== fd) {
	  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()
	}
	
	var stream = 1 === fd ? process.stdout :
	             2 === fd ? process.stderr :
	             createWritableStdioStream(fd);
	
	/**
	 * Is stdout a TTY? Colored output is enabled when `true`.
	 */
	
	function useColors() {
	  return 'colors' in exports.inspectOpts
	    ? Boolean(exports.inspectOpts.colors)
	    : tty.isatty(fd);
	}
	
	/**
	 * Map %o to `util.inspect()`, all on a single line.
	 */
	
	exports.formatters.o = function(v) {
	  this.inspectOpts.colors = this.useColors;
	  return util.inspect(v, this.inspectOpts)
	    .split('\n').map(function(str) {
	      return str.trim()
	    }).join(' ');
	};
	
	/**
	 * Map %o to `util.inspect()`, allowing multiple lines if needed.
	 */
	
	exports.formatters.O = function(v) {
	  this.inspectOpts.colors = this.useColors;
	  return util.inspect(v, this.inspectOpts);
	};
	
	/**
	 * Adds ANSI color escape codes if enabled.
	 *
	 * @api public
	 */
	
	function formatArgs(args) {
	  var name = this.namespace;
	  var useColors = this.useColors;
	
	  if (useColors) {
	    var c = this.color;
	    var prefix = '  \u001b[3' + c + ';1m' + name + ' ' + '\u001b[0m';
	
	    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
	    args.push('\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
	  } else {
	    args[0] = new Date().toUTCString()
	      + ' ' + name + ' ' + args[0];
	  }
	}
	
	/**
	 * Invokes `util.format()` with the specified arguments and writes to `stream`.
	 */
	
	function log() {
	  return stream.write(util.format.apply(util, arguments) + '\n');
	}
	
	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */
	
	function save(namespaces) {
	  if (null == namespaces) {
	    // If you set a process.env field to null or undefined, it gets cast to the
	    // string 'null' or 'undefined'. Just delete instead.
	    delete ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).DEBUG;
	  } else {
	    ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).DEBUG = namespaces;
	  }
	}
	
	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */
	
	function load() {
	  return ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).DEBUG;
	}
	
	/**
	 * Copied from `node/src/node.js`.
	 *
	 * XXX: It's lame that node doesn't expose this API out-of-the-box. It also
	 * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.
	 */
	
	function createWritableStdioStream (fd) {
	  var stream;
	  var tty_wrap = process.binding('tty_wrap');
	
	  // Note stream._type is used for test-module-load-list.js
	
	  switch (tty_wrap.guessHandleType(fd)) {
	    case 'TTY':
	      stream = new tty.WriteStream(fd);
	      stream._type = 'tty';
	
	      // Hack to have stream not keep the event loop alive.
	      // See https://github.com/joyent/node/issues/1726
	      if (stream._handle && stream._handle.unref) {
	        stream._handle.unref();
	      }
	      break;
	
	    case 'FILE':
	      var fs = __webpack_require__(169);
	      stream = new fs.SyncWriteStream(fd, { autoClose: false });
	      stream._type = 'fs';
	      break;
	
	    case 'PIPE':
	    case 'TCP':
	      var net = __webpack_require__(944);
	      stream = new net.Socket({
	        fd: fd,
	        readable: false,
	        writable: true
	      });
	
	      // FIXME Should probably have an option in net.Socket to create a
	      // stream from an existing fd which is writable only. But for now
	      // we'll just add this hack and set the `readable` member to false.
	      // Test: ./node test/fixtures/echo.js < /etc/passwd
	      stream.readable = false;
	      stream.read = null;
	      stream._type = 'pipe';
	
	      // FIXME Hack to have stream not keep the event loop alive.
	      // See https://github.com/joyent/node/issues/1726
	      if (stream._handle && stream._handle.unref) {
	        stream._handle.unref();
	      }
	      break;
	
	    default:
	      // Probably an error on in uv_guess_handle()
	      throw new Error('Implement me. Unknown stream file type!');
	  }
	
	  // For supporting legacy API we put the FD here.
	  stream.fd = fd;
	
	  stream._isStdio = true;
	
	  return stream;
	}
	
	/**
	 * Init logic for `debug` instances.
	 *
	 * Create a new `inspectOpts` object in case `useColors` is set
	 * differently for a particular `debug` instance.
	 */
	
	function init (debug) {
	  debug.inspectOpts = {};
	
	  var keys = Object.keys(exports.inspectOpts);
	  for (var i = 0; i < keys.length; i++) {
	    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	  }
	}
	
	/**
	 * Enable namespaces listed in `process.env.DEBUG` initially.
	 */
	
	exports.enable(load());


/***/ }),
/* 943 */
/***/ (function(module, exports) {

	module.exports = require("tty");

/***/ }),
/* 944 */
/***/ (function(module, exports) {

	module.exports = require("net");

/***/ }),
/* 945 */
/***/ (function(module, exports) {

	module.exports = require("crypto");

/***/ }),
/* 946 */
/***/ (function(module, exports) {

	module.exports = require("zlib");

/***/ }),
/* 947 */
/***/ (function(module, exports, __webpack_require__) {

	try {
	  var util = __webpack_require__(877);
	  if (typeof util.inherits !== 'function') throw '';
	  module.exports = util.inherits;
	} catch (e) {
	  module.exports = __webpack_require__(948);
	}


/***/ }),
/* 948 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ }),
/* 949 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * @overview es6-promise - a tiny implementation of Promises/A+.
	 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
	 * @license   Licensed under MIT license
	 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
	 * @version   v4.2.4+314e4831
	 */
	
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.ES6Promise = factory());
	}(this, (function () { 'use strict';
	
	function objectOrFunction(x) {
	  var type = typeof x;
	  return x !== null && (type === 'object' || type === 'function');
	}
	
	function isFunction(x) {
	  return typeof x === 'function';
	}
	
	
	
	var _isArray = void 0;
	if (Array.isArray) {
	  _isArray = Array.isArray;
	} else {
	  _isArray = function (x) {
	    return Object.prototype.toString.call(x) === '[object Array]';
	  };
	}
	
	var isArray = _isArray;
	
	var len = 0;
	var vertxNext = void 0;
	var customSchedulerFn = void 0;
	
	var asap = function asap(callback, arg) {
	  queue[len] = callback;
	  queue[len + 1] = arg;
	  len += 2;
	  if (len === 2) {
	    // If len is 2, that means that we need to schedule an async flush.
	    // If additional callbacks are queued before the queue is flushed, they
	    // will be processed by this flush that we are scheduling.
	    if (customSchedulerFn) {
	      customSchedulerFn(flush);
	    } else {
	      scheduleFlush();
	    }
	  }
	};
	
	function setScheduler(scheduleFn) {
	  customSchedulerFn = scheduleFn;
	}
	
	function setAsap(asapFn) {
	  asap = asapFn;
	}
	
	var browserWindow = typeof window !== 'undefined' ? window : undefined;
	var browserGlobal = browserWindow || {};
	var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
	var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';
	
	// test for web worker but not in IE10
	var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
	
	// node
	function useNextTick() {
	  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
	  // see https://github.com/cujojs/when/issues/410 for details
	  return function () {
	    return process.nextTick(flush);
	  };
	}
	
	// vertx
	function useVertxTimer() {
	  if (typeof vertxNext !== 'undefined') {
	    return function () {
	      vertxNext(flush);
	    };
	  }
	
	  return useSetTimeout();
	}
	
	function useMutationObserver() {
	  var iterations = 0;
	  var observer = new BrowserMutationObserver(flush);
	  var node = document.createTextNode('');
	  observer.observe(node, { characterData: true });
	
	  return function () {
	    node.data = iterations = ++iterations % 2;
	  };
	}
	
	// web worker
	function useMessageChannel() {
	  var channel = new MessageChannel();
	  channel.port1.onmessage = flush;
	  return function () {
	    return channel.port2.postMessage(0);
	  };
	}
	
	function useSetTimeout() {
	  // Store setTimeout reference so es6-promise will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var globalSetTimeout = setTimeout;
	  return function () {
	    return globalSetTimeout(flush, 1);
	  };
	}
	
	var queue = new Array(1000);
	function flush() {
	  for (var i = 0; i < len; i += 2) {
	    var callback = queue[i];
	    var arg = queue[i + 1];
	
	    callback(arg);
	
	    queue[i] = undefined;
	    queue[i + 1] = undefined;
	  }
	
	  len = 0;
	}
	
	function attemptVertx() {
	  try {
	    var vertx = Function('return this')().require('vertx');
	    vertxNext = vertx.runOnLoop || vertx.runOnContext;
	    return useVertxTimer();
	  } catch (e) {
	    return useSetTimeout();
	  }
	}
	
	var scheduleFlush = void 0;
	// Decide what async method to use to triggering processing of queued callbacks:
	if (isNode) {
	  scheduleFlush = useNextTick();
	} else if (BrowserMutationObserver) {
	  scheduleFlush = useMutationObserver();
	} else if (isWorker) {
	  scheduleFlush = useMessageChannel();
	} else if (browserWindow === undefined && "function" === 'function') {
	  scheduleFlush = attemptVertx();
	} else {
	  scheduleFlush = useSetTimeout();
	}
	
	function then(onFulfillment, onRejection) {
	  var parent = this;
	
	  var child = new this.constructor(noop);
	
	  if (child[PROMISE_ID] === undefined) {
	    makePromise(child);
	  }
	
	  var _state = parent._state;
	
	
	  if (_state) {
	    var callback = arguments[_state - 1];
	    asap(function () {
	      return invokeCallback(_state, child, callback, parent._result);
	    });
	  } else {
	    subscribe(parent, child, onFulfillment, onRejection);
	  }
	
	  return child;
	}
	
	/**
	  `Promise.resolve` returns a promise that will become resolved with the
	  passed `value`. It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    resolve(1);
	  });
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.resolve(1);
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  @method resolve
	  @static
	  @param {Any} value value that the returned promise will be resolved with
	  Useful for tooling.
	  @return {Promise} a promise that will become fulfilled with the given
	  `value`
	*/
	function resolve$1(object) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (object && typeof object === 'object' && object.constructor === Constructor) {
	    return object;
	  }
	
	  var promise = new Constructor(noop);
	  resolve(promise, object);
	  return promise;
	}
	
	var PROMISE_ID = Math.random().toString(36).substring(2);
	
	function noop() {}
	
	var PENDING = void 0;
	var FULFILLED = 1;
	var REJECTED = 2;
	
	var TRY_CATCH_ERROR = { error: null };
	
	function selfFulfillment() {
	  return new TypeError("You cannot resolve a promise with itself");
	}
	
	function cannotReturnOwn() {
	  return new TypeError('A promises callback cannot return that same promise.');
	}
	
	function getThen(promise) {
	  try {
	    return promise.then;
	  } catch (error) {
	    TRY_CATCH_ERROR.error = error;
	    return TRY_CATCH_ERROR;
	  }
	}
	
	function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
	  try {
	    then$$1.call(value, fulfillmentHandler, rejectionHandler);
	  } catch (e) {
	    return e;
	  }
	}
	
	function handleForeignThenable(promise, thenable, then$$1) {
	  asap(function (promise) {
	    var sealed = false;
	    var error = tryThen(then$$1, thenable, function (value) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	      if (thenable !== value) {
	        resolve(promise, value);
	      } else {
	        fulfill(promise, value);
	      }
	    }, function (reason) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	
	      reject(promise, reason);
	    }, 'Settle: ' + (promise._label || ' unknown promise'));
	
	    if (!sealed && error) {
	      sealed = true;
	      reject(promise, error);
	    }
	  }, promise);
	}
	
	function handleOwnThenable(promise, thenable) {
	  if (thenable._state === FULFILLED) {
	    fulfill(promise, thenable._result);
	  } else if (thenable._state === REJECTED) {
	    reject(promise, thenable._result);
	  } else {
	    subscribe(thenable, undefined, function (value) {
	      return resolve(promise, value);
	    }, function (reason) {
	      return reject(promise, reason);
	    });
	  }
	}
	
	function handleMaybeThenable(promise, maybeThenable, then$$1) {
	  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
	    handleOwnThenable(promise, maybeThenable);
	  } else {
	    if (then$$1 === TRY_CATCH_ERROR) {
	      reject(promise, TRY_CATCH_ERROR.error);
	      TRY_CATCH_ERROR.error = null;
	    } else if (then$$1 === undefined) {
	      fulfill(promise, maybeThenable);
	    } else if (isFunction(then$$1)) {
	      handleForeignThenable(promise, maybeThenable, then$$1);
	    } else {
	      fulfill(promise, maybeThenable);
	    }
	  }
	}
	
	function resolve(promise, value) {
	  if (promise === value) {
	    reject(promise, selfFulfillment());
	  } else if (objectOrFunction(value)) {
	    handleMaybeThenable(promise, value, getThen(value));
	  } else {
	    fulfill(promise, value);
	  }
	}
	
	function publishRejection(promise) {
	  if (promise._onerror) {
	    promise._onerror(promise._result);
	  }
	
	  publish(promise);
	}
	
	function fulfill(promise, value) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	
	  promise._result = value;
	  promise._state = FULFILLED;
	
	  if (promise._subscribers.length !== 0) {
	    asap(publish, promise);
	  }
	}
	
	function reject(promise, reason) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	  promise._state = REJECTED;
	  promise._result = reason;
	
	  asap(publishRejection, promise);
	}
	
	function subscribe(parent, child, onFulfillment, onRejection) {
	  var _subscribers = parent._subscribers;
	  var length = _subscribers.length;
	
	
	  parent._onerror = null;
	
	  _subscribers[length] = child;
	  _subscribers[length + FULFILLED] = onFulfillment;
	  _subscribers[length + REJECTED] = onRejection;
	
	  if (length === 0 && parent._state) {
	    asap(publish, parent);
	  }
	}
	
	function publish(promise) {
	  var subscribers = promise._subscribers;
	  var settled = promise._state;
	
	  if (subscribers.length === 0) {
	    return;
	  }
	
	  var child = void 0,
	      callback = void 0,
	      detail = promise._result;
	
	  for (var i = 0; i < subscribers.length; i += 3) {
	    child = subscribers[i];
	    callback = subscribers[i + settled];
	
	    if (child) {
	      invokeCallback(settled, child, callback, detail);
	    } else {
	      callback(detail);
	    }
	  }
	
	  promise._subscribers.length = 0;
	}
	
	function tryCatch(callback, detail) {
	  try {
	    return callback(detail);
	  } catch (e) {
	    TRY_CATCH_ERROR.error = e;
	    return TRY_CATCH_ERROR;
	  }
	}
	
	function invokeCallback(settled, promise, callback, detail) {
	  var hasCallback = isFunction(callback),
	      value = void 0,
	      error = void 0,
	      succeeded = void 0,
	      failed = void 0;
	
	  if (hasCallback) {
	    value = tryCatch(callback, detail);
	
	    if (value === TRY_CATCH_ERROR) {
	      failed = true;
	      error = value.error;
	      value.error = null;
	    } else {
	      succeeded = true;
	    }
	
	    if (promise === value) {
	      reject(promise, cannotReturnOwn());
	      return;
	    }
	  } else {
	    value = detail;
	    succeeded = true;
	  }
	
	  if (promise._state !== PENDING) {
	    // noop
	  } else if (hasCallback && succeeded) {
	    resolve(promise, value);
	  } else if (failed) {
	    reject(promise, error);
	  } else if (settled === FULFILLED) {
	    fulfill(promise, value);
	  } else if (settled === REJECTED) {
	    reject(promise, value);
	  }
	}
	
	function initializePromise(promise, resolver) {
	  try {
	    resolver(function resolvePromise(value) {
	      resolve(promise, value);
	    }, function rejectPromise(reason) {
	      reject(promise, reason);
	    });
	  } catch (e) {
	    reject(promise, e);
	  }
	}
	
	var id = 0;
	function nextId() {
	  return id++;
	}
	
	function makePromise(promise) {
	  promise[PROMISE_ID] = id++;
	  promise._state = undefined;
	  promise._result = undefined;
	  promise._subscribers = [];
	}
	
	function validationError() {
	  return new Error('Array Methods must be provided an Array');
	}
	
	var Enumerator = function () {
	  function Enumerator(Constructor, input) {
	    this._instanceConstructor = Constructor;
	    this.promise = new Constructor(noop);
	
	    if (!this.promise[PROMISE_ID]) {
	      makePromise(this.promise);
	    }
	
	    if (isArray(input)) {
	      this.length = input.length;
	      this._remaining = input.length;
	
	      this._result = new Array(this.length);
	
	      if (this.length === 0) {
	        fulfill(this.promise, this._result);
	      } else {
	        this.length = this.length || 0;
	        this._enumerate(input);
	        if (this._remaining === 0) {
	          fulfill(this.promise, this._result);
	        }
	      }
	    } else {
	      reject(this.promise, validationError());
	    }
	  }
	
	  Enumerator.prototype._enumerate = function _enumerate(input) {
	    for (var i = 0; this._state === PENDING && i < input.length; i++) {
	      this._eachEntry(input[i], i);
	    }
	  };
	
	  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
	    var c = this._instanceConstructor;
	    var resolve$$1 = c.resolve;
	
	
	    if (resolve$$1 === resolve$1) {
	      var _then = getThen(entry);
	
	      if (_then === then && entry._state !== PENDING) {
	        this._settledAt(entry._state, i, entry._result);
	      } else if (typeof _then !== 'function') {
	        this._remaining--;
	        this._result[i] = entry;
	      } else if (c === Promise$1) {
	        var promise = new c(noop);
	        handleMaybeThenable(promise, entry, _then);
	        this._willSettleAt(promise, i);
	      } else {
	        this._willSettleAt(new c(function (resolve$$1) {
	          return resolve$$1(entry);
	        }), i);
	      }
	    } else {
	      this._willSettleAt(resolve$$1(entry), i);
	    }
	  };
	
	  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
	    var promise = this.promise;
	
	
	    if (promise._state === PENDING) {
	      this._remaining--;
	
	      if (state === REJECTED) {
	        reject(promise, value);
	      } else {
	        this._result[i] = value;
	      }
	    }
	
	    if (this._remaining === 0) {
	      fulfill(promise, this._result);
	    }
	  };
	
	  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
	    var enumerator = this;
	
	    subscribe(promise, undefined, function (value) {
	      return enumerator._settledAt(FULFILLED, i, value);
	    }, function (reason) {
	      return enumerator._settledAt(REJECTED, i, reason);
	    });
	  };
	
	  return Enumerator;
	}();
	
	/**
	  `Promise.all` accepts an array of promises, and returns a new promise which
	  is fulfilled with an array of fulfillment values for the passed promises, or
	  rejected with the reason of the first passed promise to be rejected. It casts all
	  elements of the passed iterable to promises as it runs this algorithm.
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = resolve(2);
	  let promise3 = resolve(3);
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // The array here would be [ 1, 2, 3 ];
	  });
	  ```
	
	  If any of the `promises` given to `all` are rejected, the first promise
	  that is rejected will be given as an argument to the returned promises's
	  rejection handler. For example:
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = reject(new Error("2"));
	  let promise3 = reject(new Error("3"));
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // Code here never runs because there are rejected promises!
	  }, function(error) {
	    // error.message === "2"
	  });
	  ```
	
	  @method all
	  @static
	  @param {Array} entries array of promises
	  @param {String} label optional string for labeling the promise.
	  Useful for tooling.
	  @return {Promise} promise that is fulfilled when all `promises` have been
	  fulfilled, or rejected if any of them become rejected.
	  @static
	*/
	function all(entries) {
	  return new Enumerator(this, entries).promise;
	}
	
	/**
	  `Promise.race` returns a new promise which is settled in the same way as the
	  first passed promise to settle.
	
	  Example:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 2');
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // result === 'promise 2' because it was resolved before promise1
	    // was resolved.
	  });
	  ```
	
	  `Promise.race` is deterministic in that only the state of the first
	  settled promise matters. For example, even if other promises given to the
	  `promises` array argument are resolved, but the first settled promise has
	  become rejected before the other promises became fulfilled, the returned
	  promise will become rejected:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      reject(new Error('promise 2'));
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // Code here never runs
	  }, function(reason){
	    // reason.message === 'promise 2' because promise 2 became rejected before
	    // promise 1 became fulfilled
	  });
	  ```
	
	  An example real-world use case is implementing timeouts:
	
	  ```javascript
	  Promise.race([ajax('foo.json'), timeout(5000)])
	  ```
	
	  @method race
	  @static
	  @param {Array} promises array of promises to observe
	  Useful for tooling.
	  @return {Promise} a promise which settles in the same way as the first passed
	  promise to settle.
	*/
	function race(entries) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (!isArray(entries)) {
	    return new Constructor(function (_, reject) {
	      return reject(new TypeError('You must pass an array to race.'));
	    });
	  } else {
	    return new Constructor(function (resolve, reject) {
	      var length = entries.length;
	      for (var i = 0; i < length; i++) {
	        Constructor.resolve(entries[i]).then(resolve, reject);
	      }
	    });
	  }
	}
	
	/**
	  `Promise.reject` returns a promise rejected with the passed `reason`.
	  It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    reject(new Error('WHOOPS'));
	  });
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.reject(new Error('WHOOPS'));
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  @method reject
	  @static
	  @param {Any} reason value that the returned promise will be rejected with.
	  Useful for tooling.
	  @return {Promise} a promise rejected with the given `reason`.
	*/
	function reject$1(reason) {
	  /*jshint validthis:true */
	  var Constructor = this;
	  var promise = new Constructor(noop);
	  reject(promise, reason);
	  return promise;
	}
	
	function needsResolver() {
	  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
	}
	
	function needsNew() {
	  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
	}
	
	/**
	  Promise objects represent the eventual result of an asynchronous operation. The
	  primary way of interacting with a promise is through its `then` method, which
	  registers callbacks to receive either a promise's eventual value or the reason
	  why the promise cannot be fulfilled.
	
	  Terminology
	  -----------
	
	  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
	  - `thenable` is an object or function that defines a `then` method.
	  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
	  - `exception` is a value that is thrown using the throw statement.
	  - `reason` is a value that indicates why a promise was rejected.
	  - `settled` the final resting state of a promise, fulfilled or rejected.
	
	  A promise can be in one of three states: pending, fulfilled, or rejected.
	
	  Promises that are fulfilled have a fulfillment value and are in the fulfilled
	  state.  Promises that are rejected have a rejection reason and are in the
	  rejected state.  A fulfillment value is never a thenable.
	
	  Promises can also be said to *resolve* a value.  If this value is also a
	  promise, then the original promise's settled state will match the value's
	  settled state.  So a promise that *resolves* a promise that rejects will
	  itself reject, and a promise that *resolves* a promise that fulfills will
	  itself fulfill.
	
	
	  Basic Usage:
	  ------------
	
	  ```js
	  let promise = new Promise(function(resolve, reject) {
	    // on success
	    resolve(value);
	
	    // on failure
	    reject(reason);
	  });
	
	  promise.then(function(value) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Advanced Usage:
	  ---------------
	
	  Promises shine when abstracting away asynchronous interactions such as
	  `XMLHttpRequest`s.
	
	  ```js
	  function getJSON(url) {
	    return new Promise(function(resolve, reject){
	      let xhr = new XMLHttpRequest();
	
	      xhr.open('GET', url);
	      xhr.onreadystatechange = handler;
	      xhr.responseType = 'json';
	      xhr.setRequestHeader('Accept', 'application/json');
	      xhr.send();
	
	      function handler() {
	        if (this.readyState === this.DONE) {
	          if (this.status === 200) {
	            resolve(this.response);
	          } else {
	            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
	          }
	        }
	      };
	    });
	  }
	
	  getJSON('/posts.json').then(function(json) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Unlike callbacks, promises are great composable primitives.
	
	  ```js
	  Promise.all([
	    getJSON('/posts'),
	    getJSON('/comments')
	  ]).then(function(values){
	    values[0] // => postsJSON
	    values[1] // => commentsJSON
	
	    return values;
	  });
	  ```
	
	  @class Promise
	  @param {Function} resolver
	  Useful for tooling.
	  @constructor
	*/
	
	var Promise$1 = function () {
	  function Promise(resolver) {
	    this[PROMISE_ID] = nextId();
	    this._result = this._state = undefined;
	    this._subscribers = [];
	
	    if (noop !== resolver) {
	      typeof resolver !== 'function' && needsResolver();
	      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
	    }
	  }
	
	  /**
	  The primary way of interacting with a promise is through its `then` method,
	  which registers callbacks to receive either a promise's eventual value or the
	  reason why the promise cannot be fulfilled.
	   ```js
	  findUser().then(function(user){
	    // user is available
	  }, function(reason){
	    // user is unavailable, and you are given the reason why
	  });
	  ```
	   Chaining
	  --------
	   The return value of `then` is itself a promise.  This second, 'downstream'
	  promise is resolved with the return value of the first promise's fulfillment
	  or rejection handler, or rejected if the handler throws an exception.
	   ```js
	  findUser().then(function (user) {
	    return user.name;
	  }, function (reason) {
	    return 'default name';
	  }).then(function (userName) {
	    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
	    // will be `'default name'`
	  });
	   findUser().then(function (user) {
	    throw new Error('Found user, but still unhappy');
	  }, function (reason) {
	    throw new Error('`findUser` rejected and we're unhappy');
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
	    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
	  });
	  ```
	  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
	   ```js
	  findUser().then(function (user) {
	    throw new PedagogicalException('Upstream error');
	  }).then(function (value) {
	    // never reached
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // The `PedgagocialException` is propagated all the way down to here
	  });
	  ```
	   Assimilation
	  ------------
	   Sometimes the value you want to propagate to a downstream promise can only be
	  retrieved asynchronously. This can be achieved by returning a promise in the
	  fulfillment or rejection handler. The downstream promise will then be pending
	  until the returned promise is settled. This is called *assimilation*.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // The user's comments are now available
	  });
	  ```
	   If the assimliated promise rejects, then the downstream promise will also reject.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // If `findCommentsByAuthor` fulfills, we'll have the value here
	  }, function (reason) {
	    // If `findCommentsByAuthor` rejects, we'll have the reason here
	  });
	  ```
	   Simple Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let result;
	   try {
	    result = findResult();
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	  findResult(function(result, err){
	    if (err) {
	      // failure
	    } else {
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findResult().then(function(result){
	    // success
	  }, function(reason){
	    // failure
	  });
	  ```
	   Advanced Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let author, books;
	   try {
	    author = findAuthor();
	    books  = findBooksByAuthor(author);
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	   function foundBooks(books) {
	   }
	   function failure(reason) {
	   }
	   findAuthor(function(author, err){
	    if (err) {
	      failure(err);
	      // failure
	    } else {
	      try {
	        findBoooksByAuthor(author, function(books, err) {
	          if (err) {
	            failure(err);
	          } else {
	            try {
	              foundBooks(books);
	            } catch(reason) {
	              failure(reason);
	            }
	          }
	        });
	      } catch(error) {
	        failure(err);
	      }
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findAuthor().
	    then(findBooksByAuthor).
	    then(function(books){
	      // found books
	  }).catch(function(reason){
	    // something went wrong
	  });
	  ```
	   @method then
	  @param {Function} onFulfilled
	  @param {Function} onRejected
	  Useful for tooling.
	  @return {Promise}
	  */
	
	  /**
	  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
	  as the catch block of a try/catch statement.
	  ```js
	  function findAuthor(){
	  throw new Error('couldn't find that author');
	  }
	  // synchronous
	  try {
	  findAuthor();
	  } catch(reason) {
	  // something went wrong
	  }
	  // async with promises
	  findAuthor().catch(function(reason){
	  // something went wrong
	  });
	  ```
	  @method catch
	  @param {Function} onRejection
	  Useful for tooling.
	  @return {Promise}
	  */
	
	
	  Promise.prototype.catch = function _catch(onRejection) {
	    return this.then(null, onRejection);
	  };
	
	  /**
	    `finally` will be invoked regardless of the promise's fate just as native
	    try/catch/finally behaves
	  
	    Synchronous example:
	  
	    ```js
	    findAuthor() {
	      if (Math.random() > 0.5) {
	        throw new Error();
	      }
	      return new Author();
	    }
	  
	    try {
	      return findAuthor(); // succeed or fail
	    } catch(error) {
	      return findOtherAuther();
	    } finally {
	      // always runs
	      // doesn't affect the return value
	    }
	    ```
	  
	    Asynchronous example:
	  
	    ```js
	    findAuthor().catch(function(reason){
	      return findOtherAuther();
	    }).finally(function(){
	      // author was either found, or not
	    });
	    ```
	  
	    @method finally
	    @param {Function} callback
	    @return {Promise}
	  */
	
	
	  Promise.prototype.finally = function _finally(callback) {
	    var promise = this;
	    var constructor = promise.constructor;
	
	    return promise.then(function (value) {
	      return constructor.resolve(callback()).then(function () {
	        return value;
	      });
	    }, function (reason) {
	      return constructor.resolve(callback()).then(function () {
	        throw reason;
	      });
	    });
	  };
	
	  return Promise;
	}();
	
	Promise$1.prototype.then = then;
	Promise$1.all = all;
	Promise$1.race = race;
	Promise$1.resolve = resolve$1;
	Promise$1.reject = reject$1;
	Promise$1._setScheduler = setScheduler;
	Promise$1._setAsap = setAsap;
	Promise$1._asap = asap;
	
	/*global self*/
	function polyfill() {
	  var local = void 0;
	
	  if (typeof global !== 'undefined') {
	    local = global;
	  } else if (typeof self !== 'undefined') {
	    local = self;
	  } else {
	    try {
	      local = Function('return this')();
	    } catch (e) {
	      throw new Error('polyfill failed because global object is unavailable in this environment');
	    }
	  }
	
	  var P = local.Promise;
	
	  if (P) {
	    var promiseToString = null;
	    try {
	      promiseToString = Object.prototype.toString.call(P.resolve());
	    } catch (e) {
	      // silently ignored
	    }
	
	    if (promiseToString === '[object Promise]' && !P.cast) {
	      return;
	    }
	  }
	
	  local.Promise = Promise$1;
	}
	
	// Strange compat..
	Promise$1.polyfill = polyfill;
	Promise$1.Promise = Promise$1;
	
	return Promise$1;
	
	})));
	
	
	
	//# sourceMappingURL=es6-promise.map


/***/ }),
/* 950 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = SemVer;
	
	// The debug function is excluded entirely from the minified version.
	/* nomin */ var debug;
	/* nomin */ if (typeof process === 'object' &&
	    /* nomin */ ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}) &&
	    /* nomin */ ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG &&
	    /* nomin */ /\bsemver\b/i.test(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG))
	  /* nomin */ debug = function() {
	    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);
	    /* nomin */ args.unshift('SEMVER');
	    /* nomin */ console.log.apply(console, args);
	    /* nomin */ };
	/* nomin */ else
	  /* nomin */ debug = function() {};
	
	// Note: this is the semver.org version of the spec that it implements
	// Not necessarily the package version of this code.
	exports.SEMVER_SPEC_VERSION = '2.0.0';
	
	var MAX_LENGTH = 256;
	var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
	
	// Max safe segment length for coercion.
	var MAX_SAFE_COMPONENT_LENGTH = 16;
	
	// The actual regexps go on exports.re
	var re = exports.re = [];
	var src = exports.src = [];
	var R = 0;
	
	// The following Regular Expressions can be used for tokenizing,
	// validating, and parsing SemVer version strings.
	
	// ## Numeric Identifier
	// A single `0`, or a non-zero digit followed by zero or more digits.
	
	var NUMERICIDENTIFIER = R++;
	src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
	var NUMERICIDENTIFIERLOOSE = R++;
	src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';
	
	
	// ## Non-numeric Identifier
	// Zero or more digits, followed by a letter or hyphen, and then zero or
	// more letters, digits, or hyphens.
	
	var NONNUMERICIDENTIFIER = R++;
	src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*';
	
	
	// ## Main Version
	// Three dot-separated numeric identifiers.
	
	var MAINVERSION = R++;
	src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' +
	                   '(' + src[NUMERICIDENTIFIER] + ')\\.' +
	                   '(' + src[NUMERICIDENTIFIER] + ')';
	
	var MAINVERSIONLOOSE = R++;
	src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
	                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
	                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';
	
	// ## Pre-release Version Identifier
	// A numeric identifier, or a non-numeric identifier.
	
	var PRERELEASEIDENTIFIER = R++;
	src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +
	                            '|' + src[NONNUMERICIDENTIFIER] + ')';
	
	var PRERELEASEIDENTIFIERLOOSE = R++;
	src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +
	                                 '|' + src[NONNUMERICIDENTIFIER] + ')';
	
	
	// ## Pre-release Version
	// Hyphen, followed by one or more dot-separated pre-release version
	// identifiers.
	
	var PRERELEASE = R++;
	src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +
	                  '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';
	
	var PRERELEASELOOSE = R++;
	src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +
	                       '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';
	
	// ## Build Metadata Identifier
	// Any combination of digits, letters, or hyphens.
	
	var BUILDIDENTIFIER = R++;
	src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';
	
	// ## Build Metadata
	// Plus sign, followed by one or more period-separated build metadata
	// identifiers.
	
	var BUILD = R++;
	src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] +
	             '(?:\\.' + src[BUILDIDENTIFIER] + ')*))';
	
	
	// ## Full Version String
	// A main version, followed optionally by a pre-release version and
	// build metadata.
	
	// Note that the only major, minor, patch, and pre-release sections of
	// the version string are capturing groups.  The build metadata is not a
	// capturing group, because it should not ever be used in version
	// comparison.
	
	var FULL = R++;
	var FULLPLAIN = 'v?' + src[MAINVERSION] +
	                src[PRERELEASE] + '?' +
	                src[BUILD] + '?';
	
	src[FULL] = '^' + FULLPLAIN + '$';
	
	// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
	// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
	// common in the npm registry.
	var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] +
	                 src[PRERELEASELOOSE] + '?' +
	                 src[BUILD] + '?';
	
	var LOOSE = R++;
	src[LOOSE] = '^' + LOOSEPLAIN + '$';
	
	var GTLT = R++;
	src[GTLT] = '((?:<|>)?=?)';
	
	// Something like "2.*" or "1.2.x".
	// Note that "x.x" is a valid xRange identifer, meaning "any version"
	// Only the first item is strictly required.
	var XRANGEIDENTIFIERLOOSE = R++;
	src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
	var XRANGEIDENTIFIER = R++;
	src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';
	
	var XRANGEPLAIN = R++;
	src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' +
	                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
	                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
	                   '(?:' + src[PRERELEASE] + ')?' +
	                   src[BUILD] + '?' +
	                   ')?)?';
	
	var XRANGEPLAINLOOSE = R++;
	src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
	                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
	                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
	                        '(?:' + src[PRERELEASELOOSE] + ')?' +
	                        src[BUILD] + '?' +
	                        ')?)?';
	
	var XRANGE = R++;
	src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
	var XRANGELOOSE = R++;
	src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$';
	
	// Coercion.
	// Extract anything that could conceivably be a part of a valid semver
	var COERCE = R++;
	src[COERCE] = '(?:^|[^\\d])' +
	              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
	              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
	              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
	              '(?:$|[^\\d])';
	
	// Tilde ranges.
	// Meaning is "reasonably at or greater than"
	var LONETILDE = R++;
	src[LONETILDE] = '(?:~>?)';
	
	var TILDETRIM = R++;
	src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
	re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
	var tildeTrimReplace = '$1~';
	
	var TILDE = R++;
	src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
	var TILDELOOSE = R++;
	src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';
	
	// Caret ranges.
	// Meaning is "at least and backwards compatible with"
	var LONECARET = R++;
	src[LONECARET] = '(?:\\^)';
	
	var CARETTRIM = R++;
	src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
	re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
	var caretTrimReplace = '$1^';
	
	var CARET = R++;
	src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
	var CARETLOOSE = R++;
	src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';
	
	// A simple gt/lt/eq thing, or just "" to indicate "any version"
	var COMPARATORLOOSE = R++;
	src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
	var COMPARATOR = R++;
	src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$';
	
	
	// An expression to strip any whitespace between the gtlt and the thing
	// it modifies, so that `> 1.2.3` ==> `>1.2.3`
	var COMPARATORTRIM = R++;
	src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] +
	                      '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';
	
	// this one has to use the /g flag
	re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
	var comparatorTrimReplace = '$1$2$3';
	
	
	// Something like `1.2.3 - 1.2.4`
	// Note that these all use the loose form, because they'll be
	// checked against either the strict or loose comparator form
	// later.
	var HYPHENRANGE = R++;
	src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' +
	                   '\\s+-\\s+' +
	                   '(' + src[XRANGEPLAIN] + ')' +
	                   '\\s*$';
	
	var HYPHENRANGELOOSE = R++;
	src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' +
	                        '\\s+-\\s+' +
	                        '(' + src[XRANGEPLAINLOOSE] + ')' +
	                        '\\s*$';
	
	// Star ranges basically just allow anything at all.
	var STAR = R++;
	src[STAR] = '(<|>)?=?\\s*\\*';
	
	// Compile to actual regexp objects.
	// All are flag-free, unless they were created above with a flag.
	for (var i = 0; i < R; i++) {
	  debug(i, src[i]);
	  if (!re[i])
	    re[i] = new RegExp(src[i]);
	}
	
	exports.parse = parse;
	function parse(version, loose) {
	  if (version instanceof SemVer)
	    return version;
	
	  if (typeof version !== 'string')
	    return null;
	
	  if (version.length > MAX_LENGTH)
	    return null;
	
	  var r = loose ? re[LOOSE] : re[FULL];
	  if (!r.test(version))
	    return null;
	
	  try {
	    return new SemVer(version, loose);
	  } catch (er) {
	    return null;
	  }
	}
	
	exports.valid = valid;
	function valid(version, loose) {
	  var v = parse(version, loose);
	  return v ? v.version : null;
	}
	
	
	exports.clean = clean;
	function clean(version, loose) {
	  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);
	  return s ? s.version : null;
	}
	
	exports.SemVer = SemVer;
	
	function SemVer(version, loose) {
	  if (version instanceof SemVer) {
	    if (version.loose === loose)
	      return version;
	    else
	      version = version.version;
	  } else if (typeof version !== 'string') {
	    throw new TypeError('Invalid Version: ' + version);
	  }
	
	  if (version.length > MAX_LENGTH)
	    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
	
	  if (!(this instanceof SemVer))
	    return new SemVer(version, loose);
	
	  debug('SemVer', version, loose);
	  this.loose = loose;
	  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);
	
	  if (!m)
	    throw new TypeError('Invalid Version: ' + version);
	
	  this.raw = version;
	
	  // these are actually numbers
	  this.major = +m[1];
	  this.minor = +m[2];
	  this.patch = +m[3];
	
	  if (this.major > MAX_SAFE_INTEGER || this.major < 0)
	    throw new TypeError('Invalid major version')
	
	  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)
	    throw new TypeError('Invalid minor version')
	
	  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)
	    throw new TypeError('Invalid patch version')
	
	  // numberify any prerelease numeric ids
	  if (!m[4])
	    this.prerelease = [];
	  else
	    this.prerelease = m[4].split('.').map(function(id) {
	      if (/^[0-9]+$/.test(id)) {
	        var num = +id;
	        if (num >= 0 && num < MAX_SAFE_INTEGER)
	          return num;
	      }
	      return id;
	    });
	
	  this.build = m[5] ? m[5].split('.') : [];
	  this.format();
	}
	
	SemVer.prototype.format = function() {
	  this.version = this.major + '.' + this.minor + '.' + this.patch;
	  if (this.prerelease.length)
	    this.version += '-' + this.prerelease.join('.');
	  return this.version;
	};
	
	SemVer.prototype.toString = function() {
	  return this.version;
	};
	
	SemVer.prototype.compare = function(other) {
	  debug('SemVer.compare', this.version, this.loose, other);
	  if (!(other instanceof SemVer))
	    other = new SemVer(other, this.loose);
	
	  return this.compareMain(other) || this.comparePre(other);
	};
	
	SemVer.prototype.compareMain = function(other) {
	  if (!(other instanceof SemVer))
	    other = new SemVer(other, this.loose);
	
	  return compareIdentifiers(this.major, other.major) ||
	         compareIdentifiers(this.minor, other.minor) ||
	         compareIdentifiers(this.patch, other.patch);
	};
	
	SemVer.prototype.comparePre = function(other) {
	  if (!(other instanceof SemVer))
	    other = new SemVer(other, this.loose);
	
	  // NOT having a prerelease is > having one
	  if (this.prerelease.length && !other.prerelease.length)
	    return -1;
	  else if (!this.prerelease.length && other.prerelease.length)
	    return 1;
	  else if (!this.prerelease.length && !other.prerelease.length)
	    return 0;
	
	  var i = 0;
	  do {
	    var a = this.prerelease[i];
	    var b = other.prerelease[i];
	    debug('prerelease compare', i, a, b);
	    if (a === undefined && b === undefined)
	      return 0;
	    else if (b === undefined)
	      return 1;
	    else if (a === undefined)
	      return -1;
	    else if (a === b)
	      continue;
	    else
	      return compareIdentifiers(a, b);
	  } while (++i);
	};
	
	// preminor will bump the version up to the next minor release, and immediately
	// down to pre-release. premajor and prepatch work the same way.
	SemVer.prototype.inc = function(release, identifier) {
	  switch (release) {
	    case 'premajor':
	      this.prerelease.length = 0;
	      this.patch = 0;
	      this.minor = 0;
	      this.major++;
	      this.inc('pre', identifier);
	      break;
	    case 'preminor':
	      this.prerelease.length = 0;
	      this.patch = 0;
	      this.minor++;
	      this.inc('pre', identifier);
	      break;
	    case 'prepatch':
	      // If this is already a prerelease, it will bump to the next version
	      // drop any prereleases that might already exist, since they are not
	      // relevant at this point.
	      this.prerelease.length = 0;
	      this.inc('patch', identifier);
	      this.inc('pre', identifier);
	      break;
	    // If the input is a non-prerelease version, this acts the same as
	    // prepatch.
	    case 'prerelease':
	      if (this.prerelease.length === 0)
	        this.inc('patch', identifier);
	      this.inc('pre', identifier);
	      break;
	
	    case 'major':
	      // If this is a pre-major version, bump up to the same major version.
	      // Otherwise increment major.
	      // 1.0.0-5 bumps to 1.0.0
	      // 1.1.0 bumps to 2.0.0
	      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)
	        this.major++;
	      this.minor = 0;
	      this.patch = 0;
	      this.prerelease = [];
	      break;
	    case 'minor':
	      // If this is a pre-minor version, bump up to the same minor version.
	      // Otherwise increment minor.
	      // 1.2.0-5 bumps to 1.2.0
	      // 1.2.1 bumps to 1.3.0
	      if (this.patch !== 0 || this.prerelease.length === 0)
	        this.minor++;
	      this.patch = 0;
	      this.prerelease = [];
	      break;
	    case 'patch':
	      // If this is not a pre-release version, it will increment the patch.
	      // If it is a pre-release it will bump up to the same patch version.
	      // 1.2.0-5 patches to 1.2.0
	      // 1.2.0 patches to 1.2.1
	      if (this.prerelease.length === 0)
	        this.patch++;
	      this.prerelease = [];
	      break;
	    // This probably shouldn't be used publicly.
	    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
	    case 'pre':
	      if (this.prerelease.length === 0)
	        this.prerelease = [0];
	      else {
	        var i = this.prerelease.length;
	        while (--i >= 0) {
	          if (typeof this.prerelease[i] === 'number') {
	            this.prerelease[i]++;
	            i = -2;
	          }
	        }
	        if (i === -1) // didn't increment anything
	          this.prerelease.push(0);
	      }
	      if (identifier) {
	        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
	        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
	        if (this.prerelease[0] === identifier) {
	          if (isNaN(this.prerelease[1]))
	            this.prerelease = [identifier, 0];
	        } else
	          this.prerelease = [identifier, 0];
	      }
	      break;
	
	    default:
	      throw new Error('invalid increment argument: ' + release);
	  }
	  this.format();
	  this.raw = this.version;
	  return this;
	};
	
	exports.inc = inc;
	function inc(version, release, loose, identifier) {
	  if (typeof(loose) === 'string') {
	    identifier = loose;
	    loose = undefined;
	  }
	
	  try {
	    return new SemVer(version, loose).inc(release, identifier).version;
	  } catch (er) {
	    return null;
	  }
	}
	
	exports.diff = diff;
	function diff(version1, version2) {
	  if (eq(version1, version2)) {
	    return null;
	  } else {
	    var v1 = parse(version1);
	    var v2 = parse(version2);
	    if (v1.prerelease.length || v2.prerelease.length) {
	      for (var key in v1) {
	        if (key === 'major' || key === 'minor' || key === 'patch') {
	          if (v1[key] !== v2[key]) {
	            return 'pre'+key;
	          }
	        }
	      }
	      return 'prerelease';
	    }
	    for (var key in v1) {
	      if (key === 'major' || key === 'minor' || key === 'patch') {
	        if (v1[key] !== v2[key]) {
	          return key;
	        }
	      }
	    }
	  }
	}
	
	exports.compareIdentifiers = compareIdentifiers;
	
	var numeric = /^[0-9]+$/;
	function compareIdentifiers(a, b) {
	  var anum = numeric.test(a);
	  var bnum = numeric.test(b);
	
	  if (anum && bnum) {
	    a = +a;
	    b = +b;
	  }
	
	  return (anum && !bnum) ? -1 :
	         (bnum && !anum) ? 1 :
	         a < b ? -1 :
	         a > b ? 1 :
	         0;
	}
	
	exports.rcompareIdentifiers = rcompareIdentifiers;
	function rcompareIdentifiers(a, b) {
	  return compareIdentifiers(b, a);
	}
	
	exports.major = major;
	function major(a, loose) {
	  return new SemVer(a, loose).major;
	}
	
	exports.minor = minor;
	function minor(a, loose) {
	  return new SemVer(a, loose).minor;
	}
	
	exports.patch = patch;
	function patch(a, loose) {
	  return new SemVer(a, loose).patch;
	}
	
	exports.compare = compare;
	function compare(a, b, loose) {
	  return new SemVer(a, loose).compare(new SemVer(b, loose));
	}
	
	exports.compareLoose = compareLoose;
	function compareLoose(a, b) {
	  return compare(a, b, true);
	}
	
	exports.rcompare = rcompare;
	function rcompare(a, b, loose) {
	  return compare(b, a, loose);
	}
	
	exports.sort = sort;
	function sort(list, loose) {
	  return list.sort(function(a, b) {
	    return exports.compare(a, b, loose);
	  });
	}
	
	exports.rsort = rsort;
	function rsort(list, loose) {
	  return list.sort(function(a, b) {
	    return exports.rcompare(a, b, loose);
	  });
	}
	
	exports.gt = gt;
	function gt(a, b, loose) {
	  return compare(a, b, loose) > 0;
	}
	
	exports.lt = lt;
	function lt(a, b, loose) {
	  return compare(a, b, loose) < 0;
	}
	
	exports.eq = eq;
	function eq(a, b, loose) {
	  return compare(a, b, loose) === 0;
	}
	
	exports.neq = neq;
	function neq(a, b, loose) {
	  return compare(a, b, loose) !== 0;
	}
	
	exports.gte = gte;
	function gte(a, b, loose) {
	  return compare(a, b, loose) >= 0;
	}
	
	exports.lte = lte;
	function lte(a, b, loose) {
	  return compare(a, b, loose) <= 0;
	}
	
	exports.cmp = cmp;
	function cmp(a, op, b, loose) {
	  var ret;
	  switch (op) {
	    case '===':
	      if (typeof a === 'object') a = a.version;
	      if (typeof b === 'object') b = b.version;
	      ret = a === b;
	      break;
	    case '!==':
	      if (typeof a === 'object') a = a.version;
	      if (typeof b === 'object') b = b.version;
	      ret = a !== b;
	      break;
	    case '': case '=': case '==': ret = eq(a, b, loose); break;
	    case '!=': ret = neq(a, b, loose); break;
	    case '>': ret = gt(a, b, loose); break;
	    case '>=': ret = gte(a, b, loose); break;
	    case '<': ret = lt(a, b, loose); break;
	    case '<=': ret = lte(a, b, loose); break;
	    default: throw new TypeError('Invalid operator: ' + op);
	  }
	  return ret;
	}
	
	exports.Comparator = Comparator;
	function Comparator(comp, loose) {
	  if (comp instanceof Comparator) {
	    if (comp.loose === loose)
	      return comp;
	    else
	      comp = comp.value;
	  }
	
	  if (!(this instanceof Comparator))
	    return new Comparator(comp, loose);
	
	  debug('comparator', comp, loose);
	  this.loose = loose;
	  this.parse(comp);
	
	  if (this.semver === ANY)
	    this.value = '';
	  else
	    this.value = this.operator + this.semver.version;
	
	  debug('comp', this);
	}
	
	var ANY = {};
	Comparator.prototype.parse = function(comp) {
	  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
	  var m = comp.match(r);
	
	  if (!m)
	    throw new TypeError('Invalid comparator: ' + comp);
	
	  this.operator = m[1];
	  if (this.operator === '=')
	    this.operator = '';
	
	  // if it literally is just '>' or '' then allow anything.
	  if (!m[2])
	    this.semver = ANY;
	  else
	    this.semver = new SemVer(m[2], this.loose);
	};
	
	Comparator.prototype.toString = function() {
	  return this.value;
	};
	
	Comparator.prototype.test = function(version) {
	  debug('Comparator.test', version, this.loose);
	
	  if (this.semver === ANY)
	    return true;
	
	  if (typeof version === 'string')
	    version = new SemVer(version, this.loose);
	
	  return cmp(version, this.operator, this.semver, this.loose);
	};
	
	Comparator.prototype.intersects = function(comp, loose) {
	  if (!(comp instanceof Comparator)) {
	    throw new TypeError('a Comparator is required');
	  }
	
	  var rangeTmp;
	
	  if (this.operator === '') {
	    rangeTmp = new Range(comp.value, loose);
	    return satisfies(this.value, rangeTmp, loose);
	  } else if (comp.operator === '') {
	    rangeTmp = new Range(this.value, loose);
	    return satisfies(comp.semver, rangeTmp, loose);
	  }
	
	  var sameDirectionIncreasing =
	    (this.operator === '>=' || this.operator === '>') &&
	    (comp.operator === '>=' || comp.operator === '>');
	  var sameDirectionDecreasing =
	    (this.operator === '<=' || this.operator === '<') &&
	    (comp.operator === '<=' || comp.operator === '<');
	  var sameSemVer = this.semver.version === comp.semver.version;
	  var differentDirectionsInclusive =
	    (this.operator === '>=' || this.operator === '<=') &&
	    (comp.operator === '>=' || comp.operator === '<=');
	  var oppositeDirectionsLessThan =
	    cmp(this.semver, '<', comp.semver, loose) &&
	    ((this.operator === '>=' || this.operator === '>') &&
	    (comp.operator === '<=' || comp.operator === '<'));
	  var oppositeDirectionsGreaterThan =
	    cmp(this.semver, '>', comp.semver, loose) &&
	    ((this.operator === '<=' || this.operator === '<') &&
	    (comp.operator === '>=' || comp.operator === '>'));
	
	  return sameDirectionIncreasing || sameDirectionDecreasing ||
	    (sameSemVer && differentDirectionsInclusive) ||
	    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;
	};
	
	
	exports.Range = Range;
	function Range(range, loose) {
	  if (range instanceof Range) {
	    if (range.loose === loose) {
	      return range;
	    } else {
	      return new Range(range.raw, loose);
	    }
	  }
	
	  if (range instanceof Comparator) {
	    return new Range(range.value, loose);
	  }
	
	  if (!(this instanceof Range))
	    return new Range(range, loose);
	
	  this.loose = loose;
	
	  // First, split based on boolean or ||
	  this.raw = range;
	  this.set = range.split(/\s*\|\|\s*/).map(function(range) {
	    return this.parseRange(range.trim());
	  }, this).filter(function(c) {
	    // throw out any that are not relevant for whatever reason
	    return c.length;
	  });
	
	  if (!this.set.length) {
	    throw new TypeError('Invalid SemVer Range: ' + range);
	  }
	
	  this.format();
	}
	
	Range.prototype.format = function() {
	  this.range = this.set.map(function(comps) {
	    return comps.join(' ').trim();
	  }).join('||').trim();
	  return this.range;
	};
	
	Range.prototype.toString = function() {
	  return this.range;
	};
	
	Range.prototype.parseRange = function(range) {
	  var loose = this.loose;
	  range = range.trim();
	  debug('range', range, loose);
	  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
	  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
	  range = range.replace(hr, hyphenReplace);
	  debug('hyphen replace', range);
	  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
	  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
	  debug('comparator trim', range, re[COMPARATORTRIM]);
	
	  // `~ 1.2.3` => `~1.2.3`
	  range = range.replace(re[TILDETRIM], tildeTrimReplace);
	
	  // `^ 1.2.3` => `^1.2.3`
	  range = range.replace(re[CARETTRIM], caretTrimReplace);
	
	  // normalize spaces
	  range = range.split(/\s+/).join(' ');
	
	  // At this point, the range is completely trimmed and
	  // ready to be split into comparators.
	
	  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
	  var set = range.split(' ').map(function(comp) {
	    return parseComparator(comp, loose);
	  }).join(' ').split(/\s+/);
	  if (this.loose) {
	    // in loose mode, throw out any that are not valid comparators
	    set = set.filter(function(comp) {
	      return !!comp.match(compRe);
	    });
	  }
	  set = set.map(function(comp) {
	    return new Comparator(comp, loose);
	  });
	
	  return set;
	};
	
	Range.prototype.intersects = function(range, loose) {
	  if (!(range instanceof Range)) {
	    throw new TypeError('a Range is required');
	  }
	
	  return this.set.some(function(thisComparators) {
	    return thisComparators.every(function(thisComparator) {
	      return range.set.some(function(rangeComparators) {
	        return rangeComparators.every(function(rangeComparator) {
	          return thisComparator.intersects(rangeComparator, loose);
	        });
	      });
	    });
	  });
	};
	
	// Mostly just for testing and legacy API reasons
	exports.toComparators = toComparators;
	function toComparators(range, loose) {
	  return new Range(range, loose).set.map(function(comp) {
	    return comp.map(function(c) {
	      return c.value;
	    }).join(' ').trim().split(' ');
	  });
	}
	
	// comprised of xranges, tildes, stars, and gtlt's at this point.
	// already replaced the hyphen ranges
	// turn into a set of JUST comparators.
	function parseComparator(comp, loose) {
	  debug('comp', comp);
	  comp = replaceCarets(comp, loose);
	  debug('caret', comp);
	  comp = replaceTildes(comp, loose);
	  debug('tildes', comp);
	  comp = replaceXRanges(comp, loose);
	  debug('xrange', comp);
	  comp = replaceStars(comp, loose);
	  debug('stars', comp);
	  return comp;
	}
	
	function isX(id) {
	  return !id || id.toLowerCase() === 'x' || id === '*';
	}
	
	// ~, ~> --> * (any, kinda silly)
	// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
	// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
	// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
	// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
	// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
	function replaceTildes(comp, loose) {
	  return comp.trim().split(/\s+/).map(function(comp) {
	    return replaceTilde(comp, loose);
	  }).join(' ');
	}
	
	function replaceTilde(comp, loose) {
	  var r = loose ? re[TILDELOOSE] : re[TILDE];
	  return comp.replace(r, function(_, M, m, p, pr) {
	    debug('tilde', comp, _, M, m, p, pr);
	    var ret;
	
	    if (isX(M))
	      ret = '';
	    else if (isX(m))
	      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
	    else if (isX(p))
	      // ~1.2 == >=1.2.0 <1.3.0
	      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
	    else if (pr) {
	      debug('replaceTilde pr', pr);
	      if (pr.charAt(0) !== '-')
	        pr = '-' + pr;
	      ret = '>=' + M + '.' + m + '.' + p + pr +
	            ' <' + M + '.' + (+m + 1) + '.0';
	    } else
	      // ~1.2.3 == >=1.2.3 <1.3.0
	      ret = '>=' + M + '.' + m + '.' + p +
	            ' <' + M + '.' + (+m + 1) + '.0';
	
	    debug('tilde return', ret);
	    return ret;
	  });
	}
	
	// ^ --> * (any, kinda silly)
	// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
	// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
	// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
	// ^1.2.3 --> >=1.2.3 <2.0.0
	// ^1.2.0 --> >=1.2.0 <2.0.0
	function replaceCarets(comp, loose) {
	  return comp.trim().split(/\s+/).map(function(comp) {
	    return replaceCaret(comp, loose);
	  }).join(' ');
	}
	
	function replaceCaret(comp, loose) {
	  debug('caret', comp, loose);
	  var r = loose ? re[CARETLOOSE] : re[CARET];
	  return comp.replace(r, function(_, M, m, p, pr) {
	    debug('caret', comp, _, M, m, p, pr);
	    var ret;
	
	    if (isX(M))
	      ret = '';
	    else if (isX(m))
	      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
	    else if (isX(p)) {
	      if (M === '0')
	        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
	      else
	        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
	    } else if (pr) {
	      debug('replaceCaret pr', pr);
	      if (pr.charAt(0) !== '-')
	        pr = '-' + pr;
	      if (M === '0') {
	        if (m === '0')
	          ret = '>=' + M + '.' + m + '.' + p + pr +
	                ' <' + M + '.' + m + '.' + (+p + 1);
	        else
	          ret = '>=' + M + '.' + m + '.' + p + pr +
	                ' <' + M + '.' + (+m + 1) + '.0';
	      } else
	        ret = '>=' + M + '.' + m + '.' + p + pr +
	              ' <' + (+M + 1) + '.0.0';
	    } else {
	      debug('no pr');
	      if (M === '0') {
	        if (m === '0')
	          ret = '>=' + M + '.' + m + '.' + p +
	                ' <' + M + '.' + m + '.' + (+p + 1);
	        else
	          ret = '>=' + M + '.' + m + '.' + p +
	                ' <' + M + '.' + (+m + 1) + '.0';
	      } else
	        ret = '>=' + M + '.' + m + '.' + p +
	              ' <' + (+M + 1) + '.0.0';
	    }
	
	    debug('caret return', ret);
	    return ret;
	  });
	}
	
	function replaceXRanges(comp, loose) {
	  debug('replaceXRanges', comp, loose);
	  return comp.split(/\s+/).map(function(comp) {
	    return replaceXRange(comp, loose);
	  }).join(' ');
	}
	
	function replaceXRange(comp, loose) {
	  comp = comp.trim();
	  var r = loose ? re[XRANGELOOSE] : re[XRANGE];
	  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {
	    debug('xRange', comp, ret, gtlt, M, m, p, pr);
	    var xM = isX(M);
	    var xm = xM || isX(m);
	    var xp = xm || isX(p);
	    var anyX = xp;
	
	    if (gtlt === '=' && anyX)
	      gtlt = '';
	
	    if (xM) {
	      if (gtlt === '>' || gtlt === '<') {
	        // nothing is allowed
	        ret = '<0.0.0';
	      } else {
	        // nothing is forbidden
	        ret = '*';
	      }
	    } else if (gtlt && anyX) {
	      // replace X with 0
	      if (xm)
	        m = 0;
	      if (xp)
	        p = 0;
	
	      if (gtlt === '>') {
	        // >1 => >=2.0.0
	        // >1.2 => >=1.3.0
	        // >1.2.3 => >= 1.2.4
	        gtlt = '>=';
	        if (xm) {
	          M = +M + 1;
	          m = 0;
	          p = 0;
	        } else if (xp) {
	          m = +m + 1;
	          p = 0;
	        }
	      } else if (gtlt === '<=') {
	        // <=0.7.x is actually <0.8.0, since any 0.7.x should
	        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
	        gtlt = '<';
	        if (xm)
	          M = +M + 1;
	        else
	          m = +m + 1;
	      }
	
	      ret = gtlt + M + '.' + m + '.' + p;
	    } else if (xm) {
	      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
	    } else if (xp) {
	      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
	    }
	
	    debug('xRange return', ret);
	
	    return ret;
	  });
	}
	
	// Because * is AND-ed with everything else in the comparator,
	// and '' means "any version", just remove the *s entirely.
	function replaceStars(comp, loose) {
	  debug('replaceStars', comp, loose);
	  // Looseness is ignored here.  star is always as loose as it gets!
	  return comp.trim().replace(re[STAR], '');
	}
	
	// This function is passed to string.replace(re[HYPHENRANGE])
	// M, m, patch, prerelease, build
	// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
	// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
	// 1.2 - 3.4 => >=1.2.0 <3.5.0
	function hyphenReplace($0,
	                       from, fM, fm, fp, fpr, fb,
	                       to, tM, tm, tp, tpr, tb) {
	
	  if (isX(fM))
	    from = '';
	  else if (isX(fm))
	    from = '>=' + fM + '.0.0';
	  else if (isX(fp))
	    from = '>=' + fM + '.' + fm + '.0';
	  else
	    from = '>=' + from;
	
	  if (isX(tM))
	    to = '';
	  else if (isX(tm))
	    to = '<' + (+tM + 1) + '.0.0';
	  else if (isX(tp))
	    to = '<' + tM + '.' + (+tm + 1) + '.0';
	  else if (tpr)
	    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;
	  else
	    to = '<=' + to;
	
	  return (from + ' ' + to).trim();
	}
	
	
	// if ANY of the sets match ALL of its comparators, then pass
	Range.prototype.test = function(version) {
	  if (!version)
	    return false;
	
	  if (typeof version === 'string')
	    version = new SemVer(version, this.loose);
	
	  for (var i = 0; i < this.set.length; i++) {
	    if (testSet(this.set[i], version))
	      return true;
	  }
	  return false;
	};
	
	function testSet(set, version) {
	  for (var i = 0; i < set.length; i++) {
	    if (!set[i].test(version))
	      return false;
	  }
	
	  if (version.prerelease.length) {
	    // Find the set of versions that are allowed to have prereleases
	    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
	    // That should allow `1.2.3-pr.2` to pass.
	    // However, `1.2.4-alpha.notready` should NOT be allowed,
	    // even though it's within the range set by the comparators.
	    for (var i = 0; i < set.length; i++) {
	      debug(set[i].semver);
	      if (set[i].semver === ANY)
	        continue;
	
	      if (set[i].semver.prerelease.length > 0) {
	        var allowed = set[i].semver;
	        if (allowed.major === version.major &&
	            allowed.minor === version.minor &&
	            allowed.patch === version.patch)
	          return true;
	      }
	    }
	
	    // Version has a -pre, but it's not one of the ones we like.
	    return false;
	  }
	
	  return true;
	}
	
	exports.satisfies = satisfies;
	function satisfies(version, range, loose) {
	  try {
	    range = new Range(range, loose);
	  } catch (er) {
	    return false;
	  }
	  return range.test(version);
	}
	
	exports.maxSatisfying = maxSatisfying;
	function maxSatisfying(versions, range, loose) {
	  var max = null;
	  var maxSV = null;
	  try {
	    var rangeObj = new Range(range, loose);
	  } catch (er) {
	    return null;
	  }
	  versions.forEach(function (v) {
	    if (rangeObj.test(v)) { // satisfies(v, range, loose)
	      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)
	        max = v;
	        maxSV = new SemVer(max, loose);
	      }
	    }
	  })
	  return max;
	}
	
	exports.minSatisfying = minSatisfying;
	function minSatisfying(versions, range, loose) {
	  var min = null;
	  var minSV = null;
	  try {
	    var rangeObj = new Range(range, loose);
	  } catch (er) {
	    return null;
	  }
	  versions.forEach(function (v) {
	    if (rangeObj.test(v)) { // satisfies(v, range, loose)
	      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)
	        min = v;
	        minSV = new SemVer(min, loose);
	      }
	    }
	  })
	  return min;
	}
	
	exports.validRange = validRange;
	function validRange(range, loose) {
	  try {
	    // Return '*' instead of '' so that truthiness works.
	    // This will throw if it's invalid anyway
	    return new Range(range, loose).range || '*';
	  } catch (er) {
	    return null;
	  }
	}
	
	// Determine if version is less than all the versions possible in the range
	exports.ltr = ltr;
	function ltr(version, range, loose) {
	  return outside(version, range, '<', loose);
	}
	
	// Determine if version is greater than all the versions possible in the range.
	exports.gtr = gtr;
	function gtr(version, range, loose) {
	  return outside(version, range, '>', loose);
	}
	
	exports.outside = outside;
	function outside(version, range, hilo, loose) {
	  version = new SemVer(version, loose);
	  range = new Range(range, loose);
	
	  var gtfn, ltefn, ltfn, comp, ecomp;
	  switch (hilo) {
	    case '>':
	      gtfn = gt;
	      ltefn = lte;
	      ltfn = lt;
	      comp = '>';
	      ecomp = '>=';
	      break;
	    case '<':
	      gtfn = lt;
	      ltefn = gte;
	      ltfn = gt;
	      comp = '<';
	      ecomp = '<=';
	      break;
	    default:
	      throw new TypeError('Must provide a hilo val of "<" or ">"');
	  }
	
	  // If it satisifes the range it is not outside
	  if (satisfies(version, range, loose)) {
	    return false;
	  }
	
	  // From now on, variable terms are as if we're in "gtr" mode.
	  // but note that everything is flipped for the "ltr" function.
	
	  for (var i = 0; i < range.set.length; ++i) {
	    var comparators = range.set[i];
	
	    var high = null;
	    var low = null;
	
	    comparators.forEach(function(comparator) {
	      if (comparator.semver === ANY) {
	        comparator = new Comparator('>=0.0.0')
	      }
	      high = high || comparator;
	      low = low || comparator;
	      if (gtfn(comparator.semver, high.semver, loose)) {
	        high = comparator;
	      } else if (ltfn(comparator.semver, low.semver, loose)) {
	        low = comparator;
	      }
	    });
	
	    // If the edge version comparator has a operator then our version
	    // isn't outside it
	    if (high.operator === comp || high.operator === ecomp) {
	      return false;
	    }
	
	    // If the lowest version comparator has an operator and our version
	    // is less than it then it isn't higher than the range
	    if ((!low.operator || low.operator === comp) &&
	        ltefn(version, low.semver)) {
	      return false;
	    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	exports.prerelease = prerelease;
	function prerelease(version, loose) {
	  var parsed = parse(version, loose);
	  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;
	}
	
	exports.intersects = intersects;
	function intersects(r1, r2, loose) {
	  r1 = new Range(r1, loose)
	  r2 = new Range(r2, loose)
	  return r1.intersects(r2)
	}
	
	exports.coerce = coerce;
	function coerce(version) {
	  if (version instanceof SemVer)
	    return version;
	
	  if (typeof version !== 'string')
	    return null;
	
	  var match = version.match(re[COERCE]);
	
	  if (match == null)
	    return null;
	
	  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); 
	}


/***/ }),
/* 951 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = createPlacesClient;
	
	var buildSearchMethod = __webpack_require__(952);
	
	function createPlacesClient(algoliasearch) {
	  return function places(appID, apiKey, opts) {
	    var cloneDeep = __webpack_require__(955);
	
	    opts = opts && cloneDeep(opts) || {};
	    opts.hosts = opts.hosts || [
	      'places-dsn.algolia.net',
	      'places-1.algolianet.com',
	      'places-2.algolianet.com',
	      'places-3.algolianet.com'
	    ];
	
	    // allow initPlaces() no arguments => community rate limited
	    if (arguments.length === 0 || typeof appID === 'object' || appID === undefined) {
	      appID = '';
	      apiKey = '';
	      opts._allowEmptyCredentials = true;
	    }
	
	    var client = algoliasearch(appID, apiKey, opts);
	    var index = client.initIndex('places');
	    index.search = buildSearchMethod('query', '/1/places/query');
	    index.getObject = function(objectID, callback) {
	      return this.as._jsonRequest({
	        method: 'GET',
	        url: '/1/places/' + encodeURIComponent(objectID),
	        hostType: 'read',
	        callback: callback
	      });
	    };
	    return index;
	  };
	}


/***/ }),
/* 952 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = buildSearchMethod;
	
	var errors = __webpack_require__(953);
	
	/**
	 * Creates a search method to be used in clients
	 * @param {string} queryParam the name of the attribute used for the query
	 * @param {string} url the url
	 * @return {function} the search method
	 */
	function buildSearchMethod(queryParam, url) {
	  /**
	   * The search method. Prepares the data and send the query to Algolia.
	   * @param {string} query the string used for query search
	   * @param {object} args additional parameters to send with the search
	   * @param {function} [callback] the callback to be called with the client gets the answer
	   * @return {undefined|Promise} If the callback is not provided then this methods returns a Promise
	   */
	  return function search(query, args, callback) {
	    // warn V2 users on how to search
	    if (typeof query === 'function' && typeof args === 'object' ||
	      typeof callback === 'object') {
	      // .search(query, params, cb)
	      // .search(cb, params)
	      throw new errors.AlgoliaSearchError('index.search usage is index.search(query, params, cb)');
	    }
	
	    // Normalizing the function signature
	    if (arguments.length === 0 || typeof query === 'function') {
	      // Usage : .search(), .search(cb)
	      callback = query;
	      query = '';
	    } else if (arguments.length === 1 || typeof args === 'function') {
	      // Usage : .search(query/args), .search(query, cb)
	      callback = args;
	      args = undefined;
	    }
	    // At this point we have 3 arguments with values
	
	    // Usage : .search(args) // careful: typeof null === 'object'
	    if (typeof query === 'object' && query !== null) {
	      args = query;
	      query = undefined;
	    } else if (query === undefined || query === null) { // .search(undefined/null)
	      query = '';
	    }
	
	    var params = '';
	
	    if (query !== undefined) {
	      params += queryParam + '=' + encodeURIComponent(query);
	    }
	
	    var additionalUA;
	    if (args !== undefined) {
	      if (args.additionalUA) {
	        additionalUA = args.additionalUA;
	        delete args.additionalUA;
	      }
	      // `_getSearchParams` will augment params, do not be fooled by the = versus += from previous if
	      params = this.as._getSearchParams(args, params);
	    }
	
	
	    return this._search(params, url, callback, additionalUA);
	  };
	}


/***/ }),
/* 953 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This file hosts our error definitions
	// We use custom error "types" so that we can act on them when we need it
	// e.g.: if error instanceof errors.UnparsableJSON then..
	
	var inherits = __webpack_require__(947);
	
	function AlgoliaSearchError(message, extraProperties) {
	  var forEach = __webpack_require__(954);
	
	  var error = this;
	
	  // try to get a stacktrace
	  if (typeof Error.captureStackTrace === 'function') {
	    Error.captureStackTrace(this, this.constructor);
	  } else {
	    error.stack = (new Error()).stack || 'Cannot get a stacktrace, browser is too old';
	  }
	
	  this.name = 'AlgoliaSearchError';
	  this.message = message || 'Unknown error';
	
	  if (extraProperties) {
	    forEach(extraProperties, function addToErrorObject(value, key) {
	      error[key] = value;
	    });
	  }
	}
	
	inherits(AlgoliaSearchError, Error);
	
	function createCustomError(name, message) {
	  function AlgoliaSearchCustomError() {
	    var args = Array.prototype.slice.call(arguments, 0);
	
	    // custom message not set, use default
	    if (typeof args[0] !== 'string') {
	      args.unshift(message);
	    }
	
	    AlgoliaSearchError.apply(this, args);
	    this.name = 'AlgoliaSearch' + name + 'Error';
	  }
	
	  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);
	
	  return AlgoliaSearchCustomError;
	}
	
	// late exports to let various fn defs and inherits take place
	module.exports = {
	  AlgoliaSearchError: AlgoliaSearchError,
	  UnparsableJSON: createCustomError(
	    'UnparsableJSON',
	    'Could not parse the incoming response as JSON, see err.more for details'
	  ),
	  RequestTimeout: createCustomError(
	    'RequestTimeout',
	    'Request timedout before getting a response'
	  ),
	  Network: createCustomError(
	    'Network',
	    'Network issue, see err.more for details'
	  ),
	  JSONPScriptFail: createCustomError(
	    'JSONPScriptFail',
	    '<script> was loaded but did not call our provided callback'
	  ),
	  JSONPScriptError: createCustomError(
	    'JSONPScriptError',
	    '<script> unable to load due to an `error` event on it'
	  ),
	  Unknown: createCustomError(
	    'Unknown',
	    'Unknown error occured'
	  )
	};


/***/ }),
/* 954 */
/***/ (function(module, exports) {

	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;
	
	module.exports = function forEach (obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};
	


/***/ }),
/* 955 */
/***/ (function(module, exports) {

	module.exports = function clone(obj) {
	  return JSON.parse(JSON.stringify(obj));
	};


/***/ }),
/* 956 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Some methods only accessible server side
	
	module.exports = AlgoliaSearchServer;
	
	var inherits = __webpack_require__(947);
	
	var AlgoliaSearch = __webpack_require__(957);
	
	function AlgoliaSearchServer(applicationID, apiKey, opts) {
	  // Default protocol is https: on the server, to avoid leaking admin keys
	  if (opts.protocol === undefined) {
	    opts.protocol = 'https:';
	  }
	
	  AlgoliaSearch.apply(this, arguments);
	}
	
	inherits(AlgoliaSearchServer, AlgoliaSearch);
	
	/*
	 * Allow to use IP rate limit when you have a proxy between end-user and Algolia.
	 * This option will set the X-Forwarded-For HTTP header with the client IP and the X-Forwarded-API-Key with the API Key having rate limits.
	 * @param adminAPIKey the admin API Key you can find in your dashboard
	 * @param endUserIP the end user IP (you can use both IPV4 or IPV6 syntax)
	 * @param rateLimitAPIKey the API key on which you have a rate limit
	 */
	AlgoliaSearchServer.prototype.enableRateLimitForward = function(adminAPIKey, endUserIP, rateLimitAPIKey) {
	  this._forward = {
	    adminAPIKey: adminAPIKey,
	    endUserIP: endUserIP,
	    rateLimitAPIKey: rateLimitAPIKey
	  };
	};
	
	/*
	 * Disable IP rate limit enabled with enableRateLimitForward() function
	 */
	AlgoliaSearchServer.prototype.disableRateLimitForward = function() {
	  this._forward = null;
	};
	
	/*
	 * Specify the securedAPIKey to use with associated information
	 */
	AlgoliaSearchServer.prototype.useSecuredAPIKey = function(securedAPIKey, securityTags, userToken) {
	  this._secure = {
	    apiKey: securedAPIKey,
	    securityTags: securityTags,
	    userToken: userToken
	  };
	};
	
	/*
	 * If a secured API was used, disable it
	 */
	AlgoliaSearchServer.prototype.disableSecuredAPIKey = function() {
	  this._secure = null;
	};
	
	AlgoliaSearchServer.prototype._computeRequestHeaders = function(additionalUA) {
	  var headers = AlgoliaSearchServer.super_.prototype._computeRequestHeaders.call(this, additionalUA);
	
	  if (this._forward) {
	    headers['x-algolia-api-key'] = this._forward.adminAPIKey;
	    headers['x-forwarded-for'] = this._forward.endUserIP;
	    headers['x-forwarded-api-key'] = this._forward.rateLimitAPIKey;
	  }
	
	  if (this._secure) {
	    headers['x-algolia-api-key'] = this._secure.apiKey;
	    headers['x-algolia-tagfilters'] = this._secure.securityTags;
	    headers['x-algolia-usertoken'] = this._secure.userToken;
	  }
	
	  return headers;
	};


/***/ }),
/* 957 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = AlgoliaSearch;
	
	var Index = __webpack_require__(958);
	var deprecate = __webpack_require__(960);
	var deprecatedMessage = __webpack_require__(961);
	var AlgoliaSearchCore = __webpack_require__(970);
	var inherits = __webpack_require__(947);
	var errors = __webpack_require__(953);
	
	function AlgoliaSearch() {
	  AlgoliaSearchCore.apply(this, arguments);
	}
	
	inherits(AlgoliaSearch, AlgoliaSearchCore);
	
	/*
	 * Delete an index
	 *
	 * @param indexName the name of index to delete
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer that contains the task ID
	 */
	AlgoliaSearch.prototype.deleteIndex = function(indexName, callback) {
	  return this._jsonRequest({
	    method: 'DELETE',
	    url: '/1/indexes/' + encodeURIComponent(indexName),
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * Move an existing index.
	 * @param srcIndexName the name of index to copy.
	 * @param dstIndexName the new index name that will contains a copy of
	 * srcIndexName (destination will be overriten if it already exist).
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer that contains the task ID
	 */
	AlgoliaSearch.prototype.moveIndex = function(srcIndexName, dstIndexName, callback) {
	  var postObj = {
	    operation: 'move', destination: dstIndexName
	  };
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(srcIndexName) + '/operation',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * Copy an existing index.
	 * @param srcIndexName the name of index to copy.
	 * @param dstIndexName the new index name that will contains a copy
	 * of srcIndexName (destination will be overriten if it already exist).
	 * @param scope an array of scopes to copy: ['settings', 'synonyms', 'rules']
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer that contains the task ID
	 */
	AlgoliaSearch.prototype.copyIndex = function(srcIndexName, dstIndexName, scopeOrCallback, _callback) {
	  var postObj = {
	    operation: 'copy',
	    destination: dstIndexName
	  };
	  var callback = _callback;
	  if (typeof scopeOrCallback === 'function') {
	    // oops, old behaviour of third argument being a function
	    callback = scopeOrCallback;
	  } else if (Array.isArray(scopeOrCallback) && scopeOrCallback.length > 0) {
	    postObj.scope = scopeOrCallback;
	  } else if (typeof scopeOrCallback !== 'undefined') {
	    throw new Error('the scope given to `copyIndex` was not an array with settings, synonyms or rules');
	  }
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(srcIndexName) + '/operation',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * Return last log entries.
	 * @param offset Specify the first entry to retrieve (0-based, 0 is the most recent log entry).
	 * @param length Specify the maximum number of entries to retrieve starting
	 * at offset. Maximum allowed value: 1000.
	 * @param type Specify the maximum number of entries to retrieve starting
	 * at offset. Maximum allowed value: 1000.
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer that contains the task ID
	 */
	AlgoliaSearch.prototype.getLogs = function(offset, length, callback) {
	  var clone = __webpack_require__(955);
	  var params = {};
	  if (typeof offset === 'object') {
	    // getLogs(params)
	    params = clone(offset);
	    callback = length;
	  } else if (arguments.length === 0 || typeof offset === 'function') {
	    // getLogs([cb])
	    callback = offset;
	  } else if (arguments.length === 1 || typeof length === 'function') {
	    // getLogs(1, [cb)]
	    callback = length;
	    params.offset = offset;
	  } else {
	    // getLogs(1, 2, [cb])
	    params.offset = offset;
	    params.length = length;
	  }
	
	  if (params.offset === undefined) params.offset = 0;
	  if (params.length === undefined) params.length = 10;
	
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/logs?' + this._getSearchParams(params, ''),
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	 * List all existing indexes (paginated)
	 *
	 * @param page The page to retrieve, starting at 0.
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer with index list
	 */
	AlgoliaSearch.prototype.listIndexes = function(page, callback) {
	  var params = '';
	
	  if (page === undefined || typeof page === 'function') {
	    callback = page;
	  } else {
	    params = '?page=' + page;
	  }
	
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes' + params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	 * Get the index object initialized
	 *
	 * @param indexName the name of index
	 * @param callback the result callback with one argument (the Index instance)
	 */
	AlgoliaSearch.prototype.initIndex = function(indexName) {
	  return new Index(this, indexName);
	};
	
	/*
	 * @deprecated use client.listApiKeys
	 */
	AlgoliaSearch.prototype.listUserKeys = deprecate(function(callback) {
	  return this.listApiKeys(callback);
	}, deprecatedMessage('client.listUserKeys()', 'client.listApiKeys()'));
	
	/*
	 * List all existing api keys with their associated ACLs
	 *
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer with api keys list
	 */
	AlgoliaSearch.prototype.listApiKeys = function(callback) {
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/keys',
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	 * @deprecated see client.getApiKey
	 */
	AlgoliaSearch.prototype.getUserKeyACL = deprecate(function(key, callback) {
	  return this.getApiKey(key, callback);
	}, deprecatedMessage('client.getUserKeyACL()', 'client.getApiKey()'));
	
	/*
	 * Get an API key
	 *
	 * @param key
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer with the right API key
	 */
	AlgoliaSearch.prototype.getApiKey = function(key, callback) {
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/keys/' + key,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	 * @deprecated see client.deleteApiKey
	 */
	AlgoliaSearch.prototype.deleteUserKey = deprecate(function(key, callback) {
	  return this.deleteApiKey(key, callback);
	}, deprecatedMessage('client.deleteUserKey()', 'client.deleteApiKey()'));
	
	/*
	 * Delete an existing API key
	 * @param key
	 * @param callback the result callback called with two arguments
	 *  error: null or Error('message')
	 *  content: the server answer with the date of deletion
	 */
	AlgoliaSearch.prototype.deleteApiKey = function(key, callback) {
	  return this._jsonRequest({
	    method: 'DELETE',
	    url: '/1/keys/' + key,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	 @deprecated see client.addApiKey
	 */
	AlgoliaSearch.prototype.addUserKey = deprecate(function(acls, params, callback) {
	  return this.addApiKey(acls, params, callback);
	}, deprecatedMessage('client.addUserKey()', 'client.addApiKey()'));
	
	/*
	 * Add a new global API key
	 *
	 * @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that
	 *   can contains the following values:
	 *     - search: allow to search (https and http)
	 *     - addObject: allows to add/update an object in the index (https only)
	 *     - deleteObject : allows to delete an existing object (https only)
	 *     - deleteIndex : allows to delete index content (https only)
	 *     - settings : allows to get index settings (https only)
	 *     - editSettings : allows to change index settings (https only)
	 * @param {Object} [params] - Optionnal parameters to set for the key
	 * @param {number} params.validity - Number of seconds after which the key will be automatically removed (0 means no time limit for this key)
	 * @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour
	 * @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call
	 * @param {string[]} params.indexes - Allowed targeted indexes for this key
	 * @param {string} params.description - A description for your key
	 * @param {string[]} params.referers - A list of authorized referers
	 * @param {Object} params.queryParameters - Force the key to use specific query parameters
	 * @param {Function} callback - The result callback called with two arguments
	 *   error: null or Error('message')
	 *   content: the server answer with the added API key
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.addApiKey(['search'], {
	 *   validity: 300,
	 *   maxQueriesPerIPPerHour: 2000,
	 *   maxHitsPerQuery: 3,
	 *   indexes: ['fruits'],
	 *   description: 'Eat three fruits',
	 *   referers: ['*.algolia.com'],
	 *   queryParameters: {
	 *     tagFilters: ['public'],
	 *   }
	 * })
	 * @see {@link https://www.algolia.com/doc/rest_api#AddKey|Algolia REST API Documentation}
	 */
	AlgoliaSearch.prototype.addApiKey = function(acls, params, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: client.addApiKey(arrayOfAcls[, params, callback])';
	
	  if (!isArray(acls)) {
	    throw new Error(usage);
	  }
	
	  if (arguments.length === 1 || typeof params === 'function') {
	    callback = params;
	    params = null;
	  }
	
	  var postObj = {
	    acl: acls
	  };
	
	  if (params) {
	    postObj.validity = params.validity;
	    postObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;
	    postObj.maxHitsPerQuery = params.maxHitsPerQuery;
	    postObj.indexes = params.indexes;
	    postObj.description = params.description;
	
	    if (params.queryParameters) {
	      postObj.queryParameters = this._getSearchParams(params.queryParameters, '');
	    }
	
	    postObj.referers = params.referers;
	  }
	
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/keys',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * @deprecated Please use client.addApiKey()
	 */
	AlgoliaSearch.prototype.addUserKeyWithValidity = deprecate(function(acls, params, callback) {
	  return this.addApiKey(acls, params, callback);
	}, deprecatedMessage('client.addUserKeyWithValidity()', 'client.addApiKey()'));
	
	/**
	 * @deprecated Please use client.updateApiKey()
	 */
	AlgoliaSearch.prototype.updateUserKey = deprecate(function(key, acls, params, callback) {
	  return this.updateApiKey(key, acls, params, callback);
	}, deprecatedMessage('client.updateUserKey()', 'client.updateApiKey()'));
	
	/**
	 * Update an existing API key
	 * @param {string} key - The key to update
	 * @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that
	 *   can contains the following values:
	 *     - search: allow to search (https and http)
	 *     - addObject: allows to add/update an object in the index (https only)
	 *     - deleteObject : allows to delete an existing object (https only)
	 *     - deleteIndex : allows to delete index content (https only)
	 *     - settings : allows to get index settings (https only)
	 *     - editSettings : allows to change index settings (https only)
	 * @param {Object} [params] - Optionnal parameters to set for the key
	 * @param {number} params.validity - Number of seconds after which the key will be automatically removed (0 means no time limit for this key)
	 * @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour
	 * @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call
	 * @param {string[]} params.indexes - Allowed targeted indexes for this key
	 * @param {string} params.description - A description for your key
	 * @param {string[]} params.referers - A list of authorized referers
	 * @param {Object} params.queryParameters - Force the key to use specific query parameters
	 * @param {Function} callback - The result callback called with two arguments
	 *   error: null or Error('message')
	 *   content: the server answer with the modified API key
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.updateApiKey('APIKEY', ['search'], {
	 *   validity: 300,
	 *   maxQueriesPerIPPerHour: 2000,
	 *   maxHitsPerQuery: 3,
	 *   indexes: ['fruits'],
	 *   description: 'Eat three fruits',
	 *   referers: ['*.algolia.com'],
	 *   queryParameters: {
	 *     tagFilters: ['public'],
	 *   }
	 * })
	 * @see {@link https://www.algolia.com/doc/rest_api#UpdateIndexKey|Algolia REST API Documentation}
	 */
	AlgoliaSearch.prototype.updateApiKey = function(key, acls, params, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: client.updateApiKey(key, arrayOfAcls[, params, callback])';
	
	  if (!isArray(acls)) {
	    throw new Error(usage);
	  }
	
	  if (arguments.length === 2 || typeof params === 'function') {
	    callback = params;
	    params = null;
	  }
	
	  var putObj = {
	    acl: acls
	  };
	
	  if (params) {
	    putObj.validity = params.validity;
	    putObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;
	    putObj.maxHitsPerQuery = params.maxHitsPerQuery;
	    putObj.indexes = params.indexes;
	    putObj.description = params.description;
	
	    if (params.queryParameters) {
	      putObj.queryParameters = this._getSearchParams(params.queryParameters, '');
	    }
	
	    putObj.referers = params.referers;
	  }
	
	  return this._jsonRequest({
	    method: 'PUT',
	    url: '/1/keys/' + key,
	    body: putObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * Initialize a new batch of search queries
	 * @deprecated use client.search()
	 */
	AlgoliaSearch.prototype.startQueriesBatch = deprecate(function startQueriesBatchDeprecated() {
	  this._batch = [];
	}, deprecatedMessage('client.startQueriesBatch()', 'client.search()'));
	
	/**
	 * Add a search query in the batch
	 * @deprecated use client.search()
	 */
	AlgoliaSearch.prototype.addQueryInBatch = deprecate(function addQueryInBatchDeprecated(indexName, query, args) {
	  this._batch.push({
	    indexName: indexName,
	    query: query,
	    params: args
	  });
	}, deprecatedMessage('client.addQueryInBatch()', 'client.search()'));
	
	/**
	 * Launch the batch of queries using XMLHttpRequest.
	 * @deprecated use client.search()
	 */
	AlgoliaSearch.prototype.sendQueriesBatch = deprecate(function sendQueriesBatchDeprecated(callback) {
	  return this.search(this._batch, callback);
	}, deprecatedMessage('client.sendQueriesBatch()', 'client.search()'));
	
	/**
	 * Perform write operations accross multiple indexes.
	 *
	 * To reduce the amount of time spent on network round trips,
	 * you can create, update, or delete several objects in one call,
	 * using the batch endpoint (all operations are done in the given order).
	 *
	 * Available actions:
	 *   - addObject
	 *   - updateObject
	 *   - partialUpdateObject
	 *   - partialUpdateObjectNoCreate
	 *   - deleteObject
	 *
	 * https://www.algolia.com/doc/rest_api#Indexes
	 * @param  {Object[]} operations An array of operations to perform
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.batch([{
	 *   action: 'addObject',
	 *   indexName: 'clients',
	 *   body: {
	 *     name: 'Bill'
	 *   }
	 * }, {
	 *   action: 'udpateObject',
	 *   indexName: 'fruits',
	 *   body: {
	 *     objectID: '29138',
	 *     name: 'banana'
	 *   }
	 * }], cb)
	 */
	AlgoliaSearch.prototype.batch = function(operations, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: client.batch(operations[, callback])';
	
	  if (!isArray(operations)) {
	    throw new Error(usage);
	  }
	
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/*/batch',
	    body: {
	      requests: operations
	    },
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/**
	 * Assign or Move a userID to a cluster
	 *
	 * @param {string} data.userID The userID to assign to a new cluster
	 * @param {string} data.cluster The cluster to assign the user to
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.assignUserID({ cluster: 'c1-test', userID: 'some-user' });
	 */
	AlgoliaSearch.prototype.assignUserID = function(data, callback) {
	  if (!data.userID || !data.cluster) {
	    throw new errors.AlgoliaSearchError('You have to provide both a userID and cluster', data);
	  }
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/clusters/mapping',
	    hostType: 'write',
	    body: {cluster: data.cluster},
	    callback: callback,
	    headers: {
	      'x-algolia-user-id': data.userID
	    }
	  });
	};
	
	/**
	 * Get the top userIDs
	 *
	 * (the callback is the second argument)
	 *
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.getTopUserID();
	 */
	AlgoliaSearch.prototype.getTopUserID = function(callback) {
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/clusters/mapping/top',
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/**
	 * Get userID
	 *
	 * @param {string} data.userID The userID to get info about
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.getUserID({ userID: 'some-user' });
	 */
	AlgoliaSearch.prototype.getUserID = function(data, callback) {
	  if (!data.userID) {
	    throw new errors.AlgoliaSearchError('You have to provide a userID', {debugData: data});
	  }
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/clusters/mapping/' + data.userID,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/**
	 * List all the clusters
	 *
	 * (the callback is the second argument)
	 *
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.listClusters();
	 */
	AlgoliaSearch.prototype.listClusters = function(callback) {
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/clusters',
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/**
	 * List the userIDs
	 *
	 * (the callback is the second argument)
	 *
	 * @param {string} data.hitsPerPage How many hits on every page
	 * @param {string} data.page The page to retrieve
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.listClusters();
	 * client.listClusters({ page: 3, hitsPerPage: 30});
	 */
	AlgoliaSearch.prototype.listUserIDs = function(data, callback) {
	  return this._jsonRequest({
	    method: 'GET',
	    url: '/1/clusters/mapping',
	    body: data,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/**
	 * Remove an userID
	 *
	 * @param {string} data.userID The userID to assign to a new cluster
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.removeUserID({ userID: 'some-user' });
	 */
	AlgoliaSearch.prototype.removeUserID = function(data, callback) {
	  if (!data.userID) {
	    throw new errors.AlgoliaSearchError('You have to provide a userID', {debugData: data});
	  }
	  return this._jsonRequest({
	    method: 'DELETE',
	    url: '/1/clusters/mapping',
	    hostType: 'write',
	    callback: callback,
	    headers: {
	      'x-algolia-user-id': data.userID
	    }
	  });
	};
	
	/**
	 * Search for userIDs
	 *
	 * @param {string} data.cluster The cluster to target
	 * @param {string} data.query The query to execute
	 * @param {string} data.hitsPerPage How many hits on every page
	 * @param {string} data.page The page to retrieve
	 * @return {Promise|undefined} Returns a promise if no callback given
	 * @example
	 * client.searchUserIDs({ cluster: 'c1-test', query: 'some-user' });
	 * client.searchUserIDs({
	 *   cluster: "c1-test",
	 *   query: "some-user",
	 *   page: 3,
	 *   hitsPerPage: 2
	 * });
	 */
	AlgoliaSearch.prototype.searchUserIDs = function(data, callback) {
	  return this._jsonRequest({
	    method: 'POST',
	    url: '/1/clusters/mapping/search',
	    body: data,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	// environment specific methods
	AlgoliaSearch.prototype.destroy = notImplemented;
	AlgoliaSearch.prototype.enableRateLimitForward = notImplemented;
	AlgoliaSearch.prototype.disableRateLimitForward = notImplemented;
	AlgoliaSearch.prototype.useSecuredAPIKey = notImplemented;
	AlgoliaSearch.prototype.disableSecuredAPIKey = notImplemented;
	AlgoliaSearch.prototype.generateSecuredApiKey = notImplemented;
	
	function notImplemented() {
	  var message = 'Not implemented in this environment.\n' +
	    'If you feel this is a mistake, write to support@algolia.com';
	
	  throw new errors.AlgoliaSearchError(message);
	}


/***/ }),
/* 958 */
/***/ (function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(947);
	var IndexCore = __webpack_require__(959);
	var deprecate = __webpack_require__(960);
	var deprecatedMessage = __webpack_require__(961);
	var exitPromise = __webpack_require__(968);
	var errors = __webpack_require__(953);
	
	var deprecateForwardToSlaves = deprecate(
	  function() {},
	  deprecatedMessage('forwardToSlaves', 'forwardToReplicas')
	);
	
	module.exports = Index;
	
	function Index() {
	  IndexCore.apply(this, arguments);
	}
	
	inherits(Index, IndexCore);
	
	/*
	* Add an object in this index
	*
	* @param content contains the javascript object to add inside the index
	* @param objectID (optional) an objectID you want to attribute to this object
	* (if the attribute already exist the old object will be overwrite)
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that contains 3 elements: createAt, taskId and objectID
	*/
	Index.prototype.addObject = function(content, objectID, callback) {
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof objectID === 'function') {
	    callback = objectID;
	    objectID = undefined;
	  }
	
	  return this.as._jsonRequest({
	    method: objectID !== undefined ?
	    'PUT' : // update or create
	    'POST', // create (API generates an objectID)
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + // create
	    (objectID !== undefined ? '/' + encodeURIComponent(objectID) : ''), // update or create
	    body: content,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Add several objects
	*
	* @param objects contains an array of objects to add
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that updateAt and taskID
	*/
	Index.prototype.addObjects = function(objects, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: index.addObjects(arrayOfObjects[, callback])';
	
	  if (!isArray(objects)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	  var postObj = {
	    requests: []
	  };
	  for (var i = 0; i < objects.length; ++i) {
	    var request = {
	      action: 'addObject',
	      body: objects[i]
	    };
	    postObj.requests.push(request);
	  }
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Update partially an object (only update attributes passed in argument)
	*
	* @param partialObject contains the javascript attributes to override, the
	*  object must contains an objectID attribute
	* @param createIfNotExists (optional) if false, avoid an automatic creation of the object
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that contains 3 elements: createAt, taskId and objectID
	*/
	Index.prototype.partialUpdateObject = function(partialObject, createIfNotExists, callback) {
	  if (arguments.length === 1 || typeof createIfNotExists === 'function') {
	    callback = createIfNotExists;
	    createIfNotExists = undefined;
	  }
	
	  var indexObj = this;
	  var url = '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(partialObject.objectID) + '/partial';
	  if (createIfNotExists === false) {
	    url += '?createIfNotExists=false';
	  }
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: url,
	    body: partialObject,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Partially Override the content of several objects
	*
	* @param objects contains an array of objects to update (each object must contains a objectID attribute)
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that updateAt and taskID
	*/
	Index.prototype.partialUpdateObjects = function(objects, createIfNotExists, callback) {
	  if (arguments.length === 1 || typeof createIfNotExists === 'function') {
	    callback = createIfNotExists;
	    createIfNotExists = true;
	  }
	
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: index.partialUpdateObjects(arrayOfObjects[, callback])';
	
	  if (!isArray(objects)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	  var postObj = {
	    requests: []
	  };
	  for (var i = 0; i < objects.length; ++i) {
	    var request = {
	      action: createIfNotExists === true ? 'partialUpdateObject' : 'partialUpdateObjectNoCreate',
	      objectID: objects[i].objectID,
	      body: objects[i]
	    };
	    postObj.requests.push(request);
	  }
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Override the content of object
	*
	* @param object contains the javascript object to save, the object must contains an objectID attribute
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that updateAt and taskID
	*/
	Index.prototype.saveObject = function(object, callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'PUT',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(object.objectID),
	    body: object,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Override the content of several objects
	*
	* @param objects contains an array of objects to update (each object must contains a objectID attribute)
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that updateAt and taskID
	*/
	Index.prototype.saveObjects = function(objects, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: index.saveObjects(arrayOfObjects[, callback])';
	
	  if (!isArray(objects)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	  var postObj = {
	    requests: []
	  };
	  for (var i = 0; i < objects.length; ++i) {
	    var request = {
	      action: 'updateObject',
	      objectID: objects[i].objectID,
	      body: objects[i]
	    };
	    postObj.requests.push(request);
	  }
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Delete an object from the index
	*
	* @param objectID the unique identifier of object to delete
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that contains 3 elements: createAt, taskId and objectID
	*/
	Index.prototype.deleteObject = function(objectID, callback) {
	  if (typeof objectID === 'function' || typeof objectID !== 'string' && typeof objectID !== 'number') {
	    var err = new errors.AlgoliaSearchError('Cannot delete an object without an objectID');
	    callback = objectID;
	    if (typeof callback === 'function') {
	      return callback(err);
	    }
	
	    return this.as._promise.reject(err);
	  }
	
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'DELETE',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID),
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Delete several objects from an index
	*
	* @param objectIDs contains an array of objectID to delete
	* @param callback (optional) the result callback called with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that contains 3 elements: createAt, taskId and objectID
	*/
	Index.prototype.deleteObjects = function(objectIDs, callback) {
	  var isArray = __webpack_require__(966);
	  var map = __webpack_require__(967);
	
	  var usage = 'Usage: index.deleteObjects(arrayOfObjectIDs[, callback])';
	
	  if (!isArray(objectIDs)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	  var postObj = {
	    requests: map(objectIDs, function prepareRequest(objectID) {
	      return {
	        action: 'deleteObject',
	        objectID: objectID,
	        body: {
	          objectID: objectID
	        }
	      };
	    })
	  };
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/batch',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Delete all objects matching a query
	*
	* @param query the query string
	* @param params the optional query parameters
	* @param callback (optional) the result callback called with one argument
	*  error: null or Error('message')
	* @deprecated see index.deleteBy
	*/
	Index.prototype.deleteByQuery = deprecate(function(query, params, callback) {
	  var clone = __webpack_require__(955);
	  var map = __webpack_require__(967);
	
	  var indexObj = this;
	  var client = indexObj.as;
	
	  if (arguments.length === 1 || typeof params === 'function') {
	    callback = params;
	    params = {};
	  } else {
	    params = clone(params);
	  }
	
	  params.attributesToRetrieve = 'objectID';
	  params.hitsPerPage = 1000;
	  params.distinct = false;
	
	  // when deleting, we should never use cache to get the
	  // search results
	  this.clearCache();
	
	  // there's a problem in how we use the promise chain,
	  // see how waitTask is done
	  var promise = this
	  .search(query, params)
	  .then(stopOrDelete);
	
	  function stopOrDelete(searchContent) {
	    // stop here
	    if (searchContent.nbHits === 0) {
	      // return indexObj.as._request.resolve();
	      return searchContent;
	    }
	
	    // continue and do a recursive call
	    var objectIDs = map(searchContent.hits, function getObjectID(object) {
	      return object.objectID;
	    });
	
	    return indexObj
	    .deleteObjects(objectIDs)
	    .then(waitTask)
	    .then(doDeleteByQuery);
	  }
	
	  function waitTask(deleteObjectsContent) {
	    return indexObj.waitTask(deleteObjectsContent.taskID);
	  }
	
	  function doDeleteByQuery() {
	    return indexObj.deleteByQuery(query, params);
	  }
	
	  if (!callback) {
	    return promise;
	  }
	
	  promise.then(success, failure);
	
	  function success() {
	    exitPromise(function exit() {
	      callback(null);
	    }, client._setTimeout || setTimeout);
	  }
	
	  function failure(err) {
	    exitPromise(function exit() {
	      callback(err);
	    }, client._setTimeout || setTimeout);
	  }
	}, deprecatedMessage('index.deleteByQuery()', 'index.deleteBy()'));
	
	/**
	* Delete all objects matching a query
	*
	* the query parameters that can be used are:
	* - filters (numeric, facet, tag)
	* - geo
	*
	* you can not send an empty query or filters
	*
	* @param params the optional query parameters
	* @param callback (optional) the result callback called with one argument
	*  error: null or Error('message')
	*/
	Index.prototype.deleteBy = function(params, callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/deleteByQuery',
	    body: {params: indexObj.as._getSearchParams(params, '')},
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Browse all content from an index using events. Basically this will do
	* .browse() -> .browseFrom -> .browseFrom -> .. until all the results are returned
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @return {EventEmitter}
	* @example
	* var browser = index.browseAll('cool songs', {
	*   tagFilters: 'public,comments',
	*   hitsPerPage: 500
	* });
	*
	* browser.on('result', function resultCallback(content) {
	*   console.log(content.hits);
	* });
	*
	* // if any error occurs, you get it
	* browser.on('error', function(err) {
	*   throw err;
	* });
	*
	* // when you have browsed the whole index, you get this event
	* browser.on('end', function() {
	*   console.log('finished');
	* });
	*
	* // at any point if you want to stop the browsing process, you can stop it manually
	* // otherwise it will go on and on
	* browser.stop();
	*
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	Index.prototype.browseAll = function(query, queryParameters) {
	  if (typeof query === 'object') {
	    queryParameters = query;
	    query = undefined;
	  }
	
	  var merge = __webpack_require__(962);
	
	  var IndexBrowser = __webpack_require__(969);
	
	  var browser = new IndexBrowser();
	  var client = this.as;
	  var index = this;
	  var params = client._getSearchParams(
	    merge({}, queryParameters || {}, {
	      query: query
	    }), ''
	  );
	
	  // start browsing
	  browseLoop();
	
	  function browseLoop(cursor) {
	    if (browser._stopped) {
	      return;
	    }
	
	    var body;
	
	    if (cursor !== undefined) {
	      body = {
	        cursor: cursor
	      };
	    } else {
	      body = {
	        params: params
	      };
	    }
	
	    client._jsonRequest({
	      method: 'POST',
	      url: '/1/indexes/' + encodeURIComponent(index.indexName) + '/browse',
	      hostType: 'read',
	      body: body,
	      callback: browseCallback
	    });
	  }
	
	  function browseCallback(err, content) {
	    if (browser._stopped) {
	      return;
	    }
	
	    if (err) {
	      browser._error(err);
	      return;
	    }
	
	    browser._result(content);
	
	    // no cursor means we are finished browsing
	    if (content.cursor === undefined) {
	      browser._end();
	      return;
	    }
	
	    browseLoop(content.cursor);
	  }
	
	  return browser;
	};
	
	/*
	* Get a Typeahead.js adapter
	* @param searchParams contains an object with query parameters (see search for details)
	*/
	Index.prototype.ttAdapter = deprecate(function(params) {
	  var self = this;
	  return function ttAdapter(query, syncCb, asyncCb) {
	    var cb;
	
	    if (typeof asyncCb === 'function') {
	      // typeahead 0.11
	      cb = asyncCb;
	    } else {
	      // pre typeahead 0.11
	      cb = syncCb;
	    }
	
	    self.search(query, params, function searchDone(err, content) {
	      if (err) {
	        cb(err);
	        return;
	      }
	
	      cb(content.hits);
	    });
	  };
	},
	'ttAdapter is not necessary anymore and will be removed in the next version,\n' +
	'have a look at autocomplete.js (https://github.com/algolia/autocomplete.js)');
	
	/*
	* Wait the publication of a task on the server.
	* All server task are asynchronous and you can check with this method that the task is published.
	*
	* @param taskID the id of the task returned by server
	* @param callback the result callback with with two arguments:
	*  error: null or Error('message')
	*  content: the server answer that contains the list of results
	*/
	Index.prototype.waitTask = function(taskID, callback) {
	  // wait minimum 100ms before retrying
	  var baseDelay = 100;
	  // wait maximum 5s before retrying
	  var maxDelay = 5000;
	  var loop = 0;
	
	  // waitTask() must be handled differently from other methods,
	  // it's a recursive method using a timeout
	  var indexObj = this;
	  var client = indexObj.as;
	
	  var promise = retryLoop();
	
	  function retryLoop() {
	    return client._jsonRequest({
	      method: 'GET',
	      hostType: 'read',
	      url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/task/' + taskID
	    }).then(function success(content) {
	      loop++;
	      var delay = baseDelay * loop * loop;
	      if (delay > maxDelay) {
	        delay = maxDelay;
	      }
	
	      if (content.status !== 'published') {
	        return client._promise.delay(delay).then(retryLoop);
	      }
	
	      return content;
	    });
	  }
	
	  if (!callback) {
	    return promise;
	  }
	
	  promise.then(successCb, failureCb);
	
	  function successCb(content) {
	    exitPromise(function exit() {
	      callback(null, content);
	    }, client._setTimeout || setTimeout);
	  }
	
	  function failureCb(err) {
	    exitPromise(function exit() {
	      callback(err);
	    }, client._setTimeout || setTimeout);
	  }
	};
	
	/*
	* This function deletes the index content. Settings and index specific API keys are kept untouched.
	*
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the settings object or the error message if a failure occured
	*/
	Index.prototype.clearIndex = function(callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/clear',
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	/*
	* Get settings of this index
	*
	* @param opts an object of options to add
	* @param opts.advanced get more settings like nbShards (useful for Enterprise)
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the settings object or the error message if a failure occurred
	*/
	Index.prototype.getSettings = function(opts, callback) {
	  if (arguments.length === 1 && typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  opts = opts || {};
	
	  var indexName = encodeURIComponent(this.indexName);
	  return this.as._jsonRequest({
	    method: 'GET',
	    url:
	      '/1/indexes/' +
	      indexName +
	      '/settings?getVersion=2' +
	      (opts.advanced ? '&advanced=' + opts.advanced : ''),
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	Index.prototype.searchSynonyms = function(params, callback) {
	  if (typeof params === 'function') {
	    callback = params;
	    params = {};
	  } else if (params === undefined) {
	    params = {};
	  }
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/search',
	    body: params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	function exportData(method, _hitsPerPage, callback) {
	  function search(page, _previous) {
	    var options = {
	      page: page || 0,
	      hitsPerPage: _hitsPerPage || 100
	    };
	    var previous = _previous || [];
	
	    return method(options).then(function(result) {
	      var hits = result.hits;
	      var nbHits = result.nbHits;
	      var current = hits.map(function(s) {
	        delete s._highlightResult;
	        return s;
	      });
	      var synonyms = previous.concat(current);
	      if (synonyms.length < nbHits) {
	        return search(options.page + 1, synonyms);
	      }
	      return synonyms;
	    });
	  }
	  return search().then(function(data) {
	    if (typeof callback === 'function') {
	      callback(data);
	      return undefined;
	    }
	    return data;
	  });
	}
	
	/**
	 * Retrieve all the synonyms in an index
	 * @param [number=100] hitsPerPage The amount of synonyms to retrieve per batch
	 * @param [function] callback will be called after all synonyms are retrieved
	 */
	Index.prototype.exportSynonyms = function(hitsPerPage, callback) {
	  return exportData(this.searchSynonyms.bind(this), hitsPerPage, callback);
	};
	
	Index.prototype.saveSynonym = function(synonym, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();
	  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'PUT',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(synonym.objectID) +
	      '?forwardToReplicas=' + forwardToReplicas,
	    body: synonym,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.getSynonym = function(objectID, callback) {
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(objectID),
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	Index.prototype.deleteSynonym = function(objectID, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();
	  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'DELETE',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/' + encodeURIComponent(objectID) +
	      '?forwardToReplicas=' + forwardToReplicas,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.clearSynonyms = function(opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();
	  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/clear' +
	      '?forwardToReplicas=' + forwardToReplicas,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.batchSynonyms = function(synonyms, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();
	  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/synonyms/batch' +
	      '?forwardToReplicas=' + forwardToReplicas +
	      '&replaceExistingSynonyms=' + (opts.replaceExistingSynonyms ? 'true' : 'false'),
	    hostType: 'write',
	    body: synonyms,
	    callback: callback
	  });
	};
	
	Index.prototype.searchRules = function(params, callback) {
	  if (typeof params === 'function') {
	    callback = params;
	    params = {};
	  } else if (params === undefined) {
	    params = {};
	  }
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/search',
	    body: params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	/**
	 * Retrieve all the query rules in an index
	 * @param [number=100] hitsPerPage The amount of query rules to retrieve per batch
	 * @param [function] callback will be called after all query rules are retrieved
	 *  error: null or Error('message')
	 */
	Index.prototype.exportRules = function(hitsPerPage, callback) {
	  return exportData(this.searchRules.bind(this), hitsPerPage, callback);
	};
	
	Index.prototype.saveRule = function(rule, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  if (!rule.objectID) {
	    throw new errors.AlgoliaSearchError('Missing or empty objectID field for rule');
	  }
	
	  var forwardToReplicas = opts.forwardToReplicas === true ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'PUT',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/' + encodeURIComponent(rule.objectID) +
	      '?forwardToReplicas=' + forwardToReplicas,
	    body: rule,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.getRule = function(objectID, callback) {
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/' + encodeURIComponent(objectID),
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	Index.prototype.deleteRule = function(objectID, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var forwardToReplicas = opts.forwardToReplicas === true ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'DELETE',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/' + encodeURIComponent(objectID) +
	      '?forwardToReplicas=' + forwardToReplicas,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.clearRules = function(opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var forwardToReplicas = opts.forwardToReplicas === true ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/clear' +
	      '?forwardToReplicas=' + forwardToReplicas,
	    hostType: 'write',
	    callback: callback
	  });
	};
	
	Index.prototype.batchRules = function(rules, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var forwardToReplicas = opts.forwardToReplicas === true ? 'true' : 'false';
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/rules/batch' +
	      '?forwardToReplicas=' + forwardToReplicas +
	      '&clearExistingRules=' + (opts.clearExistingRules === true ? 'true' : 'false'),
	    hostType: 'write',
	    body: rules,
	    callback: callback
	  });
	};
	
	/*
	* Set settings for this index
	*
	* @param settigns the settings object that can contains :
	* - minWordSizefor1Typo: (integer) the minimum number of characters to accept one typo (default = 3).
	* - minWordSizefor2Typos: (integer) the minimum number of characters to accept two typos (default = 7).
	* - hitsPerPage: (integer) the number of hits per page (default = 10).
	* - attributesToRetrieve: (array of strings) default list of attributes to retrieve in objects.
	*   If set to null, all attributes are retrieved.
	* - attributesToHighlight: (array of strings) default list of attributes to highlight.
	*   If set to null, all indexed attributes are highlighted.
	* - attributesToSnippet**: (array of strings) default list of attributes to snippet alongside the number
	* of words to return (syntax is attributeName:nbWords).
	*   By default no snippet is computed. If set to null, no snippet is computed.
	* - attributesToIndex: (array of strings) the list of fields you want to index.
	*   If set to null, all textual and numerical attributes of your objects are indexed,
	*   but you should update it to get optimal results.
	*   This parameter has two important uses:
	*     - Limit the attributes to index: For example if you store a binary image in base64,
	*     you want to store it and be able to
	*       retrieve it but you don't want to search in the base64 string.
	*     - Control part of the ranking*: (see the ranking parameter for full explanation)
	*     Matches in attributes at the beginning of
	*       the list will be considered more important than matches in attributes further down the list.
	*       In one attribute, matching text at the beginning of the attribute will be
	*       considered more important than text after, you can disable
	*       this behavior if you add your attribute inside `unordered(AttributeName)`,
	*       for example attributesToIndex: ["title", "unordered(text)"].
	* - attributesForFaceting: (array of strings) The list of fields you want to use for faceting.
	*   All strings in the attribute selected for faceting are extracted and added as a facet.
	*   If set to null, no attribute is used for faceting.
	* - attributeForDistinct: (string) The attribute name used for the Distinct feature.
	* This feature is similar to the SQL "distinct" keyword: when enabled
	*   in query with the distinct=1 parameter, all hits containing a duplicate
	*   value for this attribute are removed from results.
	*   For example, if the chosen attribute is show_name and several hits have
	*   the same value for show_name, then only the best one is kept and others are removed.
	* - ranking: (array of strings) controls the way results are sorted.
	*   We have six available criteria:
	*    - typo: sort according to number of typos,
	*    - geo: sort according to decreassing distance when performing a geo-location based search,
	*    - proximity: sort according to the proximity of query words in hits,
	*    - attribute: sort according to the order of attributes defined by attributesToIndex,
	*    - exact:
	*        - if the user query contains one word: sort objects having an attribute
	*        that is exactly the query word before others.
	*          For example if you search for the "V" TV show, you want to find it
	*          with the "V" query and avoid to have all popular TV
	*          show starting by the v letter before it.
	*        - if the user query contains multiple words: sort according to the
	*        number of words that matched exactly (and not as a prefix).
	*    - custom: sort according to a user defined formula set in **customRanking** attribute.
	*   The standard order is ["typo", "geo", "proximity", "attribute", "exact", "custom"]
	* - customRanking: (array of strings) lets you specify part of the ranking.
	*   The syntax of this condition is an array of strings containing attributes
	*   prefixed by asc (ascending order) or desc (descending order) operator.
	*   For example `"customRanking" => ["desc(population)", "asc(name)"]`
	* - queryType: Select how the query words are interpreted, it can be one of the following value:
	*   - prefixAll: all query words are interpreted as prefixes,
	*   - prefixLast: only the last word is interpreted as a prefix (default behavior),
	*   - prefixNone: no query word is interpreted as a prefix. This option is not recommended.
	* - highlightPreTag: (string) Specify the string that is inserted before
	* the highlighted parts in the query result (default to "<em>").
	* - highlightPostTag: (string) Specify the string that is inserted after
	* the highlighted parts in the query result (default to "</em>").
	* - optionalWords: (array of strings) Specify a list of words that should
	* be considered as optional when found in the query.
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the server answer or the error message if a failure occured
	*/
	Index.prototype.setSettings = function(settings, opts, callback) {
	  if (arguments.length === 1 || typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	
	  if (opts.forwardToSlaves !== undefined) deprecateForwardToSlaves();
	  var forwardToReplicas = (opts.forwardToSlaves || opts.forwardToReplicas) ? 'true' : 'false';
	
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'PUT',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/settings?forwardToReplicas='
	      + forwardToReplicas,
	    hostType: 'write',
	    body: settings,
	    callback: callback
	  });
	};
	
	/*
	* @deprecated see client.listApiKeys()
	*/
	Index.prototype.listUserKeys = deprecate(function(callback) {
	  return this.listApiKeys(callback);
	}, deprecatedMessage('index.listUserKeys()', 'client.listApiKeys()'));
	
	/*
	* List all existing API keys to this index
	*
	* @param callback the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the server answer with API keys belonging to the index
	*
	* @deprecated see client.listApiKeys()
	*/
	Index.prototype.listApiKeys = deprecate(function(callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys',
	    hostType: 'read',
	    callback: callback
	  });
	}, deprecatedMessage('index.listApiKeys()', 'client.listApiKeys()'));
	
	/*
	* @deprecated see client.getApiKey()
	*/
	Index.prototype.getUserKeyACL = deprecate(function(key, callback) {
	  return this.getApiKey(key, callback);
	}, deprecatedMessage('index.getUserKeyACL()', 'client.getApiKey()'));
	
	
	/*
	* Get an API key from this index
	*
	* @param key
	* @param callback the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the server answer with the right API key
	*
	* @deprecated see client.getApiKey()
	*/
	Index.prototype.getApiKey = deprecate(function(key, callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys/' + key,
	    hostType: 'read',
	    callback: callback
	  });
	}, deprecatedMessage('index.getApiKey()', 'client.getApiKey()'));
	
	/*
	* @deprecated see client.deleteApiKey()
	*/
	Index.prototype.deleteUserKey = deprecate(function(key, callback) {
	  return this.deleteApiKey(key, callback);
	}, deprecatedMessage('index.deleteUserKey()', 'client.deleteApiKey()'));
	
	/*
	* Delete an existing API key associated to this index
	*
	* @param key
	* @param callback the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the server answer with the deletion date
	*
	* @deprecated see client.deleteApiKey()
	*/
	Index.prototype.deleteApiKey = deprecate(function(key, callback) {
	  var indexObj = this;
	  return this.as._jsonRequest({
	    method: 'DELETE',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/keys/' + key,
	    hostType: 'write',
	    callback: callback
	  });
	}, deprecatedMessage('index.deleteApiKey()', 'client.deleteApiKey()'));
	
	/*
	* @deprecated see client.addApiKey()
	*/
	Index.prototype.addUserKey = deprecate(function(acls, params, callback) {
	  return this.addApiKey(acls, params, callback);
	}, deprecatedMessage('index.addUserKey()', 'client.addApiKey()'));
	
	/*
	* Add a new API key to this index
	*
	* @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that
	*   can contains the following values:
	*     - search: allow to search (https and http)
	*     - addObject: allows to add/update an object in the index (https only)
	*     - deleteObject : allows to delete an existing object (https only)
	*     - deleteIndex : allows to delete index content (https only)
	*     - settings : allows to get index settings (https only)
	*     - editSettings : allows to change index settings (https only)
	* @param {Object} [params] - Optionnal parameters to set for the key
	* @param {number} params.validity - Number of seconds after which the key will
	* be automatically removed (0 means no time limit for this key)
	* @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour
	* @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call
	* @param {string} params.description - A description for your key
	* @param {string[]} params.referers - A list of authorized referers
	* @param {Object} params.queryParameters - Force the key to use specific query parameters
	* @param {Function} callback - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the added API key
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.addUserKey(['search'], {
	*   validity: 300,
	*   maxQueriesPerIPPerHour: 2000,
	*   maxHitsPerQuery: 3,
	*   description: 'Eat three fruits',
	*   referers: ['*.algolia.com'],
	*   queryParameters: {
	*     tagFilters: ['public'],
	*   }
	* })
	* @see {@link https://www.algolia.com/doc/rest_api#AddIndexKey|Algolia REST API Documentation}
	*
	* @deprecated see client.addApiKey()
	*/
	Index.prototype.addApiKey = deprecate(function(acls, params, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: index.addApiKey(arrayOfAcls[, params, callback])';
	
	  if (!isArray(acls)) {
	    throw new Error(usage);
	  }
	
	  if (arguments.length === 1 || typeof params === 'function') {
	    callback = params;
	    params = null;
	  }
	
	  var postObj = {
	    acl: acls
	  };
	
	  if (params) {
	    postObj.validity = params.validity;
	    postObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;
	    postObj.maxHitsPerQuery = params.maxHitsPerQuery;
	    postObj.description = params.description;
	
	    if (params.queryParameters) {
	      postObj.queryParameters = this.as._getSearchParams(params.queryParameters, '');
	    }
	
	    postObj.referers = params.referers;
	  }
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/keys',
	    body: postObj,
	    hostType: 'write',
	    callback: callback
	  });
	}, deprecatedMessage('index.addApiKey()', 'client.addApiKey()'));
	
	/**
	* @deprecated use client.addApiKey()
	*/
	Index.prototype.addUserKeyWithValidity = deprecate(function deprecatedAddUserKeyWithValidity(acls, params, callback) {
	  return this.addApiKey(acls, params, callback);
	}, deprecatedMessage('index.addUserKeyWithValidity()', 'client.addApiKey()'));
	
	/*
	* @deprecated see client.updateApiKey()
	*/
	Index.prototype.updateUserKey = deprecate(function(key, acls, params, callback) {
	  return this.updateApiKey(key, acls, params, callback);
	}, deprecatedMessage('index.updateUserKey()', 'client.updateApiKey()'));
	
	/**
	* Update an existing API key of this index
	* @param {string} key - The key to update
	* @param {string[]} acls - The list of ACL for this key. Defined by an array of strings that
	*   can contains the following values:
	*     - search: allow to search (https and http)
	*     - addObject: allows to add/update an object in the index (https only)
	*     - deleteObject : allows to delete an existing object (https only)
	*     - deleteIndex : allows to delete index content (https only)
	*     - settings : allows to get index settings (https only)
	*     - editSettings : allows to change index settings (https only)
	* @param {Object} [params] - Optionnal parameters to set for the key
	* @param {number} params.validity - Number of seconds after which the key will
	* be automatically removed (0 means no time limit for this key)
	* @param {number} params.maxQueriesPerIPPerHour - Number of API calls allowed from an IP address per hour
	* @param {number} params.maxHitsPerQuery - Number of hits this API key can retrieve in one call
	* @param {string} params.description - A description for your key
	* @param {string[]} params.referers - A list of authorized referers
	* @param {Object} params.queryParameters - Force the key to use specific query parameters
	* @param {Function} callback - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with user keys list
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.updateApiKey('APIKEY', ['search'], {
	*   validity: 300,
	*   maxQueriesPerIPPerHour: 2000,
	*   maxHitsPerQuery: 3,
	*   description: 'Eat three fruits',
	*   referers: ['*.algolia.com'],
	*   queryParameters: {
	*     tagFilters: ['public'],
	*   }
	* })
	* @see {@link https://www.algolia.com/doc/rest_api#UpdateIndexKey|Algolia REST API Documentation}
	*
	* @deprecated see client.updateApiKey()
	*/
	Index.prototype.updateApiKey = deprecate(function(key, acls, params, callback) {
	  var isArray = __webpack_require__(966);
	  var usage = 'Usage: index.updateApiKey(key, arrayOfAcls[, params, callback])';
	
	  if (!isArray(acls)) {
	    throw new Error(usage);
	  }
	
	  if (arguments.length === 2 || typeof params === 'function') {
	    callback = params;
	    params = null;
	  }
	
	  var putObj = {
	    acl: acls
	  };
	
	  if (params) {
	    putObj.validity = params.validity;
	    putObj.maxQueriesPerIPPerHour = params.maxQueriesPerIPPerHour;
	    putObj.maxHitsPerQuery = params.maxHitsPerQuery;
	    putObj.description = params.description;
	
	    if (params.queryParameters) {
	      putObj.queryParameters = this.as._getSearchParams(params.queryParameters, '');
	    }
	
	    putObj.referers = params.referers;
	  }
	
	  return this.as._jsonRequest({
	    method: 'PUT',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/keys/' + key,
	    body: putObj,
	    hostType: 'write',
	    callback: callback
	  });
	}, deprecatedMessage('index.updateApiKey()', 'client.updateApiKey()'));


/***/ }),
/* 959 */
/***/ (function(module, exports, __webpack_require__) {

	var buildSearchMethod = __webpack_require__(952);
	var deprecate = __webpack_require__(960);
	var deprecatedMessage = __webpack_require__(961);
	
	module.exports = IndexCore;
	
	/*
	* Index class constructor.
	* You should not use this method directly but use initIndex() function
	*/
	function IndexCore(algoliasearch, indexName) {
	  this.indexName = indexName;
	  this.as = algoliasearch;
	  this.typeAheadArgs = null;
	  this.typeAheadValueOption = null;
	
	  // make sure every index instance has it's own cache
	  this.cache = {};
	}
	
	/*
	* Clear all queries in cache
	*/
	IndexCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/*
	* Search inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the full text query
	* @param {object} [args] (optional) if set, contains an object with query parameters:
	* - page: (integer) Pagination parameter used to select the page to retrieve.
	*                   Page is zero-based and defaults to 0. Thus,
	*                   to retrieve the 10th page you need to set page=9
	* - hitsPerPage: (integer) Pagination parameter used to select the number of hits per page. Defaults to 20.
	* - attributesToRetrieve: a string that contains the list of object attributes
	* you want to retrieve (let you minimize the answer size).
	*   Attributes are separated with a comma (for example "name,address").
	*   You can also use an array (for example ["name","address"]).
	*   By default, all attributes are retrieved. You can also use '*' to retrieve all
	*   values when an attributesToRetrieve setting is specified for your index.
	* - attributesToHighlight: a string that contains the list of attributes you
	*   want to highlight according to the query.
	*   Attributes are separated by a comma. You can also use an array (for example ["name","address"]).
	*   If an attribute has no match for the query, the raw value is returned.
	*   By default all indexed text attributes are highlighted.
	*   You can use `*` if you want to highlight all textual attributes.
	*   Numerical attributes are not highlighted.
	*   A matchLevel is returned for each highlighted attribute and can contain:
	*      - full: if all the query terms were found in the attribute,
	*      - partial: if only some of the query terms were found,
	*      - none: if none of the query terms were found.
	* - attributesToSnippet: a string that contains the list of attributes to snippet alongside
	* the number of words to return (syntax is `attributeName:nbWords`).
	*    Attributes are separated by a comma (Example: attributesToSnippet=name:10,content:10).
	*    You can also use an array (Example: attributesToSnippet: ['name:10','content:10']).
	*    By default no snippet is computed.
	* - minWordSizefor1Typo: the minimum number of characters in a query word to accept one typo in this word.
	* Defaults to 3.
	* - minWordSizefor2Typos: the minimum number of characters in a query word
	* to accept two typos in this word. Defaults to 7.
	* - getRankingInfo: if set to 1, the result hits will contain ranking
	* information in _rankingInfo attribute.
	* - aroundLatLng: search for entries around a given
	* latitude/longitude (specified as two floats separated by a comma).
	*   For example aroundLatLng=47.316669,5.016670).
	*   You can specify the maximum distance in meters with the aroundRadius parameter (in meters)
	*   and the precision for ranking with aroundPrecision
	*   (for example if you set aroundPrecision=100, two objects that are distant of
	*   less than 100m will be considered as identical for "geo" ranking parameter).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - insideBoundingBox: search entries inside a given area defined by the two extreme points
	* of a rectangle (defined by 4 floats: p1Lat,p1Lng,p2Lat,p2Lng).
	*   For example insideBoundingBox=47.3165,4.9665,47.3424,5.0201).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - numericFilters: a string that contains the list of numeric filters you want to
	* apply separated by a comma.
	*   The syntax of one filter is `attributeName` followed by `operand` followed by `value`.
	*   Supported operands are `<`, `<=`, `=`, `>` and `>=`.
	*   You can have multiple conditions on one attribute like for example numericFilters=price>100,price<1000.
	*   You can also use an array (for example numericFilters: ["price>100","price<1000"]).
	* - tagFilters: filter the query by a set of tags. You can AND tags by separating them by commas.
	*   To OR tags, you must add parentheses. For example, tags=tag1,(tag2,tag3) means tag1 AND (tag2 OR tag3).
	*   You can also use an array, for example tagFilters: ["tag1",["tag2","tag3"]]
	*   means tag1 AND (tag2 OR tag3).
	*   At indexing, tags should be added in the _tags** attribute
	*   of objects (for example {"_tags":["tag1","tag2"]}).
	* - facetFilters: filter the query by a list of facets.
	*   Facets are separated by commas and each facet is encoded as `attributeName:value`.
	*   For example: `facetFilters=category:Book,author:John%20Doe`.
	*   You can also use an array (for example `["category:Book","author:John%20Doe"]`).
	* - facets: List of object attributes that you want to use for faceting.
	*   Comma separated list: `"category,author"` or array `['category','author']`
	*   Only attributes that have been added in **attributesForFaceting** index setting
	*   can be used in this parameter.
	*   You can also use `*` to perform faceting on all attributes specified in **attributesForFaceting**.
	* - queryType: select how the query words are interpreted, it can be one of the following value:
	*    - prefixAll: all query words are interpreted as prefixes,
	*    - prefixLast: only the last word is interpreted as a prefix (default behavior),
	*    - prefixNone: no query word is interpreted as a prefix. This option is not recommended.
	* - optionalWords: a string that contains the list of words that should
	* be considered as optional when found in the query.
	*   Comma separated and array are accepted.
	* - distinct: If set to 1, enable the distinct feature (disabled by default)
	* if the attributeForDistinct index setting is set.
	*   This feature is similar to the SQL "distinct" keyword: when enabled
	*   in a query with the distinct=1 parameter,
	*   all hits containing a duplicate value for the attributeForDistinct attribute are removed from results.
	*   For example, if the chosen attribute is show_name and several hits have
	*   the same value for show_name, then only the best
	*   one is kept and others are removed.
	* - restrictSearchableAttributes: List of attributes you want to use for
	* textual search (must be a subset of the attributesToIndex index setting)
	* either comma separated or as an array
	* @param {function} [callback] the result callback called with two arguments:
	*  error: null or Error('message'). If false, the content contains the error.
	*  content: the server answer that contains the list of results.
	*/
	IndexCore.prototype.search = buildSearchMethod('query');
	
	/*
	* -- BETA --
	* Search a record similar to the query inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the similar query
	* @param {object} [args] (optional) if set, contains an object with query parameters.
	*   All search parameters are supported (see search function), restrictSearchableAttributes and facetFilters
	*   are the two most useful to restrict the similar results and get more relevant content
	*/
	IndexCore.prototype.similarSearch = buildSearchMethod('similarQuery');
	
	/*
	* Browse index content. The response content will have a `cursor` property that you can use
	* to browse subsequent pages for this query. Use `index.browseFrom(cursor)` when you want.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browse('cool songs', {
	*   tagFilters: 'public,comments',
	*   hitsPerPage: 500
	* }, callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browse = function(query, queryParameters, callback) {
	  var merge = __webpack_require__(962);
	
	  var indexObj = this;
	
	  var page;
	  var hitsPerPage;
	
	  // we check variadic calls that are not the one defined
	  // .browse()/.browse(fn)
	  // => page = 0
	  if (arguments.length === 0 || arguments.length === 1 && typeof arguments[0] === 'function') {
	    page = 0;
	    callback = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'number') {
	    // .browse(2)/.browse(2, 10)/.browse(2, fn)/.browse(2, 10, fn)
	    page = arguments[0];
	    if (typeof arguments[1] === 'number') {
	      hitsPerPage = arguments[1];
	    } else if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	      hitsPerPage = undefined;
	    }
	    query = undefined;
	    queryParameters = undefined;
	  } else if (typeof arguments[0] === 'object') {
	    // .browse(queryParameters)/.browse(queryParameters, cb)
	    if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	    }
	    queryParameters = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {
	    // .browse(query, cb)
	    callback = arguments[1];
	    queryParameters = undefined;
	  }
	
	  // otherwise it's a .browse(query)/.browse(query, queryParameters)/.browse(query, queryParameters, cb)
	
	  // get search query parameters combining various possible calls
	  // to .browse();
	  queryParameters = merge({}, queryParameters || {}, {
	    page: page,
	    hitsPerPage: hitsPerPage,
	    query: query
	  });
	
	  var params = this.as._getSearchParams(queryParameters, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/browse',
	    body: {params: params},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Continue browsing from a previous position (cursor), obtained via a call to `.browse()`.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browseFrom('14lkfsakl32', callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browseFrom = function(cursor, callback) {
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/browse',
	    body: {cursor: cursor},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	*
	* @param {string} params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} params.facetQuery Query for the facet search
	* @param {string} [params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	* @param callback (optional)
	*/
	IndexCore.prototype.searchForFacetValues = function(params, callback) {
	  var clone = __webpack_require__(955);
	  var omit = __webpack_require__(963);
	  var usage = 'Usage: index.searchForFacetValues({facetName, facetQuery, ...params}[, callback])';
	
	  if (params.facetName === undefined || params.facetQuery === undefined) {
	    throw new Error(usage);
	  }
	
	  var facetName = params.facetName;
	  var filteredParams = omit(clone(params), function(keyName) {
	    return keyName === 'facetName';
	  });
	  var searchParameters = this.as._getSearchParams(filteredParams, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' +
	      encodeURIComponent(this.indexName) + '/facets/' + encodeURIComponent(facetName) + '/query',
	    hostType: 'read',
	    body: {params: searchParameters},
	    callback: callback
	  });
	};
	
	IndexCore.prototype.searchFacet = deprecate(function(params, callback) {
	  return this.searchForFacetValues(params, callback);
	}, deprecatedMessage(
	  'index.searchFacet(params[, callback])',
	  'index.searchForFacetValues(params[, callback])'
	));
	
	IndexCore.prototype._search = function(params, url, callback, additionalUA) {
	  return this.as._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url || '/1/indexes/' + encodeURIComponent(this.indexName) + '/query',
	    body: {params: params},
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/' + encodeURIComponent(this.indexName),
	      body: {params: params}
	    },
	    callback: callback,
	    additionalUA: additionalUA
	  });
	};
	
	/*
	* Get an object from this index
	*
	* @param objectID the unique identifier of the object to retrieve
	* @param attrs (optional) if set, contains the array of attribute names to retrieve
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the object to retrieve or the error message if a failure occured
	*/
	IndexCore.prototype.getObject = function(objectID, attrs, callback) {
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attrs === 'function') {
	    callback = attrs;
	    attrs = undefined;
	  }
	
	  var params = '';
	  if (attrs !== undefined) {
	    params = '?attributes=';
	    for (var i = 0; i < attrs.length; ++i) {
	      if (i !== 0) {
	        params += ',';
	      }
	      params += attrs[i];
	    }
	  }
	
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID) + params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Get several objects from this index
	*
	* @param objectIDs the array of unique identifier of objects to retrieve
	*/
	IndexCore.prototype.getObjects = function(objectIDs, attributesToRetrieve, callback) {
	  var isArray = __webpack_require__(966);
	  var map = __webpack_require__(967);
	
	  var usage = 'Usage: index.getObjects(arrayOfObjectIDs[, callback])';
	
	  if (!isArray(objectIDs)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attributesToRetrieve === 'function') {
	    callback = attributesToRetrieve;
	    attributesToRetrieve = undefined;
	  }
	
	  var body = {
	    requests: map(objectIDs, function prepareRequest(objectID) {
	      var request = {
	        indexName: indexObj.indexName,
	        objectID: objectID
	      };
	
	      if (attributesToRetrieve) {
	        request.attributesToRetrieve = attributesToRetrieve.join(',');
	      }
	
	      return request;
	    })
	  };
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/*/objects',
	    hostType: 'read',
	    body: body,
	    callback: callback
	  });
	};
	
	IndexCore.prototype.as = null;
	IndexCore.prototype.indexName = null;
	IndexCore.prototype.typeAheadArgs = null;
	IndexCore.prototype.typeAheadValueOption = null;


/***/ }),
/* 960 */
/***/ (function(module, exports) {

	module.exports = function deprecate(fn, message) {
	  var warned = false;
	
	  function deprecated() {
	    if (!warned) {
	      /* eslint no-console:0 */
	      console.warn(message);
	      warned = true;
	    }
	
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};


/***/ }),
/* 961 */
/***/ (function(module, exports) {

	module.exports = function deprecatedMessage(previousUsage, newUsage) {
	  var githubAnchorLink = previousUsage.toLowerCase()
	    .replace(/[\.\(\)]/g, '');
	
	  return 'algoliasearch: `' + previousUsage + '` was replaced by `' + newUsage +
	    '`. Please see https://github.com/algolia/algoliasearch-client-javascript/wiki/Deprecated#' + githubAnchorLink;
	};


/***/ }),
/* 962 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(954);
	
	module.exports = function merge(destination/* , sources */) {
	  var sources = Array.prototype.slice.call(arguments);
	
	  foreach(sources, function(source) {
	    for (var keyName in source) {
	      if (source.hasOwnProperty(keyName)) {
	        if (typeof destination[keyName] === 'object' && typeof source[keyName] === 'object') {
	          destination[keyName] = merge({}, destination[keyName], source[keyName]);
	        } else if (source[keyName] !== undefined) {
	          destination[keyName] = source[keyName];
	        }
	      }
	    }
	  });
	
	  return destination;
	};


/***/ }),
/* 963 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = function omit(obj, test) {
	  var keys = __webpack_require__(964);
	  var foreach = __webpack_require__(954);
	
	  var filtered = {};
	
	  foreach(keys(obj), function doFilter(keyName) {
	    if (test(keyName) !== true) {
	      filtered[keyName] = obj[keyName];
	    }
	  });
	
	  return filtered;
	};


/***/ }),
/* 964 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(965);
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};
	
	var keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];
	
		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}
	
		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}
	
		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}
	
		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = (function () {
				// Safari 5.0 bug
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2));
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) {
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;


/***/ }),
/* 965 */
/***/ (function(module, exports) {

	'use strict';
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' &&
				value !== null &&
				typeof value === 'object' &&
				typeof value.length === 'number' &&
				value.length >= 0 &&
				toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};


/***/ }),
/* 966 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 967 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(954);
	
	module.exports = function map(arr, fn) {
	  var newArr = [];
	  foreach(arr, function(item, itemIndex) {
	    newArr.push(fn(item, itemIndex, arr));
	  });
	  return newArr;
	};


/***/ }),
/* 968 */
/***/ (function(module, exports) {

	// Parse cloud does not supports setTimeout
	// We do not store a setTimeout reference in the client everytime
	// We only fallback to a fake setTimeout when not available
	// setTimeout cannot be override globally sadly
	module.exports = function exitPromise(fn, _setTimeout) {
	  _setTimeout(fn, 0);
	};


/***/ }),
/* 969 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This is the object returned by the `index.browseAll()` method
	
	module.exports = IndexBrowser;
	
	var inherits = __webpack_require__(947);
	var EventEmitter = __webpack_require__(878).EventEmitter;
	
	function IndexBrowser() {
	}
	
	inherits(IndexBrowser, EventEmitter);
	
	IndexBrowser.prototype.stop = function() {
	  this._stopped = true;
	  this._clean();
	};
	
	IndexBrowser.prototype._end = function() {
	  this.emit('end');
	  this._clean();
	};
	
	IndexBrowser.prototype._error = function(err) {
	  this.emit('error', err);
	  this._clean();
	};
	
	IndexBrowser.prototype._result = function(content) {
	  this.emit('result', content);
	};
	
	IndexBrowser.prototype._clean = function() {
	  this.removeAllListeners('stop');
	  this.removeAllListeners('end');
	  this.removeAllListeners('error');
	  this.removeAllListeners('result');
	};


/***/ }),
/* 970 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = AlgoliaSearchCore;
	
	var errors = __webpack_require__(953);
	var exitPromise = __webpack_require__(968);
	var IndexCore = __webpack_require__(959);
	var store = __webpack_require__(971);
	
	// We will always put the API KEY in the JSON body in case of too long API KEY,
	// to avoid query string being too long and failing in various conditions (our server limit, browser limit,
	// proxies limit)
	var MAX_API_KEY_LENGTH = 500;
	var RESET_APP_DATA_TIMER =
	  ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).RESET_APP_DATA_TIMER && parseInt(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).RESET_APP_DATA_TIMER, 10) ||
	  60 * 2 * 1000; // after 2 minutes reset to first host
	
	/*
	 * Algolia Search library initialization
	 * https://www.algolia.com/
	 *
	 * @param {string} applicationID - Your applicationID, found in your dashboard
	 * @param {string} apiKey - Your API key, found in your dashboard
	 * @param {Object} [opts]
	 * @param {number} [opts.timeout=2000] - The request timeout set in milliseconds,
	 * another request will be issued after this timeout
	 * @param {string} [opts.protocol='https:'] - The protocol used to query Algolia Search API.
	 *                                        Set to 'http:' to force using http.
	 * @param {Object|Array} [opts.hosts={
	 *           read: [this.applicationID + '-dsn.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]),
	 *           write: [this.applicationID + '.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]) - The hosts to use for Algolia Search API.
	 *           If you provide them, you will less benefit from our HA implementation
	 */
	function AlgoliaSearchCore(applicationID, apiKey, opts) {
	  var debug = __webpack_require__(938)('algoliasearch');
	
	  var clone = __webpack_require__(955);
	  var isArray = __webpack_require__(966);
	  var map = __webpack_require__(967);
	
	  var usage = 'Usage: algoliasearch(applicationID, apiKey, opts)';
	
	  if (opts._allowEmptyCredentials !== true && !applicationID) {
	    throw new errors.AlgoliaSearchError('Please provide an application ID. ' + usage);
	  }
	
	  if (opts._allowEmptyCredentials !== true && !apiKey) {
	    throw new errors.AlgoliaSearchError('Please provide an API key. ' + usage);
	  }
	
	  this.applicationID = applicationID;
	  this.apiKey = apiKey;
	
	  this.hosts = {
	    read: [],
	    write: []
	  };
	
	  opts = opts || {};
	
	  this._timeouts = opts.timeouts || {
	    connect: 1 * 1000, // 500ms connect is GPRS latency
	    read: 2 * 1000,
	    write: 30 * 1000
	  };
	
	  // backward compat, if opts.timeout is passed, we use it to configure all timeouts like before
	  if (opts.timeout) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = opts.timeout;
	  }
	
	  var protocol = opts.protocol || 'https:';
	  // while we advocate for colon-at-the-end values: 'http:' for `opts.protocol`
	  // we also accept `http` and `https`. It's a common error.
	  if (!/:$/.test(protocol)) {
	    protocol = protocol + ':';
	  }
	
	  if (protocol !== 'http:' && protocol !== 'https:') {
	    throw new errors.AlgoliaSearchError('protocol must be `http:` or `https:` (was `' + opts.protocol + '`)');
	  }
	
	  this._checkAppIdData();
	
	  if (!opts.hosts) {
	    var defaultHosts = map(this._shuffleResult, function(hostNumber) {
	      return applicationID + '-' + hostNumber + '.algolianet.com';
	    });
	
	    // no hosts given, compute defaults
	    var mainSuffix = (opts.dsn === false ? '' : '-dsn') + '.algolia.net';
	    this.hosts.read = [this.applicationID + mainSuffix].concat(defaultHosts);
	    this.hosts.write = [this.applicationID + '.algolia.net'].concat(defaultHosts);
	  } else if (isArray(opts.hosts)) {
	    // when passing custom hosts, we need to have a different host index if the number
	    // of write/read hosts are different.
	    this.hosts.read = clone(opts.hosts);
	    this.hosts.write = clone(opts.hosts);
	  } else {
	    this.hosts.read = clone(opts.hosts.read);
	    this.hosts.write = clone(opts.hosts.write);
	  }
	
	  // add protocol and lowercase hosts
	  this.hosts.read = map(this.hosts.read, prepareHost(protocol));
	  this.hosts.write = map(this.hosts.write, prepareHost(protocol));
	
	  this.extraHeaders = {};
	
	  // In some situations you might want to warm the cache
	  this.cache = opts._cache || {};
	
	  this._ua = opts._ua;
	  this._useCache = opts._useCache === undefined || opts._cache ? true : opts._useCache;
	  this._useRequestCache = this._useCache && opts._useRequestCache;
	  this._useFallback = opts.useFallback === undefined ? true : opts.useFallback;
	
	  this._setTimeout = opts._setTimeout;
	
	  debug('init done, %j', this);
	}
	
	/*
	 * Get the index object initialized
	 *
	 * @param indexName the name of index
	 * @param callback the result callback with one argument (the Index instance)
	 */
	AlgoliaSearchCore.prototype.initIndex = function(indexName) {
	  return new IndexCore(this, indexName);
	};
	
	/**
	* Add an extra field to the HTTP request
	*
	* @param name the header field name
	* @param value the header field value
	*/
	AlgoliaSearchCore.prototype.setExtraHeader = function(name, value) {
	  this.extraHeaders[name.toLowerCase()] = value;
	};
	
	/**
	* Get the value of an extra HTTP header
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.getExtraHeader = function(name) {
	  return this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Remove an extra field from the HTTP request
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.unsetExtraHeader = function(name) {
	  delete this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Augment sent x-algolia-agent with more data, each agent part
	* is automatically separated from the others by a semicolon;
	*
	* @param algoliaAgent the agent to add
	*/
	AlgoliaSearchCore.prototype.addAlgoliaAgent = function(algoliaAgent) {
	  if (this._ua.indexOf(';' + algoliaAgent) === -1) {
	    this._ua += ';' + algoliaAgent;
	  }
	};
	
	/*
	 * Wrapper that try all hosts to maximize the quality of service
	 */
	AlgoliaSearchCore.prototype._jsonRequest = function(initialOpts) {
	  this._checkAppIdData();
	
	  var requestDebug = __webpack_require__(938)('algoliasearch:' + initialOpts.url);
	
	  var body;
	  var cacheID;
	  var additionalUA = initialOpts.additionalUA || '';
	  var cache = initialOpts.cache;
	  var client = this;
	  var tries = 0;
	  var usingFallback = false;
	  var hasFallback = client._useFallback && client._request.fallback && initialOpts.fallback;
	  var headers;
	
	  if (
	    this.apiKey.length > MAX_API_KEY_LENGTH &&
	    initialOpts.body !== undefined &&
	    (initialOpts.body.params !== undefined || // index.search()
	    initialOpts.body.requests !== undefined) // client.search()
	  ) {
	    initialOpts.body.apiKey = this.apiKey;
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      withApiKey: false,
	      headers: initialOpts.headers
	    });
	  } else {
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      headers: initialOpts.headers
	    });
	  }
	
	  if (initialOpts.body !== undefined) {
	    body = safeJSONStringify(initialOpts.body);
	  }
	
	  requestDebug('request start');
	  var debugData = [];
	
	  function doRequest(requester, reqOpts) {
	    client._checkAppIdData();
	
	    var startTime = new Date();
	
	    if (client._useCache && !client._useRequestCache) {
	      cacheID = initialOpts.url;
	    }
	
	    // as we sometime use POST requests to pass parameters (like query='aa'),
	    // the cacheID must also include the body to be different between calls
	    if (client._useCache && !client._useRequestCache && body) {
	      cacheID += '_body_' + reqOpts.body;
	    }
	
	    // handle cache existence
	    if (isCacheValidWithCurrentID(!client._useRequestCache, cache, cacheID)) {
	      requestDebug('serving response from cache');
	
	      var responseText = cache[cacheID];
	
	      // Cache response must match the type of the original one
	      return client._promise.resolve({
	        body: JSON.parse(responseText),
	        responseText: responseText
	      });
	    }
	
	    // if we reached max tries
	    if (tries >= client.hosts[initialOpts.hostType].length) {
	      if (!hasFallback || usingFallback) {
	        requestDebug('could not get any response');
	        // then stop
	        return client._promise.reject(new errors.AlgoliaSearchError(
	          'Cannot connect to the AlgoliaSearch API.' +
	          ' Send an email to support@algolia.com to report and resolve the issue.' +
	          ' Application id was: ' + client.applicationID, {debugData: debugData}
	        ));
	      }
	
	      requestDebug('switching to fallback');
	
	      // let's try the fallback starting from here
	      tries = 0;
	
	      // method, url and body are fallback dependent
	      reqOpts.method = initialOpts.fallback.method;
	      reqOpts.url = initialOpts.fallback.url;
	      reqOpts.jsonBody = initialOpts.fallback.body;
	      if (reqOpts.jsonBody) {
	        reqOpts.body = safeJSONStringify(reqOpts.jsonBody);
	      }
	      // re-compute headers, they could be omitting the API KEY
	      headers = client._computeRequestHeaders({
	        additionalUA: additionalUA,
	        headers: initialOpts.headers
	      });
	
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      client._setHostIndexByType(0, initialOpts.hostType);
	      usingFallback = true; // the current request is now using fallback
	      return doRequest(client._request.fallback, reqOpts);
	    }
	
	    var currentHost = client._getHostByType(initialOpts.hostType);
	
	    var url = currentHost + reqOpts.url;
	    var options = {
	      body: reqOpts.body,
	      jsonBody: reqOpts.jsonBody,
	      method: reqOpts.method,
	      headers: headers,
	      timeouts: reqOpts.timeouts,
	      debug: requestDebug
	    };
	
	    requestDebug('method: %s, url: %s, headers: %j, timeouts: %d',
	      options.method, url, options.headers, options.timeouts);
	
	    if (requester === client._request.fallback) {
	      requestDebug('using fallback');
	    }
	
	    // `requester` is any of this._request or this._request.fallback
	    // thus it needs to be called using the client as context
	    return requester.call(client, url, options).then(success, tryFallback);
	
	    function success(httpResponse) {
	      // compute the status of the response,
	      //
	      // When in browser mode, using XDR or JSONP, we have no statusCode available
	      // So we rely on our API response `status` property.
	      // But `waitTask` can set a `status` property which is not the statusCode (it's the task status)
	      // So we check if there's a `message` along `status` and it means it's an error
	      //
	      // That's the only case where we have a response.status that's not the http statusCode
	      var status = httpResponse && httpResponse.body && httpResponse.body.message && httpResponse.body.status ||
	
	        // this is important to check the request statusCode AFTER the body eventual
	        // statusCode because some implementations (jQuery XDomainRequest transport) may
	        // send statusCode 200 while we had an error
	        httpResponse.statusCode ||
	
	        // When in browser mode, using XDR or JSONP
	        // we default to success when no error (no response.status && response.message)
	        // If there was a JSON.parse() error then body is null and it fails
	        httpResponse && httpResponse.body && 200;
	
	      requestDebug('received response: statusCode: %s, computed statusCode: %d, headers: %j',
	        httpResponse.statusCode, status, httpResponse.headers);
	
	      var httpResponseOk = Math.floor(status / 100) === 2;
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime,
	        statusCode: status
	      });
	
	      if (httpResponseOk) {
	        if (client._useCache && !client._useRequestCache && cache) {
	          cache[cacheID] = httpResponse.responseText;
	        }
	
	        return {
	          responseText: httpResponse.responseText,
	          body: httpResponse.body
	        };
	      }
	
	      var shouldRetry = Math.floor(status / 100) !== 4;
	
	      if (shouldRetry) {
	        tries += 1;
	        return retryRequest();
	      }
	
	      requestDebug('unrecoverable error');
	
	      // no success and no retry => fail
	      var unrecoverableError = new errors.AlgoliaSearchError(
	        httpResponse.body && httpResponse.body.message, {debugData: debugData, statusCode: status}
	      );
	
	      return client._promise.reject(unrecoverableError);
	    }
	
	    function tryFallback(err) {
	      // error cases:
	      //  While not in fallback mode:
	      //    - CORS not supported
	      //    - network error
	      //  While in fallback mode:
	      //    - timeout
	      //    - network error
	      //    - badly formatted JSONP (script loaded, did not call our callback)
	      //  In both cases:
	      //    - uncaught exception occurs (TypeError)
	      requestDebug('error: %s, stack: %s', err.message, err.stack);
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime
	      });
	
	      if (!(err instanceof errors.AlgoliaSearchError)) {
	        err = new errors.Unknown(err && err.message, err);
	      }
	
	      tries += 1;
	
	      // stop the request implementation when:
	      if (
	        // we did not generate this error,
	        // it comes from a throw in some other piece of code
	        err instanceof errors.Unknown ||
	
	        // server sent unparsable JSON
	        err instanceof errors.UnparsableJSON ||
	
	        // max tries and already using fallback or no fallback
	        tries >= client.hosts[initialOpts.hostType].length &&
	        (usingFallback || !hasFallback)) {
	        // stop request implementation for this command
	        err.debugData = debugData;
	        return client._promise.reject(err);
	      }
	
	      // When a timeout occured, retry by raising timeout
	      if (err instanceof errors.RequestTimeout) {
	        return retryRequestWithHigherTimeout();
	      }
	
	      return retryRequest();
	    }
	
	    function retryRequest() {
	      requestDebug('retrying request');
	      client._incrementHostIndex(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	
	    function retryRequestWithHigherTimeout() {
	      requestDebug('retrying request with higher timeout');
	      client._incrementHostIndex(initialOpts.hostType);
	      client._incrementTimeoutMultipler();
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	  }
	
	  function isCacheValidWithCurrentID(
	    useRequestCache,
	    currentCache,
	    currentCacheID
	  ) {
	    return (
	      client._useCache &&
	      useRequestCache &&
	      currentCache &&
	      currentCache[currentCacheID] !== undefined
	    );
	  }
	
	
	  function interopCallbackReturn(request, callback) {
	    if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	      request.catch(function() {
	        // Release the cache on error
	        delete cache[cacheID];
	      });
	    }
	
	    if (typeof initialOpts.callback === 'function') {
	      // either we have a callback
	      request.then(function okCb(content) {
	        exitPromise(function() {
	          initialOpts.callback(null, callback(content));
	        }, client._setTimeout || setTimeout);
	      }, function nookCb(err) {
	        exitPromise(function() {
	          initialOpts.callback(err);
	        }, client._setTimeout || setTimeout);
	      });
	    } else {
	      // either we are using promises
	      return request.then(callback);
	    }
	  }
	
	  if (client._useCache && client._useRequestCache) {
	    cacheID = initialOpts.url;
	  }
	
	  // as we sometime use POST requests to pass parameters (like query='aa'),
	  // the cacheID must also include the body to be different between calls
	  if (client._useCache && client._useRequestCache && body) {
	    cacheID += '_body_' + body;
	  }
	
	  if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	    requestDebug('serving request from cache');
	
	    var maybePromiseForCache = cache[cacheID];
	
	    // In case the cache is warmup with value that is not a promise
	    var promiseForCache = typeof maybePromiseForCache.then !== 'function'
	      ? client._promise.resolve({responseText: maybePromiseForCache})
	      : maybePromiseForCache;
	
	    return interopCallbackReturn(promiseForCache, function(content) {
	      // In case of the cache request, return the original value
	      return JSON.parse(content.responseText);
	    });
	  }
	
	  var request = doRequest(
	    client._request, {
	      url: initialOpts.url,
	      method: initialOpts.method,
	      body: body,
	      jsonBody: initialOpts.body,
	      timeouts: client._getTimeoutsForRequest(initialOpts.hostType)
	    }
	  );
	
	  if (client._useCache && client._useRequestCache && cache) {
	    cache[cacheID] = request;
	  }
	
	  return interopCallbackReturn(request, function(content) {
	    // In case of the first request, return the JSON value
	    return content.body;
	  });
	};
	
	/*
	* Transform search param object in query string
	* @param {object} args arguments to add to the current query string
	* @param {string} params current query string
	* @return {string} the final query string
	*/
	AlgoliaSearchCore.prototype._getSearchParams = function(args, params) {
	  if (args === undefined || args === null) {
	    return params;
	  }
	  for (var key in args) {
	    if (key !== null && args[key] !== undefined && args.hasOwnProperty(key)) {
	      params += params === '' ? '' : '&';
	      params += key + '=' + encodeURIComponent(Object.prototype.toString.call(args[key]) === '[object Array]' ? safeJSONStringify(args[key]) : args[key]);
	    }
	  }
	  return params;
	};
	
	/**
	 * Compute the headers for a request
	 *
	 * @param [string] options.additionalUA semi-colon separated string with other user agents to add
	 * @param [boolean=true] options.withApiKey Send the api key as a header
	 * @param [Object] options.headers Extra headers to send
	 */
	AlgoliaSearchCore.prototype._computeRequestHeaders = function(options) {
	  var forEach = __webpack_require__(954);
	
	  var ua = options.additionalUA ?
	    this._ua + ';' + options.additionalUA :
	    this._ua;
	
	  var requestHeaders = {
	    'x-algolia-agent': ua,
	    'x-algolia-application-id': this.applicationID
	  };
	
	  // browser will inline headers in the url, node.js will use http headers
	  // but in some situations, the API KEY will be too long (big secured API keys)
	  // so if the request is a POST and the KEY is very long, we will be asked to not put
	  // it into headers but in the JSON body
	  if (options.withApiKey !== false) {
	    requestHeaders['x-algolia-api-key'] = this.apiKey;
	  }
	
	  if (this.userToken) {
	    requestHeaders['x-algolia-usertoken'] = this.userToken;
	  }
	
	  if (this.securityTags) {
	    requestHeaders['x-algolia-tagfilters'] = this.securityTags;
	  }
	
	  forEach(this.extraHeaders, function addToRequestHeaders(value, key) {
	    requestHeaders[key] = value;
	  });
	
	  if (options.headers) {
	    forEach(options.headers, function addToRequestHeaders(value, key) {
	      requestHeaders[key] = value;
	    });
	  }
	
	  return requestHeaders;
	};
	
	/**
	 * Search through multiple indices at the same time
	 * @param  {Object[]}   queries  An array of queries you want to run.
	 * @param {string} queries[].indexName The index name you want to target
	 * @param {string} [queries[].query] The query to issue on this index. Can also be passed into `params`
	 * @param {Object} queries[].params Any search param like hitsPerPage, ..
	 * @param  {Function} callback Callback to be called
	 * @return {Promise|undefined} Returns a promise if no callback given
	 */
	AlgoliaSearchCore.prototype.search = function(queries, opts, callback) {
	  var isArray = __webpack_require__(966);
	  var map = __webpack_require__(967);
	
	  var usage = 'Usage: client.search(arrayOfQueries[, callback])';
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var client = this;
	
	  var postObj = {
	    requests: map(queries, function prepareRequest(query) {
	      var params = '';
	
	      // allow query.query
	      // so we are mimicing the index.search(query, params) method
	      // {indexName:, query:, params:}
	      if (query.query !== undefined) {
	        params += 'query=' + encodeURIComponent(query.query);
	      }
	
	      return {
	        indexName: query.indexName,
	        params: client._getSearchParams(query.params, params)
	      };
	    })
	  };
	
	  var JSONPParams = map(postObj.requests, function prepareJSONPParams(request, requestId) {
	    return requestId + '=' +
	      encodeURIComponent(
	        '/1/indexes/' + encodeURIComponent(request.indexName) + '?' +
	        request.params
	      );
	  }).join('&');
	
	  var url = '/1/indexes/*/queries';
	
	  if (opts.strategy !== undefined) {
	    url += '?strategy=' + opts.strategy;
	  }
	
	  return this._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url,
	    body: postObj,
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/*',
	      body: {
	        params: JSONPParams
	      }
	    },
	    callback: callback
	  });
	};
	
	/**
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	* This is the top-level API for SFFV.
	*
	* @param {object[]} queries An array of queries to run.
	* @param {string} queries[].indexName Index name, name of the index to search.
	* @param {object} queries[].params Query parameters.
	* @param {string} queries[].params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} queries[].params.facetQuery Query for the facet search
	* @param {string} [queries[].params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	*/
	AlgoliaSearchCore.prototype.searchForFacetValues = function(queries) {
	  var isArray = __webpack_require__(966);
	  var map = __webpack_require__(967);
	
	  var usage = 'Usage: client.searchForFacetValues([{indexName, params: {facetName, facetQuery, ...params}}, ...queries])'; // eslint-disable-line max-len
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  var client = this;
	
	  return client._promise.all(map(queries, function performQuery(query) {
	    if (
	      !query ||
	      query.indexName === undefined ||
	      query.params.facetName === undefined ||
	      query.params.facetQuery === undefined
	    ) {
	      throw new Error(usage);
	    }
	
	    var clone = __webpack_require__(955);
	    var omit = __webpack_require__(963);
	
	    var indexName = query.indexName;
	    var params = query.params;
	
	    var facetName = params.facetName;
	    var filteredParams = omit(clone(params), function(keyName) {
	      return keyName === 'facetName';
	    });
	    var searchParameters = client._getSearchParams(filteredParams, '');
	
	    return client._jsonRequest({
	      cache: client.cache,
	      method: 'POST',
	      url:
	        '/1/indexes/' +
	        encodeURIComponent(indexName) +
	        '/facets/' +
	        encodeURIComponent(facetName) +
	        '/query',
	      hostType: 'read',
	      body: {params: searchParameters}
	    });
	  }));
	};
	
	/**
	 * Set the extra security tagFilters header
	 * @param {string|array} tags The list of tags defining the current security filters
	 */
	AlgoliaSearchCore.prototype.setSecurityTags = function(tags) {
	  if (Object.prototype.toString.call(tags) === '[object Array]') {
	    var strTags = [];
	    for (var i = 0; i < tags.length; ++i) {
	      if (Object.prototype.toString.call(tags[i]) === '[object Array]') {
	        var oredTags = [];
	        for (var j = 0; j < tags[i].length; ++j) {
	          oredTags.push(tags[i][j]);
	        }
	        strTags.push('(' + oredTags.join(',') + ')');
	      } else {
	        strTags.push(tags[i]);
	      }
	    }
	    tags = strTags.join(',');
	  }
	
	  this.securityTags = tags;
	};
	
	/**
	 * Set the extra user token header
	 * @param {string} userToken The token identifying a uniq user (used to apply rate limits)
	 */
	AlgoliaSearchCore.prototype.setUserToken = function(userToken) {
	  this.userToken = userToken;
	};
	
	/**
	 * Clear all queries in client's cache
	 * @return undefined
	 */
	AlgoliaSearchCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/**
	* Set the number of milliseconds a request can take before automatically being terminated.
	* @deprecated
	* @param {Number} milliseconds
	*/
	AlgoliaSearchCore.prototype.setRequestTimeout = function(milliseconds) {
	  if (milliseconds) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = milliseconds;
	  }
	};
	
	/**
	* Set the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.setTimeouts = function(timeouts) {
	  this._timeouts = timeouts;
	};
	
	/**
	* Get the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.getTimeouts = function() {
	  return this._timeouts;
	};
	
	AlgoliaSearchCore.prototype._getAppIdData = function() {
	  var data = store.get(this.applicationID);
	  if (data !== null) this._cacheAppIdData(data);
	  return data;
	};
	
	AlgoliaSearchCore.prototype._setAppIdData = function(data) {
	  data.lastChange = (new Date()).getTime();
	  this._cacheAppIdData(data);
	  return store.set(this.applicationID, data);
	};
	
	AlgoliaSearchCore.prototype._checkAppIdData = function() {
	  var data = this._getAppIdData();
	  var now = (new Date()).getTime();
	  if (data === null || now - data.lastChange > RESET_APP_DATA_TIMER) {
	    return this._resetInitialAppIdData(data);
	  }
	
	  return data;
	};
	
	AlgoliaSearchCore.prototype._resetInitialAppIdData = function(data) {
	  var newData = data || {};
	  newData.hostIndexes = {read: 0, write: 0};
	  newData.timeoutMultiplier = 1;
	  newData.shuffleResult = newData.shuffleResult || shuffle([1, 2, 3]);
	  return this._setAppIdData(newData);
	};
	
	AlgoliaSearchCore.prototype._cacheAppIdData = function(data) {
	  this._hostIndexes = data.hostIndexes;
	  this._timeoutMultiplier = data.timeoutMultiplier;
	  this._shuffleResult = data.shuffleResult;
	};
	
	AlgoliaSearchCore.prototype._partialAppIdDataUpdate = function(newData) {
	  var foreach = __webpack_require__(954);
	  var currentData = this._getAppIdData();
	  foreach(newData, function(value, key) {
	    currentData[key] = value;
	  });
	
	  return this._setAppIdData(currentData);
	};
	
	AlgoliaSearchCore.prototype._getHostByType = function(hostType) {
	  return this.hosts[hostType][this._getHostIndexByType(hostType)];
	};
	
	AlgoliaSearchCore.prototype._getTimeoutMultiplier = function() {
	  return this._timeoutMultiplier;
	};
	
	AlgoliaSearchCore.prototype._getHostIndexByType = function(hostType) {
	  return this._hostIndexes[hostType];
	};
	
	AlgoliaSearchCore.prototype._setHostIndexByType = function(hostIndex, hostType) {
	  var clone = __webpack_require__(955);
	  var newHostIndexes = clone(this._hostIndexes);
	  newHostIndexes[hostType] = hostIndex;
	  this._partialAppIdDataUpdate({hostIndexes: newHostIndexes});
	  return hostIndex;
	};
	
	AlgoliaSearchCore.prototype._incrementHostIndex = function(hostType) {
	  return this._setHostIndexByType(
	    (this._getHostIndexByType(hostType) + 1) % this.hosts[hostType].length, hostType
	  );
	};
	
	AlgoliaSearchCore.prototype._incrementTimeoutMultipler = function() {
	  var timeoutMultiplier = Math.max(this._timeoutMultiplier + 1, 4);
	  return this._partialAppIdDataUpdate({timeoutMultiplier: timeoutMultiplier});
	};
	
	AlgoliaSearchCore.prototype._getTimeoutsForRequest = function(hostType) {
	  return {
	    connect: this._timeouts.connect * this._timeoutMultiplier,
	    complete: this._timeouts[hostType] * this._timeoutMultiplier
	  };
	};
	
	function prepareHost(protocol) {
	  return function prepare(host) {
	    return protocol + '//' + host.toLowerCase();
	  };
	}
	
	// Prototype.js < 1.7, a widely used library, defines a weird
	// Array.prototype.toJSON function that will fail to stringify our content
	// appropriately
	// refs:
	//   - https://groups.google.com/forum/#!topic/prototype-core/E-SAVvV_V9Q
	//   - https://github.com/sstephenson/prototype/commit/038a2985a70593c1a86c230fadbdfe2e4898a48c
	//   - http://stackoverflow.com/a/3148441/147079
	function safeJSONStringify(obj) {
	  /* eslint no-extend-native:0 */
	
	  if (Array.prototype.toJSON === undefined) {
	    return JSON.stringify(obj);
	  }
	
	  var toJSON = Array.prototype.toJSON;
	  delete Array.prototype.toJSON;
	  var out = JSON.stringify(obj);
	  Array.prototype.toJSON = toJSON;
	
	  return out;
	}
	
	function shuffle(array) {
	  var currentIndex = array.length;
	  var temporaryValue;
	  var randomIndex;
	
	  // While there remain elements to shuffle...
	  while (currentIndex !== 0) {
	    // Pick a remaining element...
	    randomIndex = Math.floor(Math.random() * currentIndex);
	    currentIndex -= 1;
	
	    // And swap it with the current element.
	    temporaryValue = array[currentIndex];
	    array[currentIndex] = array[randomIndex];
	    array[randomIndex] = temporaryValue;
	  }
	
	  return array;
	}
	
	function removeCredentials(headers) {
	  var newHeaders = {};
	
	  for (var headerName in headers) {
	    if (Object.prototype.hasOwnProperty.call(headers, headerName)) {
	      var value;
	
	      if (headerName === 'x-algolia-api-key' || headerName === 'x-algolia-application-id') {
	        value = '**hidden for security purposes**';
	      } else {
	        value = headers[headerName];
	      }
	
	      newHeaders[headerName] = value;
	    }
	  }
	
	  return newHeaders;
	}


/***/ }),
/* 971 */
/***/ (function(module, exports, __webpack_require__) {

	var debug = __webpack_require__(938)('algoliasearch:src/hostIndexState.js');
	var localStorageNamespace = 'algoliasearch-client-js';
	
	var store;
	var moduleStore = {
	  state: {},
	  set: function(key, data) {
	    this.state[key] = data;
	    return this.state[key];
	  },
	  get: function(key) {
	    return this.state[key] || null;
	  }
	};
	
	var localStorageStore = {
	  set: function(key, data) {
	    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure
	
	    try {
	      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);
	      namespace[key] = data;
	      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);
	      return namespace[key];
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  },
	  get: function(key) {
	    try {
	      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  }
	};
	
	function localStorageFailure(key, e) {
	  debug('localStorage failed with', e);
	  cleanup();
	  store = moduleStore;
	  return store.get(key);
	}
	
	store = supportsLocalStorage() ? localStorageStore : moduleStore;
	
	module.exports = {
	  get: getOrSet,
	  set: getOrSet,
	  supportsLocalStorage: supportsLocalStorage
	};
	
	function getOrSet(key, data) {
	  if (arguments.length === 1) {
	    return store.get(key);
	  }
	
	  return store.set(key, data);
	}
	
	function supportsLocalStorage() {
	  try {
	    if ('localStorage' in global &&
	      global.localStorage !== null) {
	      if (!global.localStorage[localStorageNamespace]) {
	        // actual creation of the namespace
	        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));
	      }
	      return true;
	    }
	
	    return false;
	  } catch (_) {
	    return false;
	  }
	}
	
	// In case of any error on localStorage, we clean our own namespace, this should handle
	// quota errors when a lot of keys + data are used
	function cleanup() {
	  try {
	    global.localStorage.removeItem(localStorageNamespace);
	  } catch (_) {
	    // nothing to do
	  }
	}


/***/ }),
/* 972 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = reduce
	
	var objectKeys = __webpack_require__(964);
	
	function reduce(list, iterator) {
	    var keys = objectKeys(list)
	        , i = 0
	        , accumulator = list[0]
	        , context = this
	
	    if (arguments.length === 2) {
	        i = 1
	    } else if (arguments.length === 3) {
	        accumulator = arguments[2]
	    } else if (arguments.length >= 4) {
	        context = arguments[2]
	        accumulator = arguments[3]
	    }
	
	    for (var len = keys.length; i < len; i++) {
	        var key = keys[i]
	            , value = list[key]
	
	        accumulator = iterator.call(context, accumulator, value, key, list)
	    }
	
	    return accumulator
	}
	


/***/ }),
/* 973 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '3.28.0';


/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// this module will either get a regular http keepalive agent or
	// a proxying agent if `HTTP_PROXY` or `HTTPS_PROXY` environment variables
	// are set
	// request/request module could have been used but it does not do any
	// keepalive on POST requests https://github.com/request/request/issues/236#issuecomment-94587587
	
	module.exports = getAgent;
	
	function getAgent(protocol) {
	  var agent;
	
	  if (protocol !== 'http:' && protocol !== 'https:') {
	    throw new Error('get-agent: `protocol` must be `http:` or `https:`');
	  }
	
	  var parsedProxy = getParsedProxy();
	
	  if (parsedProxy.protocol) {
	    agent = getProxyingAgent(protocol, parsedProxy);
	  } else {
	    // no proxy given, let's use regular keepalived agents
	    agent = getKeepaliveAgent(protocol);
	  }
	
	  return agent;
	}
	
	function getParsedProxy() {
	  var url = __webpack_require__(975);
	  var proxy = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).HTTP_PROXY ||
	    ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).HTTPS_PROXY ||
	    '';
	
	  return url.parse(proxy);
	}
	
	function getKeepaliveAgent(protocol) {
	  var http = __webpack_require__(976);
	  var https = __webpack_require__(977);
	
	  var HttpsAgent = __webpack_require__(978).HttpsAgent;
	  var HttpAgent = __webpack_require__(978);
	  var semver = __webpack_require__(950);
	
	  var keepAliveAgent;
	
	  // node 0.10 => agentkeepalive
	  // node >= 0.12 => native keepalive
	  // iojs => native keepalive
	  // node >= 0.11.4 has good keepAlive https://github.com/joyent/node/commit/b5b841
	  if (semver.satisfies(process.version, '<0.11.4')) {
	    if (protocol === 'http:') {
	      keepAliveAgent = new HttpAgent({
	        maxSockets: Infinity
	      });
	    } else if (protocol === 'https:') {
	      keepAliveAgent = new HttpsAgent({
	        maxSockets: Infinity
	      });
	    }
	  } else if (protocol === 'http:') {
	    keepAliveAgent = new http.Agent({
	      keepAlive: true,
	      maxSockets: Infinity
	    });
	  } else if (protocol === 'https:') {
	    keepAliveAgent = new https.Agent({
	      keepAlive: true,
	      maxSockets: Infinity
	    });
	  }
	
	  return keepAliveAgent;
	}
	
	function getProxyingAgent(protocol, parsedProxy) {
	  var tunnel = __webpack_require__(983);
	
	  var agentSettings = {
	    maxSockets: Infinity,
	    proxy: {
	      host: parsedProxy.hostname,
	      port: parseInt(parsedProxy.port, 10),
	      proxyAuth: parsedProxy.auth
	    }
	  };
	
	  // httpOverHttps
	  // httpsOverHttps
	  // https://github.com/mikeal/tunnel-agent/blob/912a7a6d00e10ec76baf9c9369de280fa5badef3/index.js#L12-L15
	  var tunnelType = protocol.replace(':', '') +
	    'Over' +
	    parsedProxy.protocol.replace(':', '').replace('h', 'H');
	
	  var agent = new tunnel[tunnelType](agentSettings);
	
	  // `tunnel-agent` does not have a destroy method
	  agent.destroy = function() {
	    this.sockets.forEach(function(socket) {
	      socket.destroy();
	    });
	  };
	
	  return agent;
	}


/***/ }),
/* 975 */
/***/ (function(module, exports) {

	module.exports = require("url");

/***/ }),
/* 976 */
/***/ (function(module, exports) {

	module.exports = require("http");

/***/ }),
/* 977 */
/***/ (function(module, exports) {

	module.exports = require("https");

/***/ }),
/* 978 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(979);
	module.exports.HttpsAgent = __webpack_require__(982);


/***/ }),
/* 979 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * refer:
	 *   * @atimb "Real keep-alive HTTP agent": https://gist.github.com/2963672
	 *   * https://github.com/joyent/node/blob/master/lib/http.js
	 *   * https://github.com/joyent/node/blob/master/lib/https.js
	 *   * https://github.com/joyent/node/blob/master/lib/_http_agent.js
	 *
	 * Copyright(c) 2012 - 2014 fengmk2 <fengmk2@gmail.com>
	 * Copyright(c) node-modules
	 * MIT Licensed
	 */
	
	'use strict';
	
	/**
	 * Module dependencies.
	 */
	
	var https = __webpack_require__(977);
	var utils = __webpack_require__(980);
	var OriginalAgent = __webpack_require__(981).Agent;
	var OriginalHttpsAgent = https.Agent;
	
	module.exports = Agent;
	
	function Agent(options) {
	  if (!(this instanceof Agent)) {
	    return new Agent(options);
	  }
	
	  options = options || {};
	  options.keepAlive = options.keepAlive !== false;
	  // default is keep-alive and 15s free socket timeout
	  if (options.keepAliveTimeout === undefined) {
	    options.keepAliveTimeout = 15000;
	  }
	  // default timeout is double keepalive timeout
	  if (options.timeout === undefined) {
	    options.timeout = options.keepAliveTimeout * 2;
	  }
	
	  OriginalAgent.call(this, options);
	
	  var self = this;
	  self.createSocketCount = 0;
	  self.closeSocketCount = 0;
	  // socket error event count
	  self.errorSocketCount = 0;
	  self.requestCount = 0;
	  self.timeoutSocketCount = 0;
	  self.on('free', function () {
	    self.requestCount++;
	  });
	  self.on('timeout', function () {
	    self.timeoutSocketCount++;
	  });
	  self.on('close', function () {
	    self.closeSocketCount++;
	  });
	  self.on('error', function () {
	    self.errorSocketCount++;
	  });
	}
	
	utils.inherits(Agent, OriginalAgent);
	
	Agent.prototype.createSocket = function (req, options) {
	  var socket = OriginalAgent.prototype.createSocket.call(this, req, options);
	  if (this.keepAlive) {
	    // Disable Nagle's algorithm: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/
	    // http://fengmk2.com/benchmark/nagle-algorithm-delayed-ack-mock.html
	    socket.setNoDelay(true);
	  }
	  this.createSocketCount++;
	  return socket;
	};
	
	Agent.prototype.getCurrentStatus = function () {
	  return {
	    createSocketCount: this.createSocketCount,
	    closeSocketCount: this.closeSocketCount,
	    errorSocketCount: this.errorSocketCount,
	    timeoutSocketCount: this.timeoutSocketCount,
	    requestCount: this.requestCount,
	    freeSockets: inspect(this.freeSockets),
	    sockets: inspect(this.sockets),
	    requests: inspect(this.requests)
	  };
	};
	
	function inspect(obj) {
	  var res = {};
	  for (var key in obj) {
	    res[key] = obj[key].length;
	  }
	  return res;
	}


/***/ }),
/* 980 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright(c) node-modules and other contributors.
	 * MIT Licensed
	 *
	 * Authors:
	 *   fengmk2 <m@fengmk2.com> (http://fengmk2.com)
	 */
	
	'use strict';
	
	/**
	 * Module dependencies.
	 */
	
	var util = __webpack_require__(877);
	var debug;
	var node10 = process.version.indexOf('v0.10.') === 0;
	
	if (node10) {
	  debug = function () {
	    if (({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG && /agentkeepalive/.test(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG)) {
	      console.log.apply(console.log, arguments);
	    }
	  };
	} else {
	  debug = util.debuglog('agentkeepalive');
	}
	
	exports.debug = debug;
	exports.isNode10 = node10;
	exports.inherits = util.inherits;


/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// copy from https://github.com/nodejs/node/blob/v4.x/lib/_http_agent.js
	
	'use strict';
	
	var net = __webpack_require__(944);
	var util = __webpack_require__(877);
	var EventEmitter = __webpack_require__(878).EventEmitter;
	var debug = __webpack_require__(980).debug;
	
	// New Agent code.
	
	// The largest departure from the previous implementation is that
	// an Agent instance holds connections for a variable number of host:ports.
	// Surprisingly, this is still API compatible as far as third parties are
	// concerned. The only code that really notices the difference is the
	// request object.
	
	// Another departure is that all code related to HTTP parsing is in
	// ClientRequest.onSocket(). The Agent is now *strictly*
	// concerned with managing a connection pool.
	
	function Agent(options) {
	  if (!(this instanceof Agent))
	    return new Agent(options);
	
	  EventEmitter.call(this);
	
	  var self = this;
	
	  self.defaultPort = 80;
	  self.protocol = 'http:';
	
	  self.options = util._extend({}, options);
	
	  // don't confuse net and make it think that we're connecting to a pipe
	  self.options.path = null;
	  self.requests = {};
	  self.sockets = {};
	  self.freeSockets = {};
	  self.keepAliveMsecs = self.options.keepAliveMsecs || 1000;
	  self.keepAlive = self.options.keepAlive || false;
	  // free keep-alive socket timeout. By default free socket do not have a timeout.
	  // keepAliveTimeout should be rename to `freeSocketKeepAliveTimeout`
	  self.keepAliveTimeout = self.options.keepAliveTimeout || 0;
	  // working socket timeout. By default working socket do not have a timeout.
	  self.timeout = self.options.timeout || 0;
	  self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets;
	  self.maxFreeSockets = self.options.maxFreeSockets || 256;
	
	  self.on('free', function(socket, options) {
	    var name = self.getName(options);
	    debug('agent.on(free)', name);
	
	    if (!socket.destroyed &&
	        self.requests[name] && self.requests[name].length) {
	      self.requests[name].shift().onSocket(socket);
	      if (self.requests[name].length === 0) {
	        // don't leak
	        delete self.requests[name];
	      }
	      debug('continue handle next request');
	    } else {
	      // If there are no pending requests, then put it in
	      // the freeSockets pool, but only if we're allowed to do so.
	      var req = socket._httpMessage;
	      if (req &&
	          req.shouldKeepAlive &&
	          !socket.destroyed &&
	          self.options.keepAlive) {
	        var freeSockets = self.freeSockets[name];
	        var freeLen = freeSockets ? freeSockets.length : 0;
	        var count = freeLen;
	        if (self.sockets[name])
	          count += self.sockets[name].length;
	        // console.log(count, freeLen, self.maxSockets, self.maxFreeSockets)
	        if (count > self.maxSockets || freeLen >= self.maxFreeSockets) {
	          // console.log('hit max sockets', count, freeLen, self.maxSockets, self.maxFreeSockets);
	          self.removeSocket(socket, options);
	          socket.destroy();
	        } else {
	          freeSockets = freeSockets || [];
	          self.freeSockets[name] = freeSockets;
	          socket.setKeepAlive(true, self.keepAliveMsecs);
	          socket.unref && socket.unref();
	          socket._httpMessage = null;
	          self.removeSocket(socket, options);
	          freeSockets.push(socket);
	
	          // Add a default error handler to avoid Unhandled 'error' event throw on idle socket
	          // https://github.com/node-modules/agentkeepalive/issues/25
	          // https://github.com/nodejs/node/pull/4482 (fixed in >= 4.4.0 and >= 5.4.0)
	          if (socket.listeners('error').length === 0) {
	            socket.once('error', freeSocketErrorListener);
	          }
	
	          // set free keepalive timer
	          socket.setTimeout(self.keepAliveTimeout);
	        }
	      } else {
	        self.removeSocket(socket, options);
	        socket.destroy();
	      }
	    }
	  });
	}
	
	util.inherits(Agent, EventEmitter);
	exports.Agent = Agent;
	
	function freeSocketErrorListener(err) {
	  var socket = this;
	  debug('SOCKET ERROR on FREE socket:', err.message, err.stack);
	  socket.destroy();
	  socket.emit('agentRemove');
	}
	
	Agent.defaultMaxSockets = Infinity;
	
	Agent.prototype.createConnection = net.createConnection;
	
	// Get the key for a given set of request options
	Agent.prototype.getName = function(options) {
	  var name = '';
	
	  if (options.host)
	    name += options.host;
	  else
	    name += 'localhost';
	
	  name += ':';
	  if (options.port)
	    name += options.port;
	  name += ':';
	  if (options.localAddress)
	    name += options.localAddress;
	  name += ':';
	  return name;
	};
	
	Agent.prototype.addRequest = function(req, options) {
	  // Legacy API: addRequest(req, host, port, path)
	  if (typeof options === 'string') {
	    options = {
	      host: options,
	      port: arguments[2],
	      path: arguments[3]
	    };
	  }
	
	  options = util._extend({}, options);
	  options = util._extend(options, this.options);
	
	  var name = this.getName(options);
	  if (!this.sockets[name]) {
	    this.sockets[name] = [];
	  }
	
	  var freeLen = this.freeSockets[name] ? this.freeSockets[name].length : 0;
	  var sockLen = freeLen + this.sockets[name].length;
	
	  if (freeLen) {
	    // we have a free socket, so use that.
	    var socket = this.freeSockets[name].shift();
	    debug('have free socket');
	
	    socket.removeListener('error', freeSocketErrorListener);
	
	    // restart the default timer
	    socket.setTimeout(this.timeout);
	
	    // don't leak
	    if (!this.freeSockets[name].length)
	      delete this.freeSockets[name];
	
	    socket.ref && socket.ref();
	    req.onSocket(socket);
	    this.sockets[name].push(socket);
	  } else if (sockLen < this.maxSockets) {
	    debug('call onSocket', sockLen, freeLen);
	    // If we are under maxSockets create a new one.
	    req.onSocket(this.createSocket(req, options));
	  } else {
	    debug('wait for socket');
	    // We are over limit so we'll add it to the queue.
	    if (!this.requests[name]) {
	      this.requests[name] = [];
	    }
	    this.requests[name].push(req);
	  }
	};
	
	Agent.prototype.createSocket = function(req, options) {
	  var self = this;
	  options = util._extend({}, options);
	  options = util._extend(options, self.options);
	
	  if (!options.servername) {
	    options.servername = options.host;
	    if (req) {
	      var hostHeader = req.getHeader('host');
	      if (hostHeader) {
	        options.servername = hostHeader.replace(/:.*$/, '');
	      }
	    }
	  }
	
	  var name = self.getName(options);
	
	  debug('createConnection', name, options);
	  options.encoding = null;
	  var s = self.createConnection(options);
	  if (!self.sockets[name]) {
	    self.sockets[name] = [];
	  }
	  this.sockets[name].push(s);
	  debug('sockets', name, this.sockets[name].length);
	
	  function onFree() {
	    self.emit('free', s, options);
	  }
	  s.on('free', onFree);
	
	  function onClose(err) {
	    debug('CLIENT socket onClose');
	    // fix: socket.destroyed always be undefined on 0.10.x
	    if (typeof s.destroyed !== 'boolean') {
	      s.destroyed = true;
	    }
	
	    // This is the only place where sockets get removed from the Agent.
	    // If you want to remove a socket from the pool, just close it.
	    // All socket errors end in a close event anyway.
	    self.removeSocket(s, options);
	    self.emit('close');
	  }
	  s.on('close', onClose);
	
	  function onTimeout() {
	    debug('CLIENT socket onTimeout');
	    s.destroy();
	    // Remove it from freeSockets immediately to prevent new requests from being sent through this socket.
	    self.removeSocket(s, options);
	    self.emit('timeout');
	  }
	  s.on('timeout', onTimeout);
	  // set the default timer
	  s.setTimeout(self.timeout);
	
	  function onRemove() {
	    // We need this function for cases like HTTP 'upgrade'
	    // (defined by WebSockets) where we need to remove a socket from the
	    // pool because it'll be locked up indefinitely
	    debug('CLIENT socket onRemove');
	    self.removeSocket(s, options);
	    s.removeListener('close', onClose);
	    s.removeListener('free', onFree);
	    s.removeListener('agentRemove', onRemove);
	    // remove timer
	    s.setTimeout(0, onTimeout);
	  }
	  s.on('agentRemove', onRemove);
	  return s;
	};
	
	Agent.prototype.removeSocket = function(s, options) {
	  var freeLen, sockLen;
	  var name = this.getName(options);
	  debug('removeSocket', name, 'destroyed:', s.destroyed);
	  var sets = [this.sockets];
	
	  // If the socket was destroyed, remove it from the free buffers too.
	  if (s.destroyed)
	    sets.push(this.freeSockets);
	
	  for (var sk = 0; sk < sets.length; sk++) {
	    var sockets = sets[sk];
	    if (sockets[name]) {
	      var index = sockets[name].indexOf(s);
	      if (index !== -1) {
	        sockets[name].splice(index, 1);
	        // Don't leak
	        if (sockets[name].length === 0)
	          delete sockets[name];
	      }
	    }
	  }
	
	  freeLen = this.freeSockets[name] ? this.freeSockets[name].length : 0;
	  sockLen = freeLen + this.sockets[name] ? this.sockets[name].length : 0;
	
	  if (this.requests[name] && this.requests[name].length && sockLen < this.maxSockets) {
	    debug('removeSocket, have a request, make a socket');
	    var req = this.requests[name][0];
	    // If we have pending requests and a socket gets closed make a new one
	    this.createSocket(req, options).emit('free');
	  }
	};
	
	Agent.prototype.destroy = function() {
	  var sets = [this.freeSockets, this.sockets];
	  for (var s = 0; s < sets.length; s++) {
	    var set = sets[s];
	    var keys = Object.keys(set);
	    for (var v = 0; v < keys.length; v++) {
	      var setName = set[keys[v]];
	      for (var n = 0; n < setName.length; n++) {
	        setName[n].destroy();
	      }
	    }
	  }
	};
	
	exports.globalAgent = new Agent();


/***/ }),
/* 982 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Https Agent base on custom http agent
	 *
	 * Copyright(c) node-modules and other contributors.
	 * MIT Licensed
	 *
	 * Authors:
	 *   fengmk2 <m@fengmk2.com> (http://fengmk2.com)
	 */
	
	'use strict';
	
	/**
	 * Module dependencies.
	 */
	
	var https = __webpack_require__(977);
	var utils = __webpack_require__(980);
	var HttpAgent = __webpack_require__(979);
	var OriginalHttpsAgent = https.Agent;
	
	var HttpsAgent;
	
	if (utils.isNode10) {
	  // node v0.10
	  HttpsAgent = function HttpsAgent(options) {
	    HttpAgent.call(this, options);
	    this.defaultPort = 443;
	    this.protocol = 'https:';
	  };
	
	  utils.inherits(HttpsAgent, HttpAgent);
	
	  HttpsAgent.prototype.createConnection = https.globalAgent.createConnection;
	  HttpsAgent.prototype.getName = function(options) {
	    var name = HttpAgent.prototype.getName.call(this, options);
	
	    name += ':';
	    if (options.ca)
	      name += options.ca;
	
	    name += ':';
	    if (options.cert)
	      name += options.cert;
	
	    name += ':';
	    if (options.ciphers)
	      name += options.ciphers;
	
	    name += ':';
	    if (options.key)
	      name += options.key;
	
	    name += ':';
	    if (options.pfx)
	      name += options.pfx;
	
	    name += ':';
	    if (options.rejectUnauthorized !== undefined)
	      name += options.rejectUnauthorized;
	
	    return name;
	  };
	} else {
	  HttpsAgent = function HttpsAgent(options) {
	    HttpAgent.call(this, options);
	    this.defaultPort = 443;
	    this.protocol = 'https:';
	    this.maxCachedSessions = this.options.maxCachedSessions;
	    if (this.maxCachedSessions === undefined)
	      this.maxCachedSessions = 100;
	
	    this._sessionCache = {
	      map: {},
	      list: []
	    };
	  };
	
	  utils.inherits(HttpsAgent, HttpAgent);
	
	  [
	    'createConnection',
	    'getName',
	    '_getSession',
	    '_cacheSession',
	    // https://github.com/nodejs/node/pull/4982
	    '_evictSession',
	  ].forEach(function(method) {
	    if (typeof OriginalHttpsAgent.prototype[method] === 'function') {
	      HttpsAgent.prototype[method] = OriginalHttpsAgent.prototype[method];
	    }
	  });
	}
	
	module.exports = HttpsAgent;


/***/ }),
/* 983 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var net = __webpack_require__(944)
	  , tls = __webpack_require__(984)
	  , http = __webpack_require__(976)
	  , https = __webpack_require__(977)
	  , events = __webpack_require__(878)
	  , assert = __webpack_require__(985)
	  , util = __webpack_require__(877)
	  , Buffer = __webpack_require__(986).Buffer
	  ;
	
	exports.httpOverHttp = httpOverHttp
	exports.httpsOverHttp = httpsOverHttp
	exports.httpOverHttps = httpOverHttps
	exports.httpsOverHttps = httpsOverHttps
	
	
	function httpOverHttp(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = http.request
	  return agent
	}
	
	function httpsOverHttp(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = http.request
	  agent.createSocket = createSecureSocket
	  agent.defaultPort = 443
	  return agent
	}
	
	function httpOverHttps(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = https.request
	  return agent
	}
	
	function httpsOverHttps(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = https.request
	  agent.createSocket = createSecureSocket
	  agent.defaultPort = 443
	  return agent
	}
	
	
	function TunnelingAgent(options) {
	  var self = this
	  self.options = options || {}
	  self.proxyOptions = self.options.proxy || {}
	  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets
	  self.requests = []
	  self.sockets = []
	
	  self.on('free', function onFree(socket, host, port) {
	    for (var i = 0, len = self.requests.length; i < len; ++i) {
	      var pending = self.requests[i]
	      if (pending.host === host && pending.port === port) {
	        // Detect the request to connect same origin server,
	        // reuse the connection.
	        self.requests.splice(i, 1)
	        pending.request.onSocket(socket)
	        return
	      }
	    }
	    socket.destroy()
	    self.removeSocket(socket)
	  })
	}
	util.inherits(TunnelingAgent, events.EventEmitter)
	
	TunnelingAgent.prototype.addRequest = function addRequest(req, options) {
	  var self = this
	
	   // Legacy API: addRequest(req, host, port, path)
	  if (typeof options === 'string') {
	    options = {
	      host: options,
	      port: arguments[2],
	      path: arguments[3]
	    };
	  }
	
	  if (self.sockets.length >= this.maxSockets) {
	    // We are over limit so we'll add it to the queue.
	    self.requests.push({host: options.host, port: options.port, request: req})
	    return
	  }
	
	  // If we are under maxSockets create a new one.
	  self.createConnection({host: options.host, port: options.port, request: req})
	}
	
	TunnelingAgent.prototype.createConnection = function createConnection(pending) {
	  var self = this
	
	  self.createSocket(pending, function(socket) {
	    socket.on('free', onFree)
	    socket.on('close', onCloseOrRemove)
	    socket.on('agentRemove', onCloseOrRemove)
	    pending.request.onSocket(socket)
	
	    function onFree() {
	      self.emit('free', socket, pending.host, pending.port)
	    }
	
	    function onCloseOrRemove(err) {
	      self.removeSocket(socket)
	      socket.removeListener('free', onFree)
	      socket.removeListener('close', onCloseOrRemove)
	      socket.removeListener('agentRemove', onCloseOrRemove)
	    }
	  })
	}
	
	TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
	  var self = this
	  var placeholder = {}
	  self.sockets.push(placeholder)
	
	  var connectOptions = mergeOptions({}, self.proxyOptions,
	    { method: 'CONNECT'
	    , path: options.host + ':' + options.port
	    , agent: false
	    }
	  )
	  if (connectOptions.proxyAuth) {
	    connectOptions.headers = connectOptions.headers || {}
	    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
	        Buffer.from(connectOptions.proxyAuth).toString('base64')
	  }
	
	  debug('making CONNECT request')
	  var connectReq = self.request(connectOptions)
	  connectReq.useChunkedEncodingByDefault = false // for v0.6
	  connectReq.once('response', onResponse) // for v0.6
	  connectReq.once('upgrade', onUpgrade)   // for v0.6
	  connectReq.once('connect', onConnect)   // for v0.7 or later
	  connectReq.once('error', onError)
	  connectReq.end()
	
	  function onResponse(res) {
	    // Very hacky. This is necessary to avoid http-parser leaks.
	    res.upgrade = true
	  }
	
	  function onUpgrade(res, socket, head) {
	    // Hacky.
	    process.nextTick(function() {
	      onConnect(res, socket, head)
	    })
	  }
	
	  function onConnect(res, socket, head) {
	    connectReq.removeAllListeners()
	    socket.removeAllListeners()
	
	    if (res.statusCode === 200) {
	      assert.equal(head.length, 0)
	      debug('tunneling connection has established')
	      self.sockets[self.sockets.indexOf(placeholder)] = socket
	      cb(socket)
	    } else {
	      debug('tunneling socket could not be established, statusCode=%d', res.statusCode)
	      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode)
	      error.code = 'ECONNRESET'
	      options.request.emit('error', error)
	      self.removeSocket(placeholder)
	    }
	  }
	
	  function onError(cause) {
	    connectReq.removeAllListeners()
	
	    debug('tunneling socket could not be established, cause=%s\n', cause.message, cause.stack)
	    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message)
	    error.code = 'ECONNRESET'
	    options.request.emit('error', error)
	    self.removeSocket(placeholder)
	  }
	}
	
	TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
	  var pos = this.sockets.indexOf(socket)
	  if (pos === -1) return
	
	  this.sockets.splice(pos, 1)
	
	  var pending = this.requests.shift()
	  if (pending) {
	    // If we have pending requests and a socket gets closed a new one
	    // needs to be created to take over in the pool for the one that closed.
	    this.createConnection(pending)
	  }
	}
	
	function createSecureSocket(options, cb) {
	  var self = this
	  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
	    // 0 is dummy port for v0.6
	    var secureSocket = tls.connect(0, mergeOptions({}, self.options,
	      { servername: options.host
	      , socket: socket
	      }
	    ))
	    self.sockets[self.sockets.indexOf(socket)] = secureSocket
	    cb(secureSocket)
	  })
	}
	
	
	function mergeOptions(target) {
	  for (var i = 1, len = arguments.length; i < len; ++i) {
	    var overrides = arguments[i]
	    if (typeof overrides === 'object') {
	      var keys = Object.keys(overrides)
	      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
	        var k = keys[j]
	        if (overrides[k] !== undefined) {
	          target[k] = overrides[k]
	        }
	      }
	    }
	  }
	  return target
	}
	
	
	var debug
	if (({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG && /\btunnel\b/.test(({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/brute4s99/pydata/blog/public"}).NODE_DEBUG)) {
	  debug = function() {
	    var args = Array.prototype.slice.call(arguments)
	    if (typeof args[0] === 'string') {
	      args[0] = 'TUNNEL: ' + args[0]
	    } else {
	      args.unshift('TUNNEL:')
	    }
	    console.error.apply(console, args)
	  }
	} else {
	  debug = function() {}
	}
	exports.debug = debug // for test


/***/ }),
/* 984 */
/***/ (function(module, exports) {

	module.exports = require("tls");

/***/ }),
/* 985 */
/***/ (function(module, exports) {

	module.exports = require("assert");

/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable node/no-deprecated-api */
	var buffer = __webpack_require__(987)
	var Buffer = buffer.Buffer
	
	// alternative to using Object.keys for old browsers
	function copyProps (src, dst) {
	  for (var key in src) {
	    dst[key] = src[key]
	  }
	}
	if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
	  module.exports = buffer
	} else {
	  // Copy properties from require('buffer')
	  copyProps(buffer, exports)
	  exports.Buffer = SafeBuffer
	}
	
	function SafeBuffer (arg, encodingOrOffset, length) {
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	// Copy static methods from Buffer
	copyProps(Buffer, SafeBuffer)
	
	SafeBuffer.from = function (arg, encodingOrOffset, length) {
	  if (typeof arg === 'number') {
	    throw new TypeError('Argument must not be a number')
	  }
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	SafeBuffer.alloc = function (size, fill, encoding) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  var buf = Buffer(size)
	  if (fill !== undefined) {
	    if (typeof encoding === 'string') {
	      buf.fill(fill, encoding)
	    } else {
	      buf.fill(fill)
	    }
	  } else {
	    buf.fill(0)
	  }
	  return buf
	}
	
	SafeBuffer.allocUnsafe = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return Buffer(size)
	}
	
	SafeBuffer.allocUnsafeSlow = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return buffer.SlowBuffer(size)
	}


/***/ }),
/* 987 */
/***/ (function(module, exports) {

	module.exports = require("buffer");

/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var Index = (0, _reactInstantsearchCore.createIndex)({
	  Root: 'div',
	  props: {
	    className: 'ais-MultiIndex__root'
	  }
	});
	
	exports.default = Index;

/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _Breadcrumb = __webpack_require__(991);
	
	var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * A breadcrumb is a secondary navigation scheme that allows the user to see where the current page
	 * is in relation to the website or web application’s hierarchy.
	 * In terms of usability, using a breadcrumb reduces the number of actions a visitor needs to take in
	 * order to get to a higher-level page.
	 *
	 * If you want to select a specific refinement for your Breadcrumb component, you will need to
	 * use a [Virtual Hierarchical Menu](https://community.algolia.com/react-instantsearch/guide/Virtual_widgets.html)
	 * and set its defaultRefinement that will be then used by the Breadcrumb.
	 *
	 * @name Breadcrumb
	 * @kind widget
	 * @requirements Breadcrumbs are used for websites with a large amount of content organised in a hierarchical manner.
	 * The typical example is an e-commerce website which has a large variety of products grouped into logical categories
	 * (with categories, subcategories which also have subcategories).To use this widget, your attributes must be formatted in a specific way.
	 *
	 * Keep in mind that breadcrumbs shouldn’t replace effective primary navigation menus:
	 * it is only an alternative way to navigate around the website.
	 *
	 * If, for instance, you would like to have a breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow
	 * @propType {node} [separator='>'] -  Symbol used for separating hyperlinks
	 * @propType {string} [rootURL=null] - The originating page (homepage)
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return
	 * @themeKey ais-Breadcrumb - the root div of the widget
	 * @themeKey ais-Breadcrumb--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Breadcrumb-list - the list of all breadcrumb items
	 * @themeKey ais-Breadcrumb-item - the breadcrumb navigation item
	 * @themeKey ais-Breadcrumb-item--selected - the selected breadcrumb item
	 * @themeKey ais-Breadcrumb-separator - the separator of each breadcrumb item
	 * @themeKey ais-Breadcrumb-link - the clickable breadcrumb element
	 * @translationKey rootLabel - The root's label. Accepts a string
	 * @example
	 * import React from 'react';
	 * import { Breadcrumb, InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Breadcrumb
	 *       attributes={[
	 *         'category',
	 *         'sub_category',
	 *         'sub_sub_category',
	 *       ]}
	 *     />
	 *     <HierarchicalMenu
	 *       defaultRefinement="Kitchen & appliances > Pantry"
	 *       attributes={[
	 *         'category',
	 *         'sub_category',
	 *         'sub_sub_category',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	var BreadcrumbWidget = function BreadcrumbWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_Breadcrumb2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectBreadcrumb)(BreadcrumbWidget);

/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PanelCallbackHandler = function (_Component) {
	  _inherits(PanelCallbackHandler, _Component);
	
	  function PanelCallbackHandler() {
	    _classCallCheck(this, PanelCallbackHandler);
	
	    return _possibleConstructorReturn(this, (PanelCallbackHandler.__proto__ || Object.getPrototypeOf(PanelCallbackHandler)).apply(this, arguments));
	  }
	
	  _createClass(PanelCallbackHandler, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if (this.context.setCanRefine) {
	        this.context.setCanRefine(this.props.canRefine);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.context.setCanRefine && this.props.canRefine !== nextProps.canRefine) {
	        this.context.setCanRefine(nextProps.canRefine);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	
	  return PanelCallbackHandler;
	}(_react.Component);
	
	PanelCallbackHandler.propTypes = {
	  children: _propTypes2.default.node.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired
	};
	PanelCallbackHandler.contextTypes = {
	  setCanRefine: _propTypes2.default.func
	};
	exports.default = PanelCallbackHandler;

/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _Link = __webpack_require__(993);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('Breadcrumb');
	
	var itemsPropType = _propTypes2.default.arrayOf(_propTypes2.default.shape({
	  label: _propTypes2.default.string.isRequired,
	  value: _propTypes2.default.string.isRequired
	}));
	
	var Breadcrumb = function (_Component) {
	  _inherits(Breadcrumb, _Component);
	
	  function Breadcrumb() {
	    _classCallCheck(this, Breadcrumb);
	
	    return _possibleConstructorReturn(this, (Breadcrumb.__proto__ || Object.getPrototypeOf(Breadcrumb)).apply(this, arguments));
	  }
	
	  _createClass(Breadcrumb, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          canRefine = _props.canRefine,
	          createURL = _props.createURL,
	          items = _props.items,
	          refine = _props.refine,
	          rootURL = _props.rootURL,
	          separator = _props.separator,
	          translate = _props.translate,
	          className = _props.className;
	
	      var rootPath = canRefine ? _react2.default.createElement(
	        'li',
	        { className: cx('item') },
	        _react2.default.createElement(
	          _Link2.default,
	          {
	            className: cx('link'),
	            onClick: function onClick() {
	              return !rootURL ? refine() : null;
	            },
	            href: rootURL ? rootURL : createURL()
	          },
	          translate('rootLabel')
	        )
	      ) : null;
	
	      var breadcrumb = items.map(function (item, idx) {
	        var isLast = idx === items.length - 1;
	        return _react2.default.createElement(
	          'li',
	          { className: cx('item', isLast && 'item--selected'), key: idx },
	          _react2.default.createElement(
	            'span',
	            { className: cx('separator') },
	            separator
	          ),
	          !isLast ? _react2.default.createElement(
	            _Link2.default,
	            {
	              className: cx('link'),
	              onClick: function onClick() {
	                return refine(item.value);
	              },
	              href: createURL(item.value)
	            },
	            item.label
	          ) : item.label
	        );
	      });
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        _react2.default.createElement(
	          'ul',
	          { className: cx('list') },
	          rootPath,
	          breadcrumb
	        )
	      );
	    }
	  }]);
	
	  return Breadcrumb;
	}(_react.Component);
	
	Breadcrumb.propTypes = {
	  canRefine: _propTypes2.default.bool.isRequired,
	  createURL: _propTypes2.default.func.isRequired,
	  items: itemsPropType,
	  refine: _propTypes2.default.func.isRequired,
	  rootURL: _propTypes2.default.string,
	  separator: _propTypes2.default.node,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	Breadcrumb.defaultProps = {
	  rootURL: null,
	  separator: ' > ',
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  rootLabel: 'Home'
	})(Breadcrumb);

/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.capitalize = exports.isSpecialClick = exports.createClassNames = undefined;
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createClassNames = exports.createClassNames = function createClassNames(block) {
	  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';
	  return function () {
	    for (var _len = arguments.length, elements = Array(_len), _key = 0; _key < _len; _key++) {
	      elements[_key] = arguments[_key];
	    }
	
	    var suitElements = elements.filter(function (element) {
	      return element || element === '';
	    }).map(function (element) {
	      var baseClassName = prefix + '-' + block;
	
	      return element ? baseClassName + '-' + element : baseClassName;
	    });
	
	    return (0, _classnames2.default)(suitElements);
	  };
	};
	
	var isSpecialClick = exports.isSpecialClick = function isSpecialClick(event) {
	  var isMiddleClick = event.button === 1;
	  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);
	};
	
	var capitalize = exports.capitalize = function capitalize(key) {
	  return key.length === 0 ? '' : '' + key[0].toUpperCase() + key.slice(1);
	};

/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _omit2 = __webpack_require__(724);
	
	var _omit3 = _interopRequireDefault(_omit2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Link = function (_Component) {
	  _inherits(Link, _Component);
	
	  function Link() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Link);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Link.__proto__ || Object.getPrototypeOf(Link)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (e) {
	      if ((0, _utils.isSpecialClick)(e)) {
	        return;
	      }
	      _this.props.onClick();
	      e.preventDefault();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Link, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('a', _extends({}, (0, _omit3.default)(this.props, 'onClick'), { onClick: this.onClick }));
	    }
	  }]);
	
	  return Link;
	}(_react.Component);
	
	Link.propTypes = {
	  onClick: _propTypes2.default.func.isRequired
	};
	exports.default = Link;

/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _ClearRefinements = __webpack_require__(995);
	
	var _ClearRefinements2 = _interopRequireDefault(_ClearRefinements);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The ClearRefinements widget displays a button that lets the user clean every refinement applied
	 * to the search.
	 * @name ClearRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [clearsQuery=false] - Pass true to also clear the search query
	 * @themeKey ais-ClearRefinements - the root div of the widget
	 * @themeKey ais-ClearRefinements-button - the clickable button
	 * @themeKey ais-ClearRefinements-button--disabled - the disabled clickable button
	 * @translationKey reset - the clear all button value
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ClearRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <ClearRefinements />
	 *     <RefinementList
	 *       attribute="colors"
	 *       defaultRefinement={['Black']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	var ClearRefinementsWidget = function ClearRefinementsWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_ClearRefinements2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectCurrentRefinements)(ClearRefinementsWidget);

/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('ClearRefinements');
	
	var ClearRefinements = function (_Component) {
	  _inherits(ClearRefinements, _Component);
	
	  function ClearRefinements() {
	    _classCallCheck(this, ClearRefinements);
	
	    return _possibleConstructorReturn(this, (ClearRefinements.__proto__ || Object.getPrototypeOf(ClearRefinements)).apply(this, arguments));
	  }
	
	  _createClass(ClearRefinements, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          canRefine = _props.canRefine,
	          refine = _props.refine,
	          translate = _props.translate,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(
	          'button',
	          {
	            className: cx('button', !canRefine && 'button--disabled'),
	            onClick: function onClick() {
	              return refine(items);
	            },
	            disabled: !canRefine
	          },
	          translate('reset')
	        )
	      );
	    }
	  }]);
	
	  return ClearRefinements;
	}(_react.Component);
	
	ClearRefinements.propTypes = {
	  items: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	ClearRefinements.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  reset: 'Clear all filters'
	})(ClearRefinements);

/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _CurrentRefinements = __webpack_require__(997);
	
	var _CurrentRefinements2 = _interopRequireDefault(_CurrentRefinements);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The CurrentRefinements widget displays the list of currently applied filters.
	 *
	 * It allows the user to selectively remove them.
	 * @name CurrentRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-CurrentRefinements - the root div of the widget
	 * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-CurrentRefinements-list - the list of all refined items
	 * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement
	 * @themeKey ais-CurrentRefinements-item - the refined list item
	 * @themeKey ais-CurrentRefinements-button - the button of each refined list item
	 * @themeKey ais-CurrentRefinements-label - the refined list label
	 * @themeKey ais-CurrentRefinements-category - the category of each item
	 * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory
	 * @themeKey ais-CurrentRefinements-delete - the delete button of each label
	 * @translationKey clearFilter - the remove filter button label
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <CurrentRefinements />
	 *     <RefinementList
	 *       attribute="colors"
	 *       defaultRefinement={['Black']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	var CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_CurrentRefinements2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectCurrentRefinements)(CurrentRefinementsWidget);

/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CurrentRefinements = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cx = (0, _utils.createClassNames)('CurrentRefinements');
	
	var CurrentRefinements = exports.CurrentRefinements = function CurrentRefinements(_ref) {
	  var items = _ref.items,
	      canRefine = _ref.canRefine,
	      refine = _ref.refine,
	      translate = _ref.translate,
	      className = _ref.className;
	  return _react2.default.createElement(
	    'div',
	    { className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className) },
	    _react2.default.createElement(
	      'ul',
	      { className: cx('list', !canRefine && 'list--noRefinement') },
	      items.map(function (item) {
	        return _react2.default.createElement(
	          'li',
	          { key: item.label, className: cx('item') },
	          _react2.default.createElement(
	            'span',
	            { className: cx('label') },
	            item.label
	          ),
	          item.items ? item.items.map(function (nest) {
	            return _react2.default.createElement(
	              'span',
	              { key: nest.label, className: cx('category') },
	              _react2.default.createElement(
	                'span',
	                { className: cx('categoryLabel') },
	                nest.label
	              ),
	              _react2.default.createElement(
	                'button',
	                {
	                  className: cx('delete'),
	                  onClick: function onClick() {
	                    return refine(nest.value);
	                  }
	                },
	                translate('clearFilter', nest)
	              )
	            );
	          }) : _react2.default.createElement(
	            'span',
	            { className: cx('category') },
	            _react2.default.createElement(
	              'button',
	              {
	                className: cx('delete'),
	                onClick: function onClick() {
	                  return refine(item.value);
	                }
	              },
	              translate('clearFilter', item)
	            )
	          )
	        );
	      })
	    )
	  );
	};
	
	var itemPropTypes = _propTypes2.default.arrayOf(_propTypes2.default.shape({
	  label: _propTypes2.default.string.isRequired,
	  value: _propTypes2.default.func.isRequired,
	  items: function items() {
	    return itemPropTypes.apply(undefined, arguments);
	  }
	}));
	
	CurrentRefinements.propTypes = {
	  items: itemPropTypes.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	
	CurrentRefinements.defaultProps = {
	  className: ''
	};
	
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  clearFilter: '✕'
	})(CurrentRefinements);

/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _HierarchicalMenu = __webpack_require__(999);
	
	var _HierarchicalMenu2 = _interopRequireDefault(_HierarchicalMenu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The hierarchical menu lets the user browse attributes using a tree-like structure.
	 *
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 *
	 * @name HierarchicalMenu
	 * @kind widget
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * [{
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * },
	 * {
	 *   "objectID": "8976987",
	 *   "name": "orange",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * }]
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string[]} [rootPath=null] - The already selected and hidden path.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HierarchicalMenu - the root div of the widget
	 * @themeKey ais-HierarchicalMenu-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-HierarchicalMenu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-HierarchicalMenu-list - the list of menu items
	 * @themeKey ais-HierarchicalMenu-list--child - the child list of menu items
	 * @themeKey ais-HierarchicalMenu-item - the menu list item
	 * @themeKey ais-HierarchicalMenu-item--selected - the selected menu list item
	 * @themeKey ais-HierarchicalMenu-item--parent - the menu list item containing children
	 * @themeKey ais-HierarchicalMenu-link - the clickable menu element
	 * @themeKey ais-HierarchicalMenu-label - the label of each item
	 * @themeKey ais-HierarchicalMenu-count - the count of values for each item
	 * @themeKey ais-HierarchicalMenu-showMore - the button used to display more categories
	 * @themeKey ais-HierarchicalMenu-showMore--disabled - the disabled button used to display more categories
	 * @translationKey showMore - The label of the show more button. Accepts one parameter, a boolean that is true if the values are expanded
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <HierarchicalMenu
	 *       attributes={[
	 *         'category',
	 *         'sub_category',
	 *         'sub_sub_category',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	var HierarchicalMenuWidget = function HierarchicalMenuWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_HierarchicalMenu2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectHierarchicalMenu)(HierarchicalMenuWidget);

/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _pick2 = __webpack_require__(891);
	
	var _pick3 = _interopRequireDefault(_pick2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _List = __webpack_require__(1000);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _Link = __webpack_require__(993);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('HierarchicalMenu');
	
	var itemsPropType = _propTypes2.default.arrayOf(_propTypes2.default.shape({
	  label: _propTypes2.default.string.isRequired,
	  value: _propTypes2.default.string,
	  count: _propTypes2.default.number.isRequired,
	  items: function items() {
	    return itemsPropType.apply(undefined, arguments);
	  }
	}));
	
	var HierarchicalMenu = function (_Component) {
	  _inherits(HierarchicalMenu, _Component);
	
	  function HierarchicalMenu() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, HierarchicalMenu);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HierarchicalMenu.__proto__ || Object.getPrototypeOf(HierarchicalMenu)).call.apply(_ref, [this].concat(args))), _this), _this.renderItem = function (item) {
	      var _this$props = _this.props,
	          createURL = _this$props.createURL,
	          refine = _this$props.refine;
	
	
	      return _react2.default.createElement(
	        _Link2.default,
	        {
	          className: cx('link'),
	          onClick: function onClick() {
	            return refine(item.value);
	          },
	          href: createURL(item.value)
	        },
	        _react2.default.createElement(
	          'span',
	          { className: cx('label') },
	          item.label
	        ),
	        ' ',
	        _react2.default.createElement(
	          'span',
	          { className: cx('count') },
	          item.count
	        )
	      );
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(HierarchicalMenu, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_List2.default, _extends({
	        renderItem: this.renderItem,
	        cx: cx
	      }, (0, _pick3.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isEmpty', 'canRefine', 'className'])));
	    }
	  }]);
	
	  return HierarchicalMenu;
	}(_react.Component);
	
	HierarchicalMenu.propTypes = {
	  translate: _propTypes2.default.func.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  createURL: _propTypes2.default.func.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  items: itemsPropType,
	  showMore: _propTypes2.default.bool,
	  className: _propTypes2.default.string,
	  limit: _propTypes2.default.number,
	  showMoreLimit: _propTypes2.default.number,
	  transformItems: _propTypes2.default.func
	};
	HierarchicalMenu.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  }
	})(HierarchicalMenu);

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _SearchBox = __webpack_require__(1001);
	
	var _SearchBox2 = _interopRequireDefault(_SearchBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var itemsPropType = _propTypes2.default.arrayOf(_propTypes2.default.shape({
	  value: _propTypes2.default.any,
	  label: _propTypes2.default.node.isRequired,
	  items: function items() {
	    return itemsPropType.apply(undefined, arguments);
	  }
	}));
	
	var List = function (_Component) {
	  _inherits(List, _Component);
	
	  function List() {
	    _classCallCheck(this, List);
	
	    var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this));
	
	    _this.onShowMoreClick = function () {
	      _this.setState(function (state) {
	        return {
	          extended: !state.extended
	        };
	      });
	    };
	
	    _this.getLimit = function () {
	      var _this$props = _this.props,
	          limit = _this$props.limit,
	          showMoreLimit = _this$props.showMoreLimit;
	      var extended = _this.state.extended;
	
	      return extended ? showMoreLimit : limit;
	    };
	
	    _this.resetQuery = function () {
	      _this.setState({ query: '' });
	    };
	
	    _this.renderItem = function (item, resetQuery) {
	      var items = item.items && _react2.default.createElement(
	        'ul',
	        { className: _this.props.cx('list', 'list--child') },
	        item.items.slice(0, _this.getLimit()).map(function (child) {
	          return _this.renderItem(child, item);
	        })
	      );
	
	      return _react2.default.createElement(
	        'li',
	        {
	          key: item.key || item.label,
	          className: _this.props.cx('item', item.isRefined && 'item--selected', item.noRefinement && 'item--noRefinement', items && 'item--parent')
	        },
	        _this.props.renderItem(item, resetQuery),
	        items
	      );
	    };
	
	    _this.state = {
	      extended: false,
	      query: ''
	    };
	    return _this;
	  }
	
	  _createClass(List, [{
	    key: 'renderShowMore',
	    value: function renderShowMore() {
	      var _props = this.props,
	          showMore = _props.showMore,
	          translate = _props.translate,
	          cx = _props.cx;
	      var extended = this.state.extended;
	
	      var disabled = this.props.limit >= this.props.items.length;
	      if (!showMore) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        'button',
	        {
	          disabled: disabled,
	          className: cx('showMore', disabled && 'showMore--disabled'),
	          onClick: this.onShowMoreClick
	        },
	        translate('showMore', extended)
	      );
	    }
	  }, {
	    key: 'renderSearchBox',
	    value: function renderSearchBox() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          cx = _props2.cx,
	          searchForItems = _props2.searchForItems,
	          isFromSearch = _props2.isFromSearch,
	          translate = _props2.translate,
	          items = _props2.items,
	          selectItem = _props2.selectItem;
	
	
	      var noResults = items.length === 0 && this.state.query !== '' ? _react2.default.createElement(
	        'div',
	        { className: cx('noResults') },
	        translate('noResults')
	      ) : null;
	      return _react2.default.createElement(
	        'div',
	        { className: cx('searchBox') },
	        _react2.default.createElement(_SearchBox2.default, {
	          currentRefinement: this.state.query,
	          refine: function refine(value) {
	            _this2.setState({ query: value });
	            searchForItems(value);
	          },
	          focusShortcuts: [],
	          translate: translate,
	          onSubmit: function onSubmit(e) {
	            e.preventDefault();
	            e.stopPropagation();
	            if (isFromSearch) {
	              selectItem(items[0], _this2.resetQuery);
	            }
	          }
	        }),
	        noResults
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;
	
	      var _props3 = this.props,
	          cx = _props3.cx,
	          items = _props3.items,
	          className = _props3.className,
	          searchable = _props3.searchable,
	          canRefine = _props3.canRefine;
	
	      var searchBox = searchable ? this.renderSearchBox() : null;
	      var rootClassName = (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className);
	
	      if (items.length === 0) {
	        return _react2.default.createElement(
	          'div',
	          { className: rootClassName },
	          searchBox
	        );
	      }
	
	      // Always limit the number of items we show on screen, since the actual
	      // number of retrieved items might vary with the `maxValuesPerFacet` config
	      // option.
	      return _react2.default.createElement(
	        'div',
	        { className: rootClassName },
	        searchBox,
	        _react2.default.createElement(
	          'ul',
	          { className: cx('list', !canRefine && 'list--noRefinement') },
	          items.slice(0, this.getLimit()).map(function (item) {
	            return _this3.renderItem(item, _this3.resetQuery);
	          })
	        ),
	        this.renderShowMore()
	      );
	    }
	  }]);
	
	  return List;
	}(_react.Component);
	
	List.propTypes = {
	  cx: _propTypes2.default.func.isRequired,
	  // Only required with showMore.
	  translate: _propTypes2.default.func,
	  items: itemsPropType,
	  renderItem: _propTypes2.default.func.isRequired,
	  selectItem: _propTypes2.default.func,
	  className: _propTypes2.default.string,
	  showMore: _propTypes2.default.bool,
	  limit: _propTypes2.default.number,
	  showMoreLimit: _propTypes2.default.number,
	  show: _propTypes2.default.func,
	  searchForItems: _propTypes2.default.func,
	  searchable: _propTypes2.default.bool,
	  isFromSearch: _propTypes2.default.bool,
	  canRefine: _propTypes2.default.bool
	};
	List.defaultProps = {
	  className: '',
	  isFromSearch: false
	};
	exports.default = List;

/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('SearchBox');
	
	var defaultLoadingIndicator = _react2.default.createElement(
	  'svg',
	  {
	    width: '18',
	    height: '18',
	    viewBox: '0 0 38 38',
	    xmlns: 'http://www.w3.org/2000/svg',
	    stroke: '#444',
	    className: cx('loadingIcon')
	  },
	  _react2.default.createElement(
	    'g',
	    { fill: 'none', fillRule: 'evenodd' },
	    _react2.default.createElement(
	      'g',
	      { transform: 'translate(1 1)', strokeWidth: '2' },
	      _react2.default.createElement('circle', { strokeOpacity: '.5', cx: '18', cy: '18', r: '18' }),
	      _react2.default.createElement(
	        'path',
	        { d: 'M36 18c0-9.94-8.06-18-18-18' },
	        _react2.default.createElement('animateTransform', {
	          attributeName: 'transform',
	          type: 'rotate',
	          from: '0 18 18',
	          to: '360 18 18',
	          dur: '1s',
	          repeatCount: 'indefinite'
	        })
	      )
	    )
	  )
	);
	
	var defaultReset = _react2.default.createElement(
	  'svg',
	  {
	    className: cx('resetIcon'),
	    xmlns: 'http://www.w3.org/2000/svg',
	    viewBox: '0 0 20 20',
	    width: '10',
	    height: '10'
	  },
	  _react2.default.createElement('path', { d: 'M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z' })
	);
	
	var defaultSubmit = _react2.default.createElement(
	  'svg',
	  {
	    className: cx('submitIcon'),
	    xmlns: 'http://www.w3.org/2000/svg',
	    width: '10',
	    height: '10',
	    viewBox: '0 0 40 40'
	  },
	  _react2.default.createElement('path', { d: 'M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z' })
	);
	
	var SearchBox = function (_Component) {
	  _inherits(SearchBox, _Component);
	
	  function SearchBox(props) {
	    _classCallCheck(this, SearchBox);
	
	    var _this = _possibleConstructorReturn(this, (SearchBox.__proto__ || Object.getPrototypeOf(SearchBox)).call(this));
	
	    _this.getQuery = function () {
	      return _this.props.searchAsYouType ? _this.props.currentRefinement : _this.state.query;
	    };
	
	    _this.onInputMount = function (input) {
	      _this.input = input;
	      if (_this.props.__inputRef) {
	        _this.props.__inputRef(input);
	      }
	    };
	
	    _this.onKeyDown = function (e) {
	      if (!_this.props.focusShortcuts) {
	        return;
	      }
	
	      var shortcuts = _this.props.focusShortcuts.map(function (key) {
	        return typeof key === 'string' ? key.toUpperCase().charCodeAt(0) : key;
	      });
	
	      var elt = e.target || e.srcElement;
	      var tagName = elt.tagName;
	      if (elt.isContentEditable || tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA') {
	        // already in an input
	        return;
	      }
	
	      var which = e.which || e.keyCode;
	      if (shortcuts.indexOf(which) === -1) {
	        // not the right shortcut
	        return;
	      }
	
	      _this.input.focus();
	      e.stopPropagation();
	      e.preventDefault();
	    };
	
	    _this.onSubmit = function (e) {
	      e.preventDefault();
	      e.stopPropagation();
	      _this.input.blur();
	
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          searchAsYouType = _this$props.searchAsYouType;
	
	      if (!searchAsYouType) {
	        refine(_this.getQuery());
	      }
	      return false;
	    };
	
	    _this.onChange = function (event) {
	      var _this$props2 = _this.props,
	          searchAsYouType = _this$props2.searchAsYouType,
	          refine = _this$props2.refine,
	          onChange = _this$props2.onChange;
	
	      var value = event.target.value;
	
	      if (searchAsYouType) {
	        refine(value);
	      } else {
	        _this.setState({ query: value });
	      }
	
	      if (onChange) {
	        onChange(event);
	      }
	    };
	
	    _this.onReset = function (event) {
	      var _this$props3 = _this.props,
	          searchAsYouType = _this$props3.searchAsYouType,
	          refine = _this$props3.refine,
	          onReset = _this$props3.onReset;
	
	
	      refine('');
	      _this.input.focus();
	
	      if (!searchAsYouType) {
	        _this.setState({ query: '' });
	      }
	
	      if (onReset) {
	        onReset(event);
	      }
	    };
	
	    _this.state = {
	      query: props.searchAsYouType ? null : props.currentRefinement
	    };
	    return _this;
	  }
	
	  _createClass(SearchBox, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      document.addEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      document.removeEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      // Reset query when the searchParameters query has changed.
	      // This is kind of an anti-pattern (props in state), but it works here
	      // since we know for sure that searchParameters having changed means a
	      // new search has been triggered.
	      if (!nextProps.searchAsYouType && nextProps.currentRefinement !== this.props.currentRefinement) {
	        this.setState({
	          query: nextProps.currentRefinement
	        });
	      }
	    }
	
	    // From https://github.com/algolia/autocomplete.js/pull/86
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          className = _props.className,
	          translate = _props.translate,
	          autoFocus = _props.autoFocus,
	          loadingIndicator = _props.loadingIndicator,
	          submit = _props.submit,
	          reset = _props.reset;
	
	      var query = this.getQuery();
	
	      var searchInputEvents = Object.keys(this.props).reduce(function (props, prop) {
	        if (['onsubmit', 'onreset', 'onchange'].indexOf(prop.toLowerCase()) === -1 && prop.indexOf('on') === 0) {
	          return _extends({}, props, _defineProperty({}, prop, _this2.props[prop]));
	        }
	
	        return props;
	      }, {});
	
	      var isSearchStalled = this.props.showLoadingIndicator && this.props.isSearchStalled;
	
	      /* eslint-disable max-len */
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(
	          'form',
	          {
	            noValidate: true,
	            onSubmit: this.props.onSubmit ? this.props.onSubmit : this.onSubmit,
	            onReset: this.onReset,
	            className: cx('form', isSearchStalled && 'form--stalledSearch'),
	            action: '',
	            role: 'search'
	          },
	          _react2.default.createElement('input', _extends({
	            ref: this.onInputMount,
	            type: 'search',
	            placeholder: translate('placeholder'),
	            autoFocus: autoFocus,
	            autoComplete: 'off',
	            autoCorrect: 'off',
	            autoCapitalize: 'off',
	            spellCheck: 'false',
	            required: true,
	            maxLength: '512',
	            value: query,
	            onChange: this.onChange
	          }, searchInputEvents, {
	            className: cx('input')
	          })),
	          _react2.default.createElement(
	            'button',
	            {
	              type: 'submit',
	              title: translate('submitTitle'),
	              className: cx('submit')
	            },
	            submit
	          ),
	          _react2.default.createElement(
	            'button',
	            {
	              type: 'reset',
	              title: translate('resetTitle'),
	              className: cx('reset'),
	              hidden: !query || isSearchStalled
	            },
	            reset
	          ),
	          this.props.showLoadingIndicator && _react2.default.createElement(
	            'span',
	            { hidden: !isSearchStalled, className: cx('loadingIndicator') },
	            loadingIndicator
	          )
	        )
	      );
	      /* eslint-enable */
	    }
	  }]);
	
	  return SearchBox;
	}(_react.Component);
	
	SearchBox.propTypes = {
	  currentRefinement: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	
	  loadingIndicator: _propTypes2.default.node,
	  reset: _propTypes2.default.node,
	  submit: _propTypes2.default.node,
	
	  focusShortcuts: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])),
	
	  autoFocus: _propTypes2.default.bool,
	
	  searchAsYouType: _propTypes2.default.bool,
	  onSubmit: _propTypes2.default.func,
	  onReset: _propTypes2.default.func,
	  onChange: _propTypes2.default.func,
	
	  isSearchStalled: _propTypes2.default.bool,
	  showLoadingIndicator: _propTypes2.default.bool,
	
	  // For testing purposes
	  __inputRef: _propTypes2.default.func
	};
	SearchBox.defaultProps = {
	  currentRefinement: '',
	  className: '',
	  focusShortcuts: ['s', '/'],
	  autoFocus: false,
	  searchAsYouType: true,
	  showLoadingIndicator: false,
	  isSearchStalled: false,
	  loadingIndicator: defaultLoadingIndicator,
	  reset: defaultReset,
	  submit: defaultSubmit
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(SearchBox);

/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _Highlight = __webpack_require__(1003);
	
	var _Highlight2 = _interopRequireDefault(_Highlight);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Renders any attribute from a hit into its highlighted form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Highlight
	 * @kind widget
	 * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Highlight - root of the component
	 * @themeKey ais-Highlight-highlighted - part of the text which is highlighted
	 * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Highlight attribute="name" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SearchBox defaultRefinement="Legi" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectHighlight)(_Highlight2.default);

/***/ }),
/* 1003 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(992);
	
	var _Highlighter = __webpack_require__(1004);
	
	var _Highlighter2 = _interopRequireDefault(_Highlighter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cx = (0, _utils.createClassNames)('Highlight');
	
	var Highlight = function Highlight(props) {
	  return _react2.default.createElement(_Highlighter2.default, _extends({}, props, { highlightProperty: '_highlightResult', cx: cx }));
	};
	
	exports.default = Highlight;

/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Highlight = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function generateKey(i, value) {
	  return 'split-' + i + '-' + value;
	}
	
	var Highlight = exports.Highlight = function Highlight(_ref) {
	  var cx = _ref.cx,
	      value = _ref.value,
	      highlightedTagName = _ref.highlightedTagName,
	      isHighlighted = _ref.isHighlighted,
	      nonHighlightedTagName = _ref.nonHighlightedTagName;
	
	  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;
	  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';
	  return _react2.default.createElement(
	    TagName,
	    { className: cx(className) },
	    value
	  );
	};
	
	Highlight.propTypes = {
	  cx: _propTypes2.default.func.isRequired,
	  value: _propTypes2.default.string.isRequired,
	  isHighlighted: _propTypes2.default.bool.isRequired,
	  highlightedTagName: _propTypes2.default.string.isRequired,
	  nonHighlightedTagName: _propTypes2.default.string.isRequired
	};
	
	var Highlighter = function Highlighter(_ref2) {
	  var cx = _ref2.cx,
	      hit = _ref2.hit,
	      attribute = _ref2.attribute,
	      highlight = _ref2.highlight,
	      highlightProperty = _ref2.highlightProperty,
	      tagName = _ref2.tagName,
	      nonHighlightedTagName = _ref2.nonHighlightedTagName,
	      separator = _ref2.separator,
	      className = _ref2.className;
	
	  var parsedHighlightedValue = highlight({
	    hit: hit,
	    attribute: attribute,
	    highlightProperty: highlightProperty
	  });
	
	  return _react2.default.createElement(
	    'span',
	    { className: (0, _classnames2.default)(cx(''), className) },
	    parsedHighlightedValue.map(function (item, i) {
	      if (Array.isArray(item)) {
	        var isLast = i === parsedHighlightedValue.length - 1;
	        return _react2.default.createElement(
	          'span',
	          { key: generateKey(i, hit[attribute][i]) },
	          item.map(function (element, index) {
	            return _react2.default.createElement(Highlight, {
	              cx: cx,
	              key: generateKey(index, element.value),
	              value: element.value,
	              highlightedTagName: tagName,
	              nonHighlightedTagName: nonHighlightedTagName,
	              isHighlighted: element.isHighlighted
	            });
	          }),
	          !isLast && _react2.default.createElement(
	            'span',
	            { className: cx('separator') },
	            separator
	          )
	        );
	      }
	
	      return _react2.default.createElement(Highlight, {
	        cx: cx,
	        key: generateKey(i, item.value),
	        value: item.value,
	        highlightedTagName: tagName,
	        nonHighlightedTagName: nonHighlightedTagName,
	        isHighlighted: item.isHighlighted
	      });
	    })
	  );
	};
	
	Highlighter.propTypes = {
	  cx: _propTypes2.default.func.isRequired,
	  hit: _propTypes2.default.object.isRequired,
	  attribute: _propTypes2.default.string.isRequired,
	  highlight: _propTypes2.default.func.isRequired,
	  highlightProperty: _propTypes2.default.string.isRequired,
	  tagName: _propTypes2.default.string,
	  nonHighlightedTagName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  separator: _propTypes2.default.node
	};
	
	Highlighter.defaultProps = {
	  tagName: 'em',
	  nonHighlightedTagName: 'span',
	  className: '',
	  separator: ', '
	};
	
	exports.default = Highlighter;

/***/ }),
/* 1005 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _Hits = __webpack_require__(1006);
	
	var _Hits2 = _interopRequireDefault(_Hits);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Displays a list of hits.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name Hits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-Hits - the root div of the widget
	 * @themeKey ais-Hits-list - the list of results
	 * @themeKey ais-Hits-item - the hit list item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectHits)(_Hits2.default);

/***/ }),
/* 1006 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cx = (0, _utils.createClassNames)('Hits');
	
	var Hits = function Hits(_ref) {
	  var hits = _ref.hits,
	      className = _ref.className,
	      HitComponent = _ref.hitComponent;
	  return (
	    // Spread the hit on HitComponent instead of passing the full object. BC.
	    // ex: <HitComponent {...hit} key={hit.objectID} />
	    _react2.default.createElement(
	      'div',
	      { className: (0, _classnames2.default)(cx(''), className) },
	      _react2.default.createElement(
	        'ul',
	        { className: cx('list') },
	        hits.map(function (hit) {
	          return _react2.default.createElement(
	            'li',
	            { className: cx('item'), key: hit.objectID },
	            _react2.default.createElement(HitComponent, { hit: hit })
	          );
	        })
	      )
	    )
	  );
	};
	
	Hits.propTypes = {
	  hits: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
	  className: _propTypes2.default.string,
	  hitComponent: _propTypes2.default.func
	};
	
	Hits.defaultProps = {
	  className: '',
	  hitComponent: function hitComponent(props) {
	    return _react2.default.createElement(
	      'div',
	      {
	        style: {
	          borderBottom: '1px solid #bbb',
	          paddingBottom: '5px',
	          marginBottom: '5px',
	          wordBreak: 'break-all'
	        }
	      },
	      JSON.stringify(props).slice(0, 100),
	      '...'
	    );
	  }
	};
	
	exports.default = Hits;

/***/ }),
/* 1007 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _HitsPerPage = __webpack_require__(1008);
	
	var _HitsPerPage2 = _interopRequireDefault(_HitsPerPage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The HitsPerPage widget displays a dropdown menu to let the user change the number
	 * of displayed hits.
	 *
	 * If you only want to configure the number of hits per page without
	 * displaying a widget, you should use the `<Configure hitsPerPage={20} />` widget. See [`<Configure />` documentation](widgets/Configure.html)
	 *
	 * @name HitsPerPage
	 * @kind widget
	 * @propType {{value: number, label: string}[]} items - List of available options.
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HitsPerPage - the root div of the widget
	 * @themeKey ais-HitsPerPage-select - the select
	 * @themeKey ais-HitsPerPage-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HitsPerPage, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <HitsPerPage
	 *       defaultRefinement={5}
	 *       items={[
	 *         { value: 5, label: 'Show 5 hits' },
	 *         { value: 10, label: 'Show 10 hits' },
	 *       ]}
	 *     />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectHitsPerPage)(_HitsPerPage2.default);

/***/ }),
/* 1008 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(992);
	
	var _Select = __webpack_require__(1009);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('HitsPerPage');
	
	var HitsPerPage = function (_Component) {
	  _inherits(HitsPerPage, _Component);
	
	  function HitsPerPage() {
	    _classCallCheck(this, HitsPerPage);
	
	    return _possibleConstructorReturn(this, (HitsPerPage.__proto__ || Object.getPrototypeOf(HitsPerPage)).apply(this, arguments));
	  }
	
	  _createClass(HitsPerPage, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          currentRefinement = _props.currentRefinement,
	          refine = _props.refine,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(_Select2.default, {
	          onSelect: refine,
	          selectedItem: currentRefinement,
	          items: items,
	          cx: cx
	        })
	      );
	    }
	  }]);
	
	  return HitsPerPage;
	}(_react.Component);
	
	HitsPerPage.propTypes = {
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    value: _propTypes2.default.number.isRequired,
	    label: _propTypes2.default.string
	  })).isRequired,
	  currentRefinement: _propTypes2.default.number.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	HitsPerPage.defaultProps = {
	  className: ''
	};
	exports.default = HitsPerPage;

/***/ }),
/* 1009 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _has2 = __webpack_require__(904);
	
	var _has3 = _interopRequireDefault(_has2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Select = function (_Component) {
	  _inherits(Select, _Component);
	
	  function Select() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Select);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Select.__proto__ || Object.getPrototypeOf(Select)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = function (e) {
	      _this.props.onSelect(e.target.value);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Select, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          cx = _props.cx,
	          items = _props.items,
	          selectedItem = _props.selectedItem;
	
	
	      return _react2.default.createElement(
	        'select',
	        {
	          className: cx('select'),
	          value: selectedItem,
	          onChange: this.onChange
	        },
	        items.map(function (item) {
	          return _react2.default.createElement(
	            'option',
	            {
	              className: cx('option'),
	              key: (0, _has3.default)(item, 'key') ? item.key : item.value,
	              disabled: item.disabled,
	              value: item.value
	            },
	            (0, _has3.default)(item, 'label') ? item.label : item.value
	          );
	        })
	      );
	    }
	  }]);
	
	  return Select;
	}(_react.Component);
	
	Select.propTypes = {
	  cx: _propTypes2.default.func.isRequired,
	  onSelect: _propTypes2.default.func.isRequired,
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
	
	    key: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	    label: _propTypes2.default.string,
	    disabled: _propTypes2.default.bool
	  })).isRequired,
	  selectedItem: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired
	};
	exports.default = Select;

/***/ }),
/* 1010 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _InfiniteHits = __webpack_require__(1011);
	
	var _InfiniteHits2 = _interopRequireDefault(_InfiniteHits);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Displays an infinite list of hits along with a **load more** button.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name InfiniteHits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-InfiniteHits - the root div of the widget
	 * @themeKey ais-InfiniteHits-list - the list of hits
	 * @themeKey ais-InfiniteHits-item - the hit list item
	 * @themeKey ais-InfiniteHits-loadMore - the button used to display more results
	 * @themeKey ais-InfiniteHits-loadMore--disabled - the disabled button used to display more results
	 * @translationKey loadMore - the label of load more button
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, InfiniteHits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <InfiniteHits />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectInfiniteHits)(_InfiniteHits2.default);

/***/ }),
/* 1011 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('InfiniteHits');
	
	var InfiniteHits = function (_Component) {
	  _inherits(InfiniteHits, _Component);
	
	  function InfiniteHits() {
	    _classCallCheck(this, InfiniteHits);
	
	    return _possibleConstructorReturn(this, (InfiniteHits.__proto__ || Object.getPrototypeOf(InfiniteHits)).apply(this, arguments));
	  }
	
	  _createClass(InfiniteHits, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          HitComponent = _props.hitComponent,
	          hits = _props.hits,
	          hasMore = _props.hasMore,
	          refine = _props.refine,
	          translate = _props.translate,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(
	          'ul',
	          { className: cx('list') },
	          hits.map(function (hit) {
	            return _react2.default.createElement(
	              'li',
	              { key: hit.objectID, className: cx('item') },
	              _react2.default.createElement(HitComponent, { hit: hit })
	            );
	          })
	        ),
	        _react2.default.createElement(
	          'button',
	          {
	            className: cx('loadMore', !hasMore && 'loadMore--disabled'),
	            onClick: function onClick() {
	              return refine();
	            },
	            disabled: !hasMore
	          },
	          translate('loadMore')
	        )
	      );
	    }
	  }]);
	
	  return InfiniteHits;
	}(_react.Component);
	
	InfiniteHits.propTypes = {
	  hits: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
	  hasMore: _propTypes2.default.bool.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string,
	  hitComponent: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
	};
	
	InfiniteHits.defaultProps = {
	  className: '',
	  hitComponent: function hitComponent(hit) {
	    return _react2.default.createElement(
	      'div',
	      {
	        style: {
	          borderBottom: '1px solid #bbb',
	          paddingBottom: '5px',
	          marginBottom: '5px',
	          wordBreak: 'break-all'
	        }
	      },
	      JSON.stringify(hit).slice(0, 100),
	      '...'
	    );
	  }
	};
	
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  loadMore: 'Load more'
	})(InfiniteHits);

/***/ }),
/* 1012 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _Menu = __webpack_require__(1013);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The Menu component displays a menu that lets the user choose a single value for a specific attribute.
	 * @name Menu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @themeKey ais-Menu - the root div of the widget
	 * @themeKey ais-Menu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-Menu-list - the list of all menu items
	 * @themeKey ais-Menu-item - the menu list item
	 * @themeKey ais-Menu-item--selected - the selected menu list item
	 * @themeKey ais-Menu-link - the clickable menu element
	 * @themeKey ais-Menu-label - the label of each item
	 * @themeKey ais-Menu-count - the count of values for each item
	 * @themeKey ais-Menu-noResults - the div displayed when there are no results
	 * @themeKey ais-Menu-showMore - the button used to display more categories
	 * @themeKey ais-Menu-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Menu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Menu attribute="category" />
	 *   </InstantSearch>
	 * );
	 */
	
	var MenuWidget = function MenuWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_Menu2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectMenu)(MenuWidget);

/***/ }),
/* 1013 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _pick2 = __webpack_require__(891);
	
	var _pick3 = _interopRequireDefault(_pick2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _Highlight = __webpack_require__(1002);
	
	var _Highlight2 = _interopRequireDefault(_Highlight);
	
	var _List = __webpack_require__(1000);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _Link = __webpack_require__(993);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('Menu');
	
	var Menu = function (_Component) {
	  _inherits(Menu, _Component);
	
	  function Menu() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Menu);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.renderItem = function (item, resetQuery) {
	      var createURL = _this.props.createURL;
	
	      var label = _this.props.isFromSearch ? _react2.default.createElement(_Highlight2.default, { attribute: 'label', hit: item }) : item.label;
	      return _react2.default.createElement(
	        _Link2.default,
	        {
	          className: cx('link'),
	          onClick: function onClick() {
	            return _this.selectItem(item, resetQuery);
	          },
	          href: createURL(item.value)
	        },
	        _react2.default.createElement(
	          'span',
	          { className: cx('label') },
	          label
	        ),
	        ' ',
	        _react2.default.createElement(
	          'span',
	          { className: cx('count') },
	          item.count
	        )
	      );
	    }, _this.selectItem = function (item, resetQuery) {
	      resetQuery();
	      _this.props.refine(item.value);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Menu, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_List2.default, _extends({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick3.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className'])));
	    }
	  }]);
	
	  return Menu;
	}(_react.Component);
	
	Menu.propTypes = {
	  translate: _propTypes2.default.func.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  searchForItems: _propTypes2.default.func.isRequired,
	  searchable: _propTypes2.default.bool,
	  createURL: _propTypes2.default.func.isRequired,
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    label: _propTypes2.default.string.isRequired,
	    value: _propTypes2.default.string.isRequired,
	    count: _propTypes2.default.number.isRequired,
	    isRefined: _propTypes2.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes2.default.bool.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  showMore: _propTypes2.default.bool,
	  limit: _propTypes2.default.number,
	  showMoreLimit: _propTypes2.default.number,
	  transformItems: _propTypes2.default.func,
	  className: _propTypes2.default.string
	};
	Menu.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(Menu);

/***/ }),
/* 1014 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _MenuSelect = __webpack_require__(1015);
	
	var _MenuSelect2 = _interopRequireDefault(_MenuSelect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The MenuSelect component displays a select that lets the user choose a single value for a specific attribute.
	 * @name MenuSelect
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-MenuSelect - the root div of the widget
	 * @themeKey ais-MenuSelect-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-MenuSelect-select - the `<select>`
	 * @themeKey ais-MenuSelect-option - the select `<option>`
	 * @translationkey seeAllOption - The label of the option to select to remove the refinement
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, MenuSelect } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <MenuSelect attribute="category" />
	 *   </InstantSearch>
	 * );
	 */
	
	var MenuSelectWidget = function MenuSelectWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_MenuSelect2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectMenu)(MenuSelectWidget);

/***/ }),
/* 1015 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _find2 = __webpack_require__(610);
	
	var _find3 = _interopRequireDefault(_find2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('MenuSelect');
	
	var MenuSelect = function (_Component) {
	  _inherits(MenuSelect, _Component);
	
	  function MenuSelect() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, MenuSelect);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuSelect.__proto__ || Object.getPrototypeOf(MenuSelect)).call.apply(_ref, [this].concat(args))), _this), _this.handleSelectChange = function (_ref2) {
	      var value = _ref2.target.value;
	
	      _this.props.refine(value === 'ais__see__all__option' ? '' : value);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(MenuSelect, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          canRefine = _props.canRefine,
	          translate = _props.translate,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        _react2.default.createElement(
	          'select',
	          {
	            value: this.selectedValue,
	            onChange: this.handleSelectChange,
	            className: cx('select')
	          },
	          _react2.default.createElement(
	            'option',
	            { value: 'ais__see__all__option', className: cx('option') },
	            translate('seeAllOption')
	          ),
	          items.map(function (item) {
	            return _react2.default.createElement(
	              'option',
	              {
	                key: item.value,
	                value: item.value,
	                className: cx('option')
	              },
	              item.label,
	              ' (',
	              item.count,
	              ')'
	            );
	          })
	        )
	      );
	    }
	  }, {
	    key: 'selectedValue',
	    get: function get() {
	      var _ref3 = (0, _find3.default)(this.props.items, { isRefined: true }) || {
	        value: 'ais__see__all__option'
	      },
	          value = _ref3.value;
	
	      return value;
	    }
	  }]);
	
	  return MenuSelect;
	}(_react.Component);
	
	MenuSelect.propTypes = {
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    label: _propTypes2.default.string.isRequired,
	    value: _propTypes2.default.string.isRequired,
	    count: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
	    isRefined: _propTypes2.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	MenuSelect.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  seeAllOption: 'See all'
	})(MenuSelect);

/***/ }),
/* 1016 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _NumericMenu = __webpack_require__(1017);
	
	var _NumericMenu2 = _interopRequireDefault(_NumericMenu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * NumericMenu is a widget used for selecting the range value of a numeric attribute.
	 * @name NumericMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the format "min:max".
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-NumericMenu - the root div of the widget
	 * @themeKey ais-NumericMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-NumericMenu-list - the list of all refinement items
	 * @themeKey ais-NumericMenu-item - the refinement list item
	 * @themeKey ais-NumericMenu-item--selected - the selected refinement list item
	 * @themeKey ais-NumericMenu-label - the label of each refinement item
	 * @themeKey ais-NumericMenu-radio - the radio input of each refinement item
	 * @themeKey ais-NumericMenu-labelText - the label text of each refinement item
	 * @translationkey all - The label of the largest range added automatically by react instantsearch
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, NumericMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <NumericMenu
	 *       attribute="price"
	 *       items={[
	 *         { end: 10, label: '< $10' },
	 *         { start: 10, end: 100, label: '$10 - $100' },
	 *         { start: 100, end: 500, label: '$100 - $500' },
	 *         { start: 500, label: '> $500' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	var NumericMenuWidget = function NumericMenuWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_NumericMenu2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectNumericMenu)(NumericMenuWidget);

/***/ }),
/* 1017 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _List = __webpack_require__(1000);
	
	var _List2 = _interopRequireDefault(_List);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('NumericMenu');
	
	var NumericMenu = function (_Component) {
	  _inherits(NumericMenu, _Component);
	
	  function NumericMenu() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, NumericMenu);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NumericMenu.__proto__ || Object.getPrototypeOf(NumericMenu)).call.apply(_ref, [this].concat(args))), _this), _this.renderItem = function (item) {
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          translate = _this$props.translate;
	
	
	      return _react2.default.createElement(
	        'label',
	        { className: cx('label') },
	        _react2.default.createElement('input', {
	          className: cx('radio'),
	          type: 'radio',
	          checked: item.isRefined,
	          disabled: item.noRefinement,
	          onChange: function onChange() {
	            return refine(item.value);
	          }
	        }),
	        _react2.default.createElement(
	          'span',
	          { className: cx('labelText') },
	          item.value === '' ? translate('all') : item.label
	        )
	      );
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(NumericMenu, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          canRefine = _props.canRefine,
	          className = _props.className;
	
	
	      return _react2.default.createElement(_List2.default, {
	        renderItem: this.renderItem,
	        showMore: false,
	        canRefine: canRefine,
	        cx: cx,
	        items: items.map(function (item) {
	          return _extends({}, item, { key: item.value });
	        }),
	        className: className
	      });
	    }
	  }]);
	
	  return NumericMenu;
	}(_react.Component);
	
	NumericMenu.propTypes = {
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    label: _propTypes2.default.node.isRequired,
	    value: _propTypes2.default.string.isRequired,
	    isRefined: _propTypes2.default.bool.isRequired,
	    noRefinement: _propTypes2.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	NumericMenu.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  all: 'All'
	})(NumericMenu);

/***/ }),
/* 1018 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _Pagination = __webpack_require__(1019);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The Pagination widget displays a simple pagination system allowing the user to
	 * change the current page.
	 * @name Pagination
	 * @kind widget
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @themeKey ais-Pagination - the root div of the widget
	 * @themeKey ais-Pagination--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Pagination-list - the list of all pagination items
	 * @themeKey ais-Pagination-list--noRefinement - the list of all pagination items when there is no refinement
	 * @themeKey ais-Pagination-item - the pagination list item
	 * @themeKey ais-Pagination-item--firstPage - the "first" pagination list item
	 * @themeKey ais-Pagination-item--lastPage - the "last" pagination list item
	 * @themeKey ais-Pagination-item--previousPage - the "previous" pagination list item
	 * @themeKey ais-Pagination-item--nextPage - the "next" pagination list item
	 * @themeKey ais-Pagination-item--page - the "page" pagination list item
	 * @themeKey ais-Pagination-item--selected - the selected pagination list item
	 * @themeKey ais-Pagination-item--disabled - the disabled pagination list item
	 * @themeKey ais-Pagination-link - the pagination clickable element
	 * @translationKey previous - Label value for the previous page link
	 * @translationKey next - Label value for the next page link
	 * @translationKey first - Label value for the first page link
	 * @translationKey last - Label value for the last page link
	 * @translationkey page - Label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @translationKey ariaPrevious - Accessibility label value for the previous page link
	 * @translationKey ariaNext - Accessibility label value for the next page link
	 * @translationKey ariaFirst - Accessibility label value for the first page link
	 * @translationKey ariaLast - Accessibility label value for the last page link
	 * @translationkey ariaPage - Accessibility label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Pagination } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Pagination />
	 *   </InstantSearch>
	 * );
	 */
	
	var PaginationWidget = function PaginationWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_Pagination2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectPagination)(PaginationWidget);

/***/ }),
/* 1019 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _range2 = __webpack_require__(1020);
	
	var _range3 = _interopRequireDefault(_range2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _LinkList = __webpack_require__(1023);
	
	var _LinkList2 = _interopRequireDefault(_LinkList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('Pagination');
	
	// Determines the size of the widget (the number of pages displayed - that the user can directly click on)
	function calculateSize(padding, maxPages) {
	  return Math.min(2 * padding + 1, maxPages);
	}
	
	function calculatePaddingLeft(currentPage, padding, maxPages, size) {
	  if (currentPage <= padding) {
	    return currentPage;
	  }
	
	  if (currentPage >= maxPages - padding) {
	    return size - (maxPages - currentPage);
	  }
	
	  return padding + 1;
	}
	
	// Retrieve the correct page range to populate the widget
	function getPages(currentPage, maxPages, padding) {
	  var size = calculateSize(padding, maxPages);
	  // If the widget size is equal to the max number of pages, return the entire page range
	  if (size === maxPages) return (0, _range3.default)(1, maxPages + 1);
	
	  var paddingLeft = calculatePaddingLeft(currentPage, padding, maxPages, size);
	  var paddingRight = size - paddingLeft;
	
	  var first = currentPage - paddingLeft;
	  var last = currentPage + paddingRight;
	  return (0, _range3.default)(first + 1, last + 1);
	}
	
	var Pagination = function (_Component) {
	  _inherits(Pagination, _Component);
	
	  function Pagination() {
	    _classCallCheck(this, Pagination);
	
	    return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
	  }
	
	  _createClass(Pagination, [{
	    key: 'getItem',
	    value: function getItem(modifier, translationKey, value) {
	      var _props = this.props,
	          nbPages = _props.nbPages,
	          totalPages = _props.totalPages,
	          translate = _props.translate;
	
	      return {
	        key: modifier + '.' + value,
	        modifier: modifier,
	        disabled: value < 1 || value >= Math.min(totalPages, nbPages),
	        label: translate(translationKey, value),
	        value: value,
	        ariaLabel: translate('aria' + (0, _utils.capitalize)(translationKey), value)
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          ListComponent = _props2.listComponent,
	          nbPages = _props2.nbPages,
	          totalPages = _props2.totalPages,
	          currentRefinement = _props2.currentRefinement,
	          padding = _props2.padding,
	          showFirst = _props2.showFirst,
	          showPrevious = _props2.showPrevious,
	          showNext = _props2.showNext,
	          showLast = _props2.showLast,
	          refine = _props2.refine,
	          createURL = _props2.createURL,
	          canRefine = _props2.canRefine,
	          translate = _props2.translate,
	          className = _props2.className,
	          otherProps = _objectWithoutProperties(_props2, ['listComponent', 'nbPages', 'totalPages', 'currentRefinement', 'padding', 'showFirst', 'showPrevious', 'showNext', 'showLast', 'refine', 'createURL', 'canRefine', 'translate', 'className']);
	
	      var maxPages = Math.min(nbPages, totalPages);
	      var lastPage = maxPages;
	
	      var items = [];
	      if (showFirst) {
	        items.push({
	          key: 'first',
	          modifier: 'item--firstPage',
	          disabled: currentRefinement === 1,
	          label: translate('first'),
	          value: 1,
	          ariaLabel: translate('ariaFirst')
	        });
	      }
	      if (showPrevious) {
	        items.push({
	          key: 'previous',
	          modifier: 'item--previousPage',
	          disabled: currentRefinement === 1,
	          label: translate('previous'),
	          value: currentRefinement - 1,
	          ariaLabel: translate('ariaPrevious')
	        });
	      }
	
	      items = items.concat(getPages(currentRefinement, maxPages, padding).map(function (value) {
	        return {
	          key: value,
	          modifier: 'item--page',
	          label: translate('page', value),
	          value: value,
	          selected: value === currentRefinement,
	          ariaLabel: translate('ariaPage', value)
	        };
	      }));
	      if (showNext) {
	        items.push({
	          key: 'next',
	          modifier: 'item--nextPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('next'),
	          value: currentRefinement + 1,
	          ariaLabel: translate('ariaNext')
	        });
	      }
	      if (showLast) {
	        items.push({
	          key: 'last',
	          modifier: 'item--lastPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('last'),
	          value: lastPage,
	          ariaLabel: translate('ariaLast')
	        });
	      }
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        _react2.default.createElement(ListComponent, _extends({}, otherProps, {
	          cx: cx,
	          items: items,
	          onSelect: refine,
	          createURL: createURL,
	          canRefine: canRefine
	        }))
	      );
	    }
	  }]);
	
	  return Pagination;
	}(_react.Component);
	
	Pagination.propTypes = {
	  nbPages: _propTypes2.default.number.isRequired,
	  currentRefinement: _propTypes2.default.number.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  createURL: _propTypes2.default.func.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	
	  translate: _propTypes2.default.func.isRequired,
	  listComponent: _propTypes2.default.func,
	
	  showFirst: _propTypes2.default.bool,
	  showPrevious: _propTypes2.default.bool,
	  showNext: _propTypes2.default.bool,
	  showLast: _propTypes2.default.bool,
	  padding: _propTypes2.default.number,
	  totalPages: _propTypes2.default.number,
	  className: _propTypes2.default.string
	};
	Pagination.defaultProps = {
	  listComponent: _LinkList2.default,
	  showFirst: true,
	  showPrevious: true,
	  showNext: true,
	  showLast: false,
	  padding: 3,
	  totalPages: Infinity,
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  previous: '‹',
	  next: '›',
	  first: '«',
	  last: '»',
	  page: function page(currentRefinement) {
	    return currentRefinement.toString();
	  },
	  ariaPrevious: 'Previous page',
	  ariaNext: 'Next page',
	  ariaFirst: 'First page',
	  ariaLast: 'Last page',
	  ariaPage: function ariaPage(currentRefinement) {
	    return 'Page ' + currentRefinement.toString();
	  }
	})(Pagination);

/***/ }),
/* 1020 */
/***/ (function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(1021);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ }),
/* 1021 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(1022),
	    isIterateeCall = __webpack_require__(813),
	    toFinite = __webpack_require__(721);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ }),
/* 1022 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ }),
/* 1023 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _has2 = __webpack_require__(904);
	
	var _has3 = _interopRequireDefault(_has2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _Link = __webpack_require__(993);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var LinkList = function (_Component) {
	  _inherits(LinkList, _Component);
	
	  function LinkList() {
	    _classCallCheck(this, LinkList);
	
	    return _possibleConstructorReturn(this, (LinkList.__proto__ || Object.getPrototypeOf(LinkList)).apply(this, arguments));
	  }
	
	  _createClass(LinkList, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          cx = _props.cx,
	          createURL = _props.createURL,
	          items = _props.items,
	          onSelect = _props.onSelect,
	          canRefine = _props.canRefine;
	
	      return _react2.default.createElement(
	        'ul',
	        { className: cx('list', !canRefine && 'list--noRefinement') },
	        items.map(function (item) {
	          return _react2.default.createElement(
	            'li',
	            {
	              key: (0, _has3.default)(item, 'key') ? item.key : item.value,
	              className: cx('item', item.selected && !item.disabled && 'item--selected', item.disabled && 'item--disabled', item.modifier)
	            },
	            item.disabled ? _react2.default.createElement(
	              'span',
	              { className: cx('link') },
	              (0, _has3.default)(item, 'label') ? item.label : item.value
	            ) : _react2.default.createElement(
	              _Link2.default,
	              {
	                className: cx('link', item.selected && 'link--selected'),
	                'aria-label': item.ariaLabel,
	                href: createURL(item.value),
	                onClick: function onClick() {
	                  return onSelect(item.value);
	                }
	              },
	              (0, _has3.default)(item, 'label') ? item.label : item.value
	            )
	          );
	        })
	      );
	    }
	  }]);
	
	  return LinkList;
	}(_react.Component);
	
	LinkList.propTypes = {
	  cx: _propTypes2.default.func.isRequired,
	  createURL: _propTypes2.default.func.isRequired,
	
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.object]).isRequired,
	
	    key: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	
	    label: _propTypes2.default.node,
	
	    modifier: _propTypes2.default.string,
	    ariaLabel: _propTypes2.default.string,
	    disabled: _propTypes2.default.bool
	  })),
	  onSelect: _propTypes2.default.func.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired
	};
	exports.default = LinkList;

/***/ }),
/* 1024 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Panel = __webpack_require__(1025);
	
	var _Panel2 = _interopRequireDefault(_Panel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The Panel widget wraps other widgets in a consistent panel design.
	 * It also reacts, indicates and set CSS classes when widgets are no more relevant for refining.
	 * E.g. when a RefinementList becomes empty because of the current search results.
	 *
	 * @name Panel
	 * @kind widget
	 * @propType {string} [className] - Adds a className on the root element.
	 * @propType {node} [header] - Adds a header to the widget.
	 * @propType {node} [footer] - Adds a footer to the widget.
	 * @themeKey ais-Panel - the root div of the Panel
	 * @themeKey ais-Panel--noRefinement - the root div of the Panel without refinement
	 * @themeKey ais-Panel-header - the header of the Panel (optional)
	 * @themeKey ais-Panel-body - the body of the Panel
	 * @themeKey ais-Panel-footer - the footer of the Panel (optional)
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Panel, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Panel header="Category">
	 *       <RefinementList attribute="category" />
	 *     </Panel>
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = _Panel2.default;

/***/ }),
/* 1025 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('Panel');
	
	var Panel = function (_Component) {
	  _inherits(Panel, _Component);
	
	  function Panel() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Panel);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Panel.__proto__ || Object.getPrototypeOf(Panel)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      canRefine: true
	    }, _this.setCanRefine = function (nextCanRefine) {
	      _this.setState({ canRefine: nextCanRefine });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Panel, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        setCanRefine: this.setCanRefine
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          header = _props.header,
	          footer = _props.footer;
	      var canRefine = this.state.canRefine;
	
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        header && _react2.default.createElement(
	          'div',
	          { className: cx('header') },
	          header
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: cx('body') },
	          children
	        ),
	        footer && _react2.default.createElement(
	          'div',
	          { className: cx('footer') },
	          footer
	        )
	      );
	    }
	  }]);
	
	  return Panel;
	}(_react.Component);
	
	Panel.propTypes = {
	  children: _propTypes2.default.node.isRequired,
	  className: _propTypes2.default.string,
	  header: _propTypes2.default.node,
	  footer: _propTypes2.default.node
	};
	Panel.childContextTypes = {
	  setCanRefine: _propTypes2.default.func.isRequired
	};
	Panel.defaultProps = {
	  className: '',
	  header: null,
	  footer: null
	};
	exports.default = Panel;

/***/ }),
/* 1026 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PoweredBy = __webpack_require__(1027);
	
	var _PoweredBy2 = _interopRequireDefault(_PoweredBy);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * PoweredBy displays an Algolia logo.
	 *
	 * Algolia requires that you use this widget if you are on a [community or free plan](https://www.algolia.com/pricing).
	 * @name PoweredBy
	 * @kind widget
	 * @themeKey ais-PoweredBy - the root div of the widget
	 * @themeKey ais-PoweredBy-text - the text of the widget
	 * @themeKey ais-PoweredBy-link - the link of the logo
	 * @themeKey ais-PoweredBy-logo - the logo of the widget
	 * @translationKey searchBy - Label value for the powered by
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, PoweredBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <PoweredBy />
	 *   </InstantSearch>
	 * );
	 */
	exports.default = (0, _reactInstantsearchCore.connectPoweredBy)(_PoweredBy2.default);

/***/ }),
/* 1027 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('PoweredBy');
	
	/* eslint-disable max-len */
	var AlgoliaLogo = function AlgoliaLogo() {
	  return _react2.default.createElement(
	    'svg',
	    {
	      xmlns: 'http://www.w3.org/2000/svg',
	      baseProfile: 'basic',
	      viewBox: '0 0 1366 362',
	      width: '100',
	      height: '27',
	      className: cx('logo')
	    },
	    _react2.default.createElement(
	      'linearGradient',
	      {
	        id: 'g',
	        x1: '428.258',
	        x2: '434.145',
	        y1: '404.15',
	        y2: '409.85',
	        gradientUnits: 'userSpaceOnUse',
	        gradientTransform: 'matrix(94.045 0 0 -94.072 -40381.527 38479.52)'
	      },
	      _react2.default.createElement('stop', { offset: '0', stopColor: '#00AEFF' }),
	      _react2.default.createElement('stop', { offset: '1', stopColor: '#3369E7' })
	    ),
	    _react2.default.createElement('path', {
	      d: 'M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z',
	      fill: 'url(#g)'
	    }),
	    _react2.default.createElement('path', {
	      d: 'M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z',
	      fill: '#FFFFFF'
	    }),
	    _react2.default.createElement('path', {
	      d: 'M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z',
	      fill: '#182359'
	    })
	  );
	};
	/* eslint-enable max-len */
	
	var PoweredBy = function (_Component) {
	  _inherits(PoweredBy, _Component);
	
	  function PoweredBy() {
	    _classCallCheck(this, PoweredBy);
	
	    return _possibleConstructorReturn(this, (PoweredBy.__proto__ || Object.getPrototypeOf(PoweredBy)).apply(this, arguments));
	  }
	
	  _createClass(PoweredBy, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          url = _props.url,
	          translate = _props.translate,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(
	          'span',
	          { className: cx('text') },
	          translate('searchBy')
	        ),
	        ' ',
	        _react2.default.createElement(
	          'a',
	          {
	            href: url,
	            target: '_blank',
	            className: cx('link'),
	            'aria-label': 'Algolia'
	          },
	          _react2.default.createElement(AlgoliaLogo, null)
	        )
	      );
	    }
	  }]);
	
	  return PoweredBy;
	}(_react.Component);
	
	PoweredBy.propTypes = {
	  url: _propTypes2.default.string.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  searchBy: 'Search by'
	})(PoweredBy);

/***/ }),
/* 1028 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _RangeInput = __webpack_require__(1029);
	
	var _RangeInput2 = _interopRequireDefault(_RangeInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * RangeInput allows a user to select a numeric range using a minimum and maximum input.
	 * @name RangeInput
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @themeKey ais-RangeInput - the root div of the widget
	 * @themeKey ais-RangeInput-form - the wrapping form
	 * @themeKey ais-RangeInput-label - the label wrapping inputs
	 * @themeKey ais-RangeInput-input - the input (number)
	 * @themeKey ais-RangeInput-input--min - the minimum input
	 * @themeKey ais-RangeInput-input--max - the maximum input
	 * @themeKey ais-RangeInput-separator - the separator word used between the two inputs
	 * @themeKey ais-RangeInput-button - the submit button
	 * @translationKey submit - Label value for the submit button
	 * @translationKey separator - Label value for the input separator
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RangeInput } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <RangeInput attribute="price" />
	 *   </InstantSearch>
	 * );
	 */
	
	var RangeInputWidget = function RangeInputWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_RangeInput2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectRange)(RangeInputWidget);

/***/ }),
/* 1029 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.RawRangeInput = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('RangeInput');
	
	var RawRangeInput = exports.RawRangeInput = function (_Component) {
	  _inherits(RawRangeInput, _Component);
	
	  function RawRangeInput(props) {
	    _classCallCheck(this, RawRangeInput);
	
	    var _this = _possibleConstructorReturn(this, (RawRangeInput.__proto__ || Object.getPrototypeOf(RawRangeInput)).call(this, props));
	
	    _this.onSubmit = function (e) {
	      e.preventDefault();
	
	      _this.props.refine({
	        min: _this.state.from,
	        max: _this.state.to
	      });
	    };
	
	    _this.state = _this.normalizeStateForRendering(props);
	    return _this;
	  }
	
	  _createClass(RawRangeInput, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      // In react@16.0.0 the call to setState on the inputs trigger this lifecycle hook
	      // because the context has changed (for react). I don't think that the bug is related
	      // to react because I failed to reproduce it with a simple hierarchy of components.
	      // The workaround here is to check the differences between previous & next props in order
	      // to avoid to override current state when values are not yet refined. In the react documentation,
	      // they DON'T categorically say that setState never run componentWillReceiveProps.
	      // see: https://reactjs.org/docs/react-component.html#componentwillreceiveprops
	
	      if (nextProps.canRefine && (this.props.canRefine !== nextProps.canRefine || this.props.currentRefinement.min !== nextProps.currentRefinement.min || this.props.currentRefinement.max !== nextProps.currentRefinement.max)) {
	        this.setState(this.normalizeStateForRendering(nextProps));
	      }
	    }
	  }, {
	    key: 'normalizeStateForRendering',
	    value: function normalizeStateForRendering(props) {
	      var canRefine = props.canRefine,
	          rangeMin = props.min,
	          rangeMax = props.max;
	      var _props$currentRefinem = props.currentRefinement,
	          valueMin = _props$currentRefinem.min,
	          valueMax = _props$currentRefinem.max;
	
	
	      return {
	        from: canRefine && valueMin !== undefined && valueMin !== rangeMin ? valueMin : '',
	        to: canRefine && valueMax !== undefined && valueMax !== rangeMax ? valueMax : ''
	      };
	    }
	  }, {
	    key: 'normalizeRangeForRendering',
	    value: function normalizeRangeForRendering(_ref) {
	      var canRefine = _ref.canRefine,
	          min = _ref.min,
	          max = _ref.max;
	
	      var hasMin = min !== undefined;
	      var hasMax = max !== undefined;
	
	      return {
	        min: canRefine && hasMin && hasMax ? min : '',
	        max: canRefine && hasMin && hasMax ? max : ''
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _state = this.state,
	          from = _state.from,
	          to = _state.to;
	      var _props = this.props,
	          precision = _props.precision,
	          translate = _props.translate,
	          canRefine = _props.canRefine,
	          className = _props.className;
	
	      var _normalizeRangeForRen = this.normalizeRangeForRendering(this.props),
	          min = _normalizeRangeForRen.min,
	          max = _normalizeRangeForRen.max;
	
	      var step = 1 / Math.pow(10, precision);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        _react2.default.createElement(
	          'form',
	          { className: cx('form'), onSubmit: this.onSubmit },
	          _react2.default.createElement('input', {
	            className: cx('input', 'input--min'),
	            type: 'number',
	            min: min,
	            max: max,
	            value: from,
	            step: step,
	            placeholder: min,
	            disabled: !canRefine,
	            onChange: function onChange(e) {
	              return _this2.setState({ from: e.currentTarget.value });
	            }
	          }),
	          _react2.default.createElement(
	            'span',
	            { className: cx('separator') },
	            translate('separator')
	          ),
	          _react2.default.createElement('input', {
	            className: cx('input', 'input--max'),
	            type: 'number',
	            min: min,
	            max: max,
	            value: to,
	            step: step,
	            placeholder: max,
	            disabled: !canRefine,
	            onChange: function onChange(e) {
	              return _this2.setState({ to: e.currentTarget.value });
	            }
	          }),
	          _react2.default.createElement(
	            'button',
	            { className: cx('submit'), type: 'submit' },
	            translate('submit')
	          )
	        )
	      );
	    }
	  }]);
	
	  return RawRangeInput;
	}(_react.Component);
	
	RawRangeInput.propTypes = {
	  canRefine: _propTypes2.default.bool.isRequired,
	  precision: _propTypes2.default.number.isRequired,
	  translate: _propTypes2.default.func.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  min: _propTypes2.default.number,
	  max: _propTypes2.default.number,
	  currentRefinement: _propTypes2.default.shape({
	    min: _propTypes2.default.number,
	    max: _propTypes2.default.number
	  }),
	  className: _propTypes2.default.string
	};
	RawRangeInput.defaultProps = {
	  currentRefinement: {},
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  submit: 'ok',
	  separator: 'to'
	})(RawRangeInput);

/***/ }),
/* 1030 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Since a lot of sliders already exist, we did not include one by default.
	 * However you can easily connect React InstantSearch to an existing one
	 * using the [connectRange connector](connectors/connectRange.html).
	 *
	 * @name RangeSlider
	 * @requirements To connect any slider to Algolia, the underlying attribute used must be holding numerical values.
	 * @kind widget
	 * @example
	 *
	 * // Here's an example showing how to connect the airbnb rheostat slider to React InstantSearch using the
	 * // range connector
	 import React, {Component} from 'react';
	import PropTypes from 'prop-types';
	import { connectRange } from 'react-instantsearch-dom';
	import Rheostat from 'rheostat';
	
	class Range extends React.Component {
	  static propTypes = {
	    min: PropTypes.number,
	    max: PropTypes.number,
	    currentRefinement: PropTypes.object,
	    refine: PropTypes.func.isRequired,
	    canRefine: PropTypes.bool.isRequired
	  };
	
	  state = { currentValues: { min: this.props.min, max: this.props.max } };
	
	  componentWillReceiveProps(sliderState) {
	    if (sliderState.canRefine) {
	      this.setState({
	        currentValues: {
	          min: sliderState.currentRefinement.min,
	          max: sliderState.currentRefinement.max
	        }
	      });
	    }
	  }
	
	  onValuesUpdated = sliderState => {
	    this.setState({
	      currentValues: { min: sliderState.values[0], max: sliderState.values[1] }
	    });
	  };
	
	  onChange = sliderState => {
	    if (
	      this.props.currentRefinement.min !== sliderState.values[0] ||
	      this.props.currentRefinement.max !== sliderState.values[1]
	    ) {
	      this.props.refine({
	        min: sliderState.values[0],
	        max: sliderState.values[1]
	      });
	    }
	  };
	
	  render() {
	    const { min, max, currentRefinement } = this.props;
	    const { currentValues } = this.state;
	    return min !== max ? (
	      <div>
	        <Rheostat
	          className="ais-RangeSlider"
	          min={min}
	          max={max}
	          values={[currentRefinement.min, currentRefinement.max]}
	          onChange={this.onChange}
	          onValuesUpdated={this.onValuesUpdated}
	        />
	        <div style={{ display: "flex", justifyContent: "space-between" }}>
	          <div>{currentValues.min}</div>
	          <div>{currentValues.max}</div>
	        </div>
	      </div>
	    ) : null;
	  }
	}
	
	const ConnectedRange = connectRange(Range);
	*/
	
	exports.default = function () {
	  return _react2.default.createElement(
	    "div",
	    null,
	    "We do not provide any Slider, see the documentation to learn how to connect one easily:",
	    _react2.default.createElement(
	      "a",
	      {
	        target: "_blank",
	        rel: "noopener noreferrer",
	        href: "https://community.algolia.com/react-instantsearch/widgets/RangeSlider.html"
	      },
	      "https://community.algolia.com/react-instantsearch/widgets/RangeSlider.html"
	    )
	  );
	};

/***/ }),
/* 1031 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _RatingMenu = __webpack_require__(1032);
	
	var _RatingMenu2 = _interopRequireDefault(_RatingMenu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * RatingMenu lets the user refine search results by clicking on stars.
	 *
	 * The stars are based on the selected `attribute`.
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @name RatingMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {number} [min] - Minimum value for the rating. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value for the rating. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the lower bound (end) and the max for the rating.
	 * @themeKey ais-RatingMenu - the root div of the widget
	 * @themeKey ais-RatingMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RatingMenu-list - the list of ratings
	 * @themeKey ais-RatingMenu-list--noRefinement - the list of ratings when there is no refinement
	 * @themeKey ais-RatingMenu-item - the rating list item
	 * @themeKey ais-RatingMenu-item--selected - the selected rating list item
	 * @themeKey ais-RatingMenu-item--disabled - the disabled rating list item
	 * @themeKey ais-RatingMenu-link - the rating clickable item
	 * @themeKey ais-RatingMenu-starIcon - the star icon
	 * @themeKey ais-RatingMenu-starIcon--full - the filled star icon
	 * @themeKey ais-RatingMenu-starIcon--empty - the empty star icon
	 * @themeKey ais-RatingMenu-label - the label used after the stars
	 * @themeKey ais-RatingMenu-count - the count of ratings for a specific item
	 * @translationKey ratingLabel - Label value for the rating link
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RatingMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <RatingMenu attribute="rating" />
	 *   </InstantSearch>
	 * );
	 */
	
	var RatingMenuWidget = function RatingMenuWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_RatingMenu2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectRange)(RatingMenuWidget);

/***/ }),
/* 1032 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _fill2 = __webpack_require__(1033);
	
	var _fill3 = _interopRequireDefault(_fill2);
	
	var _find2 = __webpack_require__(610);
	
	var _find3 = _interopRequireDefault(_find2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('RatingMenu');
	
	var RatingMenu = function (_Component) {
	  _inherits(RatingMenu, _Component);
	
	  function RatingMenu() {
	    _classCallCheck(this, RatingMenu);
	
	    return _possibleConstructorReturn(this, (RatingMenu.__proto__ || Object.getPrototypeOf(RatingMenu)).apply(this, arguments));
	  }
	
	  _createClass(RatingMenu, [{
	    key: 'onClick',
	    value: function onClick(min, max, e) {
	      e.preventDefault();
	      e.stopPropagation();
	      if (min === this.props.currentRefinement.min && max === this.props.currentRefinement.max) {
	        this.props.refine({ min: this.props.min, max: this.props.max });
	      } else {
	        this.props.refine({ min: min, max: max });
	      }
	    }
	  }, {
	    key: 'buildItem',
	    value: function buildItem(_ref) {
	      var max = _ref.max,
	          lowerBound = _ref.lowerBound,
	          count = _ref.count,
	          translate = _ref.translate,
	          createURL = _ref.createURL,
	          isLastSelectableItem = _ref.isLastSelectableItem;
	
	      var disabled = !count;
	      var isCurrentMinLower = this.props.currentRefinement.min < lowerBound;
	      var selected = isLastSelectableItem && isCurrentMinLower || !disabled && lowerBound === this.props.currentRefinement.min && max === this.props.currentRefinement.max;
	
	      var icons = [];
	      var rating = 0;
	      for (var icon = 0; icon < max; icon++) {
	        if (icon < lowerBound) {
	          rating++;
	        }
	        icons.push([_react2.default.createElement(
	          'svg',
	          {
	            key: icon,
	            className: cx('starIcon', icon >= lowerBound ? 'starIcon--empty' : 'starIcon--full'),
	            'aria-hidden': 'true',
	            width: '24',
	            height: '24'
	          },
	          _react2.default.createElement('use', {
	            xlinkHref: '#' + cx(icon >= lowerBound ? 'starEmptySymbol' : 'starSymbol')
	          })
	        ), ' ']);
	      }
	
	      // The last item of the list (the default item), should not
	      // be clickable if it is selected.
	      var isLastAndSelect = isLastSelectableItem && selected;
	      var onClickHandler = disabled || isLastAndSelect ? {} : {
	        href: createURL({ min: lowerBound, max: max }),
	        onClick: this.onClick.bind(this, lowerBound, max)
	      };
	
	      return _react2.default.createElement(
	        'li',
	        {
	          key: lowerBound,
	          className: cx('item', selected && 'item--selected', disabled && 'item--disabled')
	        },
	        _react2.default.createElement(
	          'a',
	          _extends({
	            className: cx('link'),
	            'aria-label': '' + rating + translate('ratingLabel')
	          }, onClickHandler),
	          icons,
	          _react2.default.createElement(
	            'span',
	            { className: cx('label'), 'aria-hidden': 'true' },
	            translate('ratingLabel')
	          ),
	          ' ',
	          _react2.default.createElement(
	            'span',
	            { className: cx('count') },
	            count
	          )
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          min = _props.min,
	          max = _props.max,
	          translate = _props.translate,
	          count = _props.count,
	          createURL = _props.createURL,
	          canRefine = _props.canRefine,
	          className = _props.className;
	
	      // min & max are always set when there is a results, otherwise it means
	      // that we don't want to render anything since we don't have any values.
	
	      var limitMin = min !== undefined && min >= 0 ? min : 1;
	      var limitMax = max !== undefined && max >= 0 ? max : 0;
	      var inclusiveLength = limitMax - limitMin + 1;
	      var safeInclusiveLength = Math.max(inclusiveLength, 0);
	
	      var values = count.map(function (item) {
	        return _extends({}, item, { value: parseFloat(item.value) });
	      }).filter(function (item) {
	        return item.value >= limitMin && item.value <= limitMax;
	      });
	
	      var range = (0, _fill3.default)(new Array(safeInclusiveLength), null).map(function (_, index) {
	        var element = (0, _find3.default)(values, function (item) {
	          return item.value === limitMax - index;
	        });
	        var placeholder = { value: limitMax - index, count: 0, total: 0 };
	
	        return element || placeholder;
	      }).reduce(function (acc, item, index) {
	        return acc.concat(_extends({}, item, {
	          total: index === 0 ? item.count : acc[index - 1].total + item.count
	        }));
	      }, []);
	
	      var items = range.map(function (item, index) {
	        return _this2.buildItem({
	          lowerBound: item.value,
	          count: item.total,
	          isLastSelectableItem: range.length - 1 === index,
	          max: limitMax,
	          translate: translate,
	          createURL: createURL
	        });
	      });
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(cx('', !canRefine && '-noRefinement'), className)
	        },
	        _react2.default.createElement(
	          'svg',
	          { xmlns: 'http://www.w3.org/2000/svg', style: { display: 'none' } },
	          _react2.default.createElement(
	            'symbol',
	            { id: cx('starSymbol'), viewBox: '0 0 24 24' },
	            _react2.default.createElement('path', { d: 'M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z' })
	          ),
	          _react2.default.createElement(
	            'symbol',
	            { id: cx('starEmptySymbol'), viewBox: '0 0 24 24' },
	            _react2.default.createElement('path', { d: 'M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z' })
	          )
	        ),
	        _react2.default.createElement(
	          'ul',
	          { className: cx('list', !canRefine && 'list--noRefinement') },
	          items
	        )
	      );
	    }
	  }]);
	
	  return RatingMenu;
	}(_react.Component);
	
	RatingMenu.propTypes = {
	  translate: _propTypes2.default.func.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  createURL: _propTypes2.default.func.isRequired,
	  min: _propTypes2.default.number,
	  max: _propTypes2.default.number,
	  currentRefinement: _propTypes2.default.shape({
	    min: _propTypes2.default.number,
	    max: _propTypes2.default.number
	  }),
	  count: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    value: _propTypes2.default.string,
	    count: _propTypes2.default.number
	  })),
	  canRefine: _propTypes2.default.bool.isRequired,
	  className: _propTypes2.default.string
	};
	RatingMenu.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  ratingLabel: ' & Up'
	})(RatingMenu);

/***/ }),
/* 1033 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFill = __webpack_require__(1034),
	    isIterateeCall = __webpack_require__(813);
	
	/**
	 * Fills elements of `array` with `value` from `start` up to, but not
	 * including, `end`.
	 *
	 * **Note:** This method mutates `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.2.0
	 * @category Array
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 * @example
	 *
	 * var array = [1, 2, 3];
	 *
	 * _.fill(array, 'a');
	 * console.log(array);
	 * // => ['a', 'a', 'a']
	 *
	 * _.fill(Array(3), 2);
	 * // => [2, 2, 2]
	 *
	 * _.fill([4, 6, 8, 10], '*', 1, 3);
	 * // => [4, '*', '*', 10]
	 */
	function fill(array, value, start, end) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return [];
	  }
	  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	    start = 0;
	    end = length;
	  }
	  return baseFill(array, value, start, end);
	}
	
	module.exports = fill;


/***/ }),
/* 1034 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(720),
	    toLength = __webpack_require__(1035);
	
	/**
	 * The base implementation of `_.fill` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 */
	function baseFill(array, value, start, end) {
	  var length = array.length;
	
	  start = toInteger(start);
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = (end === undefined || end > length) ? length : toInteger(end);
	  if (end < 0) {
	    end += length;
	  }
	  end = start > end ? 0 : toLength(end);
	  while (start < end) {
	    array[start++] = value;
	  }
	  return array;
	}
	
	module.exports = baseFill;


/***/ }),
/* 1035 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(871),
	    toInteger = __webpack_require__(720);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Converts `value` to an integer suitable for use as the length of an
	 * array-like object.
	 *
	 * **Note:** This method is based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toLength(3.2);
	 * // => 3
	 *
	 * _.toLength(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toLength(Infinity);
	 * // => 4294967295
	 *
	 * _.toLength('3.2');
	 * // => 3
	 */
	function toLength(value) {
	  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	}
	
	module.exports = toLength;


/***/ }),
/* 1036 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _PanelCallbackHandler = __webpack_require__(990);
	
	var _PanelCallbackHandler2 = _interopRequireDefault(_PanelCallbackHandler);
	
	var _RefinementList = __webpack_require__(1037);
	
	var _RefinementList2 = _interopRequireDefault(_RefinementList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The RefinementList component displays a list that let the end user choose multiple values for a specific facet.
	 * @name RefinementList
	 * @kind widget
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximum number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} [defaultRefinement] - the values of the items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-RefinementList - the root div of the widget
	 * @themeKey ais-RefinementList--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RefinementList-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-RefinementList-list - the list of refinement items
	 * @themeKey ais-RefinementList-item - the refinement list item
	 * @themeKey ais-RefinementList-item--selected - the refinement selected list item
	 * @themeKey ais-RefinementList-label - the label of each refinement item
	 * @themeKey ais-RefinementList-checkbox - the checkbox input of each refinement item
	 * @themeKey ais-RefinementList-labelText - the label text of each refinement item
	 * @themeKey ais-RefinementList-count - the count of values for each item
	 * @themeKey ais-RefinementList-noResults - the div displayed when there are no results
	 * @themeKey ais-RefinementList-showMore - the button used to display more categories
	 * @themeKey ais-RefinementList-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <RefinementList attribute="colors" />
	 *   </InstantSearch>
	 * );
	 */
	
	var RefinementListWidget = function RefinementListWidget(props) {
	  return _react2.default.createElement(
	    _PanelCallbackHandler2.default,
	    props,
	    _react2.default.createElement(_RefinementList2.default, props)
	  );
	};
	
	exports.default = (0, _reactInstantsearchCore.connectRefinementList)(RefinementListWidget);

/***/ }),
/* 1037 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _pick2 = __webpack_require__(891);
	
	var _pick3 = _interopRequireDefault(_pick2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	var _Highlight = __webpack_require__(1002);
	
	var _Highlight2 = _interopRequireDefault(_Highlight);
	
	var _List = __webpack_require__(1000);
	
	var _List2 = _interopRequireDefault(_List);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('RefinementList');
	
	var RefinementList = function (_Component) {
	  _inherits(RefinementList, _Component);
	
	  function RefinementList() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, RefinementList);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RefinementList.__proto__ || Object.getPrototypeOf(RefinementList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      query: ''
	    }, _this.selectItem = function (item, resetQuery) {
	      resetQuery();
	      _this.props.refine(item.value);
	    }, _this.renderItem = function (item, resetQuery) {
	      var label = _this.props.isFromSearch ? _react2.default.createElement(_Highlight2.default, { attribute: 'label', hit: item }) : item.label;
	
	      return _react2.default.createElement(
	        'label',
	        { className: cx('label') },
	        _react2.default.createElement('input', {
	          className: cx('checkbox'),
	          type: 'checkbox',
	          checked: item.isRefined,
	          onChange: function onChange() {
	            return _this.selectItem(item, resetQuery);
	          }
	        }),
	        _react2.default.createElement(
	          'span',
	          { className: cx('labelText') },
	          label
	        ),
	        ' ',
	        _react2.default.createElement(
	          'span',
	          { className: cx('count') },
	          item.count.toLocaleString()
	        )
	      );
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(RefinementList, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_List2.default, _extends({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick3.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className']), {
	        query: this.state.query
	      }));
	    }
	  }]);
	
	  return RefinementList;
	}(_react.Component);
	
	RefinementList.propTypes = {
	  translate: _propTypes2.default.func.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  searchForItems: _propTypes2.default.func.isRequired,
	  searchable: _propTypes2.default.bool,
	  createURL: _propTypes2.default.func.isRequired,
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    label: _propTypes2.default.string.isRequired,
	    value: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
	    count: _propTypes2.default.number.isRequired,
	    isRefined: _propTypes2.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes2.default.bool.isRequired,
	  canRefine: _propTypes2.default.bool.isRequired,
	  showMore: _propTypes2.default.bool,
	  limit: _propTypes2.default.number,
	  showMoreLimit: _propTypes2.default.number,
	  transformItems: _propTypes2.default.func,
	  className: _propTypes2.default.string
	};
	RefinementList.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(RefinementList);

/***/ }),
/* 1038 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _ScrollTo = __webpack_require__(1039);
	
	var _ScrollTo2 = _interopRequireDefault(_ScrollTo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The ScrollTo component will make the page scroll to the component wrapped by it when one of the
	 * [search state](guide/Search_state.html) prop is updated. By default when the page number changes,
	 * the scroll goes to the wrapped component.
	 *
	 * @name ScrollTo
	 * @kind widget
	 * @propType {string} [scrollOn="page"] - Widget state key on which to listen for changes.
	 * @themeKey ais-ScrollTo - the root div of the widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ScrollTo, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <ScrollTo>
	 *       <Hits />
	 *     </ScrollTo>
	 *   </InstantSearch>
	 * );
	 */
	exports.default = (0, _reactInstantsearchCore.connectScrollTo)(_ScrollTo2.default);

/***/ }),
/* 1039 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('ScrollTo');
	
	var ScrollTo = function (_Component) {
	  _inherits(ScrollTo, _Component);
	
	  function ScrollTo() {
	    _classCallCheck(this, ScrollTo);
	
	    return _possibleConstructorReturn(this, (ScrollTo.__proto__ || Object.getPrototypeOf(ScrollTo)).apply(this, arguments));
	  }
	
	  _createClass(ScrollTo, [{
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      var _props = this.props,
	          value = _props.value,
	          hasNotChanged = _props.hasNotChanged;
	
	      if (value !== prevProps.value && hasNotChanged) {
	        this.el.scrollIntoView();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      return _react2.default.createElement(
	        'div',
	        { ref: function ref(_ref) {
	            return _this2.el = _ref;
	          }, className: cx('') },
	        this.props.children
	      );
	    }
	  }]);
	
	  return ScrollTo;
	}(_react.Component);
	
	ScrollTo.propTypes = {
	  value: _propTypes2.default.any,
	  children: _propTypes2.default.node,
	  hasNotChanged: _propTypes2.default.bool
	};
	exports.default = ScrollTo;

/***/ }),
/* 1040 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _SearchBox = __webpack_require__(1001);
	
	var _SearchBox2 = _interopRequireDefault(_SearchBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The SearchBox component displays a search box that lets the user search for a specific query.
	 * @name SearchBox
	 * @kind widget
	 * @propType {string[]} [focusShortcuts=['s','/']] - List of keyboard shortcuts that focus the search box. Accepts key names and key codes.
	 * @propType {boolean} [autoFocus=false] - Should the search box be focused on render?
	 * @propType {boolean} [searchAsYouType=true] - Should we search on every change to the query? If you disable this option, new searches will only be triggered by clicking the search button or by pressing the enter key while the search box is focused.
	 * @propType {function} [onSubmit] - Intercept submit event sent from the SearchBox form container.
	 * @propType {function} [onReset] - Listen to `reset` event sent from the SearchBox form container.
	 * @propType {function} [on*] - Listen to any events sent from the search input itself.
	 * @propType {node} [submit] - Change the apparence of the default submit button (magnifying glass).
	 * @propType {node} [reset] - Change the apparence of the default reset button (cross).
	 * @propType {node} [loadingIndicator] - Change the apparence of the default loading indicator (spinning circle).
	 * @propType {string} [defaultRefinement] - Provide default refinement value when component is mounted.
	 * @propType {boolean} [showLoadingIndicator=false] - Display that the search is loading. This only happens after a certain amount of time to avoid a blinking effect. This timer can be configured with `stalledSearchDelay` props on <InstantSearch>. By default, the value is 200ms.
	 * @themeKey ais-SearchBox - the root div of the widget
	 * @themeKey ais-SearchBox-form - the wrapping form
	 * @themeKey ais-SearchBox-input - the search input
	 * @themeKey ais-SearchBox-submit - the submit button
	 * @themeKey ais-SearchBox-submitIcon - the default magnifier icon used with the search input
	 * @themeKey ais-SearchBox-reset - the reset button used to clear the content of the input
	 * @themeKey ais-SearchBox-resetIcon - the default reset icon used inside the reset button
	 * @themeKey ais-SearchBox-loadingIndicator - the loading indicator container
	 * @themeKey ais-SearchBox-loadingIcon - the default loading icon
	 * @translationkey submitTitle - The submit button title
	 * @translationkey resetTitle - The reset button title
	 * @translationkey placeholder - The label of the input placeholder
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SearchBox />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectSearchBox)(_SearchBox2.default);

/***/ }),
/* 1041 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _Snippet = __webpack_require__(1042);
	
	var _Snippet2 = _interopRequireDefault(_Snippet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Renders any attribute from an hit into its highlighted snippet form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Snippet
	 * @kind widget
	 * @requirements To use this widget, the attribute name passed to the `attribute` prop must be
	 * present in "Attributes to snippet" on the Algolia dashboard or configured as `attributesToSnippet`
	 * via a set settings call to the Algolia API.
	 * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted snippet attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Snippet - the root span of the widget
	 * @themeKey ais-Snippet-highlighted - the highlighted text
	 * @themeKey ais-Snippet-nonHighlighted - the normal text
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Snippet attribute="description" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SearchBox defaultRefinement="adjustable" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectHighlight)(_Snippet2.default);

/***/ }),
/* 1042 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(992);
	
	var _Highlighter = __webpack_require__(1004);
	
	var _Highlighter2 = _interopRequireDefault(_Highlighter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cx = (0, _utils.createClassNames)('Snippet');
	
	var Snippet = function Snippet(props) {
	  return _react2.default.createElement(_Highlighter2.default, _extends({}, props, { highlightProperty: '_snippetResult', cx: cx }));
	};
	
	exports.default = Snippet;

/***/ }),
/* 1043 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _SortBy = __webpack_require__(1044);
	
	var _SortBy2 = _interopRequireDefault(_SortBy);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The SortBy component displays a list of indexes allowing a user to change the hits are sorting.
	 * @name SortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind widget
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-SortBy - the root div of the widget
	 * @themeKey ais-SortBy-select - the select
	 * @themeKey ais-SortBy-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SortBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <SortBy
	 *       defaultRefinement="ikea"
	 *       items={[
	 *         { value: 'ikea', label: 'Featured' },
	 *         { value: 'ikea_price_asc', label: 'Price asc.' },
	 *         { value: 'ikea_price_desc', label: 'Price desc.' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectSortBy)(_SortBy2.default);

/***/ }),
/* 1044 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(992);
	
	var _Select = __webpack_require__(1009);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('SortBy');
	
	var SortBy = function (_Component) {
	  _inherits(SortBy, _Component);
	
	  function SortBy() {
	    _classCallCheck(this, SortBy);
	
	    return _possibleConstructorReturn(this, (SortBy.__proto__ || Object.getPrototypeOf(SortBy)).apply(this, arguments));
	  }
	
	  _createClass(SortBy, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          currentRefinement = _props.currentRefinement,
	          refine = _props.refine,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(_Select2.default, {
	          cx: cx,
	          items: items,
	          selectedItem: currentRefinement,
	          onSelect: refine
	        })
	      );
	    }
	  }]);
	
	  return SortBy;
	}(_react.Component);
	
	SortBy.propTypes = {
	  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    label: _propTypes2.default.string,
	    value: _propTypes2.default.string.isRequired
	  })).isRequired,
	  currentRefinement: _propTypes2.default.string.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	SortBy.defaultProps = {
	  className: ''
	};
	exports.default = SortBy;

/***/ }),
/* 1045 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _Stats = __webpack_require__(1046);
	
	var _Stats2 = _interopRequireDefault(_Stats);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The Stats component displays the total number of matching hits and the time it took to get them (time spent in the Algolia server).
	 * @name Stats
	 * @kind widget
	 * @themeKey ais-Stats - the root div of the widget
	 * @themeKey ais-Stats-text - the text of the widget - the count of items for each item
	 * @translationkey stats - The string displayed by the stats widget. You get function(n, ms) and you need to return a string. n is a number of hits retrieved, ms is a processed time.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Stats, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <Stats />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectStats)(_Stats2.default);

/***/ }),
/* 1046 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var cx = (0, _utils.createClassNames)('Stats');
	
	var Stats = function (_Component) {
	  _inherits(Stats, _Component);
	
	  function Stats() {
	    _classCallCheck(this, Stats);
	
	    return _possibleConstructorReturn(this, (Stats.__proto__ || Object.getPrototypeOf(Stats)).apply(this, arguments));
	  }
	
	  _createClass(Stats, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          translate = _props.translate,
	          nbHits = _props.nbHits,
	          processingTimeMS = _props.processingTimeMS,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(cx(''), className) },
	        _react2.default.createElement(
	          'span',
	          { className: cx('text') },
	          translate('stats', nbHits, processingTimeMS)
	        )
	      );
	    }
	  }]);
	
	  return Stats;
	}(_react.Component);
	
	Stats.propTypes = {
	  translate: _propTypes2.default.func.isRequired,
	  nbHits: _propTypes2.default.number.isRequired,
	  processingTimeMS: _propTypes2.default.number.isRequired,
	  className: _propTypes2.default.string
	};
	Stats.defaultProps = {
	  className: ''
	};
	exports.default = (0, _reactInstantsearchCore.translatable)({
	  stats: function stats(n, ms) {
	    return n.toLocaleString() + ' results found in ' + ms.toLocaleString() + 'ms';
	  }
	})(Stats);

/***/ }),
/* 1047 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactInstantsearchCore = __webpack_require__(606);
	
	var _ToggleRefinement = __webpack_require__(1048);
	
	var _ToggleRefinement2 = _interopRequireDefault(_ToggleRefinement);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The ToggleRefinement provides an on/off filtering feature based on an attribute value.
	 * @name ToggleRefinement
	 * @kind widget
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {any} value - Value of the refinement to apply on `attribute` when checked.
	 * @propType {boolean} [defaultRefinement=false] - Default state of the widget. Should the toggle be checked by default?
	 * @themeKey ais-ToggleRefinement - the root div of the widget
	 * @themeKey ais-ToggleRefinement-list - the list of toggles
	 * @themeKey ais-ToggleRefinement-item - the toggle list item
	 * @themeKey ais-ToggleRefinement-label - the label of each toggle item
	 * @themeKey ais-ToggleRefinement-checkbox - the checkbox input of each toggle item
	 * @themeKey ais-ToggleRefinement-labelText - the label text of each toggle item
	 * @themeKey ais-ToggleRefinement-count - the count of items for each item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ToggleRefinement } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="ikea"
	 *   >
	 *     <ToggleRefinement
	 *       attribute="materials"
	 *       label="Made with solid pine"
	 *       value="Solid pine"
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	
	exports.default = (0, _reactInstantsearchCore.connectToggleRefinement)(_ToggleRefinement2.default);

/***/ }),
/* 1048 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(344);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(992);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cx = (0, _utils.createClassNames)('ToggleRefinement');
	
	var ToggleRefinement = function ToggleRefinement(_ref) {
	  var currentRefinement = _ref.currentRefinement,
	      label = _ref.label,
	      refine = _ref.refine,
	      className = _ref.className;
	  return _react2.default.createElement(
	    'div',
	    { className: (0, _classnames2.default)(cx(''), className) },
	    _react2.default.createElement(
	      'label',
	      { className: cx('label') },
	      _react2.default.createElement('input', {
	        className: cx('checkbox'),
	        type: 'checkbox',
	        checked: currentRefinement,
	        onChange: function onChange(event) {
	          return refine(event.target.checked);
	        }
	      }),
	      _react2.default.createElement(
	        'span',
	        { className: cx('labelText') },
	        label
	      )
	    )
	  );
	};
	
	ToggleRefinement.propTypes = {
	  currentRefinement: _propTypes2.default.bool.isRequired,
	  label: _propTypes2.default.string.isRequired,
	  refine: _propTypes2.default.func.isRequired,
	  className: _propTypes2.default.string
	};
	
	ToggleRefinement.defaultProps = {
	  className: ''
	};
	
	exports.default = ToggleRefinement;

/***/ }),
/* 1049 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(17);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactJss = __webpack_require__(175);
	
	var _reactJss2 = _interopRequireDefault(_reactJss);
	
	var _gatsbyLink = __webpack_require__(73);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(theme) {
	  return {
	    link: {
	      padding: ".5em 0 1em 1em",
	      position: "relative",
	      fontSize: "1.2em",
	      display: "block",
	      width: "100%",
	      color: "#666",
	      "&::before": {
	        content: "\"\u2022\"",
	        position: "absolute",
	        top: ".5em",
	        left: ".1em",
	        color: theme.base.colors.accent
	      },
	      "& span": {
	        fontWeight: 300,
	        display: "block",
	        fontSize: ".9em",
	        margin: ".2em 0 0 0"
	      }
	    }
	  };
	};
	
	var Hit = function Hit(props) {
	  var classes = props.classes,
	      hit = props.hit;
	
	
	  return _react2.default.createElement(
	    _gatsbyLink2.default,
	    { to: hit.fields.slug, className: classes.link },
	    hit.frontmatter.title,
	    hit.frontmatter.subTitle && _react2.default.createElement(
	      "span",
	      null,
	      hit.frontmatter.subTitle
	    )
	  );
	};
	
	Hit.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  hit: _propTypes2.default.object.isRequired
	};
	
	exports.default = (0, _reactJss2.default)(styles)(Hit);
	module.exports = exports["default"];

/***/ }),
/* 1050 */
/***/ (function(module, exports) {

	module.exports = {"pathContext":{}}

/***/ }),
/* 1051 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/its_a_blog/"}}

/***/ }),
/* 1052 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/my_testimony_about_blockchain_p1/"}}

/***/ }),
/* 1053 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/a_real_life_hogwarts/"}}

/***/ }),
/* 1054 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/my_testimony_about_blockchain_p2/"}}

/***/ }),
/* 1055 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/arch/"}}

/***/ }),
/* 1056 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/blurred_lines/"}}

/***/ }),
/* 1057 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/a_better_blog/"}}

/***/ }),
/* 1058 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/recovering_arch_from_hell/"}}

/***/ }),
/* 1059 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/abc_of_unix/"}}

/***/ }),
/* 1060 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/arcanist/"}}

/***/ }),
/* 1061 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/contributing_to_pandas/"}}

/***/ }),
/* 1062 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/the_git_flow/"}}

/***/ }),
/* 1063 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/breaking_free/"}}

/***/ }),
/* 1064 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/muli_booting/"}}

/***/ }),
/* 1065 */
/***/ (function(module, exports) {

	module.exports = {"data":{"post":null,"author":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/author.md absPath of file >>> MarkdownRemark","html":"<p>I am an engineering undergraduate, in my 3rd year of B.Tech in Computer Science. I like to play with technologies and share my experiences with the almighty internet!</p>"},"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/hello_gsoc/"}}

/***/ }),
/* 1066 */
/***/ (function(module, exports) {

	module.exports = {"data":{"page":null,"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/about/"}}

/***/ }),
/* 1067 */
/***/ (function(module, exports) {

	module.exports = {"data":{"page":null,"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/links/"}}

/***/ }),
/* 1068 */
/***/ (function(module, exports) {

	module.exports = {"data":{"page":null,"footnote":{"id":"/home/travis/build/brute4s99/pydata/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark","html":"<ul>\n<li>personalised with 💙 by <a href=\"https://github.com/brute4s99\">Piyush Aggarwal</a> | based on a GatsbyJS starter by <a href=\"https://github.com/greglobinski\">Greg Lobinski</a></li>\n</ul>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{"slug":"/pydata/success/"}}

/***/ }),
/* 1069 */
/***/ (function(module, exports) {

	module.exports = {"pathContext":{}}

/***/ }),
/* 1070 */
/***/ (function(module, exports) {

	module.exports = {"data":{"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pathContext":{}}

/***/ }),
/* 1071 */
/***/ (function(module, exports) {

	module.exports = {"data":{"site":{"siteMetadata":{"algolia":{"appId":"5P0QHNAP2S","searchOnlyApiKey":"3de4008755fa05c4cd792b23473c476b","indexName":"pydata"}}}},"pathContext":{}}

/***/ }),
/* 1072 */
/***/ (function(module, exports) {

	"use strict";
	
	// This module is also copied into the .cache directory some modules copied there
	// from cache-dir can also use this module.
	
	module.exports = function (moduleName, err) {
	  var regex = new RegExp("Error: Cannot find module\\s." + moduleName.replace(/\\/g, "\\\\"));
	  var firstLine = err.toString().split("\n")[0];
	  return regex.test(firstLine);
	};
	//# sourceMappingURL=test-require-error.js.map

/***/ }),
/* 1073 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint  react/prop-types: 0 */
	
	
	var stylesStr = void 0;
	if (true) {
	  try {
	    stylesStr = __webpack_require__(1074);
	  } catch (e) {
	    console.log(e);
	  }
	}
	
	module.exports = function (_React$Component) {
	  _inherits(HTML, _React$Component);
	
	  function HTML() {
	    _classCallCheck(this, HTML);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  HTML.prototype.render = function render() {
	    var css = void 0;
	    if (true) {
	      css = _react2.default.createElement("style", { id: "gatsby-inlined-css", dangerouslySetInnerHTML: { __html: stylesStr } });
	    }
	    return _react2.default.createElement(
	      "html",
	      this.props.htmlAttributes,
	      _react2.default.createElement(
	        "head",
	        null,
	        _react2.default.createElement("meta", { charSet: "utf-8" }),
	        _react2.default.createElement("meta", { httpEquiv: "x-ua-compatible", content: "ie=edge" }),
	        _react2.default.createElement("meta", { name: "viewport", content: "width=device-width, initial-scale=1" }),
	        this.props.headComponents,
	        css,
	        _react2.default.createElement("meta", { name: "apple-mobile-web-app-capable", content: "yes" }),
	        _react2.default.createElement("meta", { name: "apple-mobile-web-app-status-bar-style", content: "#D0E0D8" }),
	        _react2.default.createElement("meta", { name: "apple-mobile-web-app-title", content: "Lazywill" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-57x57.png", sizes: "57x57" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-60x60.png", sizes: "60x60" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-72x72.png", sizes: "72x72" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-76x76.png", sizes: "76x76" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-114x114.png", sizes: "114x114" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-120x120.png", sizes: "120x120" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-144x144.png", sizes: "144x144" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-152x152.png", sizes: "152x152" }),
	        _react2.default.createElement("link", { rel: "apple-touch-icon", href: "/icons/apple-icon-180x180.png", sizes: "180x180" }),
	        _react2.default.createElement("link", { rel: "icon", type: "image/png", sizes: "16x16", href: "/icons/favicon-16x16.png" }),
	        _react2.default.createElement("link", { rel: "icon", type: "image/png", sizes: "32x32", href: "/icons/favicon-32x32.png" }),
	        _react2.default.createElement("link", { rel: "icon", type: "image/png", sizes: "96x96", href: "/icons/favicon-96x96.png" })
	      ),
	      _react2.default.createElement(
	        "body",
	        this.props.bodyAttributes,
	        _react2.default.createElement(
	          "noscript",
	          null,
	          "You need to enable JavaScript to run this app!"
	        ),
	        this.props.preBodyComponents,
	        _react2.default.createElement("div", { key: "body", id: "___gatsby", dangerouslySetInnerHTML: { __html: this.props.body } }),
	        this.props.postBodyComponents
	      )
	    );
	  };
	
	  return HTML;
	}(_react2.default.Component);

/***/ }),
/* 1074 */
/***/ (function(module, exports) {

	module.exports = "code[class*=language-],pre[class*=language-]{color:#f8f8f2;background:none;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#f8f8f2}.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}"

/***/ }),
/* 1075 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var stylesStr = void 0;
	if (true) {
	  try {
	    stylesStr = __webpack_require__(1074);
	  } catch (e) {
	    console.log(e);
	  }
	}
	
	module.exports = function (_React$Component) {
	  _inherits(HTML, _React$Component);
	
	  function HTML() {
	    _classCallCheck(this, HTML);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  HTML.prototype.render = function render() {
	    var css = void 0;
	    if (true) {
	      css = _react2.default.createElement("style", {
	        id: "gatsby-inlined-css",
	        dangerouslySetInnerHTML: { __html: stylesStr }
	      });
	    }
	    return _react2.default.createElement(
	      "html",
	      this.props.htmlAttributes,
	      _react2.default.createElement(
	        "head",
	        null,
	        _react2.default.createElement("meta", { charSet: "utf-8" }),
	        _react2.default.createElement("meta", { httpEquiv: "x-ua-compatible", content: "ie=edge" }),
	        _react2.default.createElement("meta", {
	          name: "viewport",
	          content: "width=device-width, initial-scale=1, shrink-to-fit=no"
	        }),
	        this.props.headComponents,
	        css
	      ),
	      _react2.default.createElement(
	        "body",
	        this.props.bodyAttributes,
	        this.props.preBodyComponents,
	        _react2.default.createElement("div", {
	          key: "body",
	          id: "___gatsby",
	          dangerouslySetInnerHTML: { __html: this.props.body }
	        }),
	        this.props.postBodyComponents
	      )
	    );
	  };
	
	  return HTML;
	}(_react2.default.Component);

/***/ }),
/* 1076 */
/***/ (function(module, exports) {

	module.exports = {"assetsByChunkName":{"path---contributing-to-pandas":["path---contributing-to-pandas-d1cbf554e7da11f5e2bd.js","path---contributing-to-pandas-d1cbf554e7da11f5e2bd.js.map"],"path---my-testimony-about-blockchain-p-2":["path---my-testimony-about-blockchain-p-2-766f8ccdafd5d3b23d37.js","path---my-testimony-about-blockchain-p-2-766f8ccdafd5d3b23d37.js.map"],"path---arcanist":["path---arcanist-9badaab7be4cb356f91d.js","path---arcanist-9badaab7be4cb356f91d.js.map"],"component---src-pages-index-js":["component---src-pages-index-js-aa9570313651ef926b5a.js","component---src-pages-index-js-aa9570313651ef926b5a.js.map"],"path---":["path----3ec8b7905d682300b7ed.js","path----3ec8b7905d682300b7ed.js.map"],"component---src-pages-contact-js":["component---src-pages-contact-js-2bf9accb731f415c2bc1.js","component---src-pages-contact-js-2bf9accb731f415c2bc1.js.map"],"path---arch":["path---arch-94a95402fb56594a2941.js","path---arch-94a95402fb56594a2941.js.map"],"path---abc-of-unix":["path---abc-of-unix-86a1714f2bacc6bf7079.js","path---abc-of-unix-86a1714f2bacc6bf7079.js.map"],"component---node-modules-gatsby-plugin-offline-app-shell-js":["component---node-modules-gatsby-plugin-offline-app-shell-js-5c4c5a0f7af9dc69d6d7.js","component---node-modules-gatsby-plugin-offline-app-shell-js-5c4c5a0f7af9dc69d6d7.js.map"],"component---src-layouts-index-js":["component---src-layouts-index-js-aa01234cbbbaed82e133.js","component---src-layouts-index-js-aa01234cbbbaed82e133.js.map"],"path---breaking-free":["path---breaking-free-706eef99700923f45145.js","path---breaking-free-706eef99700923f45145.js.map"],"path---index":["path---index-206ac74de0d3aab26f03.js","path---index-206ac74de0d3aab26f03.js.map"],"component---src-pages-search-js":["component---src-pages-search-js-fc0a6023897f93f0acce.js","component---src-pages-search-js-fc0a6023897f93f0acce.js.map"],"path---recovering-arch-from-hell":["path---recovering-arch-from-hell-7bda709b9c70541aa02e.js","path---recovering-arch-from-hell-7bda709b9c70541aa02e.js.map"],"commons":["commons-4e50098b3291abe20cd5.js","build-js-styles.css","commons-4e50098b3291abe20cd5.js.map","build-js-styles.css.map"],"path---success":["path---success-136504948337f011cfd7.js","path---success-136504948337f011cfd7.js.map"],"path---its-a-blog":["path---its-a-blog-fa606bfedb884f35b335.js","path---its-a-blog-fa606bfedb884f35b335.js.map"],"path---a-real-life-hogwarts":["path---a-real-life-hogwarts-09cb241579d726a8c2d5.js","path---a-real-life-hogwarts-09cb241579d726a8c2d5.js.map"],"path---the-git-flow":["path---the-git-flow-b4407fada922d2dcc171.js","path---the-git-flow-b4407fada922d2dcc171.js.map"],"path---hello-gsoc":["path---hello-gsoc-d2f8d5532379cdb01c39.js","path---hello-gsoc-d2f8d5532379cdb01c39.js.map"],"path---contact":["path---contact-a0e39f21c11f6a62c5ab.js","path---contact-a0e39f21c11f6a62c5ab.js.map"],"component---src-templates-post-template-js":["component---src-templates-post-template-js-c66022ff14cd92e05278.js","component---src-templates-post-template-js-c66022ff14cd92e05278.js.map"],"path---muli-booting":["path---muli-booting-9ffe99c1fc66760825ab.js","path---muli-booting-9ffe99c1fc66760825ab.js.map"],"path---offline-plugin-app-shell-fallback":["path---offline-plugin-app-shell-fallback-a0e39f21c11f6a62c5ab.js","path---offline-plugin-app-shell-fallback-a0e39f21c11f6a62c5ab.js.map"],"path---blurred-lines":["path---blurred-lines-6ba4b2d43cb4165687ea.js","path---blurred-lines-6ba4b2d43cb4165687ea.js.map"],"app":["app-1bfe1828129232769b70.js","build-js-styles.css","app-1bfe1828129232769b70.js.map","build-js-styles.css.map"],"path---links":["path---links-2bdcfe4d71f4f214f66c.js","path---links-2bdcfe4d71f4f214f66c.js.map"],"component---src-templates-page-template-js":["component---src-templates-page-template-js-e0434750f574a9276ef2.js","component---src-templates-page-template-js-e0434750f574a9276ef2.js.map"],"path---my-testimony-about-blockchain-p-1":["path---my-testimony-about-blockchain-p-1-805cc39c81e6461f77d4.js","path---my-testimony-about-blockchain-p-1-805cc39c81e6461f77d4.js.map"],"path---a-better-blog":["path---a-better-blog-df17fda4edfb08e785ec.js","path---a-better-blog-df17fda4edfb08e785ec.js.map"],"path---search":["path---search-b4a2c452bea2e665bd8d.js","path---search-b4a2c452bea2e665bd8d.js.map"],"path---about":["path---about-c2b3354e18d0848ebcad.js","path---about-c2b3354e18d0848ebcad.js.map"]}}

/***/ }),
/* 1077 */
/***/ (function(module, exports) {

	module.exports = "{\"0\":\"0-d0f4a7a6b58b46b80e54.js\",\"1\":\"1-1551a89de773bc4b7652.js\",\"231608221292675\":\"app-1bfe1828129232769b70.js\",\"99219681209289\":\"component---node-modules-gatsby-plugin-offline-app-shell-js-5c4c5a0f7af9dc69d6d7.js\",\"198517197184460\":\"component---src-templates-post-template-js-c66022ff14cd92e05278.js\",\"235131596041995\":\"component---src-templates-page-template-js-e0434750f574a9276ef2.js\",\"70144966829960\":\"component---src-pages-contact-js-2bf9accb731f415c2bc1.js\",\"35783957827783\":\"component---src-pages-index-js-aa9570313651ef926b5a.js\",\"142807904292071\":\"component---src-pages-search-js-fc0a6023897f93f0acce.js\",\"60335399758886\":\"path----3ec8b7905d682300b7ed.js\",\"210333531512890\":\"path---offline-plugin-app-shell-fallback-a0e39f21c11f6a62c5ab.js\",\"175015402325067\":\"path---its-a-blog-fa606bfedb884f35b335.js\",\"235791189236540\":\"path---my-testimony-about-blockchain-p-1-805cc39c81e6461f77d4.js\",\"176177069355963\":\"path---a-real-life-hogwarts-09cb241579d726a8c2d5.js\",\"15624946783147\":\"path---my-testimony-about-blockchain-p-2-766f8ccdafd5d3b23d37.js\",\"72316915199843\":\"path---arch-94a95402fb56594a2941.js\",\"220925354734383\":\"path---blurred-lines-6ba4b2d43cb4165687ea.js\",\"251131852794870\":\"path---a-better-blog-df17fda4edfb08e785ec.js\",\"155881796775583\":\"path---recovering-arch-from-hell-7bda709b9c70541aa02e.js\",\"76990962575880\":\"path---abc-of-unix-86a1714f2bacc6bf7079.js\",\"26667619741603\":\"path---arcanist-9badaab7be4cb356f91d.js\",\"1368635980302\":\"path---contributing-to-pandas-d1cbf554e7da11f5e2bd.js\",\"182474657164921\":\"path---the-git-flow-b4407fada922d2dcc171.js\",\"126282939863519\":\"path---breaking-free-706eef99700923f45145.js\",\"203749017438538\":\"path---muli-booting-9ffe99c1fc66760825ab.js\",\"184139989875678\":\"path---hello-gsoc-d2f8d5532379cdb01c39.js\",\"273950069227526\":\"path---about-c2b3354e18d0848ebcad.js\",\"233928377898168\":\"path---links-2bdcfe4d71f4f214f66c.js\",\"170786371021445\":\"path---success-136504948337f011cfd7.js\",\"184662623972074\":\"path---contact-a0e39f21c11f6a62c5ab.js\",\"142629428675168\":\"path---index-206ac74de0d3aab26f03.js\",\"254572558124955\":\"path---search-b4a2c452bea2e665bd8d.js\",\"114276838955818\":\"component---src-layouts-index-js-aa01234cbbbaed82e133.js\"}"

/***/ })
/******/ ])
});
;
//# sourceMappingURL=render-page.js.map